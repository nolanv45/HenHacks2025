{"version":3,"file":"static/js/6201.7e0e2748.chunk.js","mappings":"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","sources":["../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrush.js","../node_modules/@arcgis/core/views/webgl/ProgramTemplate.js","../node_modules/@arcgis/core/core/libs/gl-matrix-2/factories/vec4f32.js","../node_modules/@arcgis/core/views/2d/engine/webgl/shaders/sources/resolver.js","../node_modules/@arcgis/core/views/2d/engine/webgl/shaders/sources/shaderRepository.js","../node_modules/@arcgis/core/views/2d/engine/webgl/Mesh2D.js","../node_modules/@arcgis/core/views/2d/engine/webgl/ClippingInfo.js","../node_modules/@arcgis/core/views/2d/engine/webgl/WGLContainer.js","../node_modules/@arcgis/core/views/webgl/VertexArrayObject.js","../node_modules/@arcgis/core/views/2d/engine/webgl/GeometryUtils.js","../node_modules/@arcgis/core/views/2d/engine/webgl/PooledUint32Array.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushTileDebugInfo.js","../node_modules/@arcgis/core/views/2d/engine/webgl/cpuMapped/FreeList.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/BrushClip.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLBackground.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLCircle.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLFill.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLLine.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLSymbol.js","../node_modules/@arcgis/core/views/2d/engine/brushes.js","../node_modules/@arcgis/core/views/2d/engine/webgl/shaders/BackgroundPrograms.js","../node_modules/@arcgis/core/views/2d/engine/vectorTiles/decluttering/config.js","../node_modules/@arcgis/core/views/2d/engine/vectorTiles/style/StyleDefinition.js","../node_modules/@arcgis/core/views/webgl/ShaderCompiler.js","../node_modules/@arcgis/core/views/2d/engine/webgl/TiledDisplayObject.js","../node_modules/@arcgis/core/views/2d/engine/webgl/shaders/TileInfoPrograms.js","../node_modules/@arcgis/core/core/libs/gl-matrix-2/factories/vec3f32.js","../node_modules/@arcgis/core/views/2d/engine/webgl/AFeatureTile.js","../node_modules/@arcgis/core/views/2d/engine/webgl/DefaultVertexAttributeLayouts.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushStencil.js","../node_modules/@arcgis/core/views/2d/engine/webgl/FeatureDisplayList.js","../node_modules/@arcgis/core/views/2d/engine/webgl/ReshufflePlan.js","../node_modules/@arcgis/core/views/2d/engine/webgl/cpuMapped/Buffer.js","../node_modules/@arcgis/core/views/2d/engine/webgl/cpuMapped/MappedMesh.js","../node_modules/@arcgis/core/views/2d/engine/webgl/util/Reader.js","../node_modules/@arcgis/core/views/2d/engine/webgl/mesh/meshDebugUtils.js","../node_modules/@arcgis/core/views/2d/engine/webgl/FeatureTile.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nclass t{constructor(){this.name=this.constructor.name||\"UnnamedBrush\",this.brushEffect=null}prepareState(t,r){}draw(t,r,s){}drawMany(t,r,s){for(const a of r)a.visible&&this.draw(t,a,s)}}export{t as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{Program as r}from\"./Program.js\";function e(e,t,a=\"\"){return new r(e,a+t.shaders.vertexShader,a+t.shaders.fragmentShader,t.attributes)}export{e as createProgram};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nfunction n(){return new Float32Array(4)}function t(n){const t=new Float32Array(4);return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t}function r(n,t,r,e){const o=new Float32Array(4);return o[0]=n,o[1]=t,o[2]=r,o[3]=e,o}function e(n,t){return new Float32Array(n,t,4)}function o(){return n()}function u(){return r(1,1,1,1)}function c(){return r(1,0,0,0)}function i(){return r(0,1,0,0)}function a(){return r(0,0,1,0)}function f(){return r(0,0,0,1)}const l=o(),_=u(),s=c(),y=i(),w=a(),N=f(),T=Object.freeze(Object.defineProperty({__proto__:null,ONES:_,UNIT_W:N,UNIT_X:s,UNIT_Y:y,UNIT_Z:w,ZEROS:l,clone:t,create:n,createView:e,fromValues:r,ones:u,unitW:f,unitX:c,unitY:i,unitZ:a,zeros:o},Symbol.toStringTag,{value:\"Module\"}));export{_ as ONES,N as UNIT_W,s as UNIT_X,y as UNIT_Y,w as UNIT_Z,l as ZEROS,t as clone,n as create,e as createView,r as fromValues,u as ones,f as unitW,c as unitX,i as unitY,a as unitZ,T as v,o as zeros};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport r from\"./shaderRepository.js\";import{ShaderCompiler as e}from\"../../../../../webgl/ShaderCompiler.js\";function o(r){return function(e){let o=r;return e.split(\"/\").forEach((r=>{o&&(o=o[r])})),o}}const t=new e(o(r));function n(r){return t.resolveIncludes(r)}export{n as resolveIncludes};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nconst e={background:{\"background.frag\":\"uniform lowp vec4 u_color;\\nvoid main() {\\ngl_FragColor = u_color;\\n}\",\"background.vert\":\"attribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform mediump vec2 u_coord_range;\\nuniform mediump float u_depth;\\nvoid main() {\\nvec3 v_pos = u_dvsMat3 * vec3(u_coord_range * a_pos, 1.0);\\ngl_Position = vec4(v_pos.xy, 0.0, 1.0);\\n}\"},bitBlit:{\"bitBlit.frag\":\"uniform lowp sampler2D u_tex;\\nuniform lowp float u_opacity;\\nvarying mediump vec2 v_uv;\\nvoid main() {\\nlowp vec4 color = texture2D(u_tex, v_uv);\\ngl_FragColor = color * u_opacity;\\n}\",\"bitBlit.vert\":\"attribute vec2 a_pos;\\nattribute vec2 a_tex;\\nvarying mediump vec2 v_uv;\\nvoid main(void) {\\ngl_Position = vec4(a_pos , 0.0, 1.0);\\nv_uv = a_tex;\\n}\"},debug:{overlay:{\"overlay.frag\":\"precision mediump float;\\nvarying vec4 v_color;\\nvoid main(void) {\\ngl_FragColor = v_color;\\n}\",\"overlay.vert\":\"attribute vec3 a_PositionAndFlags;\\nuniform mat3 u_dvsMat3;\\nuniform vec4 u_colors[4];\\nuniform float u_opacities[4];\\nvarying vec4 v_color;\\nvoid main(void) {\\nvec2 position = a_PositionAndFlags.xy;\\nfloat flags = a_PositionAndFlags.z;\\nint colorIndex = int(mod(flags, 4.0));\\nvec4 color;\\nfor (int i = 0; i < 4; i++) {\\ncolor = u_colors[i];\\nif (i == colorIndex) {\\nbreak;\\n}\\n}\\nint opacityIndex = int(mod(floor(flags / 4.0), 4.0));\\nfloat opacity;\\nfor (int i = 0; i < 4; i++) {\\nopacity = u_opacities[i];\\nif (i == opacityIndex) {\\nbreak;\\n}\\n}\\nv_color = color * opacity;\\ngl_Position = vec4((u_dvsMat3 * vec3(position, 1.0)).xy, 0.0, 1.0);\\n}\"}},dot:{dot:{\"dot.frag\":\"precision mediump float;\\nvarying vec4 v_color;\\nvarying float v_dotRatio;\\nvarying float v_invEdgeRatio;\\nuniform highp float u_tileZoomFactor;\\nvoid main()\\n{\\nfloat dist = length(gl_PointCoord - vec2(.5, .5)) * 2.;\\nfloat alpha = smoothstep(0., 1., v_invEdgeRatio * (dist - v_dotRatio) + 1.);\\ngl_FragColor = v_color * alpha;\\n}\",\"dot.vert\":\"precision highp float;\\nattribute vec2 a_pos;\\nuniform sampler2D u_texture;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp float u_tileZoomFactor;\\nuniform highp float u_dotSize;\\nuniform highp float u_pixelRatio;\\nvarying vec2 v_pos;\\nvarying vec4 v_color;\\nvarying float v_dotRatio;\\nvarying float v_invEdgeRatio;\\nconst float EPSILON = 0.000001;\\nvoid main()\\n{\\nmat3 tileToTileTexture = mat3(  1., 0., 0.,\\n0., -1., 0.,\\n0., 1., 1.  );\\nvec3 texCoords = tileToTileTexture * vec3(a_pos.xy / 512., 1.);\\nv_color = texture2D(u_texture, texCoords.xy);\\nfloat smoothEdgeWidth = max(u_dotSize / 2., 1.) ;\\nfloat z = 0.;\\nz += 2.0 * step(v_color.a, EPSILON);\\ngl_PointSize = (smoothEdgeWidth + u_dotSize);\\ngl_Position = vec4((u_dvsMat3 * vec3(a_pos + .5, 1.)).xy, z, 1.);\\nv_dotRatio = u_dotSize / gl_PointSize;\\nv_invEdgeRatio = -1. / ( smoothEdgeWidth / gl_PointSize );\\ngl_PointSize  *= (u_pixelRatio * u_tileZoomFactor);\\n}\"}},filtering:{\"bicubic.glsl\":\"vec4 computeWeights(float v) {\\nfloat b = 1.0 / 6.0;\\nfloat v2 = v * v;\\nfloat v3 = v2 * v;\\nfloat w0 = b * (-v3 + 3.0 * v2 - 3.0 * v + 1.0);\\nfloat w1 = b * (3.0 * v3  - 6.0 * v2 + 4.0);\\nfloat w2 = b * (-3.0 * v3 + 3.0 * v2 + 3.0 * v + 1.0);\\nfloat w3 = b * v3;\\nreturn vec4(w0, w1, w2, w3);\\n}\\nvec4 bicubicOffsetsAndWeights(float v) {\\nvec4 w = computeWeights(v);\\nfloat g0 = w.x + w.y;\\nfloat g1 = w.z + w.w;\\nfloat h0 = 1.0 - (w.y / g0) + v;\\nfloat h1 = 1.0 + (w.w / g1) - v;\\nreturn vec4(h0, h1, g0, g1);\\n}\\nvec4 sampleBicubicBSpline(sampler2D sampler, vec2 coords, vec2 texSize) {\\nvec2 eX = vec2(1.0 / texSize.x, 0.0);\\nvec2 eY = vec2(0.0, 1.0 / texSize.y);\\nvec2 texel = coords * texSize - 0.5;\\nvec3 hgX = bicubicOffsetsAndWeights(fract(texel).x).xyz;\\nvec3 hgY = bicubicOffsetsAndWeights(fract(texel).y).xyz;\\nvec2 coords10 = coords + hgX.x * eX;\\nvec2 coords00 = coords - hgX.y * eX;\\nvec2 coords11 = coords10 + hgY.x * eY;\\nvec2 coords01 = coords00 + hgY.x * eY;\\ncoords10 = coords10 - hgY.y * eY;\\ncoords00 = coords00 - hgY.y * eY;\\nvec4 color00 = texture2D(sampler, coords00);\\nvec4 color10 = texture2D(sampler, coords10);\\nvec4 color01 = texture2D(sampler, coords01);\\nvec4 color11 = texture2D(sampler, coords11);\\ncolor00 = mix(color00, color01, hgY.z);\\ncolor10 = mix(color10, color11, hgY.z);\\ncolor00 = mix(color00, color10, hgX.z);\\nreturn color00;\\n}\",\"bilinear.glsl\":\"vec4 sampleBilinear(sampler2D sampler, vec2 coords, vec2 texSize) {\\nvec2 texelStart = floor(coords * texSize);\\nvec2 coord0 = texelStart / texSize;\\nvec2 coord1 = (texelStart +  vec2(1.0, 0.0)) / texSize;\\nvec2 coord2 = (texelStart +  vec2(0.0, 1.0)) / texSize;\\nvec2 coord3 = (texelStart +  vec2(1.0, 1.0)) / texSize;\\nvec4 color0 = texture2D(sampler, coord0);\\nvec4 color1 = texture2D(sampler, coord1);\\nvec4 color2 = texture2D(sampler, coord2);\\nvec4 color3 = texture2D(sampler, coord3);\\nvec2 blend = fract(coords * texSize);\\nvec4 color01 = mix(color0, color1, blend.x);\\nvec4 color23 = mix(color2, color3, blend.x);\\nvec4 color = mix(color01, color23, blend.y);\\n#ifdef NNEDGE\\nfloat alpha = floor(color0.a * color1.a * color2.a * color3.a + 0.5);\\ncolor = color * alpha + (1.0 - alpha) * texture2D(sampler, coords);\\n#endif\\nreturn color;\\n}\",\"epx.glsl\":\"vec4 sampleEPX(sampler2D sampler, float size, vec2 coords, vec2 texSize) {\\nvec2 invSize = 1.0 / texSize;\\nvec2 texel = coords * texSize;\\nvec2 texel_i = floor(texel);\\nvec2 texel_frac = fract(texel);\\nvec4 colorP = texture2D(sampler, texel_i * invSize);\\nvec4 colorP1 = vec4(colorP);\\nvec4 colorP2 = vec4(colorP);\\nvec4 colorP3 = vec4(colorP);\\nvec4 colorP4 = vec4(colorP);\\nvec4 colorA = texture2D(sampler, (texel_i - vec2(0.0, 1.0)) * invSize);\\nvec4 colorB = texture2D(sampler, (texel_i + vec2(1.0, 0.0)) * invSize);\\nvec4 colorC = texture2D(sampler, (texel_i - vec2(1.0, 0.0)) * invSize);\\nvec4 colorD = texture2D(sampler, (texel_i + vec2(0.0, 1.0)) * invSize);\\nif (colorC == colorA && colorC != colorD && colorA != colorB) {\\ncolorP1 = colorA;\\n}\\nif (colorA == colorB && colorA != colorC && colorB != colorD) {\\ncolorP2 = colorB;\\n}\\nif (colorD == colorC && colorD != colorB && colorC != colorA) {\\ncolorP3 = colorC;\\n}\\nif (colorB == colorD && colorB != colorA && colorD != colorC) {\\ncolorP4 = colorD;\\n}\\nvec4 colorP12 = mix(colorP1, colorP2, texel_frac.x);\\nvec4 colorP34 = mix(colorP1, colorP2, texel_frac.x);\\nreturn mix(colorP12, colorP34, texel_frac.y);\\n}\"},heatmap:{heatmapResolve:{\"heatmapResolve.frag\":\"precision highp float;\\n#ifdef HEATMAP_PRECISION_HALF_FLOAT\\n#define COMPRESSION_FACTOR 4.0\\n#else\\n#define COMPRESSION_FACTOR 1.0\\n#endif\\nuniform sampler2D u_texture;\\nuniform sampler2D u_gradient;\\nuniform vec2 u_densityMinAndInvRange;\\nuniform float u_densityNormalization;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 data = texture2D(u_texture, v_uv);\\nfloat density = data.r * COMPRESSION_FACTOR;\\ndensity *= u_densityNormalization;\\ndensity = (density - u_densityMinAndInvRange.x) * u_densityMinAndInvRange.y;\\nvec4 color = texture2D(u_gradient, vec2(density, 0.5));\\ngl_FragColor = vec4(color.rgb * color.a, color.a);\\n}\",\"heatmapResolve.vert\":\"precision highp float;\\nattribute vec2 a_pos;\\nvarying vec2 v_uv;\\nvoid main() {\\nv_uv = a_pos;\\ngl_Position = vec4(a_pos * 2.0 - 1.0, 1., 1.);\\n}\"}},highlight:{\"blur.frag\":\"varying mediump vec2 v_texcoord;\\nuniform mediump vec4 u_direction;\\nuniform mediump mat4 u_channelSelector;\\nuniform mediump float u_sigma;\\nuniform sampler2D u_texture;\\nmediump float gauss1(mediump vec2 dir) {\\nreturn exp(-dot(dir, dir) / (2.0 * u_sigma * u_sigma));\\n}\\nmediump vec4 selectChannel(mediump vec4 sample) {\\nreturn u_channelSelector * sample;\\n}\\nvoid accumGauss1(mediump float i, inout mediump float tot, inout mediump float weight) {\\nmediump float w = gauss1(i * u_direction.xy);\\ntot += selectChannel(texture2D(u_texture, v_texcoord + i * u_direction.zw))[3] * w;\\nweight += w;\\n}\\nvoid main(void) {\\nmediump float tot = 0.0;\\nmediump float weight = 0.0;\\naccumGauss1(-5.0, tot, weight);\\naccumGauss1(-4.0, tot, weight);\\naccumGauss1(-3.0, tot, weight);\\naccumGauss1(-2.0, tot, weight);\\naccumGauss1(-1.0, tot, weight);\\naccumGauss1(0.0, tot, weight);\\naccumGauss1(1.0, tot, weight);\\naccumGauss1(2.0, tot, weight);\\naccumGauss1(3.0, tot, weight);\\naccumGauss1(4.0, tot, weight);\\naccumGauss1(5.0, tot, weight);\\ngl_FragColor = vec4(0.0, 0.0, 0.0, tot / weight);\\n}\",\"highlight.frag\":\"varying mediump vec2 v_texcoord;\\nuniform sampler2D u_texture;\\nuniform mediump float u_sigma;\\nuniform sampler2D u_shade;\\nuniform mediump vec2 u_minMaxDistance;\\nmediump float estimateDistance() {\\nmediump float y = texture2D(u_texture, v_texcoord)[3];\\nconst mediump float y0 = 0.5;\\nmediump float m0 = 1.0 / (sqrt(2.0 * 3.1415) * u_sigma);\\nmediump float d = (y - y0) / m0;\\nreturn d;\\n}\\nmediump vec4 shade(mediump float d) {\\nmediump float mappedDistance = (d - u_minMaxDistance.x) / (u_minMaxDistance.y - u_minMaxDistance.x);\\nmappedDistance = clamp(mappedDistance, 0.0, 1.0);\\nreturn texture2D(u_shade, vec2(mappedDistance, 0.5));\\n}\\nvoid main(void) {\\nmediump float d = estimateDistance();\\ngl_FragColor = shade(d);\\n}\",\"textured.vert\":\"attribute mediump vec2 a_position;\\nattribute mediump vec2 a_texcoord;\\nvarying mediump vec2 v_texcoord;\\nvoid main(void) {\\ngl_Position = vec4(a_position, 0.0, 1.0);\\nv_texcoord = a_texcoord;\\n}\"},materials:{\"attributeData.glsl\":\"uniform highp sampler2D filterFlags;\\nuniform highp sampler2D animation;\\nuniform highp sampler2D gpgpu;\\nuniform highp sampler2D visualVariableData;\\nuniform highp sampler2D dataDriven0;\\nuniform highp sampler2D dataDriven1;\\nuniform highp sampler2D dataDriven2;\\nuniform float size;\\nhighp vec2 getAttributeDataCoords(in highp vec3 id) {\\nhighp vec3  texel = unpackDisplayIdTexel(id);\\nhighp float u32 = float(int(texel.r) + int(texel.g) * 256 + int(texel.b) * 256 * 256);\\nhighp float col = mod(u32, size);\\nhighp float row = (u32 - col) / size;\\nhighp float u = col / size;\\nhighp float v = row / size;\\nreturn vec2(u, v);\\n}\\nhighp vec2 getAttributeDataTextureCoords(in highp vec3 id) {\\nreturn (getAttributeDataCoords(id) * 2.0) - 1.0 + (.5 / vec2(size));\\n}\\nhighp vec4 getFilterData(in highp vec3 id) {\\nvec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(filterFlags, coords);\\n}\\nhighp vec4 getAnimation(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(animation, coords);\\n}\\nhighp vec4 getVisualVariableData(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(visualVariableData, coords);\\n}\\nhighp vec4 getDataDriven0(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(dataDriven0, coords);\\n}\\nhighp vec4 getDataDriven1(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(dataDriven1, coords);\\n}\\nhighp vec4 getGPGPU(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(gpgpu, coords);\\n}\\nhighp vec4 getDataDriven2(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(dataDriven2, coords);\\n}\\nfloat u88VVToFloat(in vec2 v) {\\nbool isMagic = v.x == 255.0 && v.y == 255.0;\\nif (isMagic) {\\nreturn NAN_MAGIC_NUMBER;\\n}\\nreturn (v.x + v.y * float(0x100)) - 32768.0;\\n}\",\"barycentric.glsl\":\"float inTriangle(vec3 bary) {\\nvec3 absBary = abs(bary);\\nreturn step((absBary.x + absBary.y + absBary.z), 1.05);\\n}\\nvec3 xyToBarycentric(in vec2 pos, in vec2 v0,  in vec2 v1, in vec2 v2) {\\nmat3 xyToBarycentricMat3 = mat3(\\nv1.x * v2.y - v2.x * v1.y, v2.x * v0.y - v0.x * v2.y, v0.x * v1.y - v1.x * v0.y,\\nv1.y - v2.y, v2.y - v0.y, v0.y - v1.y,\\nv2.x - v1.x, v0.x - v2.x, v1.x - v0.x\\n);\\nfloat A2 = v0.x * (v1.y - v2.y) + v1.x * (v2.y - v0.y) + v2.x * (v0.y - v1.y);\\nreturn (1. / A2) * xyToBarycentricMat3 * vec3(1., pos);\\n}\",\"constants.glsl\":\"const float C_DEG_TO_RAD = 3.14159265359 / 180.0;\\nconst float C_256_TO_RAD = 3.14159265359 / 128.0;\\nconst float C_RAD_TO_DEG = 180.0 / 3.141592654;\\nconst float POSITION_PRECISION = 1.0 / 8.0;\\nconst float FILL_POSITION_PRECISION = 1.0 / 1.0;\\nconst float SOFT_EDGE_RATIO = 1.0;\\nconst float THIN_LINE_WIDTH_FACTOR = 1.1;\\nconst float THIN_LINE_HALF_WIDTH = 1.0;\\nconst float EXTRUDE_SCALE_PLACEMENT_PADDING = 1.0 / 4.0;\\nconst float OFFSET_PRECISION = 1.0 / 8.0;\\nconst float OUTLINE_SCALE = 1.0 / 5.0;\\nconst float SDF_FONT_SIZE = 24.0;\\nconst float MAX_SDF_DISTANCE = 8.0;\\nconst float PLACEMENT_PADDING = 8.0;\\nconst float EPSILON = 0.00001;\\nconst float EPSILON_HITTEST = 0.05;\\nconst int MAX_FILTER_COUNT = 2;\\nconst int ATTR_VV_SIZE = 0;\\nconst int ATTR_VV_COLOR = 1;\\nconst int ATTR_VV_OPACITY = 2;\\nconst int ATTR_VV_ROTATION = 3;\\nconst highp float NAN_MAGIC_NUMBER = 1e-30;\\nconst int BITSET_GENERIC_LOCK_COLOR = 1;\\nconst int BITSET_GENERIC_CONSIDER_ALPHA_ONLY = 4;\\nconst int BITSET_MARKER_ALIGNMENT_MAP = 0;\\nconst int BITSET_MARKER_OUTLINE_ALLOW_COLOR_OVERRIDE = 2;\\nconst int BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY = 3;\\nconst int BITSET_TYPE_FILL_OUTLINE = 0;\\nconst int BITSET_FILL_RANDOM_PATTERN_OFFSET = 2;\\nconst int BITSET_FILL_HAS_UNRESOLVED_REPLACEMENT_COLOR = 3;\\nconst int BITSET_FILL_HAS_PATTERN_HEIGHT_PRECISION_FACTOR = 5;\\nconst int BITSET_FILL_HAS_PATTERN_WIDTH_PRECISION_FACTOR = 6;\\nconst int BITSET_LINE_SCALE_DASH = 2;\",fill:{\"common.glsl\":\"#include <materials/symbologyTypeUtils.glsl>\\n#ifdef PATTERN\\nuniform mediump vec2 u_mosaicSize;\\nvarying mediump float v_sampleAlphaOnly;\\n#endif\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nuniform lowp vec4 u_isActive[ 2 ];\\nuniform highp float u_dotValue;\\nuniform highp float u_tileDotsOverArea;\\nuniform highp float u_dotTextureDotCount;\\nuniform mediump float u_tileZoomFactor;\\n#endif\\nvarying highp vec3 v_id;\\nvarying lowp vec4 v_color;\\nvarying lowp float v_opacity;\\nvarying mediump vec4 v_aux1;\\n#ifdef PATTERN\\nvarying mediump vec2 v_tileTextureCoord;\\n#endif\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\nvarying lowp float v_isOutline;\\n#endif\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nvarying highp vec2 v_dotTextureCoords;\\nvarying highp vec4 v_dotThresholds[ 2 ];\\n#endif\",\"fill.frag\":\"precision highp float;\\n#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/fill/common.glsl>\\n#ifdef PATTERN\\nuniform lowp sampler2D u_texture;\\n#endif\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nuniform mediump mat4 u_dotColors[ 2 ];\\nuniform sampler2D u_dotTextures[ 2 ];\\nuniform vec4 u_dotBackgroundColor;\\n#endif\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.frag>\\nlowp vec4 drawLine() {\\nfloat v_lineWidth = v_aux1.x;\\nvec2  v_normal    = v_aux1.yz;\\nLineData inputs = LineData(\\nv_color,\\nv_normal,\\nv_lineWidth,\\nv_opacity,\\nv_id\\n);\\nreturn shadeLine(inputs);\\n}\\n#endif\\nlowp vec4 drawFill() {\\nlowp vec4 out_color = vec4(0.);\\n#ifdef HITTEST\\nout_color = v_color;\\n#elif defined(PATTERN)\\nmediump vec4 v_tlbr = v_aux1;\\nmediump vec2 normalizedTextureCoord = mod(v_tileTextureCoord, 1.0);\\nmediump vec2 samplePos = mix(v_tlbr.xy, v_tlbr.zw, normalizedTextureCoord);\\nlowp vec4 color = texture2D(u_texture, samplePos);\\nif (v_sampleAlphaOnly > 0.5) {\\ncolor.rgb = vec3(color.a);\\n}\\nout_color = v_opacity * v_color * color;\\n#elif SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY && !defined(HIGHLIGHT)\\nvec4 textureThresholds0 = texture2D(u_dotTextures[0], v_dotTextureCoords);\\nvec4 textureThresholds1 = texture2D(u_dotTextures[1], v_dotTextureCoords);\\nvec4 difference0 = v_dotThresholds[0] - textureThresholds0;\\nvec4 difference1 = v_dotThresholds[1] - textureThresholds1;\\n#ifdef DD_DOT_BLENDING\\nvec4 isPositive0 = step(0.0, difference0);\\nvec4 isPositive1 = step(0.0, difference1);\\nfloat weightSum = dot(isPositive0, difference0) + dot(isPositive1, difference1);\\nfloat lessThanEqZero = step(weightSum, 0.0);\\nfloat greaterThanZero = 1.0 - lessThanEqZero ;\\nfloat divisor = (weightSum + lessThanEqZero);\\nvec4 weights0 = difference0 * isPositive0 / divisor;\\nvec4 weights1 = difference1 * isPositive1 / divisor;\\nvec4 dotColor = u_dotColors[0] * weights0 + u_dotColors[1] * weights1;\\nvec4 preEffectColor = greaterThanZero * dotColor + lessThanEqZero * u_dotBackgroundColor;\\n#else\\nfloat diffMax = max(max4(difference0), max4(difference1));\\nfloat lessThanZero = step(diffMax, 0.0);\\nfloat greaterOrEqZero = 1.0 - lessThanZero;\\nvec4 isMax0 = step(diffMax, difference0);\\nvec4 isMax1 = step(diffMax, difference1);\\nvec4 dotColor = u_dotColors[0] * isMax0 + u_dotColors[1] * isMax1;\\nvec4 preEffectColor = greaterOrEqZero * dotColor + lessThanZero * u_dotBackgroundColor;\\n#endif\\nout_color = preEffectColor;\\n#else\\nout_color = v_opacity * v_color;\\n#endif\\n#ifdef HIGHLIGHT\\nout_color.a = 1.0;\\n#endif\\nreturn out_color;\\n}\\nvoid main() {\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\nif (v_isOutline > 0.5) {\\ngl_FragColor = drawLine();\\n} else {\\ngl_FragColor = drawFill();\\n}\\n#else\\ngl_FragColor = drawFill();\\n#endif\\n}\",\"fill.vert\":\"#include <materials/symbologyTypeUtils.glsl>\\n#define PACKED_LINE\\nprecision highp float;\\nattribute float a_bitset;\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nattribute float a_inverseArea;\\nvec4 a_color = vec4(0.0, 0.0, 0.0, 1.0);\\nvec2 a_zoomRange = vec2(0.0, 10000.0);\\n#else\\nattribute vec4 a_color;\\nattribute vec4 a_aux2;\\nattribute vec4 a_aux3;\\n#ifndef SYMBOLOGY_TYPE_IS_SIMPLE_LIKE\\nattribute vec4 a_aux1;\\nattribute vec2 a_zoomRange;\\n#else\\nvec2 a_zoomRange = vec2(0.0, 10000.0);\\n#endif\\n#endif\\nuniform vec2 u_tileOffset;\\nuniform vec2 u_maxIntNumOfCrossing;\\n#include <util/encoding.glsl>\\n#include <materials/vcommon.glsl>\\n#include <materials/fill/common.glsl>\\n#include <materials/fill/hittest.glsl>\\nconst float INV_SCALE_COMPRESSION_FACTOR = 1.0 / 128.0;\\nconst float MAX_REPRESENTABLE_INT = 16777216.0;\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nvec4 dotThreshold(vec4 featureAttrOverFeatureArea, float dotValue, float tileDotsOverArea) {\\nreturn featureAttrOverFeatureArea * (1.0 / dotValue)  * (1.0 / tileDotsOverArea);\\n}\\n#endif\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.vert>\\nvoid drawLine(out lowp vec4 out_color, out highp vec3 out_pos) {\\nLineData outputs = buildLine(\\nout_pos,\\na_id,\\na_pos,\\na_color,\\n(a_aux3.xy - 128.) / 16.,\\n(a_aux3.zw - 128.) / 16.,\\n0.,\\na_aux2.z / 16.,\\na_bitset,\\nvec4(0.),\\nvec2(0.),\\na_aux2.w / 16.\\n);\\nv_id      = outputs.id;\\nv_opacity = outputs.opacity;\\nv_aux1    = vec4(outputs.lineHalfWidth, outputs.normal, 0.);\\nout_color = outputs.color;\\n}\\n#endif\\nvoid drawFill(out lowp vec4 out_color, out highp vec3 out_pos) {\\nfloat a_bitSet = a_bitset;\\nout_color = getColor(a_color, a_bitSet, BITSET_GENERIC_LOCK_COLOR);\\nv_opacity = getOpacity();\\nv_id      = norm(a_id);\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nmat3 tileToTileNormalized = mat3(  2. / 512.,  0.,  0.,\\n0., -2. / 512.,  0.,\\n-1.,  1.,  1.  );\\nout_pos   = tileToTileNormalized * vec3((a_pos * FILL_POSITION_PRECISION), 1.);\\n#else\\nout_pos   = u_dvsMat3 * vec3(a_pos * FILL_POSITION_PRECISION, 1.);\\n#endif\\n#ifdef PATTERN\\nvec4  a_tlbr   = a_aux1;\\nfloat a_width  = a_aux2.x;\\nfloat a_height = a_aux2.y;\\nvec2  a_offset = a_aux2.zw;\\nvec2  a_scale  = a_aux3.xy;\\nfloat a_angle  = a_aux3.z;\\nif (getBit(a_bitset, BITSET_FILL_HAS_PATTERN_WIDTH_PRECISION_FACTOR) > 0.5) {\\na_width *= INV_SCALE_COMPRESSION_FACTOR;\\n}\\nif (getBit(a_bitset, BITSET_FILL_HAS_PATTERN_HEIGHT_PRECISION_FACTOR) > 0.5) {\\na_height *= INV_SCALE_COMPRESSION_FACTOR;\\n}\\nvec2 scale = INV_SCALE_COMPRESSION_FACTOR * a_scale;\\nfloat width = u_zoomFactor * a_width * scale.x;\\nfloat height = u_zoomFactor * a_height * scale.y;\\nfloat angle = C_256_TO_RAD * a_angle;\\nfloat sinA = sin(angle);\\nfloat cosA = cos(angle);\\nfloat dx = 0.0;\\nfloat dy = 0.0;\\nif (getBit(a_bitset, BITSET_FILL_RANDOM_PATTERN_OFFSET) > 0.5) {\\nfloat id = rgba2float(vec4(a_id, 0.0));\\ndx = rand(vec2(id, 0.0));\\ndy = rand(vec2(0.0, id));\\n}\\nmat3 patternMatrix = mat3(cosA / width, sinA / height, 0,\\n-sinA / width, cosA / height, 0,\\ndx,            dy,           1);\\nvec2 patternSize = vec2(a_width, a_height);\\nvec2 numPatternsPerMaxInt = vec2(MAX_REPRESENTABLE_INT) / patternSize;\\nvec2 maxIntCrossingOffsetCorrection = patternSize * fract(u_maxIntNumOfCrossing * numPatternsPerMaxInt);\\nvec2 tileOffset = u_tileOffset + maxIntCrossingOffsetCorrection - 0.5 * patternSize;\\ntileOffset = vec2(tileOffset.x * cosA - tileOffset.y * sinA, tileOffset.x * sinA + tileOffset.y * cosA);\\ntileOffset = mod(tileOffset, patternSize);\\nvec2 symbolOffset = u_zoomFactor * scale * vec2(a_offset - tileOffset) / vec2(width, height);\\nv_tileTextureCoord = (patternMatrix * vec3(a_pos * FILL_POSITION_PRECISION, 1.0)).xy - symbolOffset;\\nv_aux1 = a_tlbr / u_mosaicSize.xyxy;\\nv_sampleAlphaOnly = getBit(a_bitset, BITSET_GENERIC_CONSIDER_ALPHA_ONLY);\\nif (getBit(a_bitSet, BITSET_FILL_HAS_UNRESOLVED_REPLACEMENT_COLOR) > 0.5) {\\n#ifdef VV_COLOR\\nv_sampleAlphaOnly *= (1.0 - float(isNan(VV_ADATA[ATTR_VV_COLOR]))) * (1.0 - getBit(a_bitSet, BITSET_GENERIC_LOCK_COLOR));\\n#else\\nv_sampleAlphaOnly = 0.0;\\n#endif\\n}\\n#elif SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nvec4 ddAttributeData0 = getAttributeData2(a_id) * u_isActive[0] * a_inverseArea;\\nvec4 ddAttributeData1 = getAttributeData3(a_id) * u_isActive[1] * a_inverseArea;\\nfloat size = u_tileZoomFactor * 512.0 * 1.0 / u_pixelRatio;\\nv_dotThresholds[0] = dotThreshold(ddAttributeData0, u_dotValue, u_tileDotsOverArea);\\nv_dotThresholds[1] = dotThreshold(ddAttributeData1, u_dotValue, u_tileDotsOverArea);\\nv_dotTextureCoords = (a_pos * FILL_POSITION_PRECISION + 0.5) / size;\\n#endif\\n}\\n#ifdef HITTEST\\nvoid draw(out lowp vec4 out_color, out highp vec3 out_pos) {\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\nif (getBit(a_bitset, BITSET_TYPE_FILL_OUTLINE) > 0.5) {\\nout_pos = vec3(0., 0., 2.);\\nreturn;\\n}\\n#endif\\nhittestFill(out_color, out_pos);\\ngl_PointSize = 1.0;\\n}\\n#elif defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\\nvoid draw(out lowp vec4 out_color, out highp vec3 out_pos) {\\nv_isOutline = getBit(a_bitset, BITSET_TYPE_FILL_OUTLINE);\\nif (v_isOutline > 0.5) {\\ndrawLine(out_color, out_pos);\\n} else {\\ndrawFill(out_color, out_pos);\\n}\\n}\\n#else\\n#define draw drawFill\\n#endif\\nvoid main()\\n{\\nINIT;\\nhighp vec3 pos  = vec3(0.);\\nhighp vec4 color  = vec4(0.);\\ndraw(color, pos);\\nv_color = color;\\ngl_Position = vec4(clip(v_color, pos, getFilterFlags(), a_zoomRange), 1.0);\\n}\",\"hittest.glsl\":\"#ifdef HITTEST\\n#include <materials/hittest/common.glsl>\\nattribute vec2 a_pos1;\\nattribute vec2 a_pos2;\\nvoid hittestFill(\\nout lowp vec4 out_color,\\nout highp vec3 out_pos\\n) {\\nvec3 pos        = u_viewMat3 * u_tileMat3 * vec3(a_pos  * FILL_POSITION_PRECISION, 1.);\\nvec3 pos1       = u_viewMat3 * u_tileMat3 * vec3(a_pos1 * FILL_POSITION_PRECISION, 1.);\\nvec3 pos2       = u_viewMat3 * u_tileMat3 * vec3(a_pos2 * FILL_POSITION_PRECISION, 1.);\\nfloat hittestDist = u_hittestDist;\\nfloat dist = distPointTriangle(u_hittestPos, pos.xy, pos1.xy, pos2.xy);\\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nif (dist < 0. || dist >= hittestDist) {\\nout_pos.z += 2.0;\\n}\\nout_color = vec4(1. / 255., 0, 0, dist == 0. ? (1. / 255.) : 0.);\\n}\\n#endif\"},hittest:{\"common.glsl\":\"#ifdef HITTEST\\nuniform float hittestDist;\\nuniform highp vec2 hittestPos;\\nfloat projectScalar(vec2 a, vec2 b) {\\nreturn dot(a, normalize(b));\\n}\\nfloat distPointSegment(vec2 p0, vec2 p1, vec2 p2) {\\nvec2 L = p2 - p1;\\nvec2 A = p0 - p1;\\nfloat projAL = projectScalar(A, L);\\nfloat t = clamp(projAL / length(L), 0., 1.);\\nreturn distance(p0, p1 + t * (p2 - p1));\\n}\\nvoid hittestMarker(out lowp vec4 out_color, out highp vec3 out_pos, in highp vec3 pos, float size) {\\nfloat dist = distance(pos, vec3(hittestPos, 1.));\\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nif ((dist - size) > hittestDist) {\\nout_pos.z += 2.0;\\n}\\nout_color = vec4(1. / 255., 0, 0, (dist - size) < 0. ? (1. / 255.) : 0.);\\n}\\nfloat intersectPointTriangleBary(vec2 p, vec2 a, vec2 b, vec2 c) {\\nreturn inTriangle(xyToBarycentric(p, a, b, c));\\n}\\nfloat distPointTriangle(vec2 p, vec2 a, vec2 b, vec2 c) {\\nvec2 ba = b - a;\\nvec2 ca = c - a;\\nfloat crossProduct = ba.x * ca.y - ca.x * ba.y;\\nbool isParallel = crossProduct < EPSILON_HITTEST && crossProduct > -EPSILON_HITTEST;\\nif (isParallel) {\\nreturn -1.;\\n}\\nif (intersectPointTriangleBary(p.xy, a, b, c) == 1.) {\\nreturn 0.;\\n}\\nfloat distAB = distPointSegment(p, a, b);\\nfloat distBC = distPointSegment(p, b, c);\\nfloat distCA = distPointSegment(p, c, a);\\nreturn min(min(distAB, distBC), distCA);\\n}\\n#endif\"},icon:{\"common.glsl\":\"#include <util/encoding.glsl>\\nuniform lowp vec2 u_mosaicSize;\\nvarying lowp vec4 v_color;\\nvarying highp vec3 v_id;\\nvarying highp vec4 v_sizeTex;\\nvarying mediump vec3 v_pos;\\nvarying lowp float v_opacity;\\nuniform lowp sampler2D u_texture;\\n#ifdef SDF\\nvarying lowp vec4 v_outlineColor;\\nvarying mediump float v_outlineWidth;\\nvarying mediump float v_distRatio;\\nvarying mediump float v_overridingOutlineColor;\\nvarying mediump float v_isThin;\\n#endif\\n#ifdef SDF\\nvec4 getColor(vec2 v_size, vec2 v_tex) {\\n#ifdef HITTEST\\nlowp vec4 fillPixelColor = vec4(1.0);\\n#else\\nlowp vec4 fillPixelColor = v_color;\\n#endif\\nfloat d = 0.5 - rgba2float(texture2D(u_texture, v_tex));\\nfloat size = max(v_size.x, v_size.y);\\nfloat dist = d * size * SOFT_EDGE_RATIO * v_distRatio;\\nfillPixelColor *= clamp(0.5 - dist, 0.0, 1.0);\\nfloat outlineWidth = v_outlineWidth;\\n#ifdef HIGHLIGHT\\noutlineWidth = max(outlineWidth, 4.0 * v_isThin);\\n#endif\\nif (outlineWidth > 0.25) {\\nlowp vec4 outlinePixelColor = v_overridingOutlineColor * v_color + (1.0 - v_overridingOutlineColor) * v_outlineColor;\\nfloat clampedOutlineSize = min(outlineWidth, size);\\noutlinePixelColor *= clamp(0.5 - abs(dist) + clampedOutlineSize * 0.5, 0.0, 1.0);\\nreturn v_opacity * ((1.0 - outlinePixelColor.a) * fillPixelColor + outlinePixelColor);\\n}\\nreturn v_opacity * fillPixelColor;\\n}\\n#else\\nvec4 getColor(vec2 _v_size, vec2 v_tex) {\\nlowp vec4 texColor = texture2D(u_texture, v_tex);\\nreturn v_opacity * texColor * v_color;\\n}\\n#endif\",heatmapAccumulate:{\"common.glsl\":\"varying lowp vec4 v_hittestResult;\\nvarying mediump vec2 v_offsetFromCenter;\\nvarying highp float v_fieldValue;\",\"heatmapAccumulate.frag\":\"precision mediump float;\\n#include <materials/icon/heatmapAccumulate/common.glsl>\\n#ifdef HEATMAP_PRECISION_HALF_FLOAT\\n#define COMPRESSION_FACTOR 0.25\\n#else\\n#define COMPRESSION_FACTOR 1.0\\n#endif\\nuniform lowp sampler2D u_texture;\\nvoid main() {\\n#ifdef HITTEST\\ngl_FragColor = v_hittestResult;\\n#else\\nfloat radius = length(v_offsetFromCenter);\\nfloat shapeWeight = step(radius, 1.0);\\nfloat oneMinusRadiusSquared = 1.0 - radius * radius;\\nfloat kernelWeight = oneMinusRadiusSquared * oneMinusRadiusSquared;\\ngl_FragColor = vec4(shapeWeight * kernelWeight * v_fieldValue * COMPRESSION_FACTOR);\\n#endif\\n}\",\"heatmapAccumulate.vert\":\"precision highp float;\\nattribute vec2 a_vertexOffset;\\nvec4 a_color = vec4(0.0);\\nvec2 a_zoomRange = vec2(0.0, 10000.0);\\nuniform float u_radius;\\nuniform float u_isFieldActive;\\n#include <materials/vcommon.glsl>\\n#include <materials/hittest/common.glsl>\\n#include <materials/icon/heatmapAccumulate/common.glsl>\\nvoid main() {\\nfloat filterFlags = getFilterFlags();\\n#ifdef HITTEST\\nhighp vec4 out_hittestResult = vec4(0.);\\nhighp vec3 out_pos = vec3(0.);\\nvec3 pos = u_viewMat3 * u_tileMat3 * vec3(a_pos * POSITION_PRECISION, 1.0);\\nhittestMarker(out_hittestResult, out_pos, pos, u_radius);\\nv_hittestResult = out_hittestResult;\\ngl_PointSize = 1.;\\ngl_Position = vec4(clip(a_color, out_pos, filterFlags, a_zoomRange), 1.0);\\n#else\\nv_offsetFromCenter = sign(a_vertexOffset);\\nv_fieldValue = getAttributeData2(a_id).x * u_isFieldActive + 1.0 - u_isFieldActive;\\nvec3 centerPos = u_dvsMat3 * vec3(a_pos * POSITION_PRECISION, 1.0);\\nvec3 vertexPos = centerPos + u_displayViewMat3 * vec3(v_offsetFromCenter, 0.0) * u_radius;\\ngl_Position = vec4(clip(a_color, vertexPos, filterFlags, a_zoomRange), 1.0);\\n#endif\\n}\"},\"hittest.glsl\":\"#ifdef HITTEST\\n#include <materials/hittest/common.glsl>\\nattribute vec2 a_vertexOffset1;\\nattribute vec2 a_vertexOffset2;\\nattribute vec2 a_texCoords1;\\nattribute vec2 a_texCoords2;\\nvec2 getTextureCoords(in vec3 bary, in vec2 texCoords0, in vec2 texCoords1, in vec2 texCoords2) {\\nreturn texCoords0 * bary.x + texCoords1 * bary.y + texCoords2 * bary.z;\\n}\\nvoid hittestIcon(\\ninout lowp vec4 out_color,\\nout highp vec3 out_pos,\\nin vec3 pos,\\nin vec3 offset,\\nin vec2 size,\\nin float scaleFactor,\\nin float isMapAligned\\n) {\\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nvec3 posBase = u_viewMat3 * u_tileMat3  * pos;\\nvec3 offset1 = scaleFactor * vec3(a_vertexOffset1 / 16.0, 0.);\\nvec3 offset2 = scaleFactor * vec3(a_vertexOffset2 / 16.0, 0.);\\nvec2 pos0    = (posBase + getMatrixNoDisplay(isMapAligned) * offset).xy;\\nvec2 pos1    = (posBase + getMatrixNoDisplay(isMapAligned) * offset1).xy;\\nvec2 pos2    = (posBase + getMatrixNoDisplay(isMapAligned) * offset2).xy;\\nvec3 bary0 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, -u_hittestDist), pos0, pos1, pos2);\\nvec3 bary1 = xyToBarycentric(u_hittestPos + vec2(0., -u_hittestDist), pos0, pos1, pos2);\\nvec3 bary2 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, -u_hittestDist), pos0, pos1, pos2);\\nvec3 bary3 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, 0.), pos0, pos1, pos2);\\nvec3 bary4 = xyToBarycentric(u_hittestPos, pos0, pos1, pos2);\\nvec3 bary5 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, 0.), pos0, pos1, pos2);\\nvec3 bary6 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, u_hittestDist), pos0, pos1, pos2);\\nvec3 bary7 = xyToBarycentric(u_hittestPos + vec2(0., u_hittestDist), pos0, pos1, pos2);\\nvec3 bary8 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, u_hittestDist), pos0, pos1, pos2);\\nvec2 tex0 = a_texCoords  / u_mosaicSize;\\nvec2 tex1 = a_texCoords1 / u_mosaicSize;\\nvec2 tex2 = a_texCoords2 / u_mosaicSize;\\nfloat alphaSum = 0.;\\nalphaSum += inTriangle(bary0) * getColor(size, getTextureCoords(bary0, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary1) * getColor(size, getTextureCoords(bary1, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary2) * getColor(size, getTextureCoords(bary2, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary3) * getColor(size, getTextureCoords(bary3, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary4) * getColor(size, getTextureCoords(bary4, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary5) * getColor(size, getTextureCoords(bary5, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary6) * getColor(size, getTextureCoords(bary6, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary7) * getColor(size, getTextureCoords(bary7, tex0, tex1, tex2)).a;\\nout_pos.z += step(alphaSum, .05) * 2.0;\\nout_color = vec4(1. / 255., 0., 0., alphaSum / 255.);\\n}\\n#endif\",\"icon.frag\":\"precision mediump float;\\n#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/icon/common.glsl>\\nvoid main()\\n{\\n#ifdef HITTEST\\nvec4 color = v_color;\\n#else\\nvec4 color = getColor(v_sizeTex.xy, v_sizeTex.zw);\\n#endif\\n#ifdef HIGHLIGHT\\ncolor.a = step(1.0 / 255.0, color.a);\\n#endif\\ngl_FragColor = color;\\n}\",\"icon.vert\":\"precision highp float;\\nattribute vec4 a_color;\\nattribute vec4 a_outlineColor;\\nattribute vec4 a_sizeAndOutlineWidth;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nattribute vec2 a_bitSetAndDistRatio;\\nattribute vec2 a_zoomRange;\\n#include <materials/vcommon.glsl>\\n#include <materials/icon/common.glsl>\\n#include <materials/icon/hittest.glsl>\\nfloat getMarkerScaleFactor(inout vec2 size, in float referenceSize) {\\n#ifdef VV_SIZE\\nfloat f = getSize(size.y) / size.y;\\nfloat sizeFactor = size.y / referenceSize;\\nreturn getSize(referenceSize) / referenceSize;\\n#else\\nreturn 1.;\\n#endif\\n}\\nvoid main()\\n{\\nINIT;\\nfloat a_bitSet = a_bitSetAndDistRatio.x;\\nvec3  pos           = vec3(a_pos * POSITION_PRECISION, 1.0);\\nvec2  size          = a_sizeAndOutlineWidth.xy * a_sizeAndOutlineWidth.xy / 128.0;\\nvec3  offset        = vec3(a_vertexOffset / 16.0, 0.);\\nfloat outlineSize   = a_sizeAndOutlineWidth.z * a_sizeAndOutlineWidth.z / 128.0;\\nfloat isMapAligned  = getBit(a_bitSet, BITSET_MARKER_ALIGNMENT_MAP);\\nfloat referenceSize = a_sizeAndOutlineWidth.w * a_sizeAndOutlineWidth.w / 128.0;\\nfloat scaleSymbolProportionally = getBit(a_bitSet, BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY);\\nfloat scaleFactor               = getMarkerScaleFactor(size, referenceSize);\\nsize.xy     *= scaleFactor;\\noffset.xy   *= scaleFactor;\\noutlineSize *= scaleSymbolProportionally * (scaleFactor - 1.0) + 1.0;\\nvec2 v_tex   = a_texCoords / u_mosaicSize;\\nfloat filterFlags = getFilterFlags();\\nv_color    = getColor(a_color, a_bitSet, BITSET_GENERIC_LOCK_COLOR);\\nv_opacity  = getOpacity();\\nv_id       = norm(a_id);\\nv_pos      = u_dvsMat3 * pos + getMatrix(isMapAligned) * getRotation()  * offset;\\nv_sizeTex  = vec4(size.xy, v_tex.xy);\\n#ifdef SDF\\nv_isThin   = getBit(a_bitSet, BITSET_MARKER_OUTLINE_ALLOW_COLOR_OVERRIDE);\\n#ifdef VV_COLOR\\nv_overridingOutlineColor = v_isThin;\\n#else\\nv_overridingOutlineColor = 0.0;\\n#endif\\nv_outlineWidth = min(outlineSize, max(max(size.x, size.y) - 0.99, 0.0));\\nv_outlineColor = a_outlineColor;\\nv_distRatio = a_bitSetAndDistRatio.y / 128.0;\\n#endif\\n#ifdef HITTEST\\nhighp vec4 out_color = vec4(0.);\\nhighp vec3 out_pos   = vec3(0.);\\nhittestIcon(out_color, out_pos, pos, offset, size, scaleFactor, isMapAligned);\\nv_color = out_color;\\ngl_PointSize = 1.;\\ngl_Position = vec4(clip(v_color, out_pos, filterFlags, a_zoomRange), 1.0);\\n#else\\ngl_Position = vec4(clip(v_color, v_pos, filterFlags, a_zoomRange), 1.0);\\n#endif\\n}\"},label:{\"common.glsl\":\"uniform mediump float u_zoomLevel;\\nuniform mediump float u_mapRotation;\\nuniform mediump float u_mapAligned;\\nuniform mediump vec2 u_mosaicSize;\\nvarying mediump float v_antialiasingWidth;\\nvarying mediump float v_edgeDistanceOffset;\\nvarying mediump vec2 v_tex;\\nvarying mediump vec4 v_color;\\nvarying lowp vec4 v_animation;\",\"label.frag\":\"#include <materials/text/text.frag>\",\"label.vert\":\"precision highp float;\\n#include <materials/vcommon.glsl>\\n#include <materials/text/common.glsl>\\nattribute vec4 a_color;\\nattribute vec4 a_haloColor;\\nattribute vec4 a_texAndSize;\\nattribute vec4 a_refSymbolAndPlacementOffset;\\nattribute vec4 a_glyphData;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nuniform float u_isHaloPass;\\nuniform float u_isBackgroundPass;\\nuniform float u_mapRotation;\\nuniform float u_mapAligned;\\nfloat getZ(in float minZoom, in float maxZoom, in float angle) {\\nfloat glyphAngle = angle * 360.0 / 254.0;\\nfloat mapAngle = u_mapRotation * 360.0 / 254.0;\\nfloat diffAngle = min(360.0 - abs(mapAngle - glyphAngle), abs(mapAngle - glyphAngle));\\nfloat z = 0.0;\\nz += u_mapAligned * (2.0 * (1.0 - step(minZoom, u_currentZoom)));\\nz += u_mapAligned * 2.0 * step(90.0, diffAngle);\\nz += 2.0 * (1.0 - step(u_currentZoom, maxZoom));\\nreturn z;\\n}\\nvoid main()\\n{\\nINIT;\\nfloat groupMinZoom    = getMinZoom();\\nfloat glyphMinZoom    = a_glyphData.x;\\nfloat glyphMaxZoom    = a_glyphData.y;\\nfloat glyphAngle      = a_glyphData.z;\\nfloat a_isBackground  = a_glyphData.w;\\nfloat a_minZoom          = max(groupMinZoom, glyphMinZoom);\\nfloat a_placementPadding = a_refSymbolAndPlacementOffset.x * EXTRUDE_SCALE_PLACEMENT_PADDING;\\nvec2  a_placementDir     = unpack_u8_nf32(a_refSymbolAndPlacementOffset.zw);\\nfloat a_refSymbolSize    = a_refSymbolAndPlacementOffset.y;\\nfloat fontSize           = a_texAndSize.z;\\nfloat haloSize           = a_texAndSize.w * OUTLINE_SCALE;\\nvec2  vertexOffset = a_vertexOffset * OFFSET_PRECISION;\\nvec3  pos          = vec3(a_pos * POSITION_PRECISION, 1.0);\\nfloat z            = getZ(a_minZoom, glyphMaxZoom, glyphAngle);\\nfloat fontScale    = fontSize / SDF_FONT_SIZE;\\nfloat halfSize     = getSize(a_refSymbolSize) / 2.0;\\nfloat animation    = pow(getAnimationState(), vec4(2.0)).r;\\nfloat isText = 1.0 - a_isBackground;\\nfloat isBackground = u_isBackgroundPass * a_isBackground;\\nvec4  nonHaloColor = (isBackground + isText) * a_color;\\nv_color     = animation * ((1.0 - u_isHaloPass) * nonHaloColor + (u_isHaloPass * a_haloColor));\\nv_opacity   = 1.0;\\nv_tex       = a_texCoords / u_mosaicSize;\\nv_edgeDistanceOffset = u_isHaloPass * haloSize / fontScale / MAX_SDF_DISTANCE;\\nv_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\\nvec2 placementOffset = a_placementDir * (halfSize + a_placementPadding);\\nvec3 glyphOffset     = u_displayMat3 * vec3(vertexOffset + placementOffset, 0.0);\\nvec3 v_pos           = vec3((u_dvsMat3 * pos + glyphOffset).xy, z);\\nfloat isHidden = u_isBackgroundPass * isText + (1.0 - u_isBackgroundPass) * a_isBackground;\\nv_pos.z += 2.0 * isHidden;\\ngl_Position = vec4(v_pos, 1.0);\\n#ifdef DEBUG\\nv_color = vec4(a_color.rgb, z == 0.0 ? 1.0 : 0.645);\\n#endif\\n}\"},line:{\"common.glsl\":\"varying lowp vec4 v_color;\\nvarying highp vec3 v_id;\\nvarying mediump vec2 v_normal;\\nvarying mediump float v_lineHalfWidth;\\nvarying lowp float v_opacity;\\n#ifdef PATTERN\\nvarying mediump vec4 v_tlbr;\\nvarying mediump vec2 v_patternSize;\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nvarying highp float v_accumulatedDistance;\\n#endif\\n#ifdef SDF\\nvarying mediump float v_lineWidthRatio;\\n#endif\",\"hittest.glsl\":\"#include <materials/hittest/common.glsl>\\n#ifdef HITTEST\\nattribute vec2 a_pos1;\\nattribute vec2 a_pos2;\\nvoid hittestLine(out lowp vec4 out_color, out highp vec3 out_pos, float halfWidth) {\\nvec3 pos        = u_viewMat3 * u_tileMat3 * vec3(a_pos  * POSITION_PRECISION, 1.);\\nvec3 pos1       = u_viewMat3 * u_tileMat3 * vec3(a_pos1 * POSITION_PRECISION, 1.);\\nvec3 pos2       = u_viewMat3 * u_tileMat3 * vec3(a_pos2 * POSITION_PRECISION, 1.);\\nvec3 outTextureCoords = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nfloat dist = min(distPointSegment(u_hittestPos, pos.xy, pos1.xy),\\ndistPointSegment(u_hittestPos, pos.xy, pos2.xy)) - halfWidth;\\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nif (dist >= u_hittestDist) {\\nout_pos.z += 2.0;\\n}\\nout_color = vec4(1. / 255., 0, 0, dist <= 0. ? (1. / 255.) : 0.);\\n}\\n#endif\",\"line.frag\":\"precision lowp float;\\n#include <util/encoding.glsl>\\n#include <materials/constants.glsl>\\n#include <materials/symbologyTypeUtils.glsl>\\n#include <materials/line/common.glsl>\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.frag>\\n#ifdef HITTEST\\nvoid main() {\\ngl_FragColor = v_color;\\n}\\n#else\\nvoid main() {\\nLineData inputs = LineData(\\nv_color,\\nv_normal,\\nv_lineHalfWidth,\\nv_opacity,\\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#ifdef PATTERN\\nv_tlbr,\\nv_patternSize,\\n#endif\\n#ifdef SDF\\nv_lineWidthRatio,\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nv_accumulatedDistance,\\n#endif\\n#endif\\nv_id\\n);\\ngl_FragColor = shadeLine(inputs);\\n}\\n#endif\",\"line.vert\":\"precision highp float;\\nattribute vec4 a_color;\\nattribute vec4 a_offsetAndNormal;\\nattribute vec2 a_accumulatedDistanceAndHalfWidth;\\nattribute vec4 a_tlbr;\\nattribute vec4 a_segmentDirection;\\nattribute vec2 a_aux;\\nattribute vec2 a_zoomRange;\\n#include <materials/vcommon.glsl>\\n#include <materials/symbologyTypeUtils.glsl>\\n#include <materials/line/common.glsl>\\n#include <materials/line/hittest.glsl>\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.vert>\\n#ifdef HITTEST\\nvoid draw() {\\nfloat aa        = 0.5 * u_antialiasing;\\nfloat a_halfWidth = a_accumulatedDistanceAndHalfWidth.y / 16.;\\nfloat a_cimHalfWidth = a_aux.x / 16. ;\\nvec2  a_offset = a_offsetAndNormal.xy / 16.;\\nfloat baseWidth = getBaseLineHalfWidth(a_halfWidth, a_cimHalfWidth);\\nfloat halfWidth = getLineHalfWidth(baseWidth, aa);\\nhighp vec3 pos  = vec3(0.);\\nv_color = vec4(0.);\\nhittestLine(v_color, pos, halfWidth);\\ngl_PointSize = 1.;\\ngl_Position = vec4(clip(v_color, pos, getFilterFlags(), a_zoomRange), 1.0);\\n}\\n#else\\nvoid draw()\\n{\\nhighp vec3 pos = vec3(0.);\\nLineData outputs = buildLine(\\npos,\\na_id,\\na_pos,\\na_color,\\na_offsetAndNormal.xy / 16.,\\na_offsetAndNormal.zw / 16.,\\na_accumulatedDistanceAndHalfWidth.x,\\na_accumulatedDistanceAndHalfWidth.y / 16.,\\na_segmentDirection.w,\\na_tlbr,\\na_segmentDirection.xy / 16.,\\na_aux.x / 16.\\n);\\nv_id              = outputs.id;\\nv_color           = outputs.color;\\nv_normal          = outputs.normal;\\nv_lineHalfWidth   = outputs.lineHalfWidth;\\nv_opacity         = outputs.opacity;\\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#ifdef PATTERN\\nv_tlbr          = outputs.tlbr;\\nv_patternSize   = outputs.patternSize;\\n#endif\\n#ifdef SDF\\nv_lineWidthRatio = outputs.lineWidthRatio;\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nv_accumulatedDistance = outputs.accumulatedDistance;\\n#endif\\n#endif\\ngl_Position = vec4(clip(outputs.color, pos, getFilterFlags(), a_zoomRange), 1.0);\\n}\\n#endif\\nvoid main() {\\nINIT;\\ndraw();\\n}\"},pie:{\"pie.common.glsl\":\"uniform float outlineWidth;\\nuniform mediump float sectorThreshold;\\nvarying vec3  v_id;\\nvarying vec3  v_pos;\\nvarying vec2  v_offset;\\nvarying vec4  v_color;\\nvarying float v_size;\\nvarying float v_numOfEntries;\\nvarying float v_maxSectorAngle;\\nvarying vec2  v_filteredSectorToColorId[numberOfFields];\\nvarying vec2  v_texCoords;\\nvarying float v_outlineWidth;\\nvarying float v_opacity;\\nstruct FilteredChartInfo {\\nfloat endSectorAngle;\\nint colorId;\\n};\",\"pie.frag\":\"precision highp float;\\n#include <util/atan2.glsl>\\n#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/pie/pie.common.glsl>\\nuniform lowp vec4 colors[numberOfFields];\\nuniform lowp vec4 defaultColor;\\nuniform lowp vec4 othersColor;\\nuniform lowp vec4 outlineColor;\\nuniform float donutRatio;\\nlowp vec4 getSectorColor(in int index, in vec2 filteredSectorToColorId[numberOfFields]) {\\nmediump int colorIndex = int(filteredSectorToColorId[index].y);\\nreturn colors[colorIndex];\\n}\\nconst int OTHER_SECTOR_ID = 255;\\n#ifdef HITTEST\\nvec4 getColor() {\\nfloat distanceSize = length(v_offset) * v_size;\\nfloat donutSize = donutRatio * v_size;\\nfloat alpha = step(donutSize, distanceSize) * (1.0 - step(v_size, distanceSize));\\nreturn v_color;\\n}\\n#else\\nvec4 getColor() {\\nfloat angle = 90.0 - C_RAD_TO_DEG * atan2(v_offset.y, v_offset.x);\\nif (angle < 0.0) {\\nangle += 360.0;\\n} else if (angle > 360.0) {\\nangle = mod(angle, 360.0);\\n}\\nint numOfEntries = int(v_numOfEntries);\\nfloat maxSectorAngle = v_maxSectorAngle;\\nlowp vec4 fillColor = (maxSectorAngle > 0.0 || sectorThreshold > 0.0) ? othersColor : defaultColor;\\nlowp vec4 prevColor = vec4(0.0);\\nlowp vec4 nextColor = vec4(0.0);\\nfloat startSectorAngle = 0.0;\\nfloat endSectorAngle = 0.0;\\nif (angle < maxSectorAngle) {\\nfor (int index = 0; index < numberOfFields; ++index) {\\nstartSectorAngle = endSectorAngle;\\nendSectorAngle = v_filteredSectorToColorId[index].x;\\nif (endSectorAngle > angle) {\\nfillColor = getSectorColor(index, v_filteredSectorToColorId);\\nprevColor = sectorThreshold != 0.0 && index == 0 && abs(360.0 - maxSectorAngle) < EPSILON ? othersColor :\\ngetSectorColor(index > 0 ? index - 1 : numOfEntries - 1, v_filteredSectorToColorId);\\nnextColor = sectorThreshold != 0.0 && abs(endSectorAngle - maxSectorAngle) < EPSILON ? othersColor :\\ngetSectorColor(index < numOfEntries - 1 ? index + 1 : 0, v_filteredSectorToColorId);\\nbreak;\\n}\\nif (index == numOfEntries - 1) {\\nbreak;\\n}\\n}\\n} else {\\nprevColor = getSectorColor(numOfEntries - 1, v_filteredSectorToColorId);\\nnextColor = getSectorColor(0, v_filteredSectorToColorId);\\nstartSectorAngle = maxSectorAngle;\\nendSectorAngle = 360.0;\\n}\\nlowp vec4 outlineColor = outlineColor;\\nfloat offset = length(v_offset);\\nfloat distanceSize = offset * v_size;\\nif (startSectorAngle != 0.0 || endSectorAngle != 360.0) {\\nfloat distanceToStartSector = (angle - startSectorAngle);\\nfloat distanceToEndSector = (endSectorAngle - angle);\\nfloat sectorThreshold = 0.6;\\nfloat beginSectorAlpha = smoothstep(0.0, sectorThreshold, distanceToStartSector * offset);\\nfloat endSectorAlpha = smoothstep(0.0, sectorThreshold, distanceToEndSector * offset);\\nif (endSectorAlpha > 0.0) {\\nfillColor = mix(nextColor, fillColor, endSectorAlpha);\\n} else if (beginSectorAlpha > 0.0) {\\nfillColor = mix(prevColor, fillColor, beginSectorAlpha);\\n}\\n}\\nfloat donutSize = donutRatio * (v_size - v_outlineWidth);\\nfloat endOfDonut = donutSize - v_outlineWidth;\\nfloat aaThreshold = 0.75;\\nfloat innerCircleAlpha = endOfDonut - aaThreshold > 0.0 ? smoothstep(endOfDonut - aaThreshold, endOfDonut + aaThreshold, distanceSize) : 1.0;\\nfloat outerCircleAlpha = 1.0 - smoothstep(v_size - aaThreshold, v_size + aaThreshold , distanceSize);\\nfloat circleAlpha = innerCircleAlpha * outerCircleAlpha;\\nfloat startOfOutline = v_size - v_outlineWidth;\\nif (startOfOutline > 0.0 && v_outlineWidth > 0.25) {\\nfloat outlineFactor = smoothstep(startOfOutline - aaThreshold, startOfOutline + aaThreshold, distanceSize);\\nfloat innerLineFactor = donutSize - aaThreshold > 0.0 ? 1.0 - smoothstep(donutSize - aaThreshold, donutSize + aaThreshold , distanceSize) : 0.0;\\nfillColor = mix(fillColor, outlineColor, innerLineFactor + outlineFactor);\\n}\\nreturn v_opacity * circleAlpha * fillColor;\\n}\\n#endif\\nvoid main()\\n{\\nvec4 color = getColor();\\n#ifdef highlight\\ncolor.a = step(1.0 / 255.0, color.a);\\n#endif\\ngl_FragColor = color;\\n}\",\"pie.vert\":\"#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/barycentric.glsl>\\n#include <materials/vcommon.glsl>\\n#include <materials/vv.glsl>\\n#include <materials/attributeData.glsl>\\n#include <materials/pie/pie.common.glsl>\\n#include <materials/hittest/common.glsl>\\nattribute float a_bitSet;\\nattribute vec2  a_offset;\\nattribute vec2  a_texCoords;\\nattribute vec2  a_size;\\nattribute float a_referenceSize;\\nattribute vec2  a_zoomRange;\\nint filterValue(in float sectorAngle,\\nin int currentIndex,\\ninout FilteredChartInfo filteredInfo,\\ninout vec2 filteredSectorToColorId[numberOfFields]) {\\nif (sectorAngle > sectorThreshold * 360.0) {\\nfilteredInfo.endSectorAngle += sectorAngle;\\nfilteredSectorToColorId[filteredInfo.colorId] = vec2(filteredInfo.endSectorAngle, currentIndex);\\n++filteredInfo.colorId;\\n}\\nreturn 0;\\n}\\nint filterValues(inout vec2 filteredSectorToColorId[numberOfFields],\\ninout FilteredChartInfo filteredInfo,\\nin float sectorAngles[numberOfFields]) {\\nfor (int index = 0; index < numberOfFields; ++index) {\\nfloat sectorValue = sectorAngles[index];\\nfilterValue(sectorValue, index, filteredInfo, filteredSectorToColorId);\\n}\\nreturn filteredInfo.colorId;\\n}\\nvec2 getMarkerSize(inout vec2 offset, inout vec2 baseSize, inout float outlineSize, in float a_referenceSize, in float bitSet) {\\nvec2 outSize = baseSize;\\n#ifdef VV_SIZE\\nfloat r = getSize(a_referenceSize, currentScale) / a_referenceSize;\\noutSize.xy *= r;\\noffset.xy *= r;\\nfloat scaleSymbolProportionally = getBit(bitSet, BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY);\\noutlineSize *= scaleSymbolProportionally * (r - 1.0) + 1.0;\\n#endif\\nreturn outSize;\\n}\\nvec3 getOffset(in vec2 in_offset, float a_bitSet) {\\nfloat isMapAligned = getBit(a_bitSet, BITSET_MARKER_ALIGNMENT_MAP);\\nvec3  offset       = vec3(in_offset, 0.0);\\nreturn getMatrix(isMapAligned) * offset;\\n}\\nfloat filterNaNValues(in float value) {\\nreturn value != NAN_MAGIC_NUMBER && value > 0.0 ? value : 0.0;\\n}\\nvoid main()\\n{\\nINIT;\\nvec2  a_size   = a_size;\\nvec2  a_offset = a_offset / 16.0;\\nfloat outlineSize = outlineWidth;\\nfloat a_bitSet = a_bitSet;\\nfloat a_referenceSize = a_referenceSize;\\nvec2 a_texCoords = a_texCoords / 4.0;\\nvec2 markerSize = getMarkerSize(a_offset, a_size, outlineSize, a_referenceSize, a_bitSet);\\nfloat filterFlags = getFilterFlags();\\nvec3  pos         = vec3(a_pos / 10.0, 1.0);\\nv_opacity      = getOpacity();\\nv_id           = norm(a_id);\\nv_pos          = displayViewScreenMat3 * pos + getOffset(a_offset, a_bitSet);\\nv_offset       = sign(a_texCoords - 0.5);\\nv_size         = max(markerSize.x, markerSize.y);\\nv_outlineWidth = outlineSize;\\nfloat attributeData[10];\\nvec4 attributeData3 = getDataDriven0(a_id);\\nattributeData[0] = filterNaNValues(attributeData3.x);\\nattributeData[1] = filterNaNValues(attributeData3.y);\\nattributeData[2] = filterNaNValues(attributeData3.z);\\nattributeData[3] = filterNaNValues(attributeData3.w);\\n#if (numberOfFields > 4)\\nvec4 attributeData4 = getDataDriven1(a_id);\\nattributeData[4] = filterNaNValues(attributeData4.x);\\nattributeData[5] = filterNaNValues(attributeData4.y);\\nattributeData[6] = filterNaNValues(attributeData4.z);\\nattributeData[7] = filterNaNValues(attributeData4.w);\\n#endif\\n#if (numberOfFields > 8)\\nvec4 attributeData5 = getDataDriven2(a_id);\\nattributeData[8] = filterNaNValues(attributeData5.x);\\nattributeData[9] = filterNaNValues(attributeData5.y);\\n#endif\\nfloat sum = 0.0;\\nfor (int i = 0; i < numberOfFields; ++i) {\\nsum += attributeData[i];\\n}\\nfloat sectorAngles[numberOfFields];\\nfor (int i = 0; i < numberOfFields; ++i) {\\nsectorAngles[i] = 360.0 * attributeData[i] / sum;\\n}\\nvec2 filteredSectorToColorId[numberOfFields];\\nFilteredChartInfo filteredInfo = FilteredChartInfo(0.0, 0);\\nint numOfEntries = filterValues(filteredSectorToColorId, filteredInfo, sectorAngles);\\nv_numOfEntries = float(numOfEntries);\\nv_maxSectorAngle = filteredInfo.endSectorAngle;\\nv_filteredSectorToColorId = filteredSectorToColorId;\\n#ifdef HITTEST\\nhighp vec3 out_pos = vec3(0.0);\\nv_color            = vec4(0.0);\\nhittestMarker(v_color, out_pos, viewMat3 * tileMat3 *  pos, v_size);\\ngl_PointSize = 1.0;\\ngl_Position = vec4(clip(v_color, out_pos, filterFlags, a_zoomRange), 1.0);\\n#else\\ngl_Position = vec4(clip(v_color, v_pos, filterFlags, a_zoomRange), 1.0);\\n#endif\\n}\"},shared:{line:{\"common.glsl\":\"#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && defined(PATTERN)\\nuniform mediump vec2 u_mosaicSize;\\nvarying mediump float v_sampleAlphaOnly;\\n#endif\\nstruct LineData {\\nlowp vec4 color;\\nmediump vec2 normal;\\nmediump float lineHalfWidth;\\nlowp float opacity;\\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#ifdef PATTERN\\nmediump vec4 tlbr;\\nmediump vec2 patternSize;\\n#endif\\n#ifdef SDF\\nmediump float lineWidthRatio;\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nhighp float accumulatedDistance;\\n#endif\\n#endif\\nhighp vec3 id;\\n};\",\"line.frag\":\"uniform lowp float u_blur;\\n#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && !defined(HIGHLIGHT)\\n#if defined(PATTERN) || defined(SDF)\\nuniform sampler2D u_texture;\\nuniform highp float u_pixelRatio;\\n#endif\\n#endif\\n#if defined(SDF) && !defined(HIGHLIGHT) && !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\\nlowp vec4 getLineColor(LineData line) {\\nmediump float adjustedPatternWidth = line.patternSize.x * 2.0 * line.lineWidthRatio;\\nmediump float relativeTexX = fract(line.accumulatedDistance / adjustedPatternWidth);\\nmediump float relativeTexY = 0.5 + 0.25 * line.normal.y;\\nmediump vec2 texCoord = mix(line.tlbr.xy, line.tlbr.zw, vec2(relativeTexX, relativeTexY));\\nmediump float d = rgba2float(texture2D(u_texture, texCoord)) - 0.5;\\nfloat dist = d * line.lineHalfWidth;\\nreturn line.opacity * clamp(0.5 - dist, 0.0, 1.0) * line.color;\\n}\\n#elif defined(PATTERN) && !defined(HIGHLIGHT) && !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\\nlowp vec4 getLineColor(LineData line) {\\nmediump float lineHalfWidth = line.lineHalfWidth;\\nmediump float adjustedPatternHeight = line.patternSize.y * 2.0 * lineHalfWidth / line.patternSize.x;\\nmediump float relativeTexY = fract(line.accumulatedDistance / adjustedPatternHeight);\\nmediump float relativeTexX = 0.5 + 0.5 * line.normal.y;\\nmediump vec2 texCoord = mix(line.tlbr.xy, line.tlbr.zw, vec2(relativeTexX, relativeTexY));\\nlowp vec4 color = texture2D(u_texture, texCoord);\\n#ifdef VV_COLOR\\nif (v_sampleAlphaOnly > 0.5) {\\ncolor.rgb = vec3(color.a);\\n}\\n#endif\\nreturn line.opacity * line.color * color;\\n}\\n#else\\nlowp vec4 getLineColor(LineData line) {\\nreturn line.opacity * line.color;\\n}\\n#endif\\nvec4 shadeLine(LineData line)\\n{\\nmediump float thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(line.lineHalfWidth, THIN_LINE_HALF_WIDTH), 1.0);\\nmediump float fragDist = length(line.normal) * line.lineHalfWidth;\\nlowp float alpha = clamp(thinLineFactor * (line.lineHalfWidth - fragDist) / (u_blur + thinLineFactor - 1.0), 0.0, 1.0);\\nlowp vec4 out_color = getLineColor(line) * alpha;\\n#ifdef HIGHLIGHT\\nout_color.a = step(1.0 / 255.0, out_color.a);\\n#endif\\n#ifdef ID\\nif (out_color.a < 1.0 / 255.0) {\\ndiscard;\\n}\\nout_color = vec4(line.id, 0.0);\\n#endif\\nreturn out_color;\\n}\",\"line.vert\":\"float getBaseLineHalfWidth(in float lineHalfWidth, in float referenceHalfWidth) {\\n#ifdef VV_SIZE\\nfloat refLineWidth = 2.0 * referenceHalfWidth;\\nreturn 0.5 * (lineHalfWidth / max(referenceHalfWidth, EPSILON)) * getSize(refLineWidth);\\n#else\\nreturn lineHalfWidth;\\n#endif\\n}\\nfloat getLineHalfWidth(in float baseWidth, in float aa) {\\nfloat halfWidth = max(baseWidth + aa, 0.45) + 0.1 * aa;\\n#ifdef HIGHLIGHT\\nhalfWidth = max(halfWidth, 2.0);\\n#endif\\nreturn halfWidth;\\n}\\nvec2 getDist(in vec2 offset, in float halfWidth) {\\nfloat thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(halfWidth, THIN_LINE_HALF_WIDTH), 1.0);\\nreturn thinLineFactor * halfWidth * offset;\\n}\\nLineData buildLine(\\nout vec3 out_pos,\\nin vec3 in_id,\\nin vec2 in_pos,\\nin vec4 in_color,\\nin vec2 in_offset,\\nin vec2 in_normal,\\nin float in_accumulatedDist,\\nin float in_lineHalfWidth,\\nin float in_bitSet,\\nin vec4 in_tlbr,\\nin vec2 in_segmentDirection,\\nin float in_referenceHalfWidth\\n)\\n{\\nfloat aa        = 0.5 * u_antialiasing;\\nfloat baseWidth = getBaseLineHalfWidth(in_lineHalfWidth, in_referenceHalfWidth);\\nfloat halfWidth = getLineHalfWidth(baseWidth, aa);\\nfloat z         = 2.0 * step(baseWidth, 0.0);\\nvec2  dist      = getDist(in_offset, halfWidth);\\nvec3  offset    = u_displayViewMat3 * vec3(dist, 0.0);\\nvec3  pos       = u_dvsMat3 * vec3(in_pos * POSITION_PRECISION, 1.0) + offset;\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\nvec4  color     = in_color;\\nfloat opacity   = 1.0;\\n#else\\nvec4  color     = getColor(in_color, in_bitSet, BITSET_GENERIC_LOCK_COLOR);\\nfloat opacity   = getOpacity();\\n#ifdef SDF\\nconst float SDF_PATTERN_HALF_WIDTH = 15.5;\\nfloat scaleDash = getBit(in_bitSet, BITSET_LINE_SCALE_DASH);\\nfloat lineWidthRatio = (scaleDash * max(halfWidth - 0.55 * u_antialiasing, 0.25) + (1.0 - scaleDash)) / SDF_PATTERN_HALF_WIDTH;\\n#endif\\n#endif\\n#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && defined(PATTERN)\\nv_sampleAlphaOnly = getBit(in_bitSet, BITSET_GENERIC_CONSIDER_ALPHA_ONLY);\\n#endif\\nout_pos = vec3(pos.xy, z);\\nreturn LineData(\\ncolor,\\nin_normal,\\nhalfWidth,\\nopacity,\\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#ifdef PATTERN\\nin_tlbr / u_mosaicSize.xyxy,\\nvec2(in_tlbr.z - in_tlbr.x, in_tlbr.w - in_tlbr.y),\\n#endif\\n#ifdef SDF\\nlineWidthRatio,\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nin_accumulatedDist * u_zoomFactor + dot(in_segmentDirection, dist),\\n#endif\\n#endif\\nnorm(in_id)\\n);\\n}\"}},\"symbologyTypeUtils.glsl\":\"#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL || SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL_SIMPLE\\n#define SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#endif\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_SIMPLE || SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL_SIMPLE\\n#define SYMBOLOGY_TYPE_IS_SIMPLE_LIKE\\n#endif\",text:{\"common.glsl\":\"uniform highp vec2 u_mosaicSize;\\nvarying highp vec3 v_id;\\nvarying mediump vec3 v_pos;\\nvarying lowp float v_opacity;\\nvarying lowp vec4 v_color;\\nvarying highp vec2 v_tex;\\nvarying mediump float v_antialiasingWidth;\\nvarying mediump float v_edgeDistanceOffset;\\nvarying lowp float v_transparency;\",\"hittest.glsl\":\"#include <materials/hittest/common.glsl>\",\"text.frag\":\"precision mediump float;\\n#include <materials/text/common.glsl>\\nuniform lowp sampler2D u_texture;\\n#ifdef HITTEST\\nvec4 getColor() {\\nreturn v_color;\\n}\\n#else\\nvec4 getColor()\\n{\\nfloat SDF_CUTOFF = (2.0 / 8.0);\\nfloat SDF_BASE_EDGE_DIST = 1.0 - SDF_CUTOFF;\\nlowp float dist = texture2D(u_texture, v_tex).a;\\nmediump float edge = SDF_BASE_EDGE_DIST - v_edgeDistanceOffset;\\n#ifdef HIGHLIGHT\\nedge /= 2.0;\\n#endif\\nlowp float aa = v_antialiasingWidth;\\nlowp float alpha = smoothstep(edge - aa, edge + aa, dist);\\nreturn alpha * v_color * v_opacity;\\n}\\n#endif\\nvoid main()\\n{\\ngl_FragColor = getColor();\\n}\",\"text.vert\":\"precision highp float;\\n#include <materials/utils.glsl>\\n#include <materials/vcommon.glsl>\\n#include <materials/text/common.glsl>\\n#include <materials/text/hittest.glsl>\\nattribute vec4 a_color;\\nattribute vec4 a_haloColor;\\nattribute vec4 a_texFontSize;\\nattribute vec4 a_aux;\\nattribute vec2 a_zoomRange;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nuniform float u_isHaloPass;\\nuniform float u_isBackgroundPass;\\nfloat getTextSize(inout vec2 offset, inout float baseSize, in float referenceSize) {\\n#ifdef VV_SIZE\\nfloat r = getSize(referenceSize) / referenceSize;\\nbaseSize *= r;\\noffset.xy *= r;\\nreturn baseSize;\\n#endif\\nreturn baseSize;\\n}\\nvoid main()\\n{\\nINIT;\\nfloat a_isBackground  = a_aux.y;\\nfloat a_referenceSize = a_aux.z * a_aux.z / 256.0;\\nfloat a_bitSet        = a_aux.w;\\nfloat a_fontSize      = a_texFontSize.z;\\nvec2  a_offset        = a_vertexOffset * OFFSET_PRECISION;\\nvec3  in_pos        = vec3(a_pos * POSITION_PRECISION, 1.0);\\nfloat fontSize      = getTextSize(a_offset, a_fontSize, a_referenceSize);\\nfloat fontScale     = fontSize / SDF_FONT_SIZE;\\nvec3  offset        = getRotation() * vec3(a_offset, 0.0);\\nmat3  extrudeMatrix = getBit(a_bitSet, 0) == 1.0 ? u_displayViewMat3 : u_displayMat3;\\nfloat isText = 1.0 - a_isBackground;\\nfloat isBackground = u_isBackgroundPass * a_isBackground;\\nvec4  nonHaloColor  = (isBackground * a_color) + (isText * getColor(a_color, a_bitSet, 1));\\nv_color   = u_isHaloPass * a_haloColor + (1.0 - u_isHaloPass) * nonHaloColor;\\nv_opacity = getOpacity();\\nv_id      = norm(a_id);\\nv_tex     = a_texCoords / u_mosaicSize;\\nv_pos     = u_dvsMat3 * in_pos + extrudeMatrix * offset;\\nfloat isHidden = u_isBackgroundPass * isText + (1.0 - u_isBackgroundPass) * a_isBackground;\\nv_pos.z += 2.0 * isHidden;\\nv_edgeDistanceOffset = u_isHaloPass * OUTLINE_SCALE * a_texFontSize.w / fontScale / MAX_SDF_DISTANCE;\\nv_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\\n#ifdef HITTEST\\nhighp vec3 out_pos  = vec3(0.);\\nv_color = vec4(0.);\\nhittestMarker(v_color, out_pos, u_viewMat3 * u_tileMat3 *  vec3(a_pos * POSITION_PRECISION, 1.0)\\n+ u_tileMat3 * offset, fontSize / 2.);\\ngl_PointSize = 1.;\\ngl_Position = vec4(clip(v_color, out_pos, getFilterFlags(), a_zoomRange), 1.0);\\n#else\\ngl_Position =  vec4(clip(v_color, v_pos, getFilterFlags(), a_zoomRange), 1.0);\\n#endif\\n}\"},\"utils.glsl\":\"float rshift(in float u32, in int amount) {\\nreturn floor(u32 / pow(2.0, float(amount)));\\n}\\nfloat getBit(in float bitset, in int bitIndex) {\\nfloat offset = pow(2.0, float(bitIndex));\\nreturn mod(floor(bitset / offset), 2.0);\\n}\\nconst int maxHighlightReasons = 6;\\nfloat getFilterBit(in float bitset, in int bitIndex) {\\nreturn getBit(bitset, bitIndex + maxHighlightReasons);\\n}\\nfloat getHighlightBit(in float bitset, in int bitIndex) {\\nreturn getBit(bitset, bitIndex);\\n}\\nhighp vec3 unpackDisplayIdTexel(in highp vec3 bitset) {\\nfloat isAggregate = getBit(bitset.b, 7);\\nreturn (1.0 - isAggregate) * bitset + isAggregate * (vec3(bitset.rgb) - vec3(0.0, 0.0, float(0x80)));\\n}\\nvec4 unpack(in float u32) {\\nfloat r = mod(rshift(u32, 0), 255.0);\\nfloat g = mod(rshift(u32, 8), 255.0);\\nfloat b = mod(rshift(u32, 16), 255.0);\\nfloat a = mod(rshift(u32, 24), 255.0);\\nreturn vec4(r, g, b, a);\\n}\\nvec3 norm(in vec3 v) {\\nreturn v /= 255.0;\\n}\\nvec4 norm(in vec4 v) {\\nreturn v /= 255.0;\\n}\\nfloat max4(vec4 target) {\\nreturn max(max(max(target.x, target.y), target.z), target.w);\\n}\\nvec2 unpack_u8_nf32(vec2 bytes) {\\nreturn (bytes - 127.0) / 127.0;\\n}\\nhighp float rand(in vec2 co) {\\nhighp float a = 12.9898;\\nhighp float b = 78.233;\\nhighp float c = 43758.5453;\\nhighp float dt = dot(co, vec2(a,b));\\nhighp float sn = mod(dt, 3.14);\\nreturn fract(sin(sn) * c);\\n}\",\"vcommon.glsl\":\"#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/attributeData.glsl>\\n#include <materials/vv.glsl>\\n#include <materials/barycentric.glsl>\\nattribute vec2 a_pos;\\nattribute highp vec3 a_id;\\nuniform highp mat3 displayViewScreenMat3;\\nuniform highp mat3 displayViewMat3;\\nuniform highp mat3 displayMat3;\\nuniform highp mat3 tileMat3;\\nuniform highp mat3 viewMat3;\\nuniform highp float pixelRatio;\\nuniform mediump float zoomFactor;\\nuniform mediump float antialiasing;\\nuniform mediump float currentScale;\\nuniform mediump float currentZoom;\\nuniform mediump float metersPerSRUnit;\\nvec4 VV_ADATA = vec4(0.0);\\nvoid loadVisualVariableData(inout vec4 target) {\\ntarget.rgba = getVisualVariableData(a_id);\\n}\\n#ifdef VV\\n#define INIT loadVisualVariableData(VV_ADATA)\\n#else\\n#define INIT\\n#endif\\nvec4 getColor(in vec4 a_color, in float a_bitSet, int index) {\\n#ifdef VV_COLOR\\nfloat isColorLocked   = getBit(a_bitSet, index);\\nreturn getVVColor(VV_ADATA[ATTR_VV_COLOR], a_color, isColorLocked);\\n#else\\nreturn a_color;\\n#endif\\n}\\nfloat getOpacity() {\\n#ifdef VV_OPACITY\\nreturn getVVOpacity(VV_ADATA[ATTR_VV_OPACITY]);\\n#else\\nreturn 1.0;\\n#endif\\n}\\nfloat getSize(in float in_size, in float currentScale) {\\n#ifdef VV_SIZE\\nreturn getVVSize(in_size, VV_ADATA[ATTR_VV_SIZE], currentScale);\\n#else\\nreturn in_size;\\n#endif\\n}\\nmat3 getRotation() {\\n#ifdef VV_ROTATION\\nreturn getVVRotationMat3(mod(VV_ADATA[ATTR_VV_ROTATION], 360.0));\\n#else\\nreturn mat3(1.0);\\n#endif\\n}\\nfloat getFilterFlags() {\\n#ifdef IGNORES_SAMPLER_PRECISION\\nreturn ceil(getFilterData(a_id).x * 255.0);\\n#else\\nreturn getFilterData(a_id).x * 255.0;\\n#endif\\n}\\nvec4 getAnimationState() {\\nreturn getAnimation(a_id);\\n}\\nfloat getMinZoom() {\\nvec4 data0 = getFilterData(a_id) * 255.0;\\nreturn data0.g;\\n}\\nmat3 getMatrixNoDisplay(float isMapAligned) {\\nreturn isMapAligned * viewMat3 * tileMat3 + (1.0 - isMapAligned) * tileMat3;\\n}\\nmat3 getMatrix(float isMapAligned) {\\nreturn isMapAligned * displayViewMat3 + (1.0 - isMapAligned) * displayMat3;\\n}\\nfloat checkHighlightBit(float filterFlags, int index) {\\nreturn getHighlightBit(filterFlags, index);\\n}\\nfloat checkHighlight(float filterFlags) {\\nfloat result = checkHighlightBit(filterFlags, 0);\\nfor (int i = 1; i < maxHighlightReasons; i++) {\\nresult = result + checkHighlightBit(filterFlags, i);\\n}\\nreturn step(0.1, result);\\n}\\nvec3 clip(inout vec4 color, inout vec3 pos, in float filterFlags, in vec2 minMaxZoom) {\\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 0));\\n#ifdef inside\\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 1));\\n#elif defined(outside)\\npos.z += 2.0 * getFilterBit(filterFlags, 1);\\n#elif defined(highlight)\\n#if !defined(highlight_all)\\npos.z += 2.0 * (1.0 - checkHighlight(filterFlags));\\n#endif\\n#endif\\npos.z += 2.0 * (step(minMaxZoom.y, currentZoom) + (1.0 - step(minMaxZoom.x, currentZoom)));\\nreturn pos;\\n}\",\"vv.glsl\":\"#if defined(VV_SIZE_MIN_MAX_VALUE) || defined(VV_SIZE_SCALE_STOPS) || defined(VV_SIZE_FIELD_STOPS) || defined(VV_SIZE_UNIT_VALUE)\\n#define VV_SIZE\\n#endif\\n#if defined(VV_COLOR) || defined(VV_SIZE) || defined(VV_OPACITY) || defined(VV_ROTATION)\\n#define VV\\n#endif\\n#ifdef VV_COLOR\\nuniform highp float colorValues[8];\\nuniform vec4 colors[8];\\n#endif\\n#ifdef VV_SIZE_MIN_MAX_VALUE\\nuniform highp vec4 minMaxValueAndSize;\\n#endif\\n#ifdef VV_SIZE_SCALE_STOPS\\nuniform highp float values[8];\\nuniform float sizes[8];\\n#endif\\n#ifdef VV_SIZE_FIELD_STOPS\\nuniform highp float values[8];\\nuniform float sizes[8];\\n#endif\\n#ifdef VV_SIZE_UNIT_VALUE\\nuniform highp float unitMeterRatio;\\n#endif\\n#ifdef VV_OPACITY\\nuniform highp float opacityValues[8];\\nuniform float opacities[8];\\n#endif\\n#ifdef VV_ROTATION\\nuniform lowp float rotationType;\\n#endif\\nbool isNan(float val) {\\nreturn (val == NAN_MAGIC_NUMBER);\\n}\\n#ifdef VV_SIZE_MIN_MAX_VALUE\\nfloat getVVMinMaxSize(float sizeValue, float fallback) {\\nif (isNan(sizeValue)) {\\nreturn fallback;\\n}\\nfloat interpolationRatio = (sizeValue  - minMaxValueAndSize.x) / (minMaxValueAndSize.y - minMaxValueAndSize.x);\\ninterpolationRatio = clamp(interpolationRatio, 0.0, 1.0);\\nreturn minMaxValueAndSize.z + interpolationRatio * (minMaxValueAndSize.w - minMaxValueAndSize.z);\\n}\\n#endif\\n#ifdef VV_SIZE_SCALE_STOPS\\nfloat getVVScaleStopsSize(float currentScale) {\\nfloat outSize;\\nif (currentScale <= values[0]) {\\noutSize = sizes[0];\\n} else {\\nif (currentScale >= values[7]) {\\noutSize = sizes[7];\\n} else {\\nint index;\\nindex = -1;\\nfor (int i = 0; i < 8; i++) {\\nif (values[i] > currentScale) {\\nindex = i;\\nbreak;\\n}\\n}\\nint prevIndex = index - 1;\\nfloat a = currentScale - values[prevIndex];\\nfloat b = values[index] - values[prevIndex];\\noutSize = mix(sizes[prevIndex], sizes[index], a / b);\\n}\\n}\\nreturn outSize;\\n}\\n#endif\\n#ifdef VV_SIZE_FIELD_STOPS\\nconst int VV_SIZE_N = 8;\\nfloat getVVStopsSize(float sizeValue, float fallback) {\\nif (isNan(sizeValue)) {\\nreturn fallback;\\n}\\nif (sizeValue <= values[0]) {\\nreturn sizes[0];\\n}\\nif (sizeValue >= values[VV_SIZE_N - 1]) {\\nreturn sizes[VV_SIZE_N - 1];\\n}\\nfor (int i = 1; i < VV_SIZE_N; ++i) {\\nif (values[i] >= sizeValue) {\\nfloat f = (sizeValue - values[i-1]) / (values[i] - values[i-1]);\\nreturn mix(sizes[i-1], sizes[i], f);\\n}\\n}\\nreturn sizes[VV_SIZE_N - 1];\\n}\\n#endif\\n#ifdef VV_SIZE_UNIT_VALUE\\nfloat getVVUnitValue(float sizeValue, float fallback) {\\nif (isNan(sizeValue)) {\\nreturn fallback;\\n}\\nreturn sizeValue * (metersPerSRUnit / unitMeterRatio);\\n}\\n#endif\\n#ifdef VV_OPACITY\\nconst int VV_OPACITY_N = 8;\\nfloat getVVOpacity(float opacityValue) {\\nif (isNan(opacityValue)) {\\nreturn 1.0;\\n}\\nif (opacityValue <= opacityValues[0]) {\\nreturn opacities[0];\\n}\\nfor (int i = 1; i < VV_OPACITY_N; ++i) {\\nif (opacityValues[i] >= opacityValue) {\\nfloat f = (opacityValue - opacityValues[i-1]) / (opacityValues[i] - opacityValues[i-1]);\\nreturn mix(opacities[i-1], opacities[i], f);\\n}\\n}\\nreturn opacities[VV_OPACITY_N - 1];\\n}\\n#endif\\n#ifdef VV_ROTATION\\nmat4 getVVRotation(float rotationValue) {\\nif (isNan(rotationValue)) {\\nreturn mat4(1, 0, 0, 0,\\n0, 1, 0, 0,\\n0, 0, 1, 0,\\n0, 0, 0, 1);\\n}\\nfloat rotation = rotationValue;\\nif (rotationType == 1.0) {\\nrotation = 90.0 - rotation;\\n}\\nfloat angle = C_DEG_TO_RAD * rotation;\\nfloat sinA = sin(angle);\\nfloat cosA = cos(angle);\\nreturn mat4(cosA, sinA, 0, 0,\\n-sinA,  cosA, 0, 0,\\n0,     0, 1, 0,\\n0,     0, 0, 1);\\n}\\nmat3 getVVRotationMat3(float rotationValue) {\\nif (isNan(rotationValue)) {\\nreturn mat3(1, 0, 0,\\n0, 1, 0,\\n0, 0, 1);\\n}\\nfloat rotation = rotationValue;\\nif (rotationType == 1.0) {\\nrotation = 90.0 - rotation;\\n}\\nfloat angle = C_DEG_TO_RAD * -rotation;\\nfloat sinA = sin(angle);\\nfloat cosA = cos(angle);\\nreturn mat3(cosA, -sinA, 0,\\nsinA, cosA, 0,\\n0,    0,    1);\\n}\\n#endif\\n#ifdef VV_COLOR\\nconst int VV_COLOR_N = 8;\\nvec4 getVVColor(float colorValue, vec4 fallback, float isColorLocked) {\\nif (isNan(colorValue) || isColorLocked == 1.0) {\\nreturn fallback;\\n}\\nif (colorValue <= colorValues[0]) {\\nreturn colors[0];\\n}\\nfor (int i = 1; i < VV_COLOR_N; ++i) {\\nif (colorValues[i] >= colorValue) {\\nfloat f = (colorValue - colorValues[i-1]) / (colorValues[i] - colorValues[i-1]);\\nreturn mix(colors[i-1], colors[i], f);\\n}\\n}\\nreturn colors[VV_COLOR_N - 1];\\n}\\n#endif\\nfloat getVVSize(in float size, in float vvSize, in float currentScale)  {\\n#ifdef VV_SIZE_MIN_MAX_VALUE\\nreturn getVVMinMaxSize(vvSize, size);\\n#elif defined(VV_SIZE_SCALE_STOPS)\\nfloat outSize = getVVScaleStopsSize(currentScale);\\nreturn isNan(outSize) ? size : outSize;\\n#elif defined(VV_SIZE_FIELD_STOPS)\\nfloat outSize = getVVStopsSize(vvSize, size);\\nreturn isNan(outSize) ? size : outSize;\\n#elif defined(VV_SIZE_UNIT_VALUE)\\nreturn getVVUnitValue(vvSize, size);\\n#else\\nreturn size;\\n#endif\\n}\"},\"post-processing\":{blit:{\"blit.frag\":\"precision mediump float;\\nuniform sampler2D u_texture;\\nvarying vec2 v_uv;\\nvoid main() {\\ngl_FragColor = texture2D(u_texture, v_uv);\\n}\"},bloom:{composite:{\"composite.frag\":\"precision mediump float;\\nvarying vec2 v_uv;\\nuniform sampler2D u_blurTexture1;\\nuniform sampler2D u_blurTexture2;\\nuniform sampler2D u_blurTexture3;\\nuniform sampler2D u_blurTexture4;\\nuniform sampler2D u_blurTexture5;\\nuniform float u_bloomStrength;\\nuniform float u_bloomRadius;\\nuniform float u_bloomFactors[NUMMIPS];\\nuniform vec3 u_bloomTintColors[NUMMIPS];\\nfloat lerpBloomFactor(const in float factor) {\\nfloat mirrorFactor = 1.2 - factor;\\nreturn mix(factor, mirrorFactor, u_bloomRadius);\\n}\\nvoid main() {\\nvec4 color = u_bloomStrength * (\\nlerpBloomFactor(u_bloomFactors[0]) * vec4(u_bloomTintColors[0], 1.0) * texture2D(u_blurTexture1, v_uv) +\\nlerpBloomFactor(u_bloomFactors[1]) * vec4(u_bloomTintColors[1], 1.0) * texture2D(u_blurTexture2, v_uv) +\\nlerpBloomFactor(u_bloomFactors[2]) * vec4(u_bloomTintColors[2], 1.0) * texture2D(u_blurTexture3, v_uv) +\\nlerpBloomFactor(u_bloomFactors[3]) * vec4(u_bloomTintColors[3], 1.0) * texture2D(u_blurTexture4, v_uv) +\\nlerpBloomFactor(u_bloomFactors[4]) * vec4(u_bloomTintColors[4], 1.0) * texture2D(u_blurTexture5, v_uv)\\n);\\ngl_FragColor = clamp(color, 0.0, 1.0);\\n}\"},gaussianBlur:{\"gaussianBlur.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform vec2 u_texSize;\\nuniform vec2 u_direction;\\nvarying vec2 v_uv;\\n#define KERNEL_RADIUS RADIUS\\n#define SIGMA RADIUS\\nfloat gaussianPdf(in float x, in float sigma) {\\nreturn 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\\n}\\nvoid main() {\\nvec2 invSize = 1.0 / u_texSize;\\nfloat fSigma = float(SIGMA);\\nfloat weightSum = gaussianPdf(0.0, fSigma);\\nvec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\\nfor (int i = 1; i < KERNEL_RADIUS; i ++) {\\nfloat x = float(i);\\nfloat w = gaussianPdf(x, fSigma);\\nvec2 uvOffset = u_direction * invSize * x;\\nvec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\\nvec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\\npixelColorSum += (sample1 + sample2) * w;\\nweightSum += 2.0 * w;\\n}\\ngl_FragColor = pixelColorSum /weightSum;\\n}\"},luminosityHighPass:{\"luminosityHighPass.frag\":\"precision mediump float;\\nuniform sampler2D u_texture;\\nuniform vec3 u_defaultColor;\\nuniform float u_defaultOpacity;\\nuniform float u_luminosityThreshold;\\nuniform float u_smoothWidth;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 texel = texture2D(u_texture, v_uv);\\nvec3 luma = vec3(0.299, 0.587, 0.114);\\nfloat v = dot(texel.xyz, luma);\\nvec4 outputColor = vec4(u_defaultColor.rgb, u_defaultOpacity);\\nfloat alpha = smoothstep(u_luminosityThreshold, u_luminosityThreshold + u_smoothWidth, v);\\ngl_FragColor = mix(outputColor, texel, alpha);\\n}\"}},blur:{gaussianBlur:{\"gaussianBlur.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform vec2 u_texSize;\\nuniform vec2 u_direction;\\nuniform float u_sigma;\\nvarying vec2 v_uv;\\n#define KERNEL_RADIUS RADIUS\\nfloat gaussianPdf(in float x, in float sigma) {\\nreturn 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\\n}\\nvoid main() {\\nvec2 invSize = 1.0 / u_texSize;\\nfloat fSigma = u_sigma;\\nfloat weightSum = gaussianPdf(0.0, fSigma);\\nvec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\\nfor (int i = 1; i < KERNEL_RADIUS; i ++) {\\nfloat x = float(i);\\nfloat w = gaussianPdf(x, fSigma);\\nvec2 uvOffset = u_direction * invSize * x;\\nvec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\\nvec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\\npixelColorSum += (sample1 + sample2) * w;\\nweightSum += 2.0 * w;\\n}\\ngl_FragColor = pixelColorSum /weightSum;\\n}\"},\"radial-blur\":{\"radial-blur.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nvarying vec2 v_uv;\\nconst float sampleDist = 1.0;\\nconst float sampleStrength = 2.2;\\nvoid main(void) {\\nfloat samples[10];\\nsamples[0] = -0.08;\\nsamples[1] = -0.05;\\nsamples[2] = -0.03;\\nsamples[3] = -0.02;\\nsamples[4] = -0.01;\\nsamples[5] =  0.01;\\nsamples[6] =  0.02;\\nsamples[7] =  0.03;\\nsamples[8] =  0.05;\\nsamples[9] =  0.08;\\nvec2 dir = 0.5 - v_uv;\\nfloat dist = sqrt(dir.x * dir.x + dir.y * dir.y);\\ndir = dir / dist;\\nvec4 color = texture2D(u_colorTexture,v_uv);\\nvec4 sum = color;\\nfor (int i = 0; i < 10; i++) {\\nsum += texture2D(u_colorTexture, v_uv + dir * samples[i] * sampleDist);\\n}\\nsum *= 1.0 / 11.0;\\nfloat t = dist * sampleStrength;\\nt = clamp(t, 0.0, 1.0);\\ngl_FragColor = mix(color, sum, t);\\n}\"}},dra:{\"dra.frag\":\"precision mediump float;\\nuniform sampler2D u_minColor;\\nuniform sampler2D u_maxColor;\\nuniform sampler2D u_texture;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 minColor = texture2D(u_minColor, vec2(0.5));\\nvec4 maxColor = texture2D(u_maxColor, vec2(0.5));\\nvec4 color = texture2D(u_texture, v_uv);\\nvec3 minColorUnpremultiply = minColor.rgb / minColor.a;\\nvec3 maxColorUnpremultiply = maxColor.rgb / maxColor.a;\\nvec3 colorUnpremultiply = color.rgb / color.a;\\nvec3 range = maxColorUnpremultiply - minColorUnpremultiply;\\ngl_FragColor = vec4(color.a * (colorUnpremultiply - minColorUnpremultiply) / range, color.a);\\n}\",\"min-max\":{\"min-max.frag\":\"#extension GL_EXT_draw_buffers : require\\nprecision mediump float;\\n#define CELL_SIZE 2\\nuniform sampler2D u_minTexture;\\nuniform sampler2D u_maxTexture;\\nuniform vec2 u_srcResolution;\\nuniform vec2 u_dstResolution;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec2 srcPixel = floor(gl_FragCoord.xy) * float(CELL_SIZE);\\nvec2 onePixel = vec2(1.0) / u_srcResolution;\\nvec2 uv = (srcPixel + 0.5) / u_srcResolution;\\nvec4 minColor = vec4(1.0);\\nvec4 maxColor = vec4(0.0);\\nfor (int y = 0; y < CELL_SIZE; ++y) {\\nfor (int x = 0; x < CELL_SIZE; ++x) {\\nvec2 offset = uv + vec2(x, y) * onePixel;\\nminColor = min(minColor, texture2D(u_minTexture, offset));\\nmaxColor = max(maxColor, texture2D(u_maxTexture, offset));\\n}\\n}\\ngl_FragData[0] = minColor;\\ngl_FragData[1] = maxColor;\\n}\"}},\"drop-shadow\":{composite:{\"composite.frag\":\"precision mediump float;\\nuniform sampler2D u_layerFBOTexture;\\nuniform sampler2D u_blurTexture;\\nuniform vec4 u_shadowColor;\\nuniform vec2 u_shadowOffset;\\nuniform highp mat3 u_displayViewMat3;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec3 offset = u_displayViewMat3 * vec3(u_shadowOffset, 0.0);\\nvec4 layerColor = texture2D(u_layerFBOTexture, v_uv);\\nvec4 blurColor = texture2D(u_blurTexture, v_uv - offset.xy / 2.0);\\ngl_FragColor = ((1.0 - layerColor.a) * blurColor.a * u_shadowColor + layerColor);\\n}\"}},\"edge-detect\":{\"frei-chen\":{\"frei-chen.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform vec2 u_texSize;\\nvarying vec2 v_uv;\\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\\nmat3 G[9];\\nconst mat3 g0 = mat3( 0.3535533845424652, 0, -0.3535533845424652, 0.5, 0, -0.5, 0.3535533845424652, 0, -0.3535533845424652 );\\nconst mat3 g1 = mat3( 0.3535533845424652, 0.5, 0.3535533845424652, 0, 0, 0, -0.3535533845424652, -0.5, -0.3535533845424652 );\\nconst mat3 g2 = mat3( 0, 0.3535533845424652, -0.5, -0.3535533845424652, 0, 0.3535533845424652, 0.5, -0.3535533845424652, 0 );\\nconst mat3 g3 = mat3( 0.5, -0.3535533845424652, 0, -0.3535533845424652, 0, 0.3535533845424652, 0, 0.3535533845424652, -0.5 );\\nconst mat3 g4 = mat3( 0, -0.5, 0, 0.5, 0, 0.5, 0, -0.5, 0 );\\nconst mat3 g5 = mat3( -0.5, 0, 0.5, 0, 0, 0, 0.5, 0, -0.5 );\\nconst mat3 g6 = mat3( 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.6666666865348816, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204 );\\nconst mat3 g7 = mat3( -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, 0.6666666865348816, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408 );\\nconst mat3 g8 = mat3( 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408 );\\nvoid main() {\\nG[0] = g0,\\nG[1] = g1,\\nG[2] = g2,\\nG[3] = g3,\\nG[4] = g4,\\nG[5] = g5,\\nG[6] = g6,\\nG[7] = g7,\\nG[8] = g8;\\nmat3 I;\\nfloat cnv[9];\\nvec3 sample;\\nfor (float i = 0.0; i < 3.0; i++) {\\nfor (float j = 0.0; j < 3.0; j++) {\\nsample = texture2D(u_colorTexture, v_uv + texel * vec2(i - 1.0,j - 1.0)).rgb;\\nI[int(i)][int(j)] = length(sample);\\n}\\n}\\nfor (int i = 0; i < 9; i++) {\\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\\ncnv[i] = dp3 * dp3;\\n}\\nfloat M = (cnv[0] + cnv[1]) + (cnv[2] + cnv[3]);\\nfloat S = (cnv[4] + cnv[5]) + (cnv[6] + cnv[7]) + (cnv[8] + M);\\ngl_FragColor = vec4(vec3(sqrt(M / S)), texture2D(u_colorTexture, v_uv).a);\\n}\"},sobel:{\"sobel.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nvarying vec2 v_uv;\\nuniform vec2 u_texSize;\\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\\nmat3 G[2];\\nconst mat3 g0 = mat3( 1.0, 2.0, 1.0, 0.0, 0.0, 0.0, -1.0, -2.0, -1.0 );\\nconst mat3 g1 = mat3( 1.0, 0.0, -1.0, 2.0, 0.0, -2.0, 1.0, 0.0, -1.0 );\\nvoid main() {\\nmat3 I;\\nfloat cnv[2];\\nvec3 sample;\\nG[0] = g0;\\nG[1] = g1;\\nfor (float i = 0.0; i < 3.0; i++) {\\nfor (float j = 0.0; j < 3.0; j++) {\\nsample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\\nI[int(i)][int(j)] = length(sample);\\n}\\n}\\nfor (int i = 0; i < 2; i++) {\\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\\ncnv[i] = dp3 * dp3;\\n}\\ngl_FragColor = vec4(vec3(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1])), texture2D(u_colorTexture, v_uv).a);\\n}\"}},\"edge-enhance\":{\"edge-enhance.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nvarying vec2 v_uv;\\nuniform vec2 u_texSize;\\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\\nmat3 G[2];\\nconst mat3 g0 = mat3( 1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, 0.0, -1.0 );\\nconst mat3 g1 = mat3( 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, -1.0, -1.0, -1.0 );\\nvoid main() {\\nmat3 I;\\nfloat cnv[2];\\nvec3 sample;\\nG[0] = g0;\\nG[1] = g1;\\nfor (float i = 0.0; i < 3.0; i++) {\\nfor (float j = 0.0; j < 3.0; j++) {\\nsample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\\nI[int(i)][int(j)] = length(sample);\\n}\\n}\\nfor (int i = 0; i < 2; i++) {\\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\\ncnv[i] = dp3 * dp3;\\n}\\nvec4 color = texture2D(u_colorTexture, v_uv);\\ngl_FragColor = vec4(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1]) * color);\\n}\"},filterEffect:{\"filterEffect.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform mat4 u_coefficients;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 color = texture2D(u_colorTexture, v_uv);\\nvec4 rgbw = u_coefficients * vec4(color.a > 0.0 ? color.rgb / color.a : vec3(0.0), 1.0);\\nfloat a = color.a;\\ngl_FragColor = vec4(a * rgbw.rgb, a);\\n}\"},pp:{\"pp.vert\":\"precision mediump float;\\nattribute vec2 a_position;\\nvarying vec2 v_uv;\\nvoid main() {\\ngl_Position = vec4(a_position, 0.0, 1.0);\\nv_uv = (a_position + 1.0) / 2.0;\\n}\"}},raster:{common:{\"common.glsl\":\"uniform sampler2D u_image;\\nuniform int u_bandCount;\\nuniform bool u_flipY;\\nuniform float u_opacity;\\nuniform int u_resampling;\\nuniform vec2 u_srcImageSize;\\n#ifdef APPLY_PROJECTION\\n#include <raster/common/projection.glsl>\\n#endif\\n#ifdef BICUBIC\\n#include <filtering/bicubic.glsl>\\n#endif\\n#ifdef BILINEAR\\n#include <filtering/bilinear.glsl>\\n#endif\\nvec2 getPixelLocation(vec2 coords) {\\nvec2 targetLocation = u_flipY ? vec2(coords.s, 1.0 - coords.t) : coords;\\n#ifdef APPLY_PROJECTION\\ntargetLocation = projectPixelLocation(targetLocation);\\n#endif\\nreturn targetLocation;\\n}\\nbool isOutside(vec2 coords){\\nif (coords.t>1.00001 ||coords.t<-0.00001 || coords.s>1.00001 ||coords.s<-0.00001) {\\nreturn true;\\n} else {\\nreturn false;\\n}\\n}\\nvec4 getPixel(vec2 pixelLocation) {\\n#ifdef BICUBIC\\nvec4 color = sampleBicubicBSpline(u_image, pixelLocation, u_srcImageSize);\\n#elif defined(BILINEAR)\\nvec4 color = sampleBilinear(u_image, pixelLocation, u_srcImageSize);\\n#else\\nvec4 color = texture2D(u_image, pixelLocation);\\n#endif\\nreturn color;\\n}\",\"common.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nuniform highp float u_scale;\\nuniform highp vec2 u_offset;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_pos * u_scale + u_offset;\\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\\n}\",\"contrastBrightness.glsl\":\"uniform float u_contrastOffset;\\nuniform float u_brightnessOffset;\\nvec4 adjustContrastBrightness(vec4 currentPixel, bool isFloat) {\\nvec4 pixelValue = isFloat ? currentPixel * 255.0 : currentPixel;\\nfloat maxI = 255.0;\\nfloat mid = 128.0;\\nfloat c = u_contrastOffset;\\nfloat b = u_brightnessOffset;\\nvec4 v;\\nif (c > 0.0 && c < 100.0) {\\nv = (200.0 * pixelValue - 100.0 * maxI + 2.0 * maxI * b) / (2.0 * (100.0 - c)) + mid;\\n} else if (c <= 0.0 && c > -100.0) {\\nv = (200.0 * pixelValue - 100.0 * maxI + 2.0 * maxI * b) * (100.0 + c) / 20000.0 + mid;\\n} else if (c == 100.0) {\\nv = (200.0 * pixelValue - 100.0 * maxI + (maxI + 1.0) * (100.0 - c) + 2.0 * maxI * b);\\nv = (sign(v) + 1.0) / 2.0;\\n} else if (c == -100.0) {\\nv = vec4(mid, mid, mid, currentPixel.a);\\n}\\nvec3 rgb = clamp(v.rgb / 255.0, 0.0, 1.0);\\nreturn vec4(rgb, currentPixel.a);\\n}\",\"getSurfaceValues.glsl\":\"#include <raster/common/mirror.glsl>\\nvoid getSurfaceValues(sampler2D imageTexture, vec2 texCoord, vec2 srcImageSize, inout float values[10]) {\\nvec2 onePixel = 1.0 / srcImageSize;\\nvec4 va = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(-1.0, -1.0)));\\nvec4 vb = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(0.0, -1.0)));\\nvec4 vc = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(1.0, -1.0)));\\nvec4 vd = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(-1.0, 0.0)));\\nvec4 ve = texture2D(imageTexture, mirror(texCoord));\\nvec4 vf = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(1.0, 0.0)));\\nvec4 vg = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(-1.0, 1.0)));\\nvec4 vh = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(0.0, 1.0)));\\nvec4 vi = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(1.0, 1.0)));\\nfloat alpha = va.a * vb.a * vc.a * vd.a * ve.a * vf.a * vg.a * vh.a * vi.a;\\nvalues[0] = va.r;\\nvalues[1] = vb.r;\\nvalues[2] = vc.r;\\nvalues[3] = vd.r;\\nvalues[4] = ve.r;\\nvalues[5] = vf.r;\\nvalues[6] = vg.r;\\nvalues[7] = vh.r;\\nvalues[8] = vi.r;\\nvalues[9] = alpha;\\n}\",\"inverse.glsl\":\"float invertValue(float value) {\\nfloat s = sign(value);\\nreturn (s * s) / (value + abs(s) - 1.0);\\n}\",\"mirror.glsl\":\"vec2 mirror(vec2 pos) {\\nvec2 pos1 = abs(pos);\\nreturn step(pos1, vec2(1.0, 1.0)) * pos1 + step(1.0, pos1) * (2.0 - pos1);\\n}\",\"projection.glsl\":\"uniform sampler2D u_transformGrid;\\nuniform vec2 u_transformSpacing;\\nuniform vec2 u_transformGridSize;\\nuniform vec2 u_targetImageSize;\\nvec2 projectPixelLocation(vec2 coords) {\\n#ifdef LOOKUP_PROJECTION\\nvec4 pv = texture2D(u_transformGrid, coords);\\nreturn vec2(pv.r, pv.g);\\n#endif\\nvec2 index_image = floor(coords * u_targetImageSize);\\nvec2 oneTransformPixel = vec2(0.25 / u_transformGridSize.s, 1.0 / u_transformGridSize.t);\\nvec2 index_transform = floor(index_image / u_transformSpacing) / u_transformGridSize;\\nvec2 pos = fract((index_image + vec2(0.5, 0.5)) / u_transformSpacing);\\nvec2 srcLocation;\\nvec2 transform_location = index_transform + oneTransformPixel * 0.5;\\nif (pos.s <= pos.t) {\\nvec4 ll_abc = texture2D(u_transformGrid, vec2(transform_location.s, transform_location.t));\\nvec4 ll_def = texture2D(u_transformGrid, vec2(transform_location.s + oneTransformPixel.s, transform_location.t));\\nsrcLocation.s = dot(ll_abc.rgb, vec3(pos, 1.0));\\nsrcLocation.t = dot(ll_def.rgb, vec3(pos, 1.0));\\n} else {\\nvec4 ur_abc = texture2D(u_transformGrid, vec2(transform_location.s + 2.0 * oneTransformPixel.s, transform_location.t));\\nvec4 ur_def = texture2D(u_transformGrid, vec2(transform_location.s + 3.0 * oneTransformPixel.s, transform_location.t));\\nsrcLocation.s = dot(ur_abc.rgb, vec3(pos, 1.0));\\nsrcLocation.t = dot(ur_def.rgb, vec3(pos, 1.0));\\n}\\nreturn srcLocation;\\n}\"},flow:{\"getFadeOpacity.glsl\":\"uniform float u_decayRate;\\nuniform float u_fadeToZero;\\nfloat getFadeOpacity(float x) {\\nfloat cutOff = mix(0.0, exp(-u_decayRate), u_fadeToZero);\\nreturn (exp(-u_decayRate * x) - cutOff) / (1.0 - cutOff);\\n}\",\"getFragmentColor.glsl\":\"vec4 getFragmentColor(vec4 color, float dist, float size, float featheringSize) {\\nfloat featheringStart = clamp(0.5 - featheringSize / size, 0.0, 0.5);\\nif (dist > featheringStart) {\\ncolor *= 1.0 - (dist - featheringStart) / (0.5 - featheringStart);\\n}\\nreturn color;\\n}\",imagery:{\"imagery.frag\":\"precision highp float;\\nvarying vec2 v_texcoord;\\nuniform sampler2D u_texture;\\nuniform float u_Min;\\nuniform float u_Max;\\nuniform float u_featheringSize;\\n#include <raster/flow/vv.glsl>\\nfloat getIntensity(float v) {\\nreturn u_Min + v * (u_Max - u_Min);\\n}\\nvoid main(void) {\\nvec4 sampled = texture2D(u_texture, v_texcoord);\\nfloat intensity = getIntensity(sampled.r);\\ngl_FragColor = getColor(intensity);\\ngl_FragColor.a *= getOpacity(sampled.r);\\ngl_FragColor.a *= sampled.a;\\ngl_FragColor.rgb *= gl_FragColor.a;\\n}\",\"imagery.vert\":\"attribute vec2 a_position;\\nattribute vec2 a_texcoord;\\nuniform mat3 u_dvsMat3;\\nvarying vec2 v_texcoord;\\nvoid main(void) {\\nvec2 xy = (u_dvsMat3 * vec3(a_position, 1.0)).xy;\\ngl_Position = vec4(xy, 0.0, 1.0);\\nv_texcoord = a_texcoord;\\n}\"},particles:{\"particles.frag\":\"precision highp float;\\nvarying vec4 v_color;\\nvarying vec2 v_texcoord;\\nvarying float v_size;\\nuniform float u_featheringSize;\\n#include <raster/flow/getFragmentColor.glsl>\\nvoid main(void) {\\ngl_FragColor = getFragmentColor(v_color, length(v_texcoord - 0.5), v_size, u_featheringSize);\\n}\",\"particles.vert\":\"attribute vec4 a_xyts0;\\nattribute vec4 a_xyts1;\\nattribute vec4 a_typeIdDurationSeed;\\nattribute vec4 a_extrudeInfo;\\nuniform mat3 u_dvsMat3;\\nuniform mat3 u_displayViewMat3;\\nuniform float u_time;\\nuniform float u_trailLength;\\nuniform float u_flowSpeed;\\nvarying vec4 v_color;\\nvarying vec2 v_texcoord;\\nvarying float v_size;\\nuniform float u_featheringSize;\\nuniform float u_introFade;\\n#include <raster/flow/vv.glsl>\\n#include <raster/flow/getFadeOpacity.glsl>\\nvoid main(void) {\\nvec2 position0 = a_xyts0.xy;\\nfloat t0 = a_xyts0.z;\\nfloat speed0 = a_xyts0.w;\\nvec2 position1 = a_xyts1.xy;\\nfloat t1 = a_xyts1.z;\\nfloat speed1 = a_xyts1.w;\\nfloat type = a_typeIdDurationSeed.x;\\nfloat id = a_typeIdDurationSeed.y;\\nfloat duration = a_typeIdDurationSeed.z;\\nfloat seed = a_typeIdDurationSeed.w;\\nvec2 e0 = a_extrudeInfo.xy;\\nvec2 e1 = a_extrudeInfo.zw;\\nfloat animationPeriod = duration + u_trailLength;\\nfloat scaledTime = u_time * u_flowSpeed;\\nfloat randomizedTime = scaledTime + seed * animationPeriod;\\nfloat t = mod(randomizedTime, animationPeriod);\\nfloat fUnclamped = (t - t0) / (t1 - t0);\\nfloat f = clamp(fUnclamped, 0.0, 1.0);\\nfloat clampedTime = mix(t0, t1, f);\\nfloat speed = mix(speed0, speed1, f);\\nvec2 extrude;\\nvec2 position;\\nfloat fadeOpacity;\\nfloat introOpacity;\\nif (type == 2.0) {\\nif (fUnclamped < 0.0 || (fUnclamped > 1.0 && t1 != duration)) {\\ngl_Position = vec4(0.0, 0.0, -2.0, 1.0);\\nreturn;\\n}\\nvec2 ortho = mix(e0, e1, f);\\nvec2 parallel;\\nparallel = normalize(position1 - position0) * 0.5;\\nif (id == 1.0) {\\nextrude = ortho;\\nv_texcoord = vec2(0.5, 0.0);\\n} else if (id == 2.0) {\\nextrude = -ortho;\\nv_texcoord = vec2(0.5, 1.0);\\n} else if (id == 3.0) {\\nextrude = ortho + parallel;\\nv_texcoord = vec2(1.0, 0.0);\\n} else if (id == 4.0) {\\nextrude = -ortho + parallel;\\nv_texcoord = vec2(1.0, 1.0);\\n}\\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\\nintroOpacity = 1.0 - exp(-clampedTime);\\nv_size = getSize(speed);\\nv_color = getColor(speed);\\nv_color.a *= getOpacity(speed);\\nposition = mix(position0, position1, f);\\n} else {\\nif (fUnclamped < 0.0) {\\ngl_Position = vec4(0.0, 0.0, -2.0, 1.0);\\nreturn;\\n}\\nif (id == 1.0) {\\nextrude = e0;\\nv_texcoord = vec2(0.5, 0.0);\\nfadeOpacity = getFadeOpacity((t - t0) / u_trailLength);\\nintroOpacity = 1.0 - exp(-t0);\\nv_size = getSize(speed0);\\nv_color = getColor(speed0);\\nv_color.a *= getOpacity(speed0);\\nposition = position0;\\n} else if (id == 2.0) {\\nextrude = -e0;\\nv_texcoord = vec2(0.5, 1.0);\\nfadeOpacity = getFadeOpacity((t - t0) / u_trailLength);\\nintroOpacity = 1.0 - exp(-t0);\\nv_size = getSize(speed0);\\nv_color = getColor(speed0);\\nv_color.a *= getOpacity(speed0);\\nposition = position0;\\n} else if (id == 3.0) {\\nextrude = mix(e0, e1, f);\\nv_texcoord = vec2(0.5, 0.0);\\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\\nintroOpacity = 1.0 - exp(-clampedTime);\\nv_size = getSize(speed);\\nv_color = getColor(speed);\\nv_color.a *= getOpacity(speed);\\nposition = mix(position0, position1, f);\\n} else if (id == 4.0) {\\nextrude = -mix(e0, e1, f);\\nv_texcoord = vec2(0.5, 1.0);\\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\\nintroOpacity = 1.0 - exp(-clampedTime);\\nv_size = getSize(speed);\\nv_color = getColor(speed);\\nv_color.a *= getOpacity(speed);\\nposition = mix(position0, position1, f);\\n}\\n}\\nvec2 xy = (u_dvsMat3 * vec3(position, 1.0) + u_displayViewMat3 * vec3(extrude * v_size, 0.0)).xy;\\ngl_Position = vec4(xy, 0.0, 1.0);\\nv_color.a *= fadeOpacity;\\nv_color.a *= mix(1.0, introOpacity, u_introFade);\\nv_color.rgb *= v_color.a;\\n}\"},streamlines:{\"streamlines.frag\":\"precision highp float;\\nvarying float v_side;\\nvarying float v_time;\\nvarying float v_totalTime;\\nvarying float v_timeSeed;\\nvarying vec4 v_color;\\nvarying float v_size;\\nuniform float u_time;\\nuniform float u_trailLength;\\nuniform float u_flowSpeed;\\nuniform float u_featheringSize;\\nuniform float u_introFade;\\n#include <raster/flow/getFragmentColor.glsl>\\n#include <raster/flow/getFadeOpacity.glsl>\\nvoid main(void) {\\nfloat t = mod(v_timeSeed * (v_totalTime + u_trailLength) + u_time * u_flowSpeed, v_totalTime + u_trailLength) - v_time;\\nvec4 color = v_color * step(0.0, t) * getFadeOpacity(t / u_trailLength);\\ncolor *= mix(1.0, 1.0 - exp(-v_time), u_introFade);\\ngl_FragColor = getFragmentColor(color, length((v_side + 1.0) / 2.0 - 0.5), v_size, u_featheringSize);\\n}\",\"streamlines.vert\":\"attribute vec3 a_positionAndSide;\\nattribute vec3 a_timeInfo;\\nattribute vec2 a_extrude;\\nattribute float a_speed;\\nuniform mat3 u_dvsMat3;\\nuniform mat3 u_displayViewMat3;\\nvarying float v_time;\\nvarying float v_totalTime;\\nvarying float v_timeSeed;\\nvarying vec4 v_color;\\nvarying float v_side;\\nvarying float v_size;\\nuniform float u_featheringSize;\\n#include <raster/flow/vv.glsl>\\nvoid main(void) {\\nvec4 lineColor = getColor(a_speed);\\nfloat lineOpacity = getOpacity(a_speed);\\nfloat lineSize = getSize(a_speed);\\nvec2 position = a_positionAndSide.xy;\\nv_side = a_positionAndSide.z;\\nvec2 xy = (u_dvsMat3 * vec3(position, 1.0) + u_displayViewMat3 * vec3(a_extrude * lineSize, 0.0)).xy;\\ngl_Position = vec4(xy, 0.0, 1.0);\\nv_time = a_timeInfo.x;\\nv_totalTime = a_timeInfo.y;\\nv_timeSeed = a_timeInfo.z;\\nv_color = lineColor;\\nv_color.a *= lineOpacity;\\nv_color.rgb *= v_color.a;\\nv_size = lineSize;\\n}\"},\"vv.glsl\":\"#define MAX_STOPS 8\\n#ifdef VV_COLOR\\nuniform float u_color_stops[MAX_STOPS];\\nuniform vec4 u_color_values[MAX_STOPS];\\nuniform int u_color_count;\\n#else\\nuniform vec4 u_color;\\n#endif\\n#ifdef VV_OPACITY\\nuniform float u_opacity_stops[MAX_STOPS];\\nuniform float u_opacity_values[MAX_STOPS];\\nuniform int u_opacity_count;\\n#else\\nuniform float u_opacity;\\n#endif\\n#ifdef VV_SIZE\\nuniform float u_size_stops[MAX_STOPS];\\nuniform float u_size_values[MAX_STOPS];\\nuniform int u_size_count;\\n#else\\nuniform float u_size;\\n#endif\\nuniform float u_featheringOffset;\\nvec4 getColor(float x) {\\n#ifdef VV_COLOR\\nvec4 color = u_color_values[0];\\n{\\nfor (int i = 1; i < MAX_STOPS; i++) {\\nif (i >= u_color_count) {\\nbreak;\\n}\\nfloat x1 = u_color_stops[i - 1];\\nif (x < x1) {\\nbreak;\\n}\\nfloat x2 = u_color_stops[i];\\nvec4 y2 = u_color_values[i];\\nif (x < x2) {\\nvec4 y1 = u_color_values[i - 1];\\ncolor = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\\n} else {\\ncolor = y2;\\n}\\n}\\n}\\n#else\\nvec4 color = u_color;\\n#endif\\nreturn color;\\n}\\nfloat getOpacity(float x) {\\n#ifdef VV_OPACITY\\nfloat opacity = u_opacity_values[0];\\n{\\nfor (int i = 1; i < MAX_STOPS; i++) {\\nif (i >= u_opacity_count) {\\nbreak;\\n}\\nfloat x1 = u_opacity_stops[i - 1];\\nif (x < x1) {\\nbreak;\\n}\\nfloat x2 = u_opacity_stops[i];\\nfloat y2 = u_opacity_values[i];\\nif (x < x2) {\\nfloat y1 = u_opacity_values[i - 1];\\nopacity = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\\n} else {\\nopacity = y2;\\n}\\n}\\n}\\n#else\\nfloat opacity = u_opacity;\\n#endif\\nreturn opacity;\\n}\\nfloat getSize(float x) {\\n#ifdef VV_SIZE\\nfloat size = u_size_values[0];\\n{\\nfor (int i = 1; i < MAX_STOPS; i++) {\\nif (i >= u_size_count) {\\nbreak;\\n}\\nfloat x1 = u_size_stops[i - 1];\\nif (x < x1) {\\nbreak;\\n}\\nfloat x2 = u_size_stops[i];\\nfloat y2 = u_size_values[i];\\nif (x < x2) {\\nfloat y1 = u_size_values[i - 1];\\nsize = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\\n} else {\\nsize = y2;\\n}\\n}\\n}\\n#else\\nfloat size = u_size;\\n#endif\\nreturn size + 2.0 * u_featheringSize * u_featheringOffset;\\n}\"},hillshade:{\"hillshade.frag\":\"precision mediump float;\\nvarying highp vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\nuniform int u_hillshadeType;\\nuniform float u_sinZcosAs[6];\\nuniform float u_sinZsinAs[6];\\nuniform float u_cosZs[6];\\nuniform float u_weights[6];\\nuniform vec2 u_factor;\\nuniform float u_minValue;\\nuniform float u_maxValue;\\nuniform float u_scaling;\\n#include <raster/lut/colorize.glsl>\\n#include <raster/common/getSurfaceValues.glsl>\\nvec3 rgb2hsv(vec3 c) {\\nvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\\nvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\\nvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\\nfloat d = q.x - min(q.w, q.y);\\nfloat e = 1.0e-10;\\nreturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\\n}\\nvec3 hsv2rgb(vec3 c) {\\nvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\nvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\nreturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\nvec4 overlay(float val, float minValue, float maxValue, float hillshade) {\\nval = clamp((val - minValue) / (maxValue - minValue), 0.0, 1.0);\\nvec4 rgb = colorize(vec4(val, val, val, 1.0), 255.0);\\nvec3 hsv = rgb2hsv(rgb.xyz);\\nhsv.z = hillshade;\\nreturn vec4(hsv2rgb(hsv) * u_scaling, 1.0) * rgb.a;\\n}\\nvoid main() {\\nvec2 pixelLocation = getPixelLocation(v_texcoord);\\nif (isOutside(pixelLocation)) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\nreturn;\\n}\\nvec4 currentPixel = getPixel(pixelLocation);\\nif (currentPixel.a == 0.0) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\nreturn;\\n}\\nfloat pv[10];\\ngetSurfaceValues(u_image, pixelLocation, u_srcImageSize, pv);\\nfloat alpha = pv[9];\\nfloat dzx = (pv[2] + 2.0 * pv[5] + pv[8] - pv[0] - 2.0 * pv[3] - pv[6]) * u_factor.s;\\nfloat dzy = (pv[6] + 2.0 * pv[7] + pv[8] - pv[0] - 2.0 * pv[1] - pv[2]) * u_factor.t;\\nfloat dzd = sqrt(1.0 + dzx * dzx + dzy * dzy);\\nfloat hillshade = 0.0;\\nif (u_hillshadeType == 0){\\nfloat cosDelta = u_sinZsinAs[0] * dzy - u_sinZcosAs[0] * dzx;\\nfloat z = (u_cosZs[0] + cosDelta) / dzd;\\nif (z < 0.0)  z = 0.0;\\nhillshade = z;\\n} else {\\nfor (int k = 0; k < 6; k++) {\\nfloat cosDelta = u_sinZsinAs[k] * dzy - u_sinZcosAs[k] * dzx;\\nfloat z = (u_cosZs[k] + cosDelta) / dzd;\\nif (z < 0.0) z = 0.0;\\nhillshade = hillshade + z * u_weights[k];\\nif (k == 5) break;\\n}\\n}\\n#ifdef APPLY_COLORMAP\\nvec4 result = overlay(pv[4], u_minValue, u_maxValue, hillshade) * alpha * u_opacity;\\n#else\\nhillshade *= u_scaling;\\nvec4 result = vec4(hillshade, hillshade, hillshade, 1.0) * alpha * u_opacity;\\n#endif\\n#ifdef ROUND_OUTPUT\\nresult = vec4(floor(result.xyz + 0.5), result.a);\\n#endif\\ngl_FragColor = result;\\n}\"},lut:{\"colorize.glsl\":\"uniform sampler2D u_colormap;\\nuniform float u_colormapOffset;\\nuniform float u_colormapMaxIndex;\\nvec4 colorize(vec4 currentPixel, float scaleFactor) {\\nfloat clrIndex = clamp(currentPixel.r * scaleFactor - u_colormapOffset, 0.0, u_colormapMaxIndex);\\nvec2 clrPosition = vec2((clrIndex + 0.5) / (u_colormapMaxIndex + 1.0), 0.0);\\nvec4 color = texture2D(u_colormap, clrPosition);\\nvec4 result = vec4(color.rgb, color.a * currentPixel.a);\\nreturn result;\\n}\\nvec4 colorizeNoClamp(vec4 currentPixel, float scaleFactor) {\\nfloat value = currentPixel.r * scaleFactor - u_colormapOffset;\\nvec4 result = colorize(currentPixel, scaleFactor);\\nreturn result * step(0.0, value) * step(value, u_colormapMaxIndex);\\n}\",\"lut.frag\":\"precision mediump float;\\nvarying highp vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\n#include <raster/lut/colorize.glsl>\\nvoid main() {\\nvec2 pixelLocation = getPixelLocation(v_texcoord);\\nif (isOutside(pixelLocation)) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\nreturn;\\n}\\nvec4 currentPixel = getPixel(pixelLocation);\\nvec4 result = colorizeNoClamp(currentPixel, 1.0);\\ngl_FragColor = vec4(result.xyz, 1.0) * result.a * u_opacity;\\n}\"},magdir:{\"magdir.frag\":\"precision mediump float;\\nvarying vec4 v_color;\\nuniform lowp float u_opacity;\\nvoid main() {\\ngl_FragColor = v_color * u_opacity;\\n}\",\"magdir.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nattribute vec2 a_offset;\\nattribute vec2 a_vv;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nuniform vec2 u_symbolSize;\\nuniform vec2 u_symbolPercentRange;\\nuniform vec2 u_dataRange;\\nuniform float u_rotation;\\nuniform vec4 u_colors[12];\\nvarying vec4 v_color;\\nvoid main()\\n{\\nfloat angle = a_offset.y + u_rotation;\\n#ifndef ROTATION_GEOGRAPHIC\\nangle = 3.14159265359 * 2.0 - angle - 3.14159265359 / 2.0;\\n#endif\\nvec2 offset = vec2(cos(angle), sin(angle)) * a_offset.x;\\n#ifdef DATA_RANGE\\nfloat valuePercentage = clamp((a_vv.y - u_dataRange.x) / (u_dataRange.y - u_dataRange.x), 0.0, 1.0);\\nfloat sizeRatio = u_symbolPercentRange.x + valuePercentage * (u_symbolPercentRange.y - u_symbolPercentRange.x);\\nfloat sizePercentage = clamp(sizeRatio, u_symbolPercentRange.x, u_symbolPercentRange.y);\\n#else\\nfloat sizePercentage = (u_symbolPercentRange.x + u_symbolPercentRange.y) / 2.0;\\n#endif\\nvec2 pos = a_pos + offset * sizePercentage * u_symbolSize;\\nv_color = u_colors[int(a_vv.x)];\\ngl_Position = vec4(u_dvsMat3 * vec3(pos * u_coordScale, 1.0), 1.0);\\n}\"},reproject:{\"reproject.frag\":\"precision mediump float;\\nvarying vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\nvoid main() {\\nvec2 pixelLocation = getPixelLocation(v_texcoord);\\nif (isOutside(pixelLocation)) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\nreturn;\\n}\\nvec4 currentPixel = getPixel(pixelLocation);\\ngl_FragColor = vec4(currentPixel.rgb, 1.0) * currentPixel.a * u_opacity;\\n}\",\"reproject.vert\":\"precision mediump float;\\nattribute vec2 a_position;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_position;\\ngl_Position = vec4(2.0 * (a_position - 0.5), 0.0, 1.0);\\n}\"},rfx:{aspect:{\"aspect.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\nuniform vec2 u_cellSize;\\nuniform vec2 u_srcImageSize;\\n#include <raster/common/getSurfaceValues.glsl>\\nconst float pi = 3.14159265359;\\nvoid main() {\\nfloat pv[10];\\ngetSurfaceValues(u_image, v_texcoord, u_srcImageSize, pv);\\nfloat alpha = pv[9];\\nfloat dzx = (pv[2] + 2.0 * pv[5] + pv[8] - pv[0] - 2.0 * pv[3] - pv[6]) / (8.0 * u_cellSize[0]);\\nfloat dzy = -(pv[6] + 2.0 * pv[7] + pv[8] - pv[0] - 2.0 * pv[1] - pv[2]) / (8.0 * u_cellSize[1]);\\nalpha *= sign(abs(dzx) + abs(dzy));\\nfloat aspect_rad = (dzx == 0.0) ? (step(0.0, dzy) * 0.5 * pi + step(dzy, 0.0) * 1.5 * pi) : mod((2.5 * pi + atan(dzy, -dzx)), 2.0 * pi);\\nfloat aspect = aspect_rad * 180.0 / pi;\\ngl_FragColor = vec4(aspect, aspect, aspect, 1.0) * alpha;\\n}\"},bandarithmetic:{\"bandarithmetic.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\nuniform mediump mat3 u_bandIndexMat3;\\nuniform float u_adjustments[3];\\n#include <raster/common/inverse.glsl>\\nvoid main() {\\nvec4 pv = texture2D(u_image, v_texcoord);\\nvec3 pv2 = u_bandIndexMat3 * pv.rgb;\\nfloat nir = pv2.r;\\nfloat red = pv2.g;\\nfloat index;\\n#ifdef NDXI\\nindex = (nir - red) * invertValue(nir + red);\\n#elif defined(SR)\\nindex = nir * invertValue(red);\\n#elif defined(CI)\\nindex = nir * invertValue(red) - 1.0;\\n#elif defined(SAVI)\\nindex = (nir - red) * invertValue(nir + red + u_adjustments[0]) * (1.0 + u_adjustments[0]);\\n#elif defined(TSAVI)\\nfloat s = u_adjustments[0];\\nfloat a = u_adjustments[1];\\nfloat x = u_adjustments[2];\\nfloat y = -a * s + x * (1.0 + s * s);\\nindex = (s * (nir - s * red - a)) * invertValue(a * nir + red + y);\\n#elif defined(MSAVI)\\nfloat nir2 = 2.0 * nir + 1.0;\\nindex = 0.5 * (nir2 - sqrt(nir2 * nir2 - 8.0 * (nir - red)));\\n#elif defined(GEMI)\\nfloat eta = (2.0 * (nir * nir - red * red) + 1.5 * nir + 0.5 * red) * invertValue(nir + red + 0.5);\\nindex = eta * (1.0 - 0.25 * eta) - (red - 0.125) * invertValue(1.0 - red);\\n#elif defined(PVI)\\nfloat a = u_adjustments[0];\\nfloat b = u_adjustments[1];\\nfloat y = sqrt(1.0 + a * a);\\nindex = (nir - a * red - b) * invertValue(y);\\n#elif defined(VARI)\\nindex = (pv2.g - pv2.r) * invertValue(pv2.g + pv2.r - pv2.b);\\n#elif defined(MTVI)\\nfloat green = pv2.b;\\nfloat v = sqrt(pow((2.0 * nir + 1.0), 2.0) - (6.0 * nir - 5.0 * sqrt(red)) - 0.5);\\nindex = 1.5 * (1.2 * (nir - green) - 2.5 * (red - green)) * invertValue(v);\\n#elif defined(RTVICORE)\\nfloat green = pv2.b;\\nindex = 100.0 * (nir - red) - 10.0 * (nir - green);\\n#elif defined(EVI)\\nfloat blue = pv2.b;\\nfloat denom = nir + 6.0 * red - 7.5 * blue + 1.0;\\nindex =  (2.5 * (nir - red)) * invertValue(denom);\\n#elif defined(WNDWI)\\nfloat g = pv2.r;\\nfloat n = pv2.g;\\nfloat s = pv2.b;\\nfloat a = u_adjustments[0];\\nfloat denom = g + a * n + (1.0 - a) * s;\\nindex = (g - a * n - (1.0 - a) * s) * invertValue(denom);\\n#elif defined(BAI)\\nindex = invertValue(pow((0.1 - red), 2.0) + pow((0.06 - nir), 2.0));\\n#else\\ngl_FragColor = pv;\\nreturn;\\n#endif\\n#ifdef ROUND_OUTPUT\\nindex = floor(index + 0.5);\\n#endif\\ngl_FragColor = vec4(index, index, index, pv.a);\\n}\"},colormap2rgb:{\"colormap2rgb.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\n#include <raster/lut/colorize.glsl>\\nvoid main() {\\nvec4 pv = texture2D(u_image, v_texcoord);\\nvec4 result = colorizeNoClamp(vec4(pv.r, pv.r, pv.r, 1.0), 1.0);\\ngl_FragColor = vec4(result.xyz * 255.0, 1.0) * result.a * pv.a;\\n}\"},compositeband:{\"compositeband.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nuniform sampler2D u_image1;\\nuniform sampler2D u_image2;\\n#ifdef ONE_CONSTANT\\nuniform float u_image1Const;\\n#ifdef TWO_CONSTANT\\nuniform float u_image2Const;\\n#endif\\nuniform mat3 u_imageSwap;\\n#endif\\nvarying vec2 v_texcoord;\\nvoid main() {\\nvec4 pv0 = texture2D(u_image, v_texcoord);\\nfloat a = pv0.r;\\nfloat alpha = pv0.a;\\n#ifdef TWO_CONSTANT\\nfloat b = u_image1Const;\\nfloat c = u_image2Const;\\nvec3 abc = u_imageSwap * vec3(a, b, c);\\na = abc.s;\\nb = abc.t;\\nc = abc.p;\\n#elif defined(ONE_CONSTANT)\\nvec4 pv1 = texture2D(u_image1, v_texcoord);\\nfloat b = pv1.r;\\nfloat c = u_image1Const;\\nvec3 abc = u_imageSwap * vec3(a, b, c);\\na = abc.s;\\nb = abc.t;\\nc = abc.p;\\nalpha *= pv1.a;\\n#else\\nvec4 pv1 = texture2D(u_image1, v_texcoord);\\nvec4 pv2 = texture2D(u_image2, v_texcoord);\\nfloat b = pv1.r;\\nfloat c = pv2.r;\\nalpha = alpha * pv1.a * pv2.a;\\n#endif\\ngl_FragColor = vec4(a, b, c, alpha);\\n}\"},computechange:{\"computechange.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nuniform sampler2D u_image1;\\n#ifdef ONE_CONSTANT\\nuniform float u_image1Const;\\nuniform mat3 u_imageSwap;\\n#endif\\nvarying vec2 v_texcoord;\\nuniform vec2 u_domainRange;\\n#include <raster/common/inverse.glsl>\\nvoid main() {\\nvec4 pv0 = texture2D(u_image, v_texcoord);\\nfloat a = pv0.r;\\n#ifdef ONE_CONSTANT\\nfloat b = u_image1Const;\\nvec3 abc = u_imageSwap * vec3(a, b, 0);\\na = abc.s;\\nb = abc.t;\\n#else\\nvec4 pv1 = texture2D(u_image1, v_texcoord);\\nfloat b = pv1.r;\\n#endif\\nfloat result = a;\\nfloat alpha = pv0.a;\\n#ifdef DIFFERENCE\\nresult = a - b;\\n#elif defined(RELATIVE)\\nresult = (a - b) * invertValue(max(abs(a), abs(b)));\\n#endif\\nbool isInvalid = result < u_domainRange.s || result > u_domainRange.t;\\nresult = isInvalid ? 0.0 : result;\\nalpha *= float(!isInvalid);\\n#ifdef ROUND_OUTPUT\\nresult = floor(result + 0.5);\\n#endif\\ngl_FragColor = vec4(result, result, result, alpha);\\n}\"},contrast:{\"contrast.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\n#include <raster/common/contrastBrightness.glsl>\\nvoid main() {\\nvec4 pv = texture2D(u_image, v_texcoord);\\nvec4 result = adjustContrastBrightness(pv, false);\\ngl_FragColor = vec4(floor(result.rgb * 255.0 + 0.5), result.a);\\n}\"},convolution:{\"convolution.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\nuniform vec2 u_srcImageSize;\\n#define KERNEL_SIZE_ROWS ROWS\\n#define KERNEL_SIZE_COLS COLS\\nuniform vec2 u_clampRange;\\nuniform float u_kernel[25];\\n#include <raster/common/mirror.glsl>\\nvoid main() {\\nvec3 rgb = vec3(0.0, 0.0, 0.0);\\nvec2 resolution = 1.0 / u_srcImageSize;\\nfloat rowOffset = -float(floor(float(KERNEL_SIZE_ROWS) / 2.0));\\nfloat colOffset = -float(floor(float(KERNEL_SIZE_COLS) / 2.0));\\nfloat alpha = 1.0;\\nfor (int row = 0; row < KERNEL_SIZE_ROWS; row++) {\\nfloat pos_row = rowOffset + float(row);\\nfor (int col = 0; col < KERNEL_SIZE_COLS; col++) {\\nvec2 pos = v_texcoord + vec2(colOffset + float(col), pos_row) * resolution;\\nvec4 pv = texture2D(u_image, mirror(pos));\\nrgb += pv.rgb * u_kernel[row * KERNEL_SIZE_COLS + col];\\nalpha *= pv.a;\\n}\\n}\\nrgb = clamp(rgb, u_clampRange.s, u_clampRange.t);\\ngl_FragColor = vec4(rgb * alpha, alpha);\\n}\"},curvature:{\"curvature.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\nuniform float u_zlFactor;\\nuniform vec2 u_srcImageSize;\\n#include <raster/common/getSurfaceValues.glsl>\\nvoid main() {\\nfloat pv[10];\\ngetSurfaceValues(u_image, v_texcoord, u_srcImageSize, pv);\\nfloat alpha = pv[9];\\nfloat d = ((pv[3] + pv[5]) * 0.5 - pv[4]);\\nfloat e = ((pv[1] + pv[7]) * 0.5 - pv[4]);\\nfloat curvature = 0.0;\\n#ifdef STANDARD\\ncurvature = -u_zlFactor * (d + e);\\ngl_FragColor = vec4(curvature, curvature, curvature, alpha);\\n#else\\nfloat f = (-pv[0] + pv[2] + pv[6] - pv[8]) / 4.0;\\nfloat g = (-pv[3] + pv[5]) / 2.0;\\nfloat h = (pv[1] - pv[7]) / 2.0;\\nfloat g2 = g * g;\\nfloat h2 = h * h;\\n#ifdef PROFILE\\ncurvature = (u_zlFactor * (d * g2 + e * h2 + f * g * h)) / (g2 + h2);\\n#else\\ncurvature = (-u_zlFactor * (d * h2 + e * g2 - f * g * h)) / (g2 + h2);\\n#endif\\n#endif\\ngl_FragColor = vec4(curvature, curvature, curvature, alpha);\\n}\"},extractband:{\"extractband.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\nuniform mediump mat3 u_bandIndexMat3;\\nvoid main() {\\nvec4 pv = texture2D(u_image, v_texcoord);\\nvec3 pv2 = u_bandIndexMat3 * pv.rgb;\\ngl_FragColor = vec4(pv2, pv.a);\\n}\"},focalstatistics:{\"focalstatistics.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\nuniform vec2 u_srcImageSize;\\n#define KERNEL_SIZE_ROWS ROWS\\n#define KERNEL_SIZE_COLS COLS\\nuniform vec2 u_clampRange;\\n#include <raster/common/mirror.glsl>\\n#include <raster/common/inverse.glsl>\\nvoid main() {\\nvec2 resolution = 1.0 / u_srcImageSize;\\nfloat rowOffset = -float(floor(float(KERNEL_SIZE_ROWS) / 2.0));\\nfloat colOffset = -float(floor(float(KERNEL_SIZE_COLS) / 2.0));\\nfloat count = 0.0;\\n#ifdef STDDEV\\nvec3 sum = vec3(0.0, 0.0, 0.0);\\nvec3 sum2 = vec3(0.0, 0.0, 0.0);\\n#endif\\nvec4 currentPixel = texture2D(u_image, v_texcoord);\\nvec3 rgb = currentPixel.rgb;\\nfor (int row = 0; row < KERNEL_SIZE_ROWS; row++) {\\nfloat pos_row = rowOffset + float(row);\\nfor (int col = 0; col < KERNEL_SIZE_COLS; col++) {\\nvec2 pos = v_texcoord + vec2(colOffset + float(col), pos_row) * resolution;\\nvec4 pv = texture2D(u_image, mirror(pos));\\ncount += pv.a;\\n#ifdef MIN\\nrgb = min(rgb, pv.rgb);\\n#elif defined(MAX)\\nrgb = max(rgb, pv.rgb);\\n#elif defined(MEAN)\\nrgb += pv.rgb;\\n#elif defined(STDDEV)\\nsum += pv.rgb;\\nsum2 += (pv.rgb * pv.rgb);\\n#endif\\n}\\n}\\n#ifdef MEAN\\nrgb *= invertValue(count);\\n#elif defined(STDDEV)\\nrgb = sqrt((sum2 - sum * sum * invertValue(count)) * invertValue(count));\\n#endif\\nfloat alpha = step(0.9999, count);\\nrgb = clamp(rgb, u_clampRange.s, u_clampRange.t);\\n#ifdef FILL\\nrgb = (1.0 - currentPixel.a) * rgb + currentPixel.a * currentPixel.rgb;\\n#endif\\ngl_FragColor = vec4(rgb * alpha, alpha);\\n}\"},grayscale:{\"grayscale.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\nuniform vec3 u_weights;\\nvoid main() {\\nvec4 pv = texture2D(u_image, v_texcoord);\\nfloat value = dot(u_weights, pv.rgb);\\ngl_FragColor = vec4(value, value, value, pv.a);\\n}\"},local:{\"local.frag\":\"precision highp float;\\nuniform sampler2D u_image;\\nuniform sampler2D u_image1;\\n#ifdef ONE_CONSTANT\\nuniform float u_image1Const;\\n#ifdef TWO_CONSTANT\\nuniform float u_image2Const;\\n#endif\\nuniform mat3 u_imageSwap;\\n#endif\\nvarying vec2 v_texcoord;\\nuniform vec2 u_domainRange;\\n#include <raster/common/inverse.glsl>\\nvoid main() {\\nvec4 pv0 = texture2D(u_image, v_texcoord);\\nfloat a = pv0.r;\\n#ifdef TWO_IMAGES\\n#ifdef ONE_CONSTANT\\nfloat b = u_image1Const;\\nvec3 abc = u_imageSwap * vec3(a, b, 0);\\na = abc.s;\\nb = abc.t;\\n#else\\nvec4 pv1 = texture2D(u_image1, v_texcoord);\\nfloat b = pv1.r;\\n#endif\\n#elif defined(CONDITIONAL)\\n#ifdef TWO_CONSTANT\\nfloat b = u_image1Const;\\nfloat c = u_image2Const;\\nvec3 abc = u_imageSwap * vec3(a, b, c);\\na = abc.s;\\nb = abc.t;\\nc = abc.p;\\n#elif defined(ONE_CONSTANT)\\nvec4 pv1 = texture2D(u_image1, v_texcoord);\\nfloat b = pv1.r;\\nfloat c = u_image1Const;\\nvec3 abc = u_imageSwap * vec3(a, b, c);\\na = abc.s;\\nb = abc.t;\\nc = abc.p;\\n#else\\nvec4 pv1 = texture2D(u_image1, v_texcoord);\\nvec4 pv2 = texture2D(u_image2, v_texcoord);\\nfloat b = pv1.r;\\nfloat c = pv2.r;\\n#endif\\n#endif\\nfloat result = a;\\nfloat alpha = pv0.a;\\n#ifdef PLUS\\nresult = a + b;\\n#elif defined(MINUS)\\nresult = a - b;\\n#elif defined(TIMES)\\nresult = a * b;\\n#elif defined(DIVIDE)\\nresult = a * invertValue(b);\\nalpha *= float(abs(sign(b)));\\n#elif defined(FLOATDIVIDE)\\nresult = a * invertValue(b);\\nalpha *= float(abs(sign(b)));\\n#elif defined(FLOORDIVIDE)\\nresult = floor(a * invertValue(b));\\nalpha *= float(abs(sign(b)));\\n#elif defined(SQUARE)\\nresult = a * a;\\n#elif defined(SQRT)\\nresult = sqrt(a);\\n#elif defined(POWER)\\nresult = pow(a, b);\\n#elif defined(LN)\\nresult = a <= 0.0 ? 0.0: log(a);\\nalpha *= float(a > 0.0);\\n#elif defined(LOG_1_0)\\nresult = a <= 0.0 ? 0.0: log2(a) * invertValue(log2(10.0));\\nalpha *= float(a > 0.0);\\n#elif defined(LOG_2)\\nresult = a <= 0.0 ? 0.0: log2(a);\\nalpha *= float(a > 0.0);\\n#elif defined(EXP)\\nresult = exp(a);\\n#elif defined(EXP_1_0)\\nresult = pow(10.0, a);\\n#elif defined(EXP_2)\\nresult = pow(2.0, a);\\n#elif defined(ROUNDDOWN)\\nresult = floor(a);\\n#elif defined(ROUNDUP)\\nresult = ceil(a);\\n#elif defined(INT)\\nresult = float(sign(a)) * floor(abs(a));\\n#elif defined(MOD)\\nresult = mod(a, b);\\n#elif defined(NEGATE)\\nresult = -a;\\n#elif defined(ABS)\\nresult = abs(a);\\n#elif defined(ACOS)\\nresult = abs(a) > 1.0 ? 0.0: acos(a);\\nalpha *= step(abs(a), 1.00001);\\n#elif defined(ACOSH)\\nresult = acosh(a);\\n#elif defined(ASIN)\\nresult = abs(a) > 1.0 ? 0.0: asin(a);\\nalpha *= step(abs(a), 1.00001);\\n#elif defined(ASINH)\\nresult = asinh(a);\\n#elif defined(ATAN)\\nresult = atan(a);\\n#elif defined(ATANH)\\nresult = abs(a) > 1.0 ? 0.0: atanh(a);\\nalpha *= step(abs(a), 1.0);\\n#elif defined(ATAN_2)\\nresult = atan(a, b);\\n#elif defined(COS)\\nresult = cos(a);\\n#elif defined(COSH)\\nresult = cosh(a);\\n#elif defined(SIN)\\nresult = sin(a);\\n#elif defined(SINH)\\nresult = sinh(a);\\n#elif defined(TAN)\\nresult = tan(a);\\n#elif defined(TANH)\\nresult = tanh(a);\\n#elif defined(BITWISEAND)\\nresult = float(int(a) & int(b));\\n#elif defined(BITWISEOR)\\nresult = float(int(a) | int(b));\\n#elif defined(BITWISELEFTSHIFT)\\nresult = float(int(a) << int(b));\\n#elif defined(BITWISERIGHTSHIFT)\\nresult = float(int(a) >> int(b));\\n#elif defined(BITWISENOT)\\nresult = float(~(int(a)));\\n#elif defined(BITWISEXOR)\\nresult = float(int(a) ^ int(b));\\n#elif defined(BOOLEANAND)\\nresult = float((a != 0.0) && (b != 0.0));\\n#elif defined(BOOLEANNOT)\\nresult = float(a == 0.0);\\n#elif defined(BOOLEANOR)\\nresult = float((a != 0.0) || (b != 0.0));\\n#elif defined(BOOLEANXOR)\\nresult = float((a != 0.0) ^^ (b != 0.0));\\n#elif defined(GREATERTHAN)\\nresult = float(a > b);\\n#elif defined(GREATERTHANEQUAL)\\nresult = float(a >= b);\\n#elif defined(LESSTHAN)\\nresult = float(a < b);\\n#elif defined(LESSTHANEQUAL)\\nresult = float(a <= b);\\n#elif defined(EQUALTO)\\nresult = float(a == b);\\n#elif defined(NOTEQUAL)\\nresult = float(a != b);\\n#elif defined(ISNULL)\\nresult = float(alpha == 0.0);\\nalpha = 1.0;\\n#elif defined(SETNULL)\\nfloat maskValue = float(a == 0.0);\\nresult = maskValue * b;\\nalpha *= maskValue;\\n#elif defined(CONDITIONAL)\\nfloat weight = float(abs(sign(a)));\\nresult = weight * b + (1.0 - weight) * c;\\n#endif\\nfloat rangeFactor = step(u_domainRange.s, result) * step(result, u_domainRange.t);\\nresult *= rangeFactor;\\nalpha *= rangeFactor;\\n#ifdef ROUND_OUTPUT\\nresult = floor(result + 0.5);\\n#endif\\ngl_FragColor = vec4(result, result, result, alpha);\\n}\"},mask:{\"mask.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\n#define LEN_INCLUDED_RANGES 6\\n#define LEN_NODATA_VALUES 6\\nuniform highp float u_includedRanges[6];\\nuniform highp float u_noDataValues[6];\\nfloat maskFactor(float bandValue, float fromValue, float to) {\\nfloat factor = 1.0;\\nfor (int i = 0; i < LEN_NODATA_VALUES; i++) {\\nfactor *= float(u_noDataValues[i] != bandValue);\\n}\\nfactor *= step(fromValue, bandValue) * step(bandValue, to);\\nreturn factor;\\n}\\nvoid main() {\\nvec4 pv = texture2D(u_image, v_texcoord);\\nfloat redFactor = maskFactor(pv.r, u_includedRanges[0], u_includedRanges[1]);\\n#ifdef MULTI_BAND\\nfloat greenFactor = maskFactor(pv.g, u_includedRanges[2], u_includedRanges[3]);\\nfloat blueFactor = maskFactor(pv.b, u_includedRanges[4], u_includedRanges[5]);\\nfloat maskFactor = redFactor * greenFactor * blueFactor;\\ngl_FragColor = pv * maskFactor;\\n#else\\ngl_FragColor = pv * redFactor;\\n#endif\\n}\"},ndvi:{\"ndvi.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\nuniform mediump mat3 u_bandIndexMat3;\\n#include <raster/common/inverse.glsl>\\nvoid main() {\\nvec4 pv = texture2D(u_image, v_texcoord);\\nvec3 pv2 = u_bandIndexMat3 * pv.rgb;\\nfloat nir = pv2.r;\\nfloat red = pv2.g;\\nfloat index = (nir - red) * invertValue(nir + red);\\n#ifdef SCALED\\nindex = floor((index + 1.0) * 100.0 + 0.5);\\n#endif\\ngl_FragColor = vec4(index, index, index, pv.a);\\n}\"},remap:{\"remap.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\n#define LEN_REMAP_RANGES 18\\n#define LEN_NODATA_RANGES 12\\nuniform highp float u_rangeMaps[18];\\nuniform highp float u_noDataRanges[12];\\nuniform highp float u_unmatchMask;\\nuniform vec2 u_clampRange;\\nvoid main() {\\nvec4 pv = texture2D(u_image, v_texcoord);\\nfloat factor = 1.0;\\nfloat bandValue = pv.r;\\nfor (int i = 0; i < LEN_NODATA_RANGES; i+=2) {\\nfloat inside = 1.0 - step(u_noDataRanges[i], bandValue) * step(bandValue, u_noDataRanges[i+1]);\\nfactor *= inside;\\n}\\nfloat mapValue = 0.0;\\nfloat includeMask = 0.0;\\nfor (int i = 0; i < LEN_REMAP_RANGES; i+=3) {\\nfloat stepMask = step(u_rangeMaps[i], bandValue) * step(bandValue, u_rangeMaps[i+1]);\\nincludeMask = (1.0 - stepMask) * includeMask + stepMask;\\nmapValue = (1.0 - stepMask) * mapValue + stepMask * u_rangeMaps[i+2];\\n}\\nbandValue = factor * (mapValue + (1.0 - includeMask) * u_unmatchMask * pv.r);\\nfloat bandMask = factor * max(u_unmatchMask, includeMask);\\nbandValue = clamp(bandValue, u_clampRange.s, u_clampRange.t);\\ngl_FragColor = vec4(bandValue, bandValue, bandValue, bandMask * pv.a);\\n}\"},slope:{\"slope.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\nuniform vec2 u_cellSize;\\nuniform float u_zFactor;\\nuniform vec2 u_srcImageSize;\\nuniform float u_pixelSizePower;\\nuniform float u_pixelSizeFactor;\\n#include <raster/common/getSurfaceValues.glsl>\\nvoid main() {\\nfloat pv[10];\\ngetSurfaceValues(u_image, v_texcoord, u_srcImageSize, pv);\\nfloat alpha = pv[9];\\nfloat xf = (u_zFactor + pow(u_cellSize[0], u_pixelSizePower) * u_pixelSizeFactor) / (8.0 * u_cellSize[0]);\\nfloat yf = (u_zFactor + pow(u_cellSize[1], u_pixelSizePower) * u_pixelSizeFactor) / (8.0 * u_cellSize[1]);\\nfloat dzx = (pv[2] + 2.0 * pv[5] + pv[8] - pv[0] - 2.0 * pv[3] - pv[6]) * xf;\\nfloat dzy = -(pv[6] + 2.0 * pv[7] + pv[8] - pv[0] - 2.0 * pv[1] - pv[2]) * yf;\\nfloat rise2run = sqrt(dzx * dzx + dzy * dzy);\\n#ifdef PERCENT_RISE\\nfloat result = rise2run * 100.0;\\n#else\\nfloat result = atan(rise2run) * 57.2957795;\\n#endif\\n#ifdef ROUND_OUTPUT\\nresult = floor(result + 0.5);\\n#endif\\ngl_FragColor = vec4(result, result, result, alpha);\\n}\"},stretch:{\"stretch.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying highp vec2 v_texcoord;\\nuniform float u_minCutOff[3];\\nuniform float u_maxCutOff[3];\\nuniform float u_minOutput;\\nuniform float u_maxOutput;\\nuniform float u_factor[3];\\nuniform float u_gamma[3];\\nuniform float u_gammaCorrection[3];\\nfloat stretchOneValue(float val, float minCutOff, float maxCutOff, float minOutput, float maxOutput, float factor, float gamma, float gammaCorrection) {\\nval = clamp(val, minCutOff, maxCutOff);\\nfloat stretchedVal;\\n#ifdef USE_GAMMA\\nfloat tempf = 1.0;\\nfloat outRange = maxOutput - minOutput;\\nfloat relativeVal = (val - minCutOff) / (maxCutOff - minCutOff);\\ntempf -= step(1.0, gamma) * sign(gamma - 1.0) * pow(1.0 / outRange, relativeVal * gammaCorrection);\\nstretchedVal = tempf * outRange * pow(relativeVal, 1.0 / gamma) + minOutput;\\nstretchedVal = clamp(stretchedVal, minOutput, maxOutput);\\n#else\\nstretchedVal = minOutput + (val - minCutOff) * factor;\\n#endif\\n#ifdef ROUND_OUTPUT\\nstretchedVal = floor(stretchedVal + 0.5);\\n#endif\\nreturn stretchedVal;\\n}\\nvoid main() {\\nvec4 currentPixel = texture2D(u_image, v_texcoord);\\nfloat redVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_gamma[0], u_gammaCorrection[0]);\\n#ifdef MULTI_BAND\\nfloat greenVal = stretchOneValue(currentPixel.g, u_minCutOff[1], u_maxCutOff[1], u_minOutput, u_maxOutput, u_factor[1], u_gamma[1], u_gammaCorrection[1]);\\nfloat blueVal = stretchOneValue(currentPixel.b, u_minCutOff[2], u_maxCutOff[2], u_minOutput, u_maxOutput, u_factor[2], u_gamma[2], u_gammaCorrection[2]);\\ngl_FragColor = vec4(redVal, greenVal, blueVal, currentPixel.a);\\n#else\\ngl_FragColor = vec4(redVal, redVal, redVal, currentPixel.a);\\n#endif\\n}\"},vs:{\"vs.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_pos;\\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\\n}\"}},scalar:{\"scalar.frag\":\"precision mediump float;\\nuniform lowp float u_opacity;\\nvarying vec2 v_pos;\\nconst vec4 outlineColor = vec4(0.2, 0.2, 0.2, 1.0);\\nconst float outlineSize = 0.02;\\nconst float innerRadius = 0.25;\\nconst float outerRadius = 0.42;\\nconst float innerSquareLength = 0.15;\\nvoid main() {\\nmediump float dist = length(v_pos);\\nmediump float fillalpha1 = smoothstep(outerRadius, outerRadius + outlineSize, dist);\\nfillalpha1 *= (1.0-smoothstep(outerRadius + outlineSize, outerRadius + 0.1 + outlineSize, dist));\\n#ifdef INNER_CIRCLE\\nmediump float fillalpha2 = smoothstep(innerRadius, innerRadius + outlineSize, dist);\\nfillalpha2 *= (1.0-smoothstep(innerRadius + outlineSize, innerRadius + 0.1 + outlineSize, dist));\\n#else\\nmediump float fillalpha2 = (abs(v_pos.x) < innerSquareLength ? 1.0 : 0.0) * (abs(v_pos.y) < innerSquareLength ? 1.0 : 0.0);\\n#endif\\ngl_FragColor = (fillalpha2 + fillalpha1) * outlineColor * u_opacity;\\n}\",\"scalar.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nattribute vec2 a_offset;\\nattribute vec2 a_vv;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nuniform vec2 u_symbolSize;\\nuniform vec2 u_symbolPercentRange;\\nuniform vec2 u_dataRange;\\nvarying vec2 v_pos;\\nvoid main()\\n{\\n#ifdef DATA_RANGE\\nfloat valuePercentage = clamp((a_vv.y - u_dataRange.x) / (u_dataRange.y - u_dataRange.x), 0.0, 1.0);\\nfloat sizeRatio = u_symbolPercentRange.x + valuePercentage * (u_symbolPercentRange.y - u_symbolPercentRange.x);\\nfloat sizePercentage = clamp(sizeRatio, u_symbolPercentRange.x, u_symbolPercentRange.y);\\n#else\\nfloat sizePercentage = (u_symbolPercentRange.x + u_symbolPercentRange.y) / 2.0;\\n#endif\\nvec2 size = u_symbolSize * sizePercentage;\\nvec2 pos = a_pos + a_offset * size;\\nv_pos = a_offset;\\ngl_Position = vec4(u_dvsMat3 * vec3(pos * u_coordScale, 1.0), 1.0);\\n}\"},stretch:{\"stretch.frag\":\"precision mediump float;\\nvarying highp vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\nuniform float u_minCutOff[3];\\nuniform float u_maxCutOff[3];\\nuniform float u_minOutput;\\nuniform float u_maxOutput;\\nuniform float u_factor[3];\\nuniform bool u_useGamma;\\nuniform float u_gamma[3];\\nuniform float u_gammaCorrection[3];\\n#include <raster/lut/colorize.glsl>\\nfloat stretchOneValue(float val, float minCutOff, float maxCutOff, float minOutput, float maxOutput, float factor, bool useGamma, float gamma, float gammaCorrection) {\\nif (val >= maxCutOff) {\\nreturn maxOutput;\\n} else if (val <= minCutOff) {\\nreturn minOutput;\\n}\\nfloat stretchedVal;\\nif (useGamma) {\\nfloat tempf = 1.0;\\nfloat outRange = maxOutput - minOutput;\\nfloat relativeVal = (val - minCutOff) / (maxCutOff - minCutOff);\\nif (gamma > 1.0) {\\ntempf -= pow(1.0 / outRange, relativeVal * gammaCorrection);\\n}\\nstretchedVal = (tempf * outRange * pow(relativeVal, 1.0 / gamma) + minOutput) / 255.0;\\n} else {\\nstretchedVal = minOutput + (val - minCutOff) * factor;\\n}\\n#ifdef ROUND_OUTPUT\\nstretchedVal = floor(stretchedVal + 0.5);\\n#endif\\nreturn stretchedVal;\\n}\\nvoid main() {\\nvec2 pixelLocation = getPixelLocation(v_texcoord);\\nif (isOutside(pixelLocation)) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\nreturn;\\n}\\nvec4 currentPixel = getPixel(pixelLocation);\\n#ifdef NOOP\\ngl_FragColor = vec4(currentPixel.rgb, 1.0) * currentPixel.a * u_opacity;\\nreturn;\\n#endif\\nif (u_bandCount == 1) {\\nfloat grayVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_useGamma, u_gamma[0], u_gammaCorrection[0]);\\n#ifdef APPLY_COLORMAP\\nvec4 result = colorize(vec4(grayVal, grayVal, grayVal, 1.0), u_useGamma ? 255.0 : 1.0);\\ngl_FragColor = vec4(result.xyz, 1.0) * result.a * currentPixel.a * u_opacity;\\n#else\\ngl_FragColor = vec4(grayVal, grayVal, grayVal, 1.0) * currentPixel.a * u_opacity;\\n#endif\\n} else {\\nfloat redVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_useGamma, u_gamma[0], u_gammaCorrection[0]);\\nfloat greenVal = stretchOneValue(currentPixel.g, u_minCutOff[1], u_maxCutOff[1], u_minOutput, u_maxOutput, u_factor[1], u_useGamma, u_gamma[1], u_gammaCorrection[1]);\\nfloat blueVal = stretchOneValue(currentPixel.b, u_minCutOff[2], u_maxCutOff[2], u_minOutput, u_maxOutput, u_factor[2], u_useGamma, u_gamma[2], u_gammaCorrection[2]);\\ngl_FragColor = vec4(redVal, greenVal, blueVal, 1.0) * currentPixel.a * u_opacity;\\n}\\n}\"}},stencil:{\"stencil.frag\":\"void main() {\\ngl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\\n}\",\"stencil.vert\":\"attribute vec2 a_pos;\\nuniform mat3 u_worldExtent;\\nvoid main() {\\ngl_Position = vec4(u_worldExtent * vec3(a_pos, 1.0), 1.0);\\n}\"},test:{\"TestShader.common.glsl\":\"#ifndef RETURN_RED\\nvarying    vec4      v_color;\\n#endif\\nvarying    vec2      v_offset;\",\"TestShader.frag\":\"precision highp float;\\n#include <test/TestShader.common.glsl>\\nvoid main() {\\nif (v_offset.x > -.5 && v_offset.y > -.5 && v_offset.x < .5 && v_offset.y < .5) {\\ndiscard;\\n}\\n#ifdef RETURN_RED\\ngl_FragColor = vec4(1., 0., 0., 1.);\\n#else\\ngl_FragColor = v_color;\\n#endif\\n}\",\"TestShader.vert\":\"const float POS_PRECISION_FACTOR = 10.;\\nconst float OFFSET_PRECISION_FACTOR = 10.;\\nconst float SIZE_PRECISION_FACTOR = 10.;\\nattribute  vec2      a_pos_packed;\\nattribute  vec2      a_offset_packed;\\nattribute  float     a_size_packed;\\n#ifdef DATA_DRIVEN_COLOR\\nconst float u_dataDrivenColor_validValues[4] = float[4](0., 0., 1., 0.);\\nuniform    vec4      u_dataDrivenColor_colorFallback;\\nuniform    vec4      u_dataDrivenColor_color;\\n#endif\\nuniform    float     u_view_zoomLevel;\\n#include <test/TestShader.common.glsl>\\n#ifdef DATA_DRIVEN_COLOR\\nvec4 getColor(float value) {\\nint index = -1;\\nfor (int i = 0; i < 4; i++) {\\nif (u_dataDrivenColor_validValues[i] == value) {\\nindex = i;\\nbreak;\\n}\\n}\\nif (index == -1) {\\nreturn u_dataDrivenColor_colorFallback;\\n}\\nreturn u_dataDrivenColor_color;\\n}\\n#endif\\nvoid main() {\\nvec2  a_pos = a_pos_packed / POS_PRECISION_FACTOR;\\nvec2  a_offset = a_offset_packed / OFFSET_PRECISION_FACTOR;\\nfloat a_size = a_size_packed / SIZE_PRECISION_FACTOR;\\nvec4 color = vec4(1., 0., 0., 1.);\\n#ifdef DATA_DRIVEN_COLOR\\ncolor = getColor(1.);\\n#endif\\nvec2 offsetScaled = a_offset * a_size;\\nvec4 pos = vec4(a_pos.xy + offsetScaled, 0., 1.);\\ngl_Position = pos;\\n#ifndef RETURN_RED\\nv_color = color;\\n#endif\\nv_offset = a_offset;\\n}\"},tileInfo:{\"tileInfo.frag\":\"uniform mediump sampler2D u_texture;\\nvarying mediump vec2 v_tex;\\nvoid main(void) {\\nlowp vec4 color = texture2D(u_texture, v_tex);\\ncolor.rgb *= color.a;\\ngl_FragColor = color;\\n}\",\"tileInfo.vert\":\"attribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform mediump float u_depth;\\nuniform mediump vec2 u_coord_ratio;\\nuniform mediump vec2 u_delta;\\nuniform mediump vec2 u_dimensions;\\nvarying mediump vec2 v_tex;\\nvoid main() {\\nmediump vec2 offset = u_coord_ratio * vec2(u_delta + a_pos * u_dimensions);\\nvec3 v_pos = u_dvsMat3 * vec3(offset, 1.0);\\ngl_Position = vec4(v_pos.xy, 0.0, 1.0);\\nv_tex = a_pos;\\n}\"},util:{\"atan2.glsl\":\"float atan2(in float y, in float x) {\\nfloat t0, t1, t2, t3, t4;\\nt3 = abs(x);\\nt1 = abs(y);\\nt0 = max(t3, t1);\\nt1 = min(t3, t1);\\nt3 = 1.0 / t0;\\nt3 = t1 * t3;\\nt4 = t3 * t3;\\nt0 =         - 0.013480470;\\nt0 = t0 * t4 + 0.057477314;\\nt0 = t0 * t4 - 0.121239071;\\nt0 = t0 * t4 + 0.195635925;\\nt0 = t0 * t4 - 0.332994597;\\nt0 = t0 * t4 + 0.999995630;\\nt3 = t0 * t3;\\nt3 = (abs(y) > abs(x)) ? 1.570796327 - t3 : t3;\\nt3 = x < 0.0 ?  3.141592654 - t3 : t3;\\nt3 = y < 0.0 ? -t3 : t3;\\nreturn t3;\\n}\",\"encoding.glsl\":\"const vec4 rgba2float_factors = vec4(\\n255.0 / (256.0),\\n255.0 / (256.0 * 256.0),\\n255.0 / (256.0 * 256.0 * 256.0),\\n255.0 / (256.0 * 256.0 * 256.0 * 256.0)\\n);\\nfloat rgba2float(vec4 rgba) {\\nreturn dot(rgba, rgba2float_factors);\\n}\"}};export{e as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport e from\"../../../../core/Error.js\";import r from\"../../../../core/Logger.js\";import{e as t}from\"../../../../chunks/earcut.js\";import{set as n}from\"../../../../core/libs/gl-matrix-2/math/vec2.js\";import{create as o}from\"../../../../core/libs/gl-matrix-2/factories/vec2f64.js\";import{convertFromNestedArray as s,convertFromPolygon as i}from\"../../../../layers/graphics/featureConversionUtils.js\";import c from\"../../../../layers/graphics/OptimizedGeometry.js\";import{i1616to32 as a}from\"./number.js\";import{BufferObject as f}from\"../../../webgl/BufferObject.js\";import{PrimitiveType as m,Usage as h,DataType as u}from\"../../../webgl/enums.js\";const l=r=>{switch(r.BYTES_PER_ELEMENT){case 1:return u.UNSIGNED_BYTE;case 2:return u.UNSIGNED_SHORT;case 4:return u.UNSIGNED_INT;default:throw new e(\"Cannot get DataType of array\")}},y=(e,r,t,n)=>{let o=0;for(let s=1;s<t;s++){const t=e[2*(r+s-1)],n=e[2*(r+s-1)+1];o+=(e[2*(r+s)]-t)*(e[2*(r+s)+1]+n)}return n?o>0:o<0},g=({coords:e,lengths:r},n)=>{const o=[];for(let s=0,i=0;s<r.length;i+=r[s],s+=1){const c=i,a=[];for(;s<r.length-1&&y(e,i+r[s],r[s+1],n);s+=1,i+=r[s])a.push(i+r[s]-c);const f=e.slice(2*c,2*(i+r[s])),m=t(f,a,2);for(const e of m)o.push(e+c)}return o};class p{constructor(e,r,t,n=!1){this._cache={},this.vertices=e,this.indices=r,this.primitiveType=t,this.isMapSpace=n}static fromPath(e){const r=s(new c,e.path,!1,!1),t=r.coords,n=new Uint32Array(g(r,!0)),o=new Uint32Array(t.length/2);for(let s=0;s<o.length;s++)o[s]=a(Math.floor(t[2*s]),Math.floor(t[2*s+1]));return new p({geometry:o},n,m.TRIANGLES)}static fromGeometry(t,n){const o=n.geometry?.type;switch(o){case\"polygon\":return p.fromPolygon(t,n.geometry);case\"extent\":return p.fromMapExtent(t,n.geometry);default:return r.getLogger(\"esri.views.2d.engine.webgl.Mesh2D\").error(new e(\"mapview-bad-type\",`Unable to create a mesh from type ${o}`,n)),p.fromScreenExtent({xmin:0,ymin:0,xmax:1,ymax:1})}}static fromPolygon(e,r){const t=i(new c,r,!1,!1),s=t.coords,f=new Uint32Array(g(t,!1)),h=new Uint32Array(s.length/2),u=o(),l=o();for(let o=0;o<h.length;o++)n(u,s[2*o],s[2*o+1]),e.toScreen(l,u),h[o]=a(Math.floor(l[0]),Math.floor(l[1]));return new p({geometry:h},f,m.TRIANGLES,!0)}static fromScreenExtent({xmin:e,xmax:r,ymin:t,ymax:n}){const o={geometry:new Uint32Array([a(e,t),a(r,t),a(e,n),a(e,n),a(r,t),a(r,n)])},s=new Uint32Array([0,1,2,3,4,5]);return new p(o,s,m.TRIANGLES)}static fromMapExtent(e,r){const[t,n]=e.toScreen([0,0],[r.xmin,r.ymin]),[o,s]=e.toScreen([0,0],[r.xmax,r.ymax]),i={geometry:new Uint32Array([a(t,n),a(o,n),a(t,s),a(t,s),a(o,n),a(o,s)])},c=new Uint32Array([0,1,2,3,4,5]);return new p(i,c,m.TRIANGLES)}destroy(){null!=this._cache.indexBuffer&&this._cache.indexBuffer.dispose(),this._cache.vertexBuffers?.forEach((e=>e?.dispose())),this._cache.indexBuffer=this._cache.vertexBuffers=null}get elementType(){return l(this.indices)}getIndexBuffer(e,r=h.STATIC_DRAW){return this._cache.indexBuffer??=f.createIndex(e,r,this.indices),this._cache.indexBuffer}getVertexBuffers(e,r=h.STATIC_DRAW){return this._cache.vertexBuffers??=new Map(Object.keys(this.vertices).reduce(((t,n)=>(t.push([n,f.createVertex(e,r,this.vertices[n])]),t)),new Array)),this._cache.vertexBuffers}}export{p as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport e from\"../../../../core/Error.js\";import t from\"../../../../core/Logger.js\";import{watch as r}from\"../../../../core/reactiveUtils.js\";import{create as s}from\"../../../../core/libs/gl-matrix-2/factories/mat3f32.js\";import{DisplayObject as i}from\"../DisplayObject.js\";import a from\"./Mesh2D.js\";import{createScreenExtent as o}from\"../../support/clippingUtils.js\";import{VertexArrayObject as h}from\"../../../webgl/VertexArrayObject.js\";class c extends i{constructor(e,t){super(),this._clip=t,this._cache={},this.stage=e,this._handle=r((()=>t.version),(()=>this._invalidate())),this.ready()}static fromClipArea(e,t){return new c(e,t)}_destroyGL(){null!=this._cache.mesh&&(this._cache.mesh.destroy(),this._cache.mesh=null),null!=this._cache.vao&&(this._cache.vao.dispose(),this._cache.vao=null)}destroy(){this._destroyGL(),this._handle.remove()}getVAO(e,t,r,s){const[i,a]=t.size;if(\"geometry\"!==this._clip.type&&this._lastWidth===i&&this._lastHeight===a||(this._lastWidth=i,this._lastHeight=a,this._destroyGL()),null==this._cache.vao){const i=this._createMesh(t,this._clip),a=i.getIndexBuffer(e),o=i.getVertexBuffers(e);this._cache.mesh=i,this._cache.vao=new h(e,r,s,o,a)}return this._cache.vao}_createTransforms(){return{displayViewScreenMat3:s()}}_invalidate(){this._destroyGL(),this.requestRender()}_createMesh(r,s){switch(s.type){case\"rect\":return a.fromScreenExtent(o(s,r.size[0],r.size[1]));case\"path\":return a.fromPath(s);case\"geometry\":return a.fromGeometry(r,s);default:return t.getLogger(\"esri.views.2d.engine.webgl.ClippingInfo\").error(new e(\"mapview-bad-type\",\"Unable to create ClippingInfo mesh from clip of type: ${clip.type}\")),a.fromScreenExtent({xmin:0,ymin:0,xmax:1,ymax:1})}}}export{c as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport\"../../../../core/has.js\";import{brushes as s}from\"../brushes.js\";import{Container as e}from\"../Container.js\";import r from\"./ClippingInfo.js\";import{WGLDrawPhase as i}from\"./enums.js\";class n extends e{set clips(s){super.clips=s,this._updateClippingInfo(s)}renderChildren(s){s.painter.setPipelineState(null),null==this._renderPasses&&(this._renderPasses=this.prepareRenderPasses(s.painter));for(const r of this._renderPasses)try{r.render(s)}catch(e){}}prepareRenderPasses(e){return[e.registerRenderPass({name:\"clip\",brushes:[s.clip],target:()=>this._clippingInfos,drawPhase:i.MAP|i.LABEL|i.LABEL_ALPHA|i.DEBUG|i.HIGHLIGHT})]}_updateClippingInfo(s){null!=this._clippingInfos&&(this._clippingInfos.forEach((s=>s.destroy())),this._clippingInfos=null),null!=s&&s.length&&(this._clippingInfos=s.items.map((s=>r.fromClipArea(this.stage,s)))),this.requestRender()}}export{n as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport e from\"../../core/Logger.js\";import{disposeMaybe as t}from\"../../core/maybe.js\";import{baseTypedArrayMemory as i}from\"../../core/memoryEstimations.js\";import{ResourceType as r}from\"./enums.js\";import{bindVertexBufferLayout as s}from\"./Util.js\";const n=()=>e.getLogger(\"esri.views.webgl.VertexArrayObject\");let o=class{constructor(e,t,i,r,s=null){this._context=e,this._locations=t,this._layout=i,this._buffers=r,this._indexBuffer=s,this._glName=null,this._initialized=!1}get glName(){return this._glName}get context(){return this._context}get vertexBuffers(){return this._buffers}get indexBuffer(){return this._indexBuffer}get byteSize(){return Array.from(this._buffers.values()).reduce(((e,t)=>e+t.usedMemory),null!=this._indexBuffer?this._indexBuffer.usedMemory:0)}get layout(){return this._layout}get locations(){return this._locations}get usedMemory(){return this.byteSize+(this._buffers.size+(this._indexBuffer?1:0))*i}get cachedMemory(){return this.usedMemory}dispose(){this._context?(this._context.getBoundVAO()===this&&this._context.bindVAO(null),this._buffers.forEach((e=>e.dispose())),this._buffers.clear(),this._indexBuffer=t(this._indexBuffer),this.disposeVAOOnly()):(this._glName||this._buffers.size>0)&&n().warn(\"Leaked WebGL VAO\")}disposeVAOOnly(){this._glName&&(this._context.gl.deleteVertexArray(this._glName),this._glName=null,this._context.instanceCounter.decrement(r.VertexArrayObject,this)),this._context=null}initialize(){if(this._initialized)return;const{gl:e}=this._context,t=e.createVertexArray();e.bindVertexArray(t),this._bindLayout(),e.bindVertexArray(null),this._glName=t,this._context.instanceCounter.increment(r.VertexArrayObject,this),this._initialized=!0}bind(){this.initialize(),this._context.gl.bindVertexArray(this.glName)}_bindLayout(){const{_buffers:e,_layout:t,_indexBuffer:i}=this;e||n().error(\"Vertex buffer dictionary is empty!\");const r=this._context.gl;this._buffers.forEach(((e,i)=>{const r=t.get(i);r?s(this._context,this._locations,e,r):n().error(\"Vertex element descriptor is empty!\")})),null!=i&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,i.glName)}unbind(){this.initialize(),this._context.gl.bindVertexArray(null)}};export{o as VertexArrayObject};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nconst n=128/Math.PI,t=256/360,r=1/Math.LN2;function u(n,t){return(n%=t)>=0?n:n+t}function o(t){return u(t*n,256)}function c(n){return u(n*t,256)}function e(n){return Math.log(n)*r}function f(n,t,r){return n*(1-r)+t*r}function i(n,t,r){return n>=t&&n<=r||n>=r&&n<=t}export{i as between,c as degToByte,f as interpolate,e as log2,u as positiveMod,o as radToByte};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport has from\"../../../../core/has.js\";import{assertIsSome as t}from\"../../../../core/maybe.js\";import{FreeList as e}from\"./cpuMapped/FreeList.js\";const r=has(\"esri-2d-log-allocations\");class s{static create(t,e){const r=e.acquireUint32Array(t);return new s(r,e)}constructor(t,e){this._array=t,this._pool=e}get array(){return this._array}get length(){return this._array.length}getUint32View(t,e){return new Uint32Array(this._array.buffer,t+this._array.byteOffset,e)}expand(t){if(t<=this._array.byteLength)return;const e=this._pool.acquireUint32Array(t);e.set(this._array),this._pool.releaseUint32Array(this._array),this._array=e}destroy(){this._pool.releaseUint32Array(this._array)}}class a{constructor(){this._data=new ArrayBuffer(a.BYTE_LENGTH),this._freeList=new e({start:0,end:this._data.byteLength})}static get BYTE_LENGTH(){return 16e6}get buffer(){return this._data}acquireUint32Array(t){const e=this._freeList.firstFit(t);return null==e?null:new Uint32Array(this._data,e,t/Uint32Array.BYTES_PER_ELEMENT)}releaseUint32Array(t){this._freeList.free(t.byteOffset,t.byteLength)}}class i{constructor(){this._pages=[],this._pagesByBuffer=new Map,this._bytesAllocated=0}destroy(){this._pages=[],this._pagesByBuffer=null}get _bytesTotal(){return this._pages.length*a.BYTE_LENGTH}acquireUint32Array(e){if(this._bytesAllocated+=e,r&&console.log(`Allocating ${e}, (${this._bytesAllocated} / ${this._bytesTotal})`),e>=a.BYTE_LENGTH)return new Uint32Array(e/Uint32Array.BYTES_PER_ELEMENT);for(const t of this._pages){const r=t.acquireUint32Array(e);if(null!=r)return r}const s=this._addPage().acquireUint32Array(e);return t(s,\"Expected to allocate page\"),s}releaseUint32Array(t){this._bytesAllocated-=t.byteLength,r&&console.log(`Freeing ${t.byteLength}, (${this._bytesAllocated} / ${this._bytesTotal})`);const e=this._pagesByBuffer.get(t.buffer);e&&e.releaseUint32Array(t)}_addPage(){const t=new a;return this._pages.push(t),this._pagesByBuffer.set(t.buffer,t),t}}export{i as ArrayBufferPool,s as PooledUint32Array};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{fromValues as e}from\"../../../../../core/libs/gl-matrix-2/factories/vec4f32.js\";import{Pos2b as t}from\"../DefaultVertexAttributeLayouts.js\";import{FeatureTile as r}from\"../FeatureTile.js\";import o from\"./WGLBrush.js\";import{background as i}from\"../shaders/BackgroundPrograms.js\";import{tileInfo as s}from\"../shaders/TileInfoPrograms.js\";import{BufferObject as n}from\"../../../../webgl/BufferObject.js\";import{BlendFactor as a,PrimitiveType as l,Usage as f,TextureWrapMode as m,TextureSamplingMode as u}from\"../../../../webgl/enums.js\";import{createProgram as c}from\"../../../../webgl/ProgramTemplate.js\";import{Texture as d}from\"../../../../webgl/Texture.js\";import{TextureDescriptor as h}from\"../../../../webgl/TextureDescriptor.js\";import{VertexArrayObject as g}from\"../../../../webgl/VertexArrayObject.js\";const _=512,x=512,b=16,p=8,T=(x-2*p)/5;class y extends o{constructor(){super(...arguments),this._color=e(1,0,0,1)}dispose(){this._outlineProgram?.dispose(),this._outlineProgram=null,this._tileInfoProgram?.dispose(),this._tileInfoProgram=null,this._outlineVertexArrayObject?.dispose(),this._outlineVertexArrayObject=null,this._tileInfoVertexArrayObject?.dispose(),this._tileInfoVertexArrayObject=null,this._ctx=null}prepareState({context:e}){e.setBlendingEnabled(!0),e.setBlendFunctionSeparate(a.ONE,a.ONE_MINUS_SRC_ALPHA,a.ONE,a.ONE_MINUS_SRC_ALPHA),e.setColorMask(!0,!0,!0,!0),e.setStencilWriteMask(0),e.setStencilTestEnabled(!1)}draw(e,t){const{context:o,requestRender:i,allowDelayedRender:s}=e;if(!t.isReady&&t instanceof r&&t.hasData)return;if(this._loadWGLResources(o),s&&null!=i&&(!this._outlineProgram.compiled||!this._tileInfoProgram.compiled))return void i();o.bindVAO(this._outlineVertexArrayObject),o.useProgram(this._outlineProgram),this._outlineProgram.setUniformMatrix3fv(\"u_dvsMat3\",t.transforms.displayViewScreenMat3),this._outlineProgram.setUniform2f(\"u_coord_range\",t.rangeX,t.rangeY),this._outlineProgram.setUniform1f(\"u_depth\",0),this._outlineProgram.setUniform4fv(\"u_color\",this._color),o.drawArrays(l.LINE_STRIP,0,4);const n=this._getTexture(o,t);n?(o.bindVAO(this._tileInfoVertexArrayObject),o.useProgram(this._tileInfoProgram),o.bindTexture(n,0),this._tileInfoProgram.setUniformMatrix3fv(\"u_dvsMat3\",t.transforms.displayViewScreenMat3),this._tileInfoProgram.setUniform1f(\"u_depth\",0),this._tileInfoProgram.setUniform2f(\"u_coord_ratio\",t.rangeX/t.width,t.rangeY/t.height),this._tileInfoProgram.setUniform2f(\"u_delta\",0,0),this._tileInfoProgram.setUniform2f(\"u_dimensions\",n.descriptor.width,n.descriptor.height),o.drawArrays(l.TRIANGLE_STRIP,0,4),o.bindVAO()):o.bindVAO()}_loadWGLResources(e){if(this._outlineProgram&&this._tileInfoProgram)return;const r=c(e,i),o=c(e,s),a=new Int8Array([0,0,1,0,1,1,0,1]),l=n.createVertex(e,f.STATIC_DRAW,a),m=new g(e,i.attributes,t,new Map([[\"geometry\",l]])),u=new Int8Array([0,0,1,0,0,1,1,1]),d=n.createVertex(e,f.STATIC_DRAW,u),h=new g(e,s.attributes,t,new Map([[\"geometry\",d]]));this._outlineProgram=r,this._tileInfoProgram=o,this._outlineVertexArrayObject=m,this._tileInfoVertexArrayObject=h}_getTexture(e,t){if(!this._ctx){const e=document.createElement(\"canvas\");e.width=_,e.height=x,this._ctx=e.getContext(\"2d\")}if(!t.tileDebugInfoTexture){const r=new h;r.wrapMode=m.CLAMP_TO_EDGE,r.samplingMode=u.LINEAR,r.isImmutable=!0,r.width=_,r.height=x,t.tileDebugInfoTexture=new d(e,r)}const r=this._ctx;r.clearRect(0,0,r.canvas.width,r.canvas.height),r.textAlign=\"left\",r.textBaseline=\"top\",r.font=b-2+\"px sans-serif\",r.lineWidth=2,r.fillStyle=\"white\",r.strokeStyle=\"black\";const{debugSlot:o}=t;let i=p+T*o;const s=`${o}) ${t.key.id} (${t.constructor.name})`;r.strokeText(s,p,i),r.fillText(s,p,i),i+=b;const{debugInfo:n}=t;if(n){const{length:e,minOrderedLength:t,minUnorderedLength:o,triangleCount:s}=n.display;if(e>0){const t=`Length: ${e}`;r.strokeText(t,p,i),r.fillText(t,p,i),i+=b}if(t){const e=`Min ordered length: ${t}`;r.strokeText(e,p,i),r.fillText(e,p,i),i+=b}if(o){const e=`Min unordered length: ${o}`;r.strokeText(e,p,i),r.fillText(e,p,i),i+=b}if(s>0){s>1e5&&(r.fillStyle=\"red\",r.strokeStyle=\"white\");const e=`Triangle count: ${s}`;r.strokeText(e,p,i),r.fillText(e,p,i),i+=b}const{bytesUsed:a,bytesReserved:l}=n.memory;if(r.fillStyle=\"white\",r.strokeStyle=\"black\",a>0||l>0){const e=`Memory usage: ${a} of ${l} bytes`;r.strokeText(e,p,i),r.fillText(e,p,i),i+=b}}return t.tileDebugInfoTexture.setData(r.canvas),t.tileDebugInfoTexture}}export{y as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nclass t{constructor(a){if(this.next=null,!Array.isArray(a))return void(this.data=a);this.data=a[0];let e=this;for(let n=1;n<a.length;n++)e.next=new t([a[n]]),e=e.next}*values(){let t=this;for(;t;)yield t.data,t=t.next}forEach(t){let a=this;for(;a;)t(a.data),a=a.next}get last(){return this.next?this.next.last:this}}class a{constructor(a){this._head=null,null!=a&&(this._head=new t(a))}get head(){return this._head}maxAvailableSpace(){if(null==this._head)return 0;let t=0;return this._head.forEach((a=>{const e=a.end-a.start;t=Math.max(t,e)})),t}firstFit(t){if(null==this._head)return null;let a=null,e=this._head;for(;e;){const n=e.data.end-e.data.start;if(n===t)return a?a.next=e.next:this._head=e.next,e.data.start;if(n>t){const a=e.data.start;return e.data.start+=t,a}a=e,e=e.next}return null}free(a,e){const n=a+e;if(null==this._head){const e=new t({start:a,end:n});return void(this._head=e)}if(n<=this._head.data.start){if(n===this._head.data.start)return void(this._head.data.start-=e);const r=new t({start:a,end:n});return r.next=this._head,void(this._head=r)}let r=this._head,d=r.next;for(;d;){if(d.data.start>=n){if(r.data.end===a){if(r.data.end+=e,r.data.end===d.data.start){const t=d.data.end-d.data.start;return r.data.end+=t,void(r.next=d.next)}return}if(d.data.start===n)return void(d.data.start-=e);const s=new t({start:a,end:n});return s.next=r.next,void(r.next=s)}r=d,d=d.next}if(a===r.data.end)return void(r.data.end+=e);const s=new t({start:a,end:n});r.next=s}clear(){this._head=null}}export{a as FreeList,t as List};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{fromValues as r}from\"../../../../../core/libs/gl-matrix-2/factories/vec4f32.js\";import{createProgramDescriptor as e}from\"../Utils.js\";import t from\"./WGLBrush.js\";import{background as s}from\"../shaders/BackgroundPrograms.js\";import{StencilOperation as o,CompareFunction as i,PrimitiveType as a,DataType as n}from\"../../../../webgl/enums.js\";import{createProgram as l}from\"../../../../webgl/ProgramTemplate.js\";const m=()=>e(\"clip\",{geometry:[{location:0,name:\"a_pos\",count:2,type:n.SHORT}]});class p extends t{constructor(){super(...arguments),this._color=r(0,1,0,1)}dispose(){this._program&&this._program.dispose()}prepareState({context:r}){r.setStencilTestEnabled(!0),r.setBlendingEnabled(!1),r.setFaceCullingEnabled(!1),r.setColorMask(!1,!1,!1,!1),r.setStencilOp(o.KEEP,o.KEEP,o.REPLACE),r.setStencilWriteMask(255),r.setStencilFunction(i.ALWAYS,0,255)}draw(r,e){const{context:t,state:o,requestRender:i,allowDelayedRender:p}=r,c=m(),d=e.getVAO(t,o,c.attributes,c.bufferLayouts);null!=d.indexBuffer&&(this._program||(this._program=l(t,s)),!p||null==i||this._program.compiled?(t.useProgram(this._program),this._program.setUniform2fv(\"u_coord_range\",[1,1]),this._program.setUniform4fv(\"u_color\",this._color),this._program.setUniformMatrix3fv(\"u_dvsMat3\",o.displayMat3),t.bindVAO(d),t.drawElements(a.TRIANGLES,d.indexBuffer.size,n.UNSIGNED_INT,0),t.bindVAO()):i())}}export{p as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{nextPowerOfTwo as t}from\"../../../../../core/mathUtils.js\";import{create as e}from\"../../../../../core/libs/gl-matrix-2/factories/mat3f32.js\";import{fromValues as r}from\"../../../../../core/libs/gl-matrix-2/factories/vec4f32.js\";import{vtlTextureBindingUnitSprites as o,vtlHighResCutoff as i}from\"../definitions.js\";import s from\"./WGLBrush.js\";import{BufferObject as a}from\"../../../../webgl/BufferObject.js\";import{TextureSamplingMode as n,CompareFunction as c,PrimitiveType as l,Usage as f}from\"../../../../webgl/enums.js\";import{VertexArrayObject as m}from\"../../../../webgl/VertexArrayObject.js\";class u extends s{constructor(){super(...arguments),this._color=r(1,0,0,1),this._patternMatrix=e(),this._programOptions={id:!1,pattern:!1}}dispose(){this._vao&&(this._vao.dispose(),this._vao=null)}drawMany(e,r){const{context:s,painter:a,requestRender:f,allowDelayedRender:m}=e;this._loadWGLResources(e);const u=e.displayLevel,p=e.styleLayer,_=p.backgroundMaterial,d=a.vectorTilesMaterialManager,g=p.getPaintValue(\"background-color\",u),h=p.getPaintValue(\"background-opacity\",u),x=p.getPaintValue(\"background-pattern\",u),M=void 0!==x,b=1|window.devicePixelRatio,v=e.spriteMosaic;let y,w;const j=b>i?2:1,A=this._programOptions;A.pattern=M;const L=d.getMaterialProgram(s,_,A);if(!m||null==f||L.compiled){if(s.bindVAO(this._vao),s.useProgram(L),M){const t=v.getMosaicItemPosition(x,!0);if(null!=t){const{tl:e,br:r,page:i}=t;y=r[0]-e[0],w=r[1]-e[1];const a=v.getPageSize(i);null!=a&&(v.bind(s,n.LINEAR,i,o),L.setUniform4f(\"u_tlbr\",e[0],e[1],r[0],r[1]),L.setUniform2fv(\"u_mosaicSize\",a),L.setUniform1i(\"u_texture\",o))}L.setUniform1f(\"u_opacity\",h)}else{const t=g[3]*h;this._color[0]=t*g[0],this._color[1]=t*g[1],this._color[2]=t*g[2],this._color[3]=t,L.setUniform4fv(\"u_color\",this._color)}L.setUniform1f(\"u_depth\",p.z||0);for(const e of r){if(L.setUniform1f(\"u_coord_range\",e.rangeX),L.setUniformMatrix3fv(\"u_dvsMat3\",e.transforms.displayViewScreenMat3),M){const r=Math.max(2**(Math.round(u)-e.key.level),1),o=j*e.width*r,i=o/t(y),s=o/t(w);this._patternMatrix[0]=i,this._patternMatrix[4]=s,L.setUniformMatrix3fv(\"u_pattern_matrix\",this._patternMatrix)}s.setStencilFunction(c.EQUAL,0,255),s.drawArrays(l.TRIANGLE_STRIP,0,4)}}else f()}_loadWGLResources(t){if(this._vao)return;const{context:e,styleLayer:r}=t,o=r.backgroundMaterial,i=new Int8Array([0,0,1,0,0,1,1,1]),s=a.createVertex(e,f.STATIC_DRAW,i),n=new m(e,o.getAttributeLocations(),o.getLayoutInfo(),new Map([[\"geometry\",s]]));this._vao=n}}export{u as WGLBrushVTLBackground};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{TranslateAnchor as e}from\"../../vectorTiles/style/StyleDefinition.js\";import t from\"./WGLBrush.js\";import{CompareFunction as r,PrimitiveType as i,DataType as a}from\"../../../../webgl/enums.js\";class n extends t{constructor(){super(...arguments),this._programOptions={id:!1}}dispose(){}drawMany(t,n){const{context:l,displayLevel:s,requiredLevel:o,state:c,painter:u,spriteMosaic:d,styleLayerUID:f,requestRender:m,allowDelayedRender:p}=t;if(!n.some((e=>e.layerData.get(f)?.circleIndexCount??!1)))return;const y=t.styleLayer,g=y.circleMaterial,M=u.vectorTilesMaterialManager,v=1.2,E=y.getPaintValue(\"circle-translate\",s),x=y.getPaintValue(\"circle-translate-anchor\",s),I=this._programOptions,U=M.getMaterialProgram(l,g,I);if(p&&null!=m&&!U.compiled)return void m();l.useProgram(U),U.setUniformMatrix3fv(\"u_displayMat3\",x===e.VIEWPORT?c.displayMat3:c.displayViewMat3),U.setUniform2fv(\"u_circleTranslation\",E),U.setUniform1f(\"u_depth\",y.z),U.setUniform1f(\"u_antialiasingWidth\",v);let _=-1;for(const e of n){if(!e.layerData.has(f))continue;e.key.level!==_&&(_=e.key.level,g.setDataUniforms(U,s,y,_,d));const t=e.layerData.get(f);if(!t.circleIndexCount)continue;t.prepareForRendering(l);const n=t.vao;null!=n&&(l.bindVAO(n),U.setUniformMatrix3fv(\"u_dvsMat3\",e.transforms.displayViewScreenMat3),o!==e.key.level?l.setStencilFunction(r.EQUAL,e.stencilRef,255):l.setStencilFunction(r.GREATER,255,255),l.drawElements(i.TRIANGLES,t.circleIndexCount,a.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*t.circleIndexStart),e.triangleCount+=t.circleIndexCount/3)}}}export{n as WGLBrushVTLCircle};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{TranslateAnchor as t}from\"../../vectorTiles/style/StyleDefinition.js\";import{vtlTextureBindingUnitSprites as e,vtlHighResCutoff as i}from\"../definitions.js\";import n from\"./WGLBrush.js\";import{TextureSamplingMode as a,CompareFunction as l,PrimitiveType as r,DataType as o}from\"../../../../webgl/enums.js\";const s=1/65536;class f extends n{constructor(){super(...arguments),this._fillProgramOptions={id:!1,pattern:!1},this._outlineProgramOptions={id:!1}}dispose(){}drawMany(t,e){const{displayLevel:i,renderPass:n,spriteMosaic:a,styleLayerUID:l}=t;let r=!1;for(const _ of e)if(_.layerData.has(l)){const t=_.layerData.get(l);if(t.fillIndexCount>0||t.outlineIndexCount>0){r=!0;break}}if(!r)return;const o=t.styleLayer,s=o.getPaintProperty(\"fill-pattern\"),f=void 0!==s,u=f&&s.isDataDriven;let c;if(f&&!u){const t=s.getValue(i);c=a.getMosaicItemPosition(t,!0)}const d=!f&&o.getPaintValue(\"fill-antialias\",i);let p=!0,m=1;if(!f){const t=o.getPaintProperty(\"fill-color\"),e=o.getPaintProperty(\"fill-opacity\");if(!t?.isDataDriven&&!e?.isDataDriven){const t=o.getPaintValue(\"fill-color\",i);m=o.getPaintValue(\"fill-opacity\",i)*t[3],m>=1&&(p=!1)}}if(p&&\"opaque\"===n)return;const y=o.getPaintValue(\"fill-translate\",i),g=o.getPaintValue(\"fill-translate-anchor\",i);(p||\"translucent\"!==n)&&this._drawFill(t,l,o,e,y,g,f,c,u);const M=!o.hasDataDrivenOutlineColor&&o.outlineUsesFillColor&&m<1;d&&\"opaque\"!==n&&!M&&this._drawOutline(t,l,o,e,y,g)}_drawFill(n,f,u,c,d,p,m,y,g){if(m&&!g&&null==y)return;const{context:M,displayLevel:_,state:E,painter:v,pixelRatio:P,spriteMosaic:U,requestRender:I,allowDelayedRender:x}=n,D=u.fillMaterial,R=v.vectorTilesMaterialManager,S=P>i?2:1,T=this._fillProgramOptions;T.pattern=m;const h=R.getMaterialProgram(M,D,T);if(x&&null!=I&&!h.compiled)return void I();if(M.useProgram(h),null!=y){const{page:t}=y,i=U.getPageSize(t);null!=i&&(U.bind(M,a.LINEAR,t,e),h.setUniform2fv(\"u_mosaicSize\",i),h.setUniform1i(\"u_texture\",e))}h.setUniformMatrix3fv(\"u_displayMat3\",p===t.VIEWPORT?E.displayMat3:E.displayViewMat3),h.setUniform2fv(\"u_fillTranslation\",d),h.setUniform1f(\"u_depth\",u.z+s);let w=-1;for(const t of c){if(!t.layerData.has(f))continue;t.key.level!==w&&(w=t.key.level,D.setDataUniforms(h,_,u,w,U));const i=t.layerData.get(f);if(!i.fillIndexCount)continue;i.prepareForRendering(M);const n=i.fillVAO;if(null!=n){if(M.bindVAO(n),h.setUniformMatrix3fv(\"u_dvsMat3\",t.transforms.displayViewScreenMat3),M.setStencilFunction(l.EQUAL,t.stencilRef,255),m){const e=Math.max(2**(Math.round(_)-t.key.level),1),i=t.rangeX/(S*t.width*e);h.setUniform1f(\"u_patternFactor\",i)}if(g){const t=i.patternMap;if(!t)continue;for(const[i,n]of t){const t=U.getPageSize(i);null!=t&&(U.bind(M,a.LINEAR,i,e),h.setUniform2fv(\"u_mosaicSize\",t),h.setUniform1i(\"u_texture\",e),M.drawElements(r.TRIANGLES,n[1],o.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*n[0]))}}else M.drawElements(r.TRIANGLES,i.fillIndexCount,o.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*i.fillIndexStart);t.triangleCount+=i.fillIndexCount/3}}}_drawOutline(e,i,n,a,f,u){const{context:c,displayLevel:d,state:p,painter:m,pixelRatio:y,spriteMosaic:g,requestRender:M,allowDelayedRender:_}=e,E=n.outlineMaterial,v=m.vectorTilesMaterialManager,P=.75/y,U=this._outlineProgramOptions,I=v.getMaterialProgram(c,E,U);if(_&&null!=M&&!I.compiled)return void M();c.useProgram(I),I.setUniformMatrix3fv(\"u_displayMat3\",u===t.VIEWPORT?p.displayMat3:p.displayViewMat3),I.setUniform2fv(\"u_fillTranslation\",f),I.setUniform1f(\"u_depth\",n.z+s),I.setUniform1f(\"u_outline_width\",P);let x=-1;for(const t of a){if(!t.layerData.has(i))continue;t.key.level!==x&&(x=t.key.level,E.setDataUniforms(I,d,n,x,g));const e=t.layerData.get(i);if(e.prepareForRendering(c),!e.outlineIndexCount)continue;const a=e.outlineVAO;null!=a&&(c.bindVAO(a),I.setUniformMatrix3fv(\"u_dvsMat3\",t.transforms.displayViewScreenMat3),c.setStencilFunction(l.EQUAL,t.stencilRef,255),c.drawElements(r.TRIANGLES,e.outlineIndexCount,o.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*e.outlineIndexStart),t.triangleCount+=e.outlineIndexCount/3)}}}export{f as WGLBrushVTLFill};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{TranslateAnchor as e}from\"../../vectorTiles/style/StyleDefinition.js\";import{vtlTextureBindingUnitSprites as t}from\"../definitions.js\";import i from\"./WGLBrush.js\";import{TextureSamplingMode as n,CompareFunction as a,PrimitiveType as r,DataType as o}from\"../../../../webgl/enums.js\";class s extends i{constructor(){super(...arguments),this._programOptions={id:!1,pattern:!1,sdf:!1}}dispose(){}drawMany(i,s){const{context:l,displayLevel:f,state:u,painter:c,pixelRatio:d,spriteMosaic:m,styleLayerUID:p,requestRender:g,allowDelayedRender:y}=i;if(!s.some((e=>e.layerData.get(p)?.lineIndexCount??!1)))return;const M=i.styleLayer,E=M.lineMaterial,_=c.vectorTilesMaterialManager,v=M.getPaintValue(\"line-translate\",f),U=M.getPaintValue(\"line-translate-anchor\",f),I=M.getPaintProperty(\"line-pattern\"),P=void 0!==I,x=P&&I.isDataDriven;let D,S;if(P&&!x){const e=I.getValue(f);D=m.getMosaicItemPosition(e)}let L=!1;if(!P){const e=M.getPaintProperty(\"line-dasharray\");if(S=void 0!==e,L=S&&e.isDataDriven,S&&!L){const t=e.getValue(f),i=M.getDashKey(t,M.getLayoutValue(\"line-cap\",f));D=m.getMosaicItemPosition(i)}}const N=1/d,R=this._programOptions;R.pattern=P,R.sdf=S;const T=_.getMaterialProgram(l,E,R);if(y&&null!=g&&!T.compiled)return void g();if(l.useProgram(T),T.setUniformMatrix3fv(\"u_displayViewMat3\",u.displayViewMat3),T.setUniformMatrix3fv(\"u_displayMat3\",U===e.VIEWPORT?u.displayMat3:u.displayViewMat3),T.setUniform2fv(\"u_lineTranslation\",v),T.setUniform1f(\"u_depth\",M.z),T.setUniform1f(\"u_antialiasing\",N),D&&null!=D){const{page:e}=D,i=m.getPageSize(e);null!=i&&(m.bind(l,n.LINEAR,e,t),T.setUniform2fv(\"u_mosaicSize\",i),T.setUniform1i(\"u_texture\",t))}let V=-1;for(const e of s){if(!e.layerData.has(p))continue;e.key.level!==V&&(V=e.key.level,E.setDataUniforms(T,f,M,V,m));const i=2**(f-V)/d;T.setUniform1f(\"u_zoomFactor\",i);const s=e.layerData.get(p);if(!s.lineIndexCount)continue;s.prepareForRendering(l);const u=s.vao;if(null!=u){if(l.bindVAO(u),T.setUniformMatrix3fv(\"u_dvsMat3\",e.transforms.displayViewScreenMat3),l.setStencilFunction(a.EQUAL,e.stencilRef,255),x||L){const e=s.patternMap;if(!e)continue;for(const[i,a]of e){const e=m.getPageSize(i);null!=e&&(m.bind(l,n.LINEAR,i,t),T.setUniform2fv(\"u_mosaicSize\",e),T.setUniform1i(\"u_texture\",t),l.drawElements(r.TRIANGLES,a[1],o.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*a[0]))}}else l.drawElements(r.TRIANGLES,s.lineIndexCount,o.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*s.lineIndexStart);e.triangleCount+=s.lineIndexCount/3}}}}export{s as WGLBrushVTLLine};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{create as e,fromValues as t}from\"../../../../../core/libs/gl-matrix-2/factories/vec2f32.js\";import{fadeDuration as i}from\"../../vectorTiles/decluttering/config.js\";import{RotationAlignment as a,SymbolPlacement as r,TranslateAnchor as n}from\"../../vectorTiles/style/StyleDefinition.js\";import{vtlTextureBindingUnitSprites as s,vtlTextureBindingUnitGlyphs as o}from\"../definitions.js\";import{degToByte as l}from\"../GeometryUtils.js\";import f from\"./WGLBrush.js\";import{TextureSamplingMode as c,PrimitiveType as u,DataType as p,CompareFunction as m}from\"../../../../webgl/enums.js\";const g=1/65536;class d extends f{constructor(){super(...arguments),this._iconProgramOptions={id:!1,sdf:!1},this._sdfProgramOptions={id:!1},this._spritesTextureSize=e()}dispose(){}drawMany(e,t){const i=e.styleLayer;this._drawIcons(e,i,t),this._drawText(e,i,t)}_drawIcons(e,t,o){const{context:f,displayLevel:c,painter:u,spriteMosaic:p,state:m,styleLayerUID:g,requestRender:d,allowDelayedRender:y}=e,_=t.iconMaterial,M=u.vectorTilesMaterialManager;let h,P=!1;for(const i of o)if(i.layerData.has(g)&&(h=i.layerData.get(g),h.iconPerPageElementsMap.size>0)){P=!0;break}if(!P)return;const U=t.getPaintValue(\"icon-translate\",c),E=t.getPaintValue(\"icon-translate-anchor\",c);let T=t.getLayoutValue(\"icon-rotation-alignment\",c);T===a.AUTO&&(T=t.getLayoutValue(\"symbol-placement\",c)===r.POINT?a.VIEWPORT:a.MAP);const x=T===a.MAP,S=t.getLayoutValue(\"icon-keep-upright\",c)&&x,v=h.isIconSDF,D=this._iconProgramOptions;D.sdf=v;const V=M.getMaterialProgram(f,_,D);if(y&&null!=d&&!V.compiled)return void d();f.useProgram(V),V.setUniformMatrix3fv(\"u_displayViewMat3\",T===a.MAP?m.displayViewMat3:m.displayMat3),V.setUniformMatrix3fv(\"u_displayMat3\",E===n.VIEWPORT?m.displayMat3:m.displayViewMat3),V.setUniform2fv(\"u_iconTranslation\",U),V.setUniform1f(\"u_depth\",t.z),V.setUniform1f(\"u_mapRotation\",l(m.rotation)),V.setUniform1f(\"u_keepUpright\",S?1:0),V.setUniform1f(\"u_level\",10*c),V.setUniform1i(\"u_texture\",s),V.setUniform1f(\"u_fadeDuration\",i/1e3);let R=-1;for(const i of o){if(!i.layerData.has(g))continue;if(i.key.level!==R&&(R=i.key.level,_.setDataUniforms(V,c,t,R,p)),h=i.layerData.get(g),0===h.iconPerPageElementsMap.size)continue;h.prepareForRendering(f),h.updateOpacityInfo();const a=h.iconVAO;if(null!=a){f.bindVAO(a),V.setUniformMatrix3fv(\"u_dvsMat3\",i.transforms.displayViewScreenMat3),V.setUniform1f(\"u_time\",(performance.now()-h.lastOpacityUpdate)/1e3);for(const[t,a]of h.iconPerPageElementsMap)this._renderIconRange(e,V,a,t,i)}}}_renderIconRange(e,t,i,a,r){const{context:n,spriteMosaic:o}=e;this._spritesTextureSize[0]=o.getWidth(a)/4,this._spritesTextureSize[1]=o.getHeight(a)/4,t.setUniform2fv(\"u_mosaicSize\",this._spritesTextureSize),o.bind(n,c.LINEAR,a,s),this._setStencilState(e,r),n.drawElements(u.TRIANGLES,i[1],p.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*i[0]),r.triangleCount+=i[1]/3}_drawText(e,s,f){const{context:c,displayLevel:u,glyphMosaic:p,painter:m,pixelRatio:d,spriteMosaic:y,state:_,styleLayerUID:M,requestRender:h,allowDelayedRender:P}=e,U=s.textMaterial,E=m.vectorTilesMaterialManager;let T,x=!1;for(const t of f)if(t.layerData.has(M)&&(T=t.layerData.get(M),T.glyphPerPageElementsMap.size>0)){x=!0;break}if(!x)return;const S=s.getPaintProperty(\"text-opacity\");if(S&&!S.isDataDriven&&0===S.getValue(u))return;const v=s.getPaintProperty(\"text-color\"),D=!v||v.isDataDriven||v.getValue(u)[3]>0,V=s.getPaintProperty(\"text-halo-width\"),R=s.getPaintProperty(\"text-halo-color\"),I=(!V||V.isDataDriven||V.getValue(u)>0)&&(!R||R.isDataDriven||R.getValue(u)[3]>0);if(!D&&!I)return;const A=24/8;let w=s.getLayoutValue(\"text-rotation-alignment\",u);w===a.AUTO&&(w=s.getLayoutValue(\"symbol-placement\",u)===r.POINT?a.VIEWPORT:a.MAP);const L=w===a.MAP,O=s.getLayoutValue(\"text-keep-upright\",u)&&L,N=.8*A/d;this._glyphTextureSize||(this._glyphTextureSize=t(p.width/4,p.height/4));const z=s.getPaintValue(\"text-translate\",u),b=s.getPaintValue(\"text-translate-anchor\",u),k=this._sdfProgramOptions,G=E.getMaterialProgram(c,U,k);if(P&&null!=h&&!G.compiled)return void h();c.useProgram(G),G.setUniformMatrix3fv(\"u_displayViewMat3\",w===a.MAP?_.displayViewMat3:_.displayMat3),G.setUniformMatrix3fv(\"u_displayMat3\",b===n.VIEWPORT?_.displayMat3:_.displayViewMat3),G.setUniform2fv(\"u_textTranslation\",z),G.setUniform1f(\"u_depth\",s.z+g),G.setUniform2fv(\"u_mosaicSize\",this._glyphTextureSize),G.setUniform1f(\"u_mapRotation\",l(_.rotation)),G.setUniform1f(\"u_keepUpright\",O?1:0),G.setUniform1f(\"u_level\",10*u),G.setUniform1i(\"u_texture\",o),G.setUniform1f(\"u_antialiasingWidth\",N),G.setUniform1f(\"u_fadeDuration\",i/1e3);let W=-1;for(const t of f){if(!t.layerData.has(M))continue;if(t.key.level!==W&&(W=t.key.level,U.setDataUniforms(G,u,s,W,y)),T=t.layerData.get(M),0===T.glyphPerPageElementsMap.size)continue;T.prepareForRendering(c),T.updateOpacityInfo();const i=T.textVAO;if(null==i)continue;c.bindVAO(i),G.setUniformMatrix3fv(\"u_dvsMat3\",t.transforms.displayViewScreenMat3),this._setStencilState(e,t);const a=(performance.now()-T.lastOpacityUpdate)/1e3;G.setUniform1f(\"u_time\",a),T.glyphPerPageElementsMap.forEach(((e,i)=>{this._renderGlyphRange(c,e,i,p,G,I,D,t)}))}}_renderGlyphRange(e,t,i,a,r,n,s,l){a.bind(e,c.LINEAR,i,o),n&&(r.setUniform1f(\"u_halo\",1),e.drawElements(u.TRIANGLES,t[1],p.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*t[0]),l.triangleCount+=t[1]/3),s&&(r.setUniform1f(\"u_halo\",0),e.drawElements(u.TRIANGLES,t[1],p.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*t[0]),l.triangleCount+=t[1]/3)}_setStencilState(e,t){const{context:i,is3D:a,stencilSymbols:r}=e;if(i.setStencilTestEnabled(!0),r)return i.setStencilWriteMask(255),void i.setStencilFunction(m.ALWAYS,t.stencilRef,255);i.setStencilWriteMask(0),a?i.setStencilFunction(m.EQUAL,t.stencilRef,255):i.setStencilFunction(m.GREATER,255,255)}}export{d as WGLBrushVTLSymbol};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport r from\"./webgl/brushes/BrushClip.js\";import s from\"./webgl/brushes/WGLBrushStencil.js\";import e from\"./webgl/brushes/WGLBrushTileDebugInfo.js\";import{WGLBrushVTLBackground as l}from\"./webgl/brushes/WGLBrushVTLBackground.js\";import{WGLBrushVTLCircle as o}from\"./webgl/brushes/WGLBrushVTLCircle.js\";import{WGLBrushVTLFill as b}from\"./webgl/brushes/WGLBrushVTLFill.js\";import{WGLBrushVTLLine as i}from\"./webgl/brushes/WGLBrushVTLLine.js\";import{WGLBrushVTLSymbol as u}from\"./webgl/brushes/WGLBrushVTLSymbol.js\";const m={clip:r,stencil:s,tileDebugInfo:e,vtlBackground:l,vtlFill:b,vtlLine:i,vtlCircle:o,vtlSymbol:u};export{m as brushes};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{resolveIncludes as r}from\"./sources/resolver.js\";const e={shaders:{vertexShader:r(\"background/background.vert\"),fragmentShader:r(\"background/background.frag\")},attributes:new Map([[\"a_pos\",0]])};export{e as background};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nconst o=!0,t=32,c=1.5,e=200;export{t as collisionGridCellSize,c as declutterBudget,o as declutterTiles,e as fadeDuration};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{CapType as e,JoinType as t}from\"../../../../../symbols/cim/enums.js\";var a,i,n,l,u,m,o,r,p;!function(e){e[e.BACKGROUND=0]=\"BACKGROUND\",e[e.FILL=1]=\"FILL\",e[e.LINE=2]=\"LINE\",e[e.SYMBOL=3]=\"SYMBOL\",e[e.CIRCLE=4]=\"CIRCLE\"}(a||(a={})),function(e){e[e.VISIBLE=0]=\"VISIBLE\",e[e.NONE=1]=\"NONE\"}(i||(i={})),function(e){e[e.POINT=0]=\"POINT\",e[e.LINE=1]=\"LINE\",e[e.LINE_CENTER=2]=\"LINE_CENTER\"}(n||(n={})),function(e){e[e.MAP=0]=\"MAP\",e[e.VIEWPORT=1]=\"VIEWPORT\",e[e.AUTO=2]=\"AUTO\"}(l||(l={})),function(e){e[e.AUTO=0]=\"AUTO\",e[e.LEFT=1]=\"LEFT\",e[e.CENTER=2]=\"CENTER\",e[e.RIGHT=3]=\"RIGHT\"}(u||(u={})),function(e){e[e.CENTER=0]=\"CENTER\",e[e.LEFT=1]=\"LEFT\",e[e.RIGHT=2]=\"RIGHT\",e[e.TOP=3]=\"TOP\",e[e.BOTTOM=4]=\"BOTTOM\",e[e.TOP_LEFT=5]=\"TOP_LEFT\",e[e.TOP_RIGHT=6]=\"TOP_RIGHT\",e[e.BOTTOM_LEFT=7]=\"BOTTOM_LEFT\",e[e.BOTTOM_RIGHT=8]=\"BOTTOM_RIGHT\"}(m||(m={})),function(e){e[e.NONE=0]=\"NONE\",e[e.UPPERCASE=1]=\"UPPERCASE\",e[e.LOWERCASE=2]=\"LOWERCASE\"}(o||(o={})),function(e){e[e.MAP=0]=\"MAP\",e[e.VIEWPORT=1]=\"VIEWPORT\"}(r||(r={})),function(e){e[e.HORIZONTAL=0]=\"HORIZONTAL\",e[e.VERTICAL=1]=\"VERTICAL\"}(p||(p={}));class f{}f.backgroundLayoutDefinition={visibility:{type:\"enum\",values:[\"visible\",\"none\"],default:i.VISIBLE}},f.fillLayoutDefinition={visibility:{type:\"enum\",values:[\"visible\",\"none\"],default:i.VISIBLE}},f.lineLayoutDefinition={visibility:{type:\"enum\",values:[\"visible\",\"none\"],default:i.VISIBLE},\"line-cap\":{type:\"enum\",values:[\"butt\",\"round\",\"square\"],default:e.BUTT},\"line-join\":{type:\"enum\",values:[\"bevel\",\"round\",\"miter\"],default:t.MITER},\"line-miter-limit\":{type:\"number\",default:2},\"line-round-limit\":{type:\"number\",default:1.05}},f.symbolLayoutDefinition={visibility:{type:\"enum\",values:[\"visible\",\"none\"],default:i.VISIBLE},\"symbol-avoid-edges\":{type:\"boolean\",default:!1},\"symbol-placement\":{type:\"enum\",values:[\"point\",\"line\",\"line-center\"],default:n.POINT},\"symbol-sort-key\":{type:\"number\",default:-1},\"symbol-spacing\":{type:\"number\",minimum:1,default:250},\"icon-allow-overlap\":{type:\"boolean\",default:!1},\"icon-anchor\":{type:\"enum\",values:[\"center\",\"left\",\"right\",\"top\",\"bottom\",\"top-left\",\"top-right\",\"bottom-left\",\"bottom-right\"],default:m.CENTER},\"icon-ignore-placement\":{type:\"boolean\",default:!1},\"icon-image\":{type:\"string\"},\"icon-keep-upright\":{type:\"boolean\",default:!1},\"icon-offset\":{type:\"array\",value:\"number\",length:2,default:[0,0]},\"icon-optional\":{type:\"boolean\",default:!1},\"icon-padding\":{type:\"number\",minimum:0,default:2},\"icon-rotate\":{type:\"number\",default:0},\"icon-rotation-alignment\":{type:\"enum\",values:[\"map\",\"viewport\",\"auto\"],default:l.AUTO},\"icon-size\":{type:\"number\",minimum:0,default:1},\"text-allow-overlap\":{type:\"boolean\",default:!1},\"text-anchor\":{type:\"enum\",values:[\"center\",\"left\",\"right\",\"top\",\"bottom\",\"top-left\",\"top-right\",\"bottom-left\",\"bottom-right\"],default:m.CENTER},\"text-field\":{type:\"string\"},\"text-font\":{type:\"array\",value:\"string\",default:[\"Open Sans Regular\",\"Arial Unicode MS Regular\"]},\"text-ignore-placement\":{type:\"boolean\",default:!1},\"text-justify\":{type:\"enum\",values:[\"auto\",\"left\",\"center\",\"right\"],default:u.CENTER},\"text-keep-upright\":{type:\"boolean\",default:!0},\"text-letter-spacing\":{type:\"number\",default:0},\"text-line-height\":{type:\"number\",default:1.2},\"text-max-angle\":{type:\"number\",minimum:0,default:45},\"text-max-width\":{type:\"number\",minimum:0,default:10},\"text-offset\":{type:\"array\",value:\"number\",length:2,default:[0,0]},\"text-optional\":{type:\"boolean\",default:!1},\"text-padding\":{type:\"number\",minimum:0,default:2},\"text-rotate\":{type:\"number\",default:0},\"text-rotation-alignment\":{type:\"enum\",values:[\"map\",\"viewport\",\"auto\"],default:l.AUTO},\"text-size\":{type:\"number\",minimum:0,default:16},\"text-transform\":{type:\"enum\",values:[\"none\",\"uppercase\",\"lowercase\"],default:o.NONE},\"text-writing-mode\":{type:\"array\",value:\"enum\",values:[\"horizontal\",\"vertical\"],default:[p.HORIZONTAL]}},f.circleLayoutDefinition={visibility:{type:\"enum\",values:[\"visible\",\"none\"],default:i.VISIBLE}},f.backgroundPaintDefinition={\"background-color\":{type:\"color\",default:[0,0,0,1]},\"background-opacity\":{type:\"number\",minimum:0,maximum:1,default:1},\"background-pattern\":{type:\"string\"}},f.fillPaintDefinition={\"fill-antialias\":{type:\"boolean\",default:!0},\"fill-color\":{type:\"color\",default:[0,0,0,1]},\"fill-opacity\":{type:\"number\",minimum:0,maximum:1,default:1},\"fill-outline-color\":{type:\"color\",default:[0,0,0,0]},\"fill-pattern\":{type:\"string\"},\"fill-translate\":{type:\"array\",value:\"number\",length:2,default:[0,0]},\"fill-translate-anchor\":{type:\"enum\",values:[\"map\",\"viewport\"],default:r.MAP}},f.linePaintDefinition={\"line-blur\":{type:\"number\",minimum:0,default:0},\"line-color\":{type:\"color\",default:[0,0,0,1]},\"line-dasharray\":{type:\"array\",value:\"number\",default:[]},\"line-gap-width\":{type:\"number\",minimum:0,default:0},\"line-offset\":{type:\"number\",default:0},\"line-opacity\":{type:\"number\",minimum:0,maximum:1,default:1},\"line-pattern\":{type:\"string\"},\"line-translate\":{type:\"array\",value:\"number\",length:2,default:[0,0]},\"line-translate-anchor\":{type:\"enum\",values:[\"map\",\"viewport\"],default:r.MAP},\"line-width\":{type:\"number\",minimum:0,default:1}},f.symbolPaintDefinition={\"icon-color\":{type:\"color\",default:[0,0,0,1]},\"icon-halo-blur\":{type:\"number\",minimum:0,default:0},\"icon-halo-color\":{type:\"color\",default:[0,0,0,0]},\"icon-halo-width\":{type:\"number\",minimum:0,default:0},\"icon-opacity\":{type:\"number\",minimum:0,maximum:1,default:1},\"icon-translate\":{type:\"array\",value:\"number\",length:2,default:[0,0]},\"icon-translate-anchor\":{type:\"enum\",values:[\"map\",\"viewport\"],default:r.MAP},\"text-color\":{type:\"color\",default:[0,0,0,1]},\"text-halo-blur\":{type:\"number\",minimum:0,default:0},\"text-halo-color\":{type:\"color\",default:[0,0,0,0]},\"text-halo-width\":{type:\"number\",minimum:0,default:0},\"text-opacity\":{type:\"number\",minimum:0,maximum:1,default:1},\"text-translate\":{type:\"array\",value:\"number\",length:2,default:[0,0]},\"text-translate-anchor\":{type:\"enum\",values:[\"map\",\"viewport\"],default:r.MAP}},f.rasterPaintDefinition={\"raster-opacity\":{type:\"number\",minimum:0,maximum:1,default:1},\"raster-hue-rotate\":{type:\"number\",default:0},\"raster-brightness-min\":{type:\"number\",minimum:0,maximum:1,default:0},\"raster-brightness-max\":{type:\"number\",minimum:0,maximum:1,default:1},\"raster-saturation\":{type:\"number\",minimum:-1,maximum:1,default:0},\"raster-contrast\":{type:\"number\",minimum:-1,maximum:1,default:0},\"raster-fade-duration\":{type:\"number\",minimum:0,default:300}},f.circlePaintDefinition={\"circle-blur\":{type:\"number\",minimum:0,default:0},\"circle-color\":{type:\"color\",default:[0,0,0,1]},\"circle-opacity\":{type:\"number\",minimum:0,maximum:1,default:1},\"circle-radius\":{type:\"number\",minimum:0,default:5},\"circle-stroke-color\":{type:\"color\",default:[0,0,0,1]},\"circle-stroke-opacity\":{type:\"number\",minimum:0,maximum:1,default:1},\"circle-stroke-width\":{type:\"number\",minimum:0,default:0},\"circle-translate\":{type:\"array\",value:\"number\",length:2,default:[0,0]},\"circle-translate-anchor\":{type:\"enum\",values:[\"map\",\"viewport\"],default:r.MAP}};export{l as RotationAlignment,f as StyleDefinition,a as StyleLayerType,m as SymbolAnchor,n as SymbolPlacement,u as TextJustification,o as TextTransform,p as TextWritingMode,r as TranslateAnchor,i as Visibility};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nclass e{constructor(e){this._readFile=e}resolveIncludes(e){return this._resolve(e)}_resolve(e,t=new Map){if(t.has(e))return t.get(e);const r=this._read(e);if(!r)throw new Error(`cannot find shader file ${e}`);const s=/^[^\\S\\n]*#include\\s+<(\\S+)>[^\\S\\n]?/gm;let n=s.exec(r);const l=[];for(;null!=n;)l.push({path:n[1],start:n.index,length:n[0].length}),n=s.exec(r);let a=0,h=\"\";return l.forEach((e=>{h+=r.slice(a,e.start),h+=t.has(e.path)?\"\":this._resolve(e.path,t),a=e.start+e.length})),h+=r.slice(a),t.set(e,h),h}_read(e){return this._readFile(e)}}export{e as ShaderCompiler};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{set as t,multiply as e}from\"../../../../core/libs/gl-matrix-2/math/mat3.js\";import{DisplayObject as i}from\"../DisplayObject.js\";import s from\"../../tiling/TileKey.js\";class r extends i{constructor(t,e,i,r,n,o,h=n,l=o){super(),this.tileDebugInfoTexture=null,this.debugInfo={display:{length:0,minOrderedLength:0,minUnorderedLength:0,triangleCount:0},memory:{bytesUsed:0,bytesReserved:0}},this._destroyed=!1,this.key=new s(t),this.resolution=e,this.x=i,this.y=r,this.width=n,this.height=o,this.rangeX=h,this.rangeY=l}destroy(){this.tileDebugInfoTexture&&(this.tileDebugInfoTexture.dispose(),this.tileDebugInfoTexture=null),this._destroyed=!0}get debugSlot(){let t=this;for(;t.parent!==this._stage;){if(!t.parent)return 0;t=t.parent}return this._stage.children.indexOf(t)}setTransform(i){const s=this.resolution/(i.resolution*i.pixelRatio),r=this.transforms.tileMat3,[n,o]=i.toScreenNoRotation([0,0],[this.x,this.y]),h=this.width/this.rangeX*s,l=this.height/this.rangeY*s;t(r,h,0,0,0,l,0,n,o,1),e(this.transforms.displayViewScreenMat3,i.displayViewMat3,r)}get destroyed(){return this._destroyed}}export{r as TiledDisplayObject};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{resolveIncludes as e}from\"./sources/resolver.js\";const r={shaders:{vertexShader:e(\"tileInfo/tileInfo.vert\"),fragmentShader:e(\"tileInfo/tileInfo.frag\")},attributes:new Map([[\"a_pos\",0]])};export{r as tileInfo};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nfunction n(){return new Float32Array(3)}function t(n){const t=new Float32Array(3);return t[0]=n[0],t[1]=n[1],t[2]=n[2],t}function r(n,t,r){const e=new Float32Array(3);return e[0]=n,e[1]=t,e[2]=r,e}function e(n,t){return new Float32Array(n,t,3)}function o(){return n()}function u(){return r(1,1,1)}function c(){return r(1,0,0)}function i(){return r(0,1,0)}function a(){return r(0,0,1)}const f=o(),l=u(),s=c(),_=i(),y=a(),w=Object.freeze(Object.defineProperty({__proto__:null,ONES:l,UNIT_X:s,UNIT_Y:_,UNIT_Z:y,ZEROS:f,clone:t,create:n,createView:e,fromValues:r,ones:u,unitX:c,unitY:i,unitZ:a,zeros:o},Symbol.toStringTag,{value:\"Module\"}));export{l as ONES,s as UNIT_X,_ as UNIT_Y,y as UNIT_Z,f as ZEROS,t as clone,n as create,e as createView,r as fromValues,u as ones,c as unitX,i as unitY,a as unitZ,w as v,o as zeros};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{set as t,multiply as s}from\"../../../../core/libs/gl-matrix-2/math/mat2d.js\";import{create as r}from\"../../../../core/libs/gl-matrix-2/factories/mat2df32.js\";import{set as i,multiply as e,invert as o}from\"../../../../core/libs/gl-matrix-2/math/mat3.js\";import{create as a}from\"../../../../core/libs/gl-matrix-2/factories/mat3f32.js\";import{i as m,q as n}from\"../../../../chunks/vec32.js\";import{create as l}from\"../../../../core/libs/gl-matrix-2/factories/vec3f32.js\";import{tileSize as c}from\"./definitions.js\";import{TiledDisplayObject as h}from\"./TiledDisplayObject.js\";const f=a(),p=l();class d extends h{constructor(t,s,r,i){super(t,s,r,i,c,c)}destroy(){super.destroy()}setTransform(o){const a=this.resolution/o.resolution,m=this.transforms.tileMat3,[n,l]=o.toScreenNoRotation([0,0],[this.x,this.y]),c=this.width/this.rangeX*a,h=this.height/this.rangeY*a;i(m,c,0,0,0,h,0,n,l,1),e(this.transforms.displayViewScreenMat3,o.displayViewMat3,m);const f=t(r(),c,0,0,h,n,l);s(this.transforms.labelMat2d,o.viewMat2d,f)}_createTransforms(){return{labelMat2d:r(),tileMat3:a(),displayViewScreenMat3:a()}}containsScreenPoint(t,s,r){const i=e(f,t.viewMat3,this.transforms.tileMat3),a=o(f,i);if(null==a)return!0;m(p,...s,1);const l=n(p,p,a),c=r*(this.resolution/t.resolution);return l[0]>=-c&&l[0]<this.width+c&&l[1]>=-c&&l[1]<this.height+c}}export{d as AFeatureTile};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{DataType as e}from\"../../../webgl/enums.js\";import{VertexElementDescriptor as o}from\"../../../webgl/VertexElementDescriptor.js\";const r=new Map([[\"geometry\",[new o(\"a_pos\",2,e.BYTE,0,2)]]]),t=new Map([[\"geometry\",[new o(\"a_pos\",2,e.BYTE,0,4),new o(\"a_tex\",2,e.BYTE,2,4)]]]),n=new Map([[\"geometry\",[new o(\"a_pos\",2,e.UNSIGNED_SHORT,0,4)]]]);export{r as Pos2b,n as Pos2us,t as PosTex2b};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{fromValues as e}from\"../../../../../core/libs/gl-matrix-2/factories/vec4f32.js\";import{Pos2b as r}from\"../DefaultVertexAttributeLayouts.js\";import t from\"./WGLBrush.js\";import{background as i}from\"../shaders/BackgroundPrograms.js\";import{BufferObject as s}from\"../../../../webgl/BufferObject.js\";import{StencilOperation as o,Face as a,CompareFunction as l,PrimitiveType as n,Usage as d}from\"../../../../webgl/enums.js\";import{createProgram as m}from\"../../../../webgl/ProgramTemplate.js\";import{VertexArrayObject as c}from\"../../../../webgl/VertexArrayObject.js\";class _ extends t{constructor(){super(...arguments),this._color=e(1,0,0,1),this._initialized=!1}dispose(){this._solidProgram&&(this._solidProgram.dispose(),this._solidProgram=null),this._solidVertexArrayObject&&(this._solidVertexArrayObject.dispose(),this._solidVertexArrayObject=null)}prepareState({context:e}){e.setDepthWriteEnabled(!1),e.setDepthTestEnabled(!1),e.setStencilTestEnabled(!0),e.setBlendingEnabled(!1),e.setColorMask(!1,!1,!1,!1),e.setStencilOp(o.KEEP,o.KEEP,o.REPLACE),e.setStencilWriteMask(255)}draw(e,r){const{context:t,requestRender:i,allowDelayedRender:s}=e;this._initialized||this._initialize(t),!s||null==i||this._solidProgram.compiled?(t.setStencilFunctionSeparate(a.FRONT_AND_BACK,l.GREATER,r.stencilRef,255),t.bindVAO(this._solidVertexArrayObject),t.useProgram(this._solidProgram),this._solidProgram.setUniformMatrix3fv(\"u_dvsMat3\",r.transforms.displayViewScreenMat3),this._solidProgram.setUniform2fv(\"u_coord_range\",[r.rangeX,r.rangeY]),this._solidProgram.setUniform1f(\"u_depth\",0),this._solidProgram.setUniform4fv(\"u_color\",this._color),t.drawArrays(n.TRIANGLE_STRIP,0,4),t.bindVAO()):i()}_initialize(e){if(this._initialized)return!0;const t=m(e,i);if(!t)return!1;const o=new Int8Array([0,0,1,0,0,1,1,1]),a=s.createVertex(e,d.STATIC_DRAW,o),l=new c(e,i.attributes,r,new Map([[\"geometry\",a]]));return this._solidProgram=t,this._solidVertexArrayObject=l,this._initialized=!0,!0}}export{_ as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport\"../../../../core/has.js\";import{FeatureBatchingStrategy as t,FeatureSymbologyDrawOrder as e}from\"./enums.js\";import{List as n}from\"./cpuMapped/FreeList.js\";import{isHittest as i}from\"./shaderGraph/techniques/featureTechniqueUtils.js\";import{PrimitiveType as a,DataType as s}from\"../../../webgl/enums.js\";function r(t,e){return t<<16|255&e}function d(t){return 255&t}class h{constructor(t,e,n,i,a){this.instance=t,this.materialKey=e,this.target=n,this.start=i,this.count=a}get textureKey(){return d(this.materialKey)}get indexEnd(){return this.start+this.count}extend(t){this.count+=t}render(t){this.instance.techniqueRef.render(t,this)}getStencilReference(){return this.target.stencilRef}getAttributePrecisionPackFactors(){const t=this.instance.instanceId;return this.target.getMesh(t).getAttributePrecisionPackFactors()}draw(t,e){i(t)?this.drawCompute(t.context,e):this.drawGeometry(t.context,e)}drawCompute(t,e){const n=this.instance.instanceId,i=this.target.getMesh(n).getComputeVAO(t,e),r=this.start*Uint32Array.BYTES_PER_ELEMENT/3;t.bindVAO(i),t.drawElements(a.POINTS,this.count/3,s.UNSIGNED_INT,r),t.bindVAO(null)}drawGeometry(t,e){const n=this.instance.instanceId,i=this.target.getMesh(n).getGeometryVAO(t,e),r=this.start*Uint32Array.BYTES_PER_ELEMENT;t.bindVAO(i),t.drawElements(a.TRIANGLES,this.count,s.UNSIGNED_INT,r),t.bindVAO(null)}}class l{constructor(){this._length=0,this._minOrderedLength=0,this._materialKeys=new Set}static fromDisplayEntities(t,e,n,i){const a=new l;for(const s of t.values())for(const t of s.records){const s=n.getInstance(t.instanceId),d=r(s.instanceId,t.textureKey);a.addRecord(s,d,t.indexStart,t.indexCount,t.vertexStart,t.vertexCount,e,i)}return a}get length(){return this._length}get minOrderedLength(){return this._minOrderedLength}get minUnorderedLength(){return this._materialKeys.size}render(t,e){const{drawPhase:n}=t;for(const i of this.infos()){const a=i.instance.techniqueRef;a.drawPhase&n&&(null==e||a.type===e)&&i.render(t)}}addRecord(i,a,s,r,d,l,o,c){let u=s,_=r;if(_||(u=d,_=l),!_)return;if(null==this._head){const t=new h(i,a,o,u,_);return this._head=new n(t),this._tail=this._head,this._length++,void this._minOrderedLength++}if(c===t.STRICT_ORDER)return this._insert(i,a,o,u,_,this._tail,null);let g=null,m=this._head;const f=i.instanceId,E=i.techniqueRef.symbologyPlane;if(c===t.STRICT_MARKERS_AND_TEXT&&(E===e.MARKER||E===e.TEXT))return this._insert(i,a,o,u,_,this._tail,null);for(;m;){const t=m.data.instance,e=t.instanceId,n=t.techniqueRef.symbologyPlane,s=g?.data.instance.instanceId;if(E<n||f===s&&f!==e)return this._insert(i,a,o,u,_,g,m);g=m,m=m.next}this._insert(i,a,o,u,_,g,null)}*infos(){if(null!=this._head)for(const t of this._head.values())yield t}_insert(t,e,i,a,s,r,d){if(null==r&&null==d){const r=new h(t,e,i,a,s);return this._head=new n(r),this._tail=this._head,this._length++,void this._minOrderedLength++}return e!==this._tail.data.materialKey&&this._minOrderedLength++,this._materialKeys.add(e),null==r&&null!=d?this._insertAtHead(t,e,i,a,s,d):null!=r&&null==d?this._insertAtEnd(t,e,i,a,s,r):null!=r&&null!=d?this._insertAtMiddle(t,e,i,a,s,r,d):void 0}_insertAtHead(t,e,i,a,s,r){const d=a+s;if(e===r.data.materialKey&&i===r.data.target&&d===r.data.start)r.data.start=a,r.data.count+=s;else{const d=new h(t,e,i,a,s);this._head=new n(d),this._head.next=r,this._length++}}_insertAtEnd(t,e,i,a,s,r){if(r.data.materialKey===e&&r.data.indexEnd===a)r.data.count+=s;else{const d=new h(t,e,i,a,s);this._tail=new n(d),r.next=this._tail,this._length++}}_insertAtMiddle(t,e,i,a,s,r,d){const l=a+s;if(r.data.materialKey===e&&r.data.target===i&&r.data.indexEnd===a)r.data.count+=s,r.data.materialKey===d.data.materialKey&&r.data.target===d.data.target&&r.data.indexEnd===d.data.start&&(r.data.count+=d.data.count,r.next=d.next,this._length--);else if(e===d.data.materialKey&&i===d.data.target&&l===d.data.start)d.data.start=a,d.data.count+=s;else{const l=new h(t,e,i,a,s),o=new n(l);r.next=o,o.next=d,this._length++}}}export{l as DisplayList,h as DisplayListInfo};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nclass t{constructor(t){this._indexOnly=t,this.vertex={count:0,operations:[]},this.index={count:0,operations:[]}}copyRecord(t){let e=0;this._indexOnly||(e=this.vertex.count-t.vertexStart,this.vertex.operations.push({srcFrom:t.vertexStart,dstFrom:this.vertex.count,count:t.vertexCount,mutate:0}),t.vertexStart=this.vertex.count,this.vertex.count+=t.vertexCount);let n=!1;if(this._indexOnly&&this.index.operations.length>=1){const e=this.index.operations[this.index.operations.length-1];e.srcFrom+e.count===t.indexStart&&(e.count+=t.indexCount,n=!0)}n||this.index.operations.push({srcFrom:t.indexStart,dstFrom:this.index.count,count:t.indexCount,mutate:e}),t.indexStart=this.index.count,this.index.count+=t.indexCount}}export{t as ReshufflePlan};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport\"../../../../../core/has.js\";import{assertIsSome as t}from\"../../../../../core/maybe.js\";import{PooledUint32Array as i}from\"../PooledUint32Array.js\";import{FreeList as e}from\"./FreeList.js\";import{BufferObject as r}from\"../../../../webgl/BufferObject.js\";import{Usage as s}from\"../../../../webgl/enums.js\";const n=1.25,h=32767,a=h<<16|h;class d{constructor(t,e,r,s){this._pool=s;const n=i.create(e*r*Uint32Array.BYTES_PER_ELEMENT,this._pool);this.size=e,this.strideInt=r,this.bufferType=t,this.dirty={start:1/0,end:0},this.memoryStats={bytesUsed:0,bytesReserved:e*r*Uint32Array.BYTES_PER_ELEMENT},this._gpu=null,this._cpu=n,this.clear()}get elementSize(){return this._cpu.length/this.strideInt}get intSize(){return this.fillPointer*this.strideInt}get byteSize(){return this.intSize*Uint32Array.BYTES_PER_ELEMENT}get invalidated(){return this.bufferSize>0&&!this._gpu}get invalidatedComputeBuffer(){return this.bufferSize>0&&!this._gpuComputeTriangles}invalidate(){this._invalidateTriangleBuffer(),this._gpu?.dispose(),this._gpu=null}_invalidateTriangleBuffer(){this._gpuComputeTriangles?.dispose(),this._gpuComputeTriangles=null}destroy(){this._gpu?.dispose(),this._gpuComputeTriangles?.dispose(),this._cpu?.destroy()}clear(){this.dirty.start=1/0,this.dirty.end=0,this.freeList=new e({start:0,end:this._cpu.length/this.strideInt}),this.fillPointer=0}ensure(t){if(this.maxAvailableSpace()>=t)return;if(t*this.strideInt>this._cpu.length-this.fillPointer){this.invalidate();const i=this._cpu.length/this.strideInt,e=Math.round((i+t)*n),r=e*this.strideInt;this._cpu.expand(r*Uint32Array.BYTES_PER_ELEMENT),this.freeList.free(i,e-i),this.memoryStats.bytesReserved+=(e-i)*this.strideInt*Uint32Array.BYTES_PER_ELEMENT}}set(t,i){this._cpu.array[t]!==i&&(this._cpu.array[t]=i,this.dirty.start=Math.min(t,this.dirty.start),this.dirty.end=Math.max(t+1,this.dirty.end))}getGPUBuffer(t,i=!1){if(!this.bufferSize)return null;if(i){if(\"index\"!==this.bufferType)throw new Error(\"Tired to get triangle buffer, but target is not an index buffer\");return null==this._gpuComputeTriangles&&(this._gpuComputeTriangles=this._createComputeBuffer(t)),this._gpuComputeTriangles}return null==this._gpu&&(this._gpu=this._createBuffer(t)),this._gpu}getView(t,i){return this._cpu.getUint32View(t,i/Uint32Array.BYTES_PER_ELEMENT)}get bufferSize(){return this._cpu.length/this.strideInt}maxAvailableSpace(){return this.freeList.maxAvailableSpace()}insert(i,e,r,s){const n=r*this.strideInt;if(!n)return 0;const h=e*this.strideInt*Uint32Array.BYTES_PER_ELEMENT,a=new Uint32Array(i,h,n),d=this.freeList.firstFit(r);t(d,\"First fit region must be defined\");const u=d*this.strideInt,o=n;if(this._cpu.array.set(a,u),0!==s)for(let t=0;t<a.length;t++)this._cpu.array[t+u]+=s;return this.dirty.start=Math.min(this.dirty.start,u),this.dirty.end=Math.max(this.dirty.end,u+o),this.fillPointer=Math.max(this.fillPointer,u+o),this.memoryStats.bytesUsed+=r*this.strideInt*Uint32Array.BYTES_PER_ELEMENT,d}copyFrom(i,e,r,s,n){const h=r*this.strideInt;if(!h)return 0;const a=e*this.strideInt*Uint32Array.BYTES_PER_ELEMENT,d=i._cpu.getUint32View(a,h),u=this.freeList.firstFit(r);t(u,\"First fit region must be defined\");const o=u*this.strideInt,f=h;if(this._cpu.array.set(d,o),0!==s)for(let t=0;t<h;t++)this._cpu.array[o+t*this.strideInt+n]+=s;return this.dirty.start=Math.min(this.dirty.start,o),this.dirty.end=Math.max(this.dirty.end,o+f),this.fillPointer=Math.max(this.fillPointer,o+f),this.memoryStats.bytesUsed+=r*this.strideInt*Uint32Array.BYTES_PER_ELEMENT,u}free(t,i,e){const r=t*this.strideInt,s=(t+i)*this.strideInt;if(!0===e)for(let n=t;n!==t+i;n++)this._cpu.array[n*this.strideInt]=a;this.dirty.start=Math.min(this.dirty.start,r),this.dirty.end=Math.max(this.dirty.end,s),this.freeList.free(t,i),this.memoryStats.bytesUsed-=i*this.strideInt*Uint32Array.BYTES_PER_ELEMENT}upload(){if(this.dirty.end){if(this._invalidateTriangleBuffer(),null==this._gpu)return this.dirty.start=1/0,void(this.dirty.end=0);this._gpu.setSubData(this._cpu.array,this.dirty.start,this.dirty.start,this.dirty.end),this.dirty.start=1/0,this.dirty.end=0}}reshuffle(t,e){if(0===e.length)return;const r=this.byteSize,s=t*this.strideInt*Uint32Array.BYTES_PER_ELEMENT,n=r>s,h=this._cpu,a=i.create(s,this._pool);n||a.array.set(this._cpu.getUint32View(0,this.intSize));for(const i of e)if(n||i.srcFrom!==i.dstFrom||0!==i.mutate){this.dirty.start=Math.min(this.dirty.start,i.dstFrom*this.strideInt),this.dirty.end=Math.max(this.dirty.end,(i.dstFrom+i.count)*this.strideInt);for(let t=0;t<i.count;t++){const e=(i.dstFrom+t)*this.strideInt,r=(i.srcFrom+t)*this.strideInt;for(let t=0;t<this.strideInt;t++)a.array[e+t]=h.array[r+t]+i.mutate}}this._cpu.destroy(),this._cpu=a,n&&this.invalidate(),this.freeList.clear(),this.memoryStats.bytesUsed=this.memoryStats.bytesReserved=s}_createBuffer(t){const i=s.DYNAMIC_DRAW;return\"index\"===this.bufferType?r.createIndex(t,i,this._cpu.array):r.createVertex(t,i,this._cpu.array)}_createComputeBuffer(t){const i=s.DYNAMIC_DRAW,e=new Uint32Array(this.fillPointer/3);for(let r=0;r<this.fillPointer;r+=3)e[r/3]=this._cpu.array[r];return r.createIndex(t,i,e)}}export{d as MappedBuffer};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{destroyMaybe as e}from\"../../../../../core/maybe.js\";import{i1616to32 as t}from\"../number.js\";import{MappedBuffer as r}from\"./Buffer.js\";import{unpackDataView as i}from\"../shaderGraph/techniques/mesh/dataViewUtils.js\";import{PrimitiveType as s}from\"../../../../webgl/enums.js\";import{VertexArrayObject as o}from\"../../../../webgl/VertexArrayObject.js\";const f=1e3;function n(e,t){const r=e.attributes.filter((e=>t.locations.has(e.name))).map((t=>({name:t.name,type:t.type,count:t.count,divisor:0,normalized:t.normalized??!1,offset:t.offset,stride:e.stride})));return new Map([[\"geometry\",r]])}function u(e,t){const r=[],i=e.attributes.filter((e=>t.locations.has(e.name)));for(const s of i){r.push({name:s.name,type:s.type,count:s.count,divisor:0,normalized:s.normalized??!1,offset:s.offset,stride:e.stride});const i=t.computeAttributeMap[s.name];null!=i&&2===i.length&&(r.push({name:i[0],count:s.count,divisor:0,type:s.type,normalized:s.normalized??!1,offset:s.offset+e.stride,stride:e.stride}),r.push({name:i[1],count:s.count,divisor:0,type:s.type,normalized:s.normalized??!1,offset:s.offset+2*e.stride,stride:e.stride}))}return new Map([[\"geometry\",r]])}class a{constructor(e,t){if(this._bufferPool=e,this._layout=t,this._invalidatedGeometry=!1,this._invalidatedCompute=!1,this._position=this._layout.attributes.find((e=>\"pos\"===e.name||\"position\"===e.name)),!this._position)throw new Error(\"InternalError: Unable to find position attribute\")}destroy(){this._indexBuffer=e(this._indexBuffer),this._vertexBuffer=e(this._vertexBuffer),this._computeVAO?.disposeVAOOnly(),this._geometryVAO?.disposeVAOOnly()}get layout(){return this._layout}getDrawArgs(e,t,r,i){return i?{primitive:s.POINTS,count:t/3,offset:r/3}:{primitive:e,count:t,offset:r}}getAttributePrecisionPackFactors(){const e={};for(const t of this.layout.attributes)t.packPrecisionFactor&&(e[t.name]=t.packPrecisionFactor);return e}getDebugVertexInfo(e=!1,t){if(!this._vertexBuffer)return null;const r=this._layout,s=r.stride,o=this._vertexBuffer.getView(0,this._vertexBuffer.byteSize),f=[];if(e)if(null==t)console.log(\"must provide location info to see compute attributes\");else for(const i of r.attributes){const e=t.computeAttributeMap[i.name];null!=e&&2===e.length&&(f.push({...i,name:e[0],offset:i.offset+s}),f.push({...i,name:e[1],offset:i.offset+2*s}))}const n=new DataView(o.slice().buffer);let u=o.byteLength/s;e&&(u=this._indexBuffer.fillPointer/3);const a=this._indexBuffer.getView(0,this._indexBuffer.byteSize);let h=0;const d=[];for(let m=0;m<u;m++){if(e){h=a[3*m]*s}const t={};for(const e of[...r.attributes,...f]){let r=`${e.offset} ${e.name}`,s=i(n,e,h);if(e.packPrecisionFactor)if(r+=` (precision: ${e.packPrecisionFactor})`,\"number\"==typeof s)s/=e.packPrecisionFactor;else for(let t=0;t<s.length;t++)s[t]/=e.packPrecisionFactor;t[r]=s}h+=s,d.push(t)}return{vertices:d,layout:r}}_ensure(e,t){if(this._vertexBuffer&&this._indexBuffer)this._indexBuffer.ensure(Math.max(e,1e3)),this._vertexBuffer.ensure(Math.max(t,1e3));else{const i=this._layout.stride/Uint32Array.BYTES_PER_ELEMENT;this._indexBuffer=new r(\"index\",Math.max(e,f),1,this._bufferPool),this._vertexBuffer=new r(\"vertex\",Math.max(t,f),i,this._bufferPool)}}append(e){const t=e.layout.stride,r=e.indices.byteLength/Uint32Array.BYTES_PER_ELEMENT,i=e.vertices.byteLength/t;this._ensure(r,i);const{vertices:s,indices:o}=e,f=this._vertexBuffer.insert(s,0,s.byteLength/t,0);return{vertexFrom:f,indexFrom:this._indexBuffer.insert(o,0,o.byteLength/4,f)}}copyRecordFrom(e,r,i,s){const{indexStart:o,indexCount:f,vertexStart:n,vertexCount:u}=r;this._ensure(f,u);const a=e._position,h=i*(a.packPrecisionFactor??1),d=s*(a.packPrecisionFactor??1),m=a.offset,c=t(h,d),l=this._vertexBuffer.copyFrom(e._vertexBuffer,n,u,c,m),_=this._indexBuffer.copyFrom(e._indexBuffer,o,f,l-n,0),p=r.clone();return p.vertexStart=l,p.indexStart=_,p.overlaps=0,p}remove(e,t,r,i){this._indexBuffer.free(e,t),this._vertexBuffer.free(r,i)}upload(){this._invalidatedGeometry=!0,this._invalidatedCompute=!0}getGeometryVAO(e,t){if(!this._vertexBuffer||!this._indexBuffer||!this._vertexBuffer.bufferSize)return null;if(this._invalidatedGeometry){(this._vertexBuffer.invalidated||this._indexBuffer.invalidated)&&(this._vertexBuffer.invalidate(),this._indexBuffer.invalidate(),this._geometryVAO?.disposeVAOOnly(),this._geometryVAO=null),this._vertexBuffer.upload(),this._indexBuffer.upload();const r=this._indexBuffer.getGPUBuffer(e,!1),i=this._vertexBuffer.getGPUBuffer(e);this._geometryVAO||(this._geometryVAO=new o(e,t.locations,n(this.layout,t),new Map([[\"geometry\",i]]),r)),this._invalidatedGeometry=!1}return this._geometryVAO}getComputeVAO(e,t){if(!this._vertexBuffer||!this._indexBuffer||!this._vertexBuffer.bufferSize)return null;if(this._invalidatedCompute){(this._vertexBuffer.invalidated||this._indexBuffer.invalidatedComputeBuffer)&&(this._vertexBuffer.invalidate(),this._indexBuffer.invalidate(),this._computeVAO?.disposeVAOOnly(),this._computeVAO=null),this._vertexBuffer.upload(),this._indexBuffer.upload();const r=this._indexBuffer.getGPUBuffer(e,!0),i=this._vertexBuffer.getGPUBuffer(e);this._computeVAO||(this._computeVAO=new o(e,t.locations,u(this.layout,t),new Map([[\"geometry\",i]]),r),this._invalidatedCompute=!1)}return this._computeVAO}get memoryStats(){return{bytesUsed:this._vertexBuffer.memoryStats.bytesUsed+this._indexBuffer.memoryStats.bytesUsed,bytesReserved:this._vertexBuffer.memoryStats.bytesReserved+this._indexBuffer.memoryStats.bytesReserved,vertex:this._vertexBuffer.memoryStats,index:this._indexBuffer.memoryStats}}reshuffle(e){this._vertexBuffer&&this._vertexBuffer.reshuffle(e.vertex.count,e.vertex.operations),this._indexBuffer&&this._indexBuffer.reshuffle(e.index.count,e.index.operations)}}export{a as MappedMesh};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nclass t{constructor(t){this._pos=0,this._buffer=t,this._i32View=new Int32Array(this._buffer),this._f32View=new Float32Array(this._buffer)}readInt32(){return this._i32View[this._pos++]}readF32(){return this._f32View[this._pos++]}}export{t as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport t from\"../DisplayEntity.js\";import{unpackDataView as e}from\"../shaderGraph/techniques/mesh/dataViewUtils.js\";import i from\"../util/Reader.js\";import{deserializeList as r}from\"../util/serializationUtils.js\";function o(e){if(!e)return null;return{entities:r(new i(e.entities),t),vertexData:e.data.map(a)}}function a(t){const i=t.layout.stride,r=new DataView(t.vertices),o=[],a=t.vertices.byteLength/i;let s=0;for(let n=0;n<a;n++){const a={};for(const i of t.layout.attributes){let t=`${i.offset} ${i.name}`,o=e(r,i,s);if(i.packPrecisionFactor)if(t+=` (precision: ${i.packPrecisionFactor})`,\"number\"==typeof o)o/=i.packPrecisionFactor;else for(let e=0;e<o.length;e++)o[e]/=i.packPrecisionFactor;a[t]=o}s+=i,o.push(a)}return{vertices:o,layout:t.layout}}export{o as debugMeshDataInfo};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport has from\"../../../../core/has.js\";import e from\"../../../../core/Logger.js\";import{create as t}from\"../../../../core/libs/gl-matrix-2/factories/mat2df32.js\";import{AFeatureTile as s}from\"./AFeatureTile.js\";import{RESHUFFLING_EXEMPT_MEMORY_BYTES as i,RESHUFFLING_TARGET_MEMORY_EFFICIENCY as r,RESHUFFLING_EXEMPT_DRAW_CALLS as o,RESHUFFLING_TARGET_DRAW_EFFICIENCY as d,tileSize as n}from\"./definitions.js\";import h from\"./DisplayEntity.js\";import{FeatureBatchingStrategy as a}from\"./enums.js\";import{DisplayList as l}from\"./FeatureDisplayList.js\";import{ReshufflePlan as f}from\"./ReshufflePlan.js\";import{LabelMetric as u}from\"./collisions/LabelMetric.js\";import{MappedMesh as p}from\"./cpuMapped/MappedMesh.js\";import{debugMeshDataInfo as _}from\"./mesh/meshDebugUtils.js\";import m from\"./util/Reader.js\";import{deserializeList as c}from\"./util/serializationUtils.js\";const y=()=>e.getLogger(\"esri.views.2d.engine.webgl.FeatureTile\");let g=0;class b extends s{constructor(e,s,i,r,o=!1){super(e,s,i,r),this._meshes=new Map,this._entities=[],this._invalidated=!1,this._nextUploadAllowed=!1,this.tileAge=g++,this._metrics=[],this._entityIds=new Set,this._entityIdsFromBuffer=new Set,this._attributeEpoch=0,this._encounteredEnd=!1,this._objectIdMap=null,this.visible=!0,this.transforms.labelMat2d=t(),this.enableDeferredUploads=o}destroy(){super.destroy(),this.clear()}clear(){for(const e of this._meshes.values())e.destroy();this._meshes.clear(),this._entities=[],this._metrics=[],this._displayList=null,this._invalidated=!0,this._entityIds.clear(),this._nextUploadAllowed=!0}beforeRender(e){super.beforeRender(e),this._needsReshuffle&&e.reshuffleManager.schedule(this)}tryReady(e){const t=this._invalidated&&!this._uploadAllowed;return!(this.isReady||t||!this._encounteredEnd||!(e>=this._attributeEpoch))&&(has(\"esri-2d-update-debug\")&&console.debug(`Tile[${this.key.id}] FeatureTile.ready [epoch=${e}]`),this.ready(),this.requestRender(),!0)}get labelMetrics(){return this._metrics}get hasData(){return!!this._meshes.size}get hasAnimations(){return!!this._objectIdMap}get needsUpload(){return this._invalidated}get _uploadAllowed(){return!this.enableDeferredUploads||this._nextUploadAllowed}upload(){this._nextUploadAllowed=!0}getDisplayList(e,t){if(this._uploadAllowed&&this._invalidated){this._entities.sort(((e,t)=>{const s=t.sortKey,i=e.sortKey;return i===s?e.id-t.id:i-s})),t===a.BATCHING&&this.reshuffle(!0),this._displayList=l.fromDisplayEntities(this._entities,this,e,t);for(const e of this._meshes.values())e.upload();this.debugInfo.display.length=this._displayList.length,this.debugInfo.display.minOrderedLength=this._displayList.minOrderedLength,this.debugInfo.display.minUnorderedLength=this._displayList.minUnorderedLength,this.requestRender(),this._invalidated=!1,this._nextUploadAllowed=!1}return this._displayList}getMesh(e){if(!this._meshes.has(e))throw new Error(`InternalError: Unable to find VAO for instance: ${e}`);return this._meshes.get(e)}getSortKeys(e){const t=new Map;for(const{id:s,sortKey:i}of this._entities)if(e.has(s)&&t.set(s,i),t.size===e.size)break;return t}onMessage(e){if(e.objectIdMap)for(const t in e.objectIdMap)this._objectIdMap||(this._objectIdMap={}),this._objectIdMap[t]=e.objectIdMap[t];switch(e.type){case\"append\":this._onAppendMessage(e);break;case\"update\":this._onUpdateMessage(e)}if(this._aggregateMemoryStats(),this.requestRender(),e.end){if(has(\"esri-2d-update-debug\")&&console.debug(`Tile[${this.key.id}] FeatureTile.end [epoch=${e.attributeEpoch}]`),!e.attributeEpoch)throw new Error(\"InternalError: Attribute epoch not defined.\");this._attributeEpoch=e.attributeEpoch,this._encounteredEnd=!0}}_onAppendMessage(e){if(has(\"esri-2d-update-debug\")&&console.debug(`Tile[${this.key.id}] FeatureTile.append`,{append:_(e?.append)}),e.clear&&this.clear(),!e.append)return;const t=c(new m(e.append.entities),h);this._insert(t,e.append.data,!1)}_onUpdateMessage(e){has(\"esri-2d-update-debug\")&&console.debug(`Tile[${this.key.id}] FeatureTile.update`,{isPixelBuffer:e.isPixelBuffer,modify:_(e.modify),remove:e.remove});const t=c(new m(e.modify.entities),h),s=t.map((e=>e.id)),i=e.isPixelBuffer??!1,r=[...e.remove,...s];i?this._removeByIdsFromBuffer(r):this._removeByIds(r),this._insert(t,e.modify.data,i)}reshuffle(e=!1){if(this.destroyed)return;const t=new Map;for(const s of this._entities)for(const i of s.records){const s=this._meshes.get(i.instanceId);let r=t.get(s);r||(r=new f(e),t.set(s,r)),r.copyRecord(i)}for(const[s,i]of t)s.reshuffle(i);this._invalidated=!0,this._aggregateMemoryStats(),has(\"esri-2d-update-debug\")&&y().info(`Tile ${this.key.id} was reshuffled.`)}copyPixelBufferedEntitesFrom(e,t,s,i){const r=s*n,o=i*n;for(const d of e._entities){let s=null;for(const i of d.records)if(i.overlaps&t){const t=e.getMesh(i.instanceId),n=this._ensureMesh(i.instanceId,t.layout).copyRecordFrom(t,i,r,o);s||(s=new h(d.id,d.sortKey),this._entityIdsFromBuffer.add(d.id),this._entities.push(s)),s.records.push(n)}}this._invalidated=!0}_ensureMesh(e,t){return this._meshes.has(e)||this._meshes.set(e,new p(this._stage.bufferPool,t)),this._meshes.get(e)}_insert(e,t,s){if(!e.length)return;this._removeDuplicatedBufferedEntites(e);const i=this._insertVertexData(t);for(const r of e){for(const e of r.records)e.updateBaseOffsets(i.get(e.instanceId));s?this._tryInsertBufferedEntity(r):this._insertEntity(r)}this._invalidated=!0}_insertVertexData(e){const t=new Map;for(const s of e){const{instanceId:e,layout:i}=s,r=this._ensureMesh(e,i).append(s);if(s.metrics){const e=c(new m(s.metrics),u)??[];this._metrics.push(...e)}t.set(e,r)}return t}_insertEntity(e){has(\"esri-2d-update-debug\")&&this._entityIds.has(e.id)&&console.error(`Tile ${this.key.id} insertEnitty: Already have entityId ${e.id}`),this._entityIds.add(e.id),this._entities.push(e)}_tryInsertBufferedEntity(e){this._entityIds.has(e.id)?this._removeRecordsFromMesh(e.records):(this._entityIdsFromBuffer.add(e.id),this._entities.push(e))}_removeDuplicatedBufferedEntites(e){if(!this._entityIdsFromBuffer.size)return;const t=[];for(const s of e)this._entityIdsFromBuffer.has(s.id)&&t.push(s.id);this._removeByIds(t)}_removeByIdsFromBuffer(e){this._removeByIds(e.filter((e=>this._entityIdsFromBuffer.has(e))))}_removeByIds(e){if(0===e.length)return;const t=new Set(e),s=[];for(const i of this._entities)t.has(i.id)?this._remove(i):s.push(i);this._entities=s,this._invalidated=!0}_remove(e){this._removeRecordsFromMesh(e.records),this._entityIds.delete(e.id),this._entityIdsFromBuffer.delete(e.id);for(let t=this._metrics.length-1;t>=0;t--)this._metrics[t].entityTexel===e.id&&this._metrics.splice(t,1)}_removeRecordsFromMesh(e){for(const t of e){const{instanceId:e,indexStart:s,indexCount:i,vertexStart:r,vertexCount:o}=t;this._meshes.get(e)?.remove(s,i,r,o)}}_aggregateMemoryStats(){this.debugInfo.memory.bytesUsed=0,this.debugInfo.memory.bytesReserved=0;for(const e of this._meshes.values())this.debugInfo.memory.bytesUsed+=e.memoryStats.bytesUsed,this.debugInfo.memory.bytesReserved+=e.memoryStats.bytesReserved}get _needsReshuffle(){if(this.destroyed)return!1;const{bytesUsed:e,bytesReserved:t}=this.debugInfo.memory,s=e/t,{minOrderedLength:n,length:h}=this.debugInfo.display;return t>i&&s<r||h>o&&n/h<d}get entityIds(){return this._objectIdMap?this._entities.map((({id:e})=>({objectId:this._objectIdMap[e],displayId:e}))):[]}}export{b as FeatureTile};\n"],"names":["t","constructor","this","name","brushEffect","prepareState","r","draw","s","drawMany","a","visible","e","arguments","length","undefined","shaders","vertexShader","fragmentShader","attributes","n","Float32Array","o","u","c","i","f","l","_","y","w","N","Object","freeze","defineProperty","__proto__","ONES","UNIT_W","UNIT_X","UNIT_Y","UNIT_Z","ZEROS","clone","create","createView","fromValues","ones","unitW","unitX","unitY","unitZ","zeros","Symbol","toStringTag","value","background","bitBlit","debug","overlay","dot","filtering","heatmap","heatmapResolve","highlight","materials","fill","hittest","icon","heatmapAccumulate","label","line","pie","shared","text","blit","bloom","composite","gaussianBlur","luminosityHighPass","blur","dra","sobel","filterEffect","pp","raster","common","flow","imagery","particles","streamlines","hillshade","lut","magdir","reproject","rfx","aspect","bandarithmetic","colormap2rgb","compositeband","computechange","contrast","convolution","curvature","extractband","focalstatistics","grayscale","local","mask","ndvi","remap","slope","stretch","vs","scalar","stencil","test","tileInfo","util","split","forEach","resolveIncludes","g","_ref","coords","lengths","push","slice","m","p","_cache","vertices","indices","primitiveType","isMapSpace","fromPath","path","Uint32Array","Math","floor","geometry","TRIANGLES","fromGeometry","type","fromPolygon","fromMapExtent","getLogger","error","fromScreenExtent","xmin","ymin","xmax","ymax","h","toScreen","_ref2","destroy","indexBuffer","dispose","vertexBuffers","elementType","BYTES_PER_ELEMENT","UNSIGNED_BYTE","UNSIGNED_SHORT","UNSIGNED_INT","getIndexBuffer","STATIC_DRAW","createIndex","getVertexBuffers","Map","keys","reduce","createVertex","Array","super","_clip","stage","_handle","version","_invalidate","ready","fromClipArea","_destroyGL","mesh","vao","remove","getVAO","size","_lastWidth","_lastHeight","_createMesh","_createTransforms","displayViewScreenMat3","requestRender","clips","_updateClippingInfo","renderChildren","painter","setPipelineState","_renderPasses","prepareRenderPasses","render","registerRenderPass","brushes","clip","target","_clippingInfos","drawPhase","MAP","LABEL","LABEL_ALPHA","DEBUG","HIGHLIGHT","items","map","_context","_locations","_layout","_buffers","_indexBuffer","_glName","_initialized","glName","context","byteSize","from","values","usedMemory","layout","locations","cachedMemory","getBoundVAO","bindVAO","clear","disposeVAOOnly","warn","gl","deleteVertexArray","instanceCounter","decrement","VertexArrayObject","initialize","createVertexArray","bindVertexArray","_bindLayout","increment","bind","get","bindBuffer","ELEMENT_ARRAY_BUFFER","unbind","PI","LN2","log","has","acquireUint32Array","_array","_pool","array","getUint32View","buffer","byteOffset","expand","byteLength","set","releaseUint32Array","_data","ArrayBuffer","BYTE_LENGTH","_freeList","start","end","firstFit","free","_pages","_pagesByBuffer","_bytesAllocated","_bytesTotal","console","_addPage","b","_color","_outlineProgram","_tileInfoProgram","_outlineVertexArrayObject","_tileInfoVertexArrayObject","_ctx","setBlendingEnabled","setBlendFunctionSeparate","ONE","ONE_MINUS_SRC_ALPHA","setColorMask","setStencilWriteMask","setStencilTestEnabled","allowDelayedRender","isReady","hasData","_loadWGLResources","compiled","useProgram","setUniformMatrix3fv","transforms","setUniform2f","rangeX","rangeY","setUniform1f","setUniform4fv","drawArrays","LINE_STRIP","_getTexture","bindTexture","width","height","descriptor","TRIANGLE_STRIP","Int8Array","d","document","createElement","getContext","tileDebugInfoTexture","wrapMode","CLAMP_TO_EDGE","samplingMode","LINEAR","isImmutable","clearRect","canvas","textAlign","textBaseline","font","lineWidth","fillStyle","strokeStyle","debugSlot","key","id","strokeText","fillText","debugInfo","minOrderedLength","minUnorderedLength","triangleCount","display","bytesUsed","bytesReserved","memory","setData","next","isArray","data","last","_head","head","maxAvailableSpace","max","_program","setFaceCullingEnabled","setStencilOp","KEEP","REPLACE","setStencilFunction","ALWAYS","state","location","count","SHORT","bufferLayouts","setUniform2fv","displayMat3","drawElements","_patternMatrix","_programOptions","pattern","_vao","displayLevel","styleLayer","backgroundMaterial","vectorTilesMaterialManager","getPaintValue","x","M","window","devicePixelRatio","v","spriteMosaic","j","A","L","getMaterialProgram","getMosaicItemPosition","tl","br","page","getPageSize","setUniform4f","setUniform1i","z","round","level","EQUAL","getAttributeLocations","getLayoutInfo","requiredLevel","styleLayerUID","some","layerData","circleIndexCount","circleMaterial","E","I","U","VIEWPORT","displayViewMat3","setDataUniforms","prepareForRendering","stencilRef","GREATER","circleIndexStart","_fillProgramOptions","_outlineProgramOptions","renderPass","fillIndexCount","outlineIndexCount","getPaintProperty","isDataDriven","getValue","_drawFill","hasDataDrivenOutlineColor","outlineUsesFillColor","_drawOutline","pixelRatio","P","D","fillMaterial","R","S","T","fillVAO","patternMap","fillIndexStart","outlineMaterial","outlineVAO","outlineIndexStart","sdf","lineIndexCount","lineMaterial","getDashKey","getLayoutValue","V","lineIndexStart","_iconProgramOptions","_sdfProgramOptions","_spritesTextureSize","_drawIcons","_drawText","iconMaterial","iconPerPageElementsMap","AUTO","POINT","isIconSDF","rotation","updateOpacityInfo","iconVAO","performance","now","lastOpacityUpdate","_renderIconRange","getWidth","getHeight","_setStencilState","glyphMosaic","textMaterial","glyphPerPageElementsMap","O","_glyphTextureSize","k","G","W","textVAO","_renderGlyphRange","is3D","stencilSymbols","tileDebugInfo","vtlBackground","vtlFill","vtlLine","vtlCircle","vtlSymbol","BACKGROUND","FILL","LINE","SYMBOL","CIRCLE","VISIBLE","NONE","LINE_CENTER","LEFT","CENTER","RIGHT","TOP","BOTTOM","TOP_LEFT","TOP_RIGHT","BOTTOM_LEFT","BOTTOM_RIGHT","UPPERCASE","LOWERCASE","HORIZONTAL","VERTICAL","backgroundLayoutDefinition","visibility","default","fillLayoutDefinition","lineLayoutDefinition","BUTT","MITER","symbolLayoutDefinition","minimum","circleLayoutDefinition","backgroundPaintDefinition","maximum","fillPaintDefinition","linePaintDefinition","symbolPaintDefinition","rasterPaintDefinition","circlePaintDefinition","_readFile","_resolve","_read","Error","exec","index","_destroyed","resolution","parent","_stage","children","indexOf","setTransform","tileMat3","toScreenNoRotation","destroyed","labelMat2d","viewMat2d","containsScreenPoint","viewMat3","BYTE","_solidProgram","_solidVertexArrayObject","setDepthWriteEnabled","setDepthTestEnabled","_initialize","setStencilFunctionSeparate","FRONT_AND_BACK","instance","materialKey","textureKey","indexEnd","extend","techniqueRef","getStencilReference","getAttributePrecisionPackFactors","instanceId","getMesh","drawCompute","drawGeometry","getComputeVAO","POINTS","getGeometryVAO","_length","_minOrderedLength","_materialKeys","Set","fromDisplayEntities","records","getInstance","addRecord","indexStart","indexCount","vertexStart","vertexCount","infos","_tail","STRICT_ORDER","_insert","symbologyPlane","STRICT_MARKERS_AND_TEXT","MARKER","TEXT","add","_insertAtHead","_insertAtEnd","_insertAtMiddle","_indexOnly","vertex","operations","copyRecord","srcFrom","dstFrom","mutate","strideInt","bufferType","dirty","memoryStats","_gpu","_cpu","elementSize","intSize","fillPointer","invalidated","bufferSize","invalidatedComputeBuffer","_gpuComputeTriangles","invalidate","_invalidateTriangleBuffer","freeList","ensure","min","getGPUBuffer","_createComputeBuffer","_createBuffer","getView","insert","copyFrom","upload","setSubData","reshuffle","DYNAMIC_DRAW","_bufferPool","_invalidatedGeometry","_invalidatedCompute","_position","find","_vertexBuffer","_computeVAO","_geometryVAO","getDrawArgs","primitive","offset","packPrecisionFactor","getDebugVertexInfo","stride","computeAttributeMap","DataView","_ensure","append","vertexFrom","indexFrom","copyRecordFrom","overlaps","filter","divisor","normalized","_pos","_buffer","_i32View","Int32Array","_f32View","readInt32","readF32","entities","vertexData","_meshes","_entities","_invalidated","_nextUploadAllowed","tileAge","_metrics","_entityIds","_entityIdsFromBuffer","_attributeEpoch","_encounteredEnd","_objectIdMap","enableDeferredUploads","_displayList","beforeRender","_needsReshuffle","reshuffleManager","schedule","tryReady","_uploadAllowed","labelMetrics","hasAnimations","needsUpload","getDisplayList","sort","sortKey","BATCHING","getSortKeys","onMessage","objectIdMap","_onAppendMessage","_onUpdateMessage","_aggregateMemoryStats","attributeEpoch","isPixelBuffer","modify","_removeByIdsFromBuffer","_removeByIds","info","copyPixelBufferedEntitesFrom","_ensureMesh","bufferPool","_removeDuplicatedBufferedEntites","_insertVertexData","updateBaseOffsets","_tryInsertBufferedEntity","_insertEntity","metrics","_removeRecordsFromMesh","_remove","delete","entityTexel","splice","entityIds","objectId","displayId"],"sourceRoot":""}