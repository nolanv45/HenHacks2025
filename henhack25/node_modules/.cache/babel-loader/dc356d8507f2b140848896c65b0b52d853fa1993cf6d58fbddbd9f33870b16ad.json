{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { _ as t } from \"../../../chunks/tslib.es6.js\";\nimport e from \"../../../core/Error.js\";\nimport { property as r } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/has.js\";\nimport \"../../../core/Logger.js\";\nimport \"../../../core/RandomLCG.js\";\nimport { subclass as s } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport o from \"../../../geometry/Extent.js\";\nimport a from \"../../../geometry/Point.js\";\nimport i from \"../../../geometry/SpatialReference.js\";\nimport n from \"../PixelBlock.js\";\nimport l from \"../RasterInfo.js\";\nimport f from \"../RasterStorageInfo.js\";\nimport c from \"./BaseRaster.js\";\nimport { parseSpatialReference as p, parsePAMInfo as m } from \"./pamParser.js\";\nimport { getElement as h, getElementValue as u } from \"./xmlUtilities.js\";\nimport { isPlatformLittleEndian as g } from \"../rasterFormats/utils.js\";\nimport { estimateStatisticsFromHistograms as d } from \"../rasterFunctions/stretchUtils.js\";\nconst y = new Map();\ny.set(\"Int8\", \"s8\"), y.set(\"UInt8\", \"u8\"), y.set(\"Int16\", \"s16\"), y.set(\"UInt16\", \"u16\"), y.set(\"Int32\", \"s32\"), y.set(\"UInt32\", \"u32\"), y.set(\"Float32\", \"f32\"), y.set(\"Float64\", \"f32\"), y.set(\"Double64\", \"f32\");\nconst x = new Map();\nx.set(\"none\", {\n  blobExtension: \".til\",\n  isOneSegment: !0,\n  decoderFormat: \"bip\"\n}), x.set(\"lerc\", {\n  blobExtension: \".lrc\",\n  isOneSegment: !1,\n  decoderFormat: \"lerc\"\n}), x.set(\"deflate\", {\n  blobExtension: \".pzp\",\n  isOneSegment: !0,\n  decoderFormat: \"deflate\"\n}), x.set(\"jpeg\", {\n  blobExtension: \".pjg\",\n  isOneSegment: !0,\n  decoderFormat: \"jpg\"\n});\nlet w = class extends c {\n  constructor() {\n    super(...arguments), this._files = null, this._storageIndex = null, this.datasetFormat = \"MRF\";\n  }\n  async fetchRawTile(t, e, r, s = {}) {\n    const {\n        blockWidth: o,\n        blockHeight: a,\n        blockBoundary: i\n      } = this.rasterInfo.storageInfo,\n      l = i[t];\n    if (!l || l.maxRow < e || l.maxCol < r || l.minRow > e || l.minCol > r) return null;\n    const {\n        bandCount: f,\n        pixelType: c\n      } = this.rasterInfo,\n      {\n        ranges: p,\n        actualTileWidth: m,\n        actualTileHeight: h\n      } = this._getTileLocation(t, e, r);\n    if (!p || 0 === p.length) return null;\n    if (0 === p[0].from && 0 === p[0].to) {\n      const t = new Uint8Array(o * a);\n      return new n({\n        width: o,\n        height: a,\n        pixels: void 0,\n        mask: t,\n        validPixelCount: 0\n      });\n    }\n    const {\n        bandIds: u\n      } = this.ioConfig,\n      g = this._getBandSegmentCount(),\n      d = [];\n    let y = 0;\n    for (y = 0; y < g; y++) u && !u.includes(y) || d.push(this.request(this._files.data, {\n      range: {\n        from: p[y].from,\n        to: p[y].to\n      },\n      responseType: \"array-buffer\",\n      signal: s.signal\n    }));\n    const w = await Promise.all(d),\n      I = w.map(t => t.data.byteLength).reduce((t, e) => t + e),\n      b = new Uint8Array(I),\n      R = [];\n    let A = 0;\n    for (y = 0; y < g; y++) R.push(A), b.set(new Uint8Array(w[y].data), A), A += w[y].data.byteLength;\n    const F = x.get(this.rasterInfo.storageInfo.compression).decoderFormat,\n      _ = await this.decodePixelBlock(b.buffer, {\n        width: o,\n        height: a,\n        format: F,\n        planes: u?.length || f,\n        offsets: R,\n        pixelType: c\n      });\n    if (null == _) return null;\n    let {\n      noDataValue: S\n    } = this.rasterInfo;\n    if (null != S && \"lerc\" !== F && !_.mask && (S = S[0], null != S)) {\n      const t = _.width * _.height,\n        e = new Uint8Array(t);\n      if (Math.abs(S) > 1e24) for (y = 0; y < t; y++) Math.abs((_.pixels[0][y] - S) / S) > 1e-6 && (e[y] = 1);else for (y = 0; y < t; y++) _.pixels[0][y] !== S && (e[y] = 1);\n      _.mask = e;\n    }\n    let k = 0,\n      M = 0;\n    if (m !== o || h !== a) {\n      let t = _.mask;\n      if (t) {\n        for (y = 0; y < a; y++) if (M = y * o, y < h) for (k = m; k < o; k++) t[M + k] = 0;else for (k = 0; k < o; k++) t[M + k] = 0;\n      } else for (t = new Uint8Array(o * a), _.mask = t, y = 0; y < h; y++) for (M = y * o, k = 0; k < m; k++) t[M + k] = 1;\n    }\n    return _;\n  }\n  async _open(t) {\n    this.datasetName = this.url.slice(this.url.lastIndexOf(\"/\") + 1);\n    const e = t ? t.signal : null,\n      r = await this.request(this.url, {\n        responseType: \"xml\",\n        signal: e\n      }),\n      {\n        rasterInfo: s,\n        files: o\n      } = this._parseHeader(r.data),\n      {\n        skipMapInfo: a,\n        skipExtensions: i = []\n      } = this.ioConfig;\n    if (!i.includes(\"aux.xml\") && !a) {\n      const e = await this._fetchAuxiliaryData(t);\n      null != e && (s.statistics = e.statistics ?? s.statistics, s.histograms = e.histograms, e.histograms && null == s.statistics && (s.statistics = d(e.histograms)));\n    }\n    a && this.updateImageSpaceRasterInfo(s), this._set(\"rasterInfo\", s), this._files = o;\n    const n = await this.request(o.index, {\n      responseType: \"array-buffer\",\n      signal: e\n    });\n    this._storageIndex = I(n.data);\n    const {\n        blockWidth: l,\n        blockHeight: f\n      } = this.rasterInfo.storageInfo,\n      c = this.rasterInfo.storageInfo.pyramidScalingFactor,\n      {\n        width: p,\n        height: m\n      } = this.rasterInfo,\n      h = [],\n      u = this._getBandSegmentCount();\n    let g = 0,\n      y = -1;\n    for (; g < this._storageIndex.length;) {\n      y++;\n      const t = Math.ceil(p / l / c ** y) - 1,\n        e = Math.ceil(m / f / c ** y) - 1;\n      g += (t + 1) * (e + 1) * u * 4, h.push({\n        maxRow: e,\n        maxCol: t,\n        minCol: 0,\n        minRow: 0\n      });\n    }\n    this.rasterInfo.storageInfo.blockBoundary = h, y > 0 && (this.rasterInfo.storageInfo.firstPyramidLevel = 1, this.rasterInfo.storageInfo.maximumPyramidLevel = y), this.updateTileInfo();\n  }\n  _getBandSegmentCount() {\n    return x.get(this.rasterInfo.storageInfo.compression).isOneSegment ? 1 : this.rasterInfo.bandCount;\n  }\n  _getTileLocation(t, e, r) {\n    const {\n        blockWidth: s,\n        blockHeight: o,\n        pyramidScalingFactor: a\n      } = this.rasterInfo.storageInfo,\n      {\n        width: i,\n        height: n\n      } = this.rasterInfo,\n      l = this._getBandSegmentCount();\n    let f,\n      c,\n      p,\n      m = 0,\n      h = 0;\n    for (p = 0; p < t; p++) h = a ** p, f = Math.ceil(i / s / h), c = Math.ceil(n / o / h), m += f * c;\n    h = a ** t, f = Math.ceil(i / s / h), c = Math.ceil(n / o / h), m += e * f + r, m *= 4 * l;\n    const u = this._storageIndex.subarray(m, m + 4 * l);\n    let g = 0,\n      d = 0;\n    const y = [];\n    for (let x = 0; x < l; x++) g = u[4 * x] * 2 ** 32 + u[4 * x + 1], d = g + u[4 * x + 2] * 2 ** 32 + u[4 * x + 3], y.push({\n      from: g,\n      to: d\n    });\n    return {\n      ranges: y,\n      actualTileWidth: r < f - 1 ? s : Math.ceil(i / h) - s * (f - 1),\n      actualTileHeight: e < c - 1 ? o : Math.ceil(n / h) - o * (c - 1)\n    };\n  }\n  _parseHeader(t) {\n    const r = h(t, \"MRF_META/Raster\");\n    if (!r) throw new e(\"mrf:open\", \"not a valid MRF format\");\n    const s = h(r, \"Size\"),\n      n = parseInt(s.getAttribute(\"x\"), 10),\n      c = parseInt(s.getAttribute(\"y\"), 10),\n      m = parseInt(s.getAttribute(\"c\"), 10),\n      g = (u(r, \"Compression\") || \"none\").toLowerCase();\n    if (!x.has(g)) throw new e(\"mrf:open\", \"currently does not support compression \" + g);\n    const d = u(r, \"DataType\") || \"UInt8\",\n      w = y.get(d);\n    if (null == w) throw new e(\"mrf:open\", \"currently does not support pixel type \" + d);\n    const I = h(r, \"PageSize\"),\n      b = parseInt(I.getAttribute(\"x\"), 10),\n      R = parseInt(I.getAttribute(\"y\"), 10),\n      A = h(r, \"DataValues\");\n    let F, _;\n    A && (_ = A.getAttribute(\"NoData\"), null != _ && (F = _.trim().split(\" \").map(t => parseFloat(t))));\n    if (h(t, \"MRF_META/CachedSource\")) throw new e(\"mrf:open\", \"currently does not support MRF referencing other data files\");\n    const S = h(t, \"MRF_META/GeoTags\"),\n      k = h(S, \"BoundingBox\");\n    let M,\n      j = !1;\n    if (null != k) {\n      const t = parseFloat(k.getAttribute(\"minx\")),\n        e = parseFloat(k.getAttribute(\"miny\")),\n        r = parseFloat(k.getAttribute(\"maxx\")),\n        s = parseFloat(k.getAttribute(\"maxy\")),\n        a = u(S, \"Projection\") || \"\";\n      let n = i.WGS84;\n      if (\"LOCAL_CS[]\" !== a) {\n        if (a.toLowerCase().startsWith(\"epsg:\")) {\n          const t = Number(a.slice(5));\n          isNaN(t) || 0 === t || (n = new i({\n            wkid: t\n          }));\n        } else n = p(a) ?? i.WGS84;\n      } else j = !0, n = new i({\n        wkid: 3857\n      });\n      M = new o(t, e, r, s), M.spatialReference = n;\n    } else j = !0, M = new o({\n      xmin: -.5,\n      ymin: .5 - c,\n      xmax: n - .5,\n      ymax: .5,\n      spatialReference: new i({\n        wkid: 3857\n      })\n    });\n    const C = h(t, \"MRF_META/Rsets\"),\n      T = parseInt(C?.getAttribute(\"scale\") || \"2\", 10),\n      L = M.spatialReference,\n      U = new f({\n        origin: new a({\n          x: M.xmin,\n          y: M.ymax,\n          spatialReference: L\n        }),\n        blockWidth: b,\n        blockHeight: R,\n        pyramidBlockWidth: b,\n        pyramidBlockHeight: R,\n        compression: g,\n        pyramidScalingFactor: T\n      }),\n      B = new a({\n        x: M.width / n,\n        y: M.height / c,\n        spatialReference: L\n      }),\n      E = new l({\n        width: n,\n        height: c,\n        extent: M,\n        isPseudoSpatialReference: j,\n        spatialReference: L,\n        bandCount: m,\n        pixelType: w,\n        pixelSize: B,\n        noDataValue: F,\n        storageInfo: U\n      }),\n      P = u(t, \"datafile\"),\n      W = u(t, \"IndexFile\");\n    return {\n      rasterInfo: E,\n      files: {\n        mrf: this.url,\n        index: W || this.url.replace(\".mrf\", \".idx\"),\n        data: P || this.url.replace(\".mrf\", x.get(g).blobExtension)\n      }\n    };\n  }\n  async _fetchAuxiliaryData(t) {\n    try {\n      const {\n        data: e\n      } = await this.request(this.url + \".aux.xml\", {\n        responseType: \"xml\",\n        signal: t?.signal\n      });\n      return m(e);\n    } catch {\n      return null;\n    }\n  }\n};\nfunction I(t) {\n  if (t.byteLength % 16 > 0) throw new Error(\"invalid array buffer must be multiples of 16\");\n  let e, r, s, o, a, i;\n  if (g) {\n    for (r = new Uint8Array(t), o = new ArrayBuffer(t.byteLength), s = new Uint8Array(o), a = 0; a < t.byteLength / 4; a++) for (i = 0; i < 4; i++) s[4 * a + i] = r[4 * a + 3 - i];\n    e = new Uint32Array(o);\n  } else e = new Uint32Array(t);\n  return e;\n}\nt([r()], w.prototype, \"_files\", void 0), t([r()], w.prototype, \"_storageIndex\", void 0), t([r({\n  type: String,\n  json: {\n    write: !0\n  }\n})], w.prototype, \"datasetFormat\", void 0), w = t([s(\"esri.layers.support.rasterDatasets.MRFRaster\")], w);\nconst b = w;\nexport { b as default };","map":{"version":3,"names":["_","t","e","property","r","subclass","s","o","a","i","n","l","f","c","parseSpatialReference","p","parsePAMInfo","m","getElement","h","getElementValue","u","isPlatformLittleEndian","g","estimateStatisticsFromHistograms","d","y","Map","set","x","blobExtension","isOneSegment","decoderFormat","w","constructor","arguments","_files","_storageIndex","datasetFormat","fetchRawTile","blockWidth","blockHeight","blockBoundary","rasterInfo","storageInfo","maxRow","maxCol","minRow","minCol","bandCount","pixelType","ranges","actualTileWidth","actualTileHeight","_getTileLocation","length","from","to","Uint8Array","width","height","pixels","mask","validPixelCount","bandIds","ioConfig","_getBandSegmentCount","includes","push","request","data","range","responseType","signal","Promise","all","I","map","byteLength","reduce","b","R","A","F","get","compression","decodePixelBlock","buffer","format","planes","offsets","noDataValue","S","Math","abs","k","M","_open","datasetName","url","slice","lastIndexOf","files","_parseHeader","skipMapInfo","skipExtensions","_fetchAuxiliaryData","statistics","histograms","updateImageSpaceRasterInfo","_set","index","pyramidScalingFactor","ceil","firstPyramidLevel","maximumPyramidLevel","updateTileInfo","subarray","parseInt","getAttribute","toLowerCase","has","trim","split","parseFloat","j","WGS84","startsWith","Number","isNaN","wkid","spatialReference","xmin","ymin","xmax","ymax","C","T","L","U","origin","pyramidBlockWidth","pyramidBlockHeight","B","E","extent","isPseudoSpatialReference","pixelSize","P","W","mrf","replace","Error","ArrayBuffer","Uint32Array","prototype","type","String","json","write","default"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/layers/support/rasterDatasets/MRFRaster.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{_ as t}from\"../../../chunks/tslib.es6.js\";import e from\"../../../core/Error.js\";import{property as r}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/has.js\";import\"../../../core/Logger.js\";import\"../../../core/RandomLCG.js\";import{subclass as s}from\"../../../core/accessorSupport/decorators/subclass.js\";import o from\"../../../geometry/Extent.js\";import a from\"../../../geometry/Point.js\";import i from\"../../../geometry/SpatialReference.js\";import n from\"../PixelBlock.js\";import l from\"../RasterInfo.js\";import f from\"../RasterStorageInfo.js\";import c from\"./BaseRaster.js\";import{parseSpatialReference as p,parsePAMInfo as m}from\"./pamParser.js\";import{getElement as h,getElementValue as u}from\"./xmlUtilities.js\";import{isPlatformLittleEndian as g}from\"../rasterFormats/utils.js\";import{estimateStatisticsFromHistograms as d}from\"../rasterFunctions/stretchUtils.js\";const y=new Map;y.set(\"Int8\",\"s8\"),y.set(\"UInt8\",\"u8\"),y.set(\"Int16\",\"s16\"),y.set(\"UInt16\",\"u16\"),y.set(\"Int32\",\"s32\"),y.set(\"UInt32\",\"u32\"),y.set(\"Float32\",\"f32\"),y.set(\"Float64\",\"f32\"),y.set(\"Double64\",\"f32\");const x=new Map;x.set(\"none\",{blobExtension:\".til\",isOneSegment:!0,decoderFormat:\"bip\"}),x.set(\"lerc\",{blobExtension:\".lrc\",isOneSegment:!1,decoderFormat:\"lerc\"}),x.set(\"deflate\",{blobExtension:\".pzp\",isOneSegment:!0,decoderFormat:\"deflate\"}),x.set(\"jpeg\",{blobExtension:\".pjg\",isOneSegment:!0,decoderFormat:\"jpg\"});let w=class extends c{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat=\"MRF\"}async fetchRawTile(t,e,r,s={}){const{blockWidth:o,blockHeight:a,blockBoundary:i}=this.rasterInfo.storageInfo,l=i[t];if(!l||l.maxRow<e||l.maxCol<r||l.minRow>e||l.minCol>r)return null;const{bandCount:f,pixelType:c}=this.rasterInfo,{ranges:p,actualTileWidth:m,actualTileHeight:h}=this._getTileLocation(t,e,r);if(!p||0===p.length)return null;if(0===p[0].from&&0===p[0].to){const t=new Uint8Array(o*a);return new n({width:o,height:a,pixels:void 0,mask:t,validPixelCount:0})}const{bandIds:u}=this.ioConfig,g=this._getBandSegmentCount(),d=[];let y=0;for(y=0;y<g;y++)u&&!u.includes(y)||d.push(this.request(this._files.data,{range:{from:p[y].from,to:p[y].to},responseType:\"array-buffer\",signal:s.signal}));const w=await Promise.all(d),I=w.map((t=>t.data.byteLength)).reduce(((t,e)=>t+e)),b=new Uint8Array(I),R=[];let A=0;for(y=0;y<g;y++)R.push(A),b.set(new Uint8Array(w[y].data),A),A+=w[y].data.byteLength;const F=x.get(this.rasterInfo.storageInfo.compression).decoderFormat,_=await this.decodePixelBlock(b.buffer,{width:o,height:a,format:F,planes:u?.length||f,offsets:R,pixelType:c});if(null==_)return null;let{noDataValue:S}=this.rasterInfo;if(null!=S&&\"lerc\"!==F&&!_.mask&&(S=S[0],null!=S)){const t=_.width*_.height,e=new Uint8Array(t);if(Math.abs(S)>1e24)for(y=0;y<t;y++)Math.abs((_.pixels[0][y]-S)/S)>1e-6&&(e[y]=1);else for(y=0;y<t;y++)_.pixels[0][y]!==S&&(e[y]=1);_.mask=e}let k=0,M=0;if(m!==o||h!==a){let t=_.mask;if(t)for(y=0;y<a;y++)if(M=y*o,y<h)for(k=m;k<o;k++)t[M+k]=0;else for(k=0;k<o;k++)t[M+k]=0;else for(t=new Uint8Array(o*a),_.mask=t,y=0;y<h;y++)for(M=y*o,k=0;k<m;k++)t[M+k]=1}return _}async _open(t){this.datasetName=this.url.slice(this.url.lastIndexOf(\"/\")+1);const e=t?t.signal:null,r=await this.request(this.url,{responseType:\"xml\",signal:e}),{rasterInfo:s,files:o}=this._parseHeader(r.data),{skipMapInfo:a,skipExtensions:i=[]}=this.ioConfig;if(!i.includes(\"aux.xml\")&&!a){const e=await this._fetchAuxiliaryData(t);null!=e&&(s.statistics=e.statistics??s.statistics,s.histograms=e.histograms,e.histograms&&null==s.statistics&&(s.statistics=d(e.histograms)))}a&&this.updateImageSpaceRasterInfo(s),this._set(\"rasterInfo\",s),this._files=o;const n=await this.request(o.index,{responseType:\"array-buffer\",signal:e});this._storageIndex=I(n.data);const{blockWidth:l,blockHeight:f}=this.rasterInfo.storageInfo,c=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:p,height:m}=this.rasterInfo,h=[],u=this._getBandSegmentCount();let g=0,y=-1;for(;g<this._storageIndex.length;){y++;const t=Math.ceil(p/l/c**y)-1,e=Math.ceil(m/f/c**y)-1;g+=(t+1)*(e+1)*u*4,h.push({maxRow:e,maxCol:t,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=h,y>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=y),this.updateTileInfo()}_getBandSegmentCount(){return x.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(t,e,r){const{blockWidth:s,blockHeight:o,pyramidScalingFactor:a}=this.rasterInfo.storageInfo,{width:i,height:n}=this.rasterInfo,l=this._getBandSegmentCount();let f,c,p,m=0,h=0;for(p=0;p<t;p++)h=a**p,f=Math.ceil(i/s/h),c=Math.ceil(n/o/h),m+=f*c;h=a**t,f=Math.ceil(i/s/h),c=Math.ceil(n/o/h),m+=e*f+r,m*=4*l;const u=this._storageIndex.subarray(m,m+4*l);let g=0,d=0;const y=[];for(let x=0;x<l;x++)g=u[4*x]*2**32+u[4*x+1],d=g+u[4*x+2]*2**32+u[4*x+3],y.push({from:g,to:d});return{ranges:y,actualTileWidth:r<f-1?s:Math.ceil(i/h)-s*(f-1),actualTileHeight:e<c-1?o:Math.ceil(n/h)-o*(c-1)}}_parseHeader(t){const r=h(t,\"MRF_META/Raster\");if(!r)throw new e(\"mrf:open\",\"not a valid MRF format\");const s=h(r,\"Size\"),n=parseInt(s.getAttribute(\"x\"),10),c=parseInt(s.getAttribute(\"y\"),10),m=parseInt(s.getAttribute(\"c\"),10),g=(u(r,\"Compression\")||\"none\").toLowerCase();if(!x.has(g))throw new e(\"mrf:open\",\"currently does not support compression \"+g);const d=u(r,\"DataType\")||\"UInt8\",w=y.get(d);if(null==w)throw new e(\"mrf:open\",\"currently does not support pixel type \"+d);const I=h(r,\"PageSize\"),b=parseInt(I.getAttribute(\"x\"),10),R=parseInt(I.getAttribute(\"y\"),10),A=h(r,\"DataValues\");let F,_;A&&(_=A.getAttribute(\"NoData\"),null!=_&&(F=_.trim().split(\" \").map((t=>parseFloat(t)))));if(h(t,\"MRF_META/CachedSource\"))throw new e(\"mrf:open\",\"currently does not support MRF referencing other data files\");const S=h(t,\"MRF_META/GeoTags\"),k=h(S,\"BoundingBox\");let M,j=!1;if(null!=k){const t=parseFloat(k.getAttribute(\"minx\")),e=parseFloat(k.getAttribute(\"miny\")),r=parseFloat(k.getAttribute(\"maxx\")),s=parseFloat(k.getAttribute(\"maxy\")),a=u(S,\"Projection\")||\"\";let n=i.WGS84;if(\"LOCAL_CS[]\"!==a)if(a.toLowerCase().startsWith(\"epsg:\")){const t=Number(a.slice(5));isNaN(t)||0===t||(n=new i({wkid:t}))}else n=p(a)??i.WGS84;else j=!0,n=new i({wkid:3857});M=new o(t,e,r,s),M.spatialReference=n}else j=!0,M=new o({xmin:-.5,ymin:.5-c,xmax:n-.5,ymax:.5,spatialReference:new i({wkid:3857})});const C=h(t,\"MRF_META/Rsets\"),T=parseInt(C?.getAttribute(\"scale\")||\"2\",10),L=M.spatialReference,U=new f({origin:new a({x:M.xmin,y:M.ymax,spatialReference:L}),blockWidth:b,blockHeight:R,pyramidBlockWidth:b,pyramidBlockHeight:R,compression:g,pyramidScalingFactor:T}),B=new a({x:M.width/n,y:M.height/c,spatialReference:L}),E=new l({width:n,height:c,extent:M,isPseudoSpatialReference:j,spatialReference:L,bandCount:m,pixelType:w,pixelSize:B,noDataValue:F,storageInfo:U}),P=u(t,\"datafile\"),W=u(t,\"IndexFile\");return{rasterInfo:E,files:{mrf:this.url,index:W||this.url.replace(\".mrf\",\".idx\"),data:P||this.url.replace(\".mrf\",x.get(g).blobExtension)}}}async _fetchAuxiliaryData(t){try{const{data:e}=await this.request(this.url+\".aux.xml\",{responseType:\"xml\",signal:t?.signal});return m(e)}catch{return null}}};function I(t){if(t.byteLength%16>0)throw new Error(\"invalid array buffer must be multiples of 16\");let e,r,s,o,a,i;if(g){for(r=new Uint8Array(t),o=new ArrayBuffer(t.byteLength),s=new Uint8Array(o),a=0;a<t.byteLength/4;a++)for(i=0;i<4;i++)s[4*a+i]=r[4*a+3-i];e=new Uint32Array(o)}else e=new Uint32Array(t);return e}t([r()],w.prototype,\"_files\",void 0),t([r()],w.prototype,\"_storageIndex\",void 0),t([r({type:String,json:{write:!0}})],w.prototype,\"datasetFormat\",void 0),w=t([s(\"esri.layers.support.rasterDatasets.MRFRaster\")],w);const b=w;export{b as default};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}