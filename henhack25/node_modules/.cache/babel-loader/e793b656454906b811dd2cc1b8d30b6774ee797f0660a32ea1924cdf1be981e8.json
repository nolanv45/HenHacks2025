{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { ReadDepth as e } from \"./output/ReadDepth.glsl.js\";\nimport { CameraSpace as o } from \"./util/CameraSpace.glsl.js\";\nimport { Float3PassUniform as l } from \"../shaderModules/Float3PassUniform.js\";\nimport { FloatPassUniform as t } from \"../shaderModules/FloatPassUniform.js\";\nimport { glsl as r } from \"../shaderModules/glsl.js\";\nimport { Texture2DBindUniform as a } from \"../shaderModules/Texture2DBindUniform.js\";\nimport { Texture2DPassUniform as n } from \"../shaderModules/Texture2DPassUniform.js\";\nfunction i(i, p) {\n  const d = i.fragment;\n  d.include(e), i.include(o), d.uniforms.add(new t(\"globalAlpha\", e => e.globalAlpha), new l(\"glowColor\", e => e.glowColor), new t(\"glowWidth\", (e, o) => e.glowWidth * o.camera.pixelRatio), new t(\"glowFalloff\", e => e.glowFalloff), new l(\"innerColor\", e => e.innerColor), new t(\"innerWidth\", (e, o) => e.innerWidth * o.camera.pixelRatio), new a(\"depthMap\", e => e.depth?.attachment), new n(\"normalMap\", e => e.normals)), d.code.add(r`vec4 blendPremultiplied(vec4 source, vec4 dest) {\nfloat oneMinusSourceAlpha = 1.0 - source.a;\nreturn vec4(\nsource.rgb + dest.rgb * oneMinusSourceAlpha,\nsource.a + dest.a * oneMinusSourceAlpha\n);\n}`), d.code.add(r`vec4 premultipliedColor(vec3 rgb, float alpha) {\nreturn vec4(rgb * alpha, alpha);\n}`), d.code.add(r`vec4 laserlineProfile(float dist) {\nif (dist > glowWidth) {\nreturn vec4(0.0);\n}\nfloat innerAlpha = (1.0 - smoothstep(0.0, innerWidth, dist));\nfloat glowAlpha = pow(max(0.0, 1.0 - dist / glowWidth), glowFalloff);\nreturn blendPremultiplied(\npremultipliedColor(innerColor, innerAlpha),\npremultipliedColor(glowColor, glowAlpha)\n);\n}`), d.code.add(r`bool laserlineReconstructFromDepth(out vec3 pos, out vec3 normal, out float angleCutoffAdjust, out float depthDiscontinuityAlpha) {\nfloat depth = depthFromTexture(depthMap, uv);\nif (depth == 1.0) {\nreturn false;\n}\nfloat linearDepth = linearizeDepth(depth);\npos = reconstructPosition(gl_FragCoord.xy, linearDepth);\nfloat minStep = 6e-8;\nfloat depthStep = clamp(depth + minStep, 0.0, 1.0);\nfloat linearDepthStep = linearizeDepth(depthStep);\nfloat depthError = abs(linearDepthStep - linearDepth);\nif (depthError > 0.2) {\nnormal = texture(normalMap, uv).xyz * 2.0 - 1.0;\nangleCutoffAdjust = 0.004;\n} else {\nnormal = normalize(cross(dFdx(pos), dFdy(pos)));\nangleCutoffAdjust = 0.0;\n}\nfloat ddepth = fwidth(linearDepth);\ndepthDiscontinuityAlpha = 1.0 - smoothstep(0.0, 0.01, -ddepth / linearDepth);\nreturn true;\n}`), p.contrastControlEnabled ? d.uniforms.add(new n(\"frameColor\", (e, o) => e.colors), new t(\"globalAlphaContrastBoost\", e => e.globalAlphaContrastBoost)).code.add(r`float rgbToLuminance(vec3 color) {\nreturn dot(vec3(0.2126, 0.7152, 0.0722), color);\n}\nvec4 laserlineOutput(vec4 color) {\nfloat backgroundLuminance = rgbToLuminance(texture(frameColor, uv).rgb);\nfloat alpha = clamp(globalAlpha * max(backgroundLuminance * globalAlphaContrastBoost, 1.0), 0.0, 1.0);\nreturn color * alpha;\n}`) : d.code.add(r`vec4 laserlineOutput(vec4 color) {\nreturn color * globalAlpha;\n}`);\n}\nexport { i as Laserline };","map":{"version":3,"names":["ReadDepth","e","CameraSpace","o","Float3PassUniform","l","FloatPassUniform","t","glsl","r","Texture2DBindUniform","a","Texture2DPassUniform","n","i","p","d","fragment","include","uniforms","add","globalAlpha","glowColor","glowWidth","camera","pixelRatio","glowFalloff","innerColor","innerWidth","depth","attachment","normals","code","contrastControlEnabled","colors","globalAlphaContrastBoost","Laserline"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/Laserline.glsl.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{ReadDepth as e}from\"./output/ReadDepth.glsl.js\";import{CameraSpace as o}from\"./util/CameraSpace.glsl.js\";import{Float3PassUniform as l}from\"../shaderModules/Float3PassUniform.js\";import{FloatPassUniform as t}from\"../shaderModules/FloatPassUniform.js\";import{glsl as r}from\"../shaderModules/glsl.js\";import{Texture2DBindUniform as a}from\"../shaderModules/Texture2DBindUniform.js\";import{Texture2DPassUniform as n}from\"../shaderModules/Texture2DPassUniform.js\";function i(i,p){const d=i.fragment;d.include(e),i.include(o),d.uniforms.add(new t(\"globalAlpha\",(e=>e.globalAlpha)),new l(\"glowColor\",(e=>e.glowColor)),new t(\"glowWidth\",((e,o)=>e.glowWidth*o.camera.pixelRatio)),new t(\"glowFalloff\",(e=>e.glowFalloff)),new l(\"innerColor\",(e=>e.innerColor)),new t(\"innerWidth\",((e,o)=>e.innerWidth*o.camera.pixelRatio)),new a(\"depthMap\",(e=>e.depth?.attachment)),new n(\"normalMap\",(e=>e.normals))),d.code.add(r`vec4 blendPremultiplied(vec4 source, vec4 dest) {\nfloat oneMinusSourceAlpha = 1.0 - source.a;\nreturn vec4(\nsource.rgb + dest.rgb * oneMinusSourceAlpha,\nsource.a + dest.a * oneMinusSourceAlpha\n);\n}`),d.code.add(r`vec4 premultipliedColor(vec3 rgb, float alpha) {\nreturn vec4(rgb * alpha, alpha);\n}`),d.code.add(r`vec4 laserlineProfile(float dist) {\nif (dist > glowWidth) {\nreturn vec4(0.0);\n}\nfloat innerAlpha = (1.0 - smoothstep(0.0, innerWidth, dist));\nfloat glowAlpha = pow(max(0.0, 1.0 - dist / glowWidth), glowFalloff);\nreturn blendPremultiplied(\npremultipliedColor(innerColor, innerAlpha),\npremultipliedColor(glowColor, glowAlpha)\n);\n}`),d.code.add(r`bool laserlineReconstructFromDepth(out vec3 pos, out vec3 normal, out float angleCutoffAdjust, out float depthDiscontinuityAlpha) {\nfloat depth = depthFromTexture(depthMap, uv);\nif (depth == 1.0) {\nreturn false;\n}\nfloat linearDepth = linearizeDepth(depth);\npos = reconstructPosition(gl_FragCoord.xy, linearDepth);\nfloat minStep = 6e-8;\nfloat depthStep = clamp(depth + minStep, 0.0, 1.0);\nfloat linearDepthStep = linearizeDepth(depthStep);\nfloat depthError = abs(linearDepthStep - linearDepth);\nif (depthError > 0.2) {\nnormal = texture(normalMap, uv).xyz * 2.0 - 1.0;\nangleCutoffAdjust = 0.004;\n} else {\nnormal = normalize(cross(dFdx(pos), dFdy(pos)));\nangleCutoffAdjust = 0.0;\n}\nfloat ddepth = fwidth(linearDepth);\ndepthDiscontinuityAlpha = 1.0 - smoothstep(0.0, 0.01, -ddepth / linearDepth);\nreturn true;\n}`),p.contrastControlEnabled?d.uniforms.add(new n(\"frameColor\",((e,o)=>e.colors)),new t(\"globalAlphaContrastBoost\",(e=>e.globalAlphaContrastBoost))).code.add(r`float rgbToLuminance(vec3 color) {\nreturn dot(vec3(0.2126, 0.7152, 0.0722), color);\n}\nvec4 laserlineOutput(vec4 color) {\nfloat backgroundLuminance = rgbToLuminance(texture(frameColor, uv).rgb);\nfloat alpha = clamp(globalAlpha * max(backgroundLuminance * globalAlphaContrastBoost, 1.0), 0.0, 1.0);\nreturn color * alpha;\n}`):d.code.add(r`vec4 laserlineOutput(vec4 color) {\nreturn color * globalAlpha;\n}`)}export{i as Laserline};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,SAAS,IAAIC,CAAC,QAAK,4BAA4B;AAAC,SAAOC,WAAW,IAAIC,CAAC,QAAK,4BAA4B;AAAC,SAAOC,iBAAiB,IAAIC,CAAC,QAAK,uCAAuC;AAAC,SAAOC,gBAAgB,IAAIC,CAAC,QAAK,sCAAsC;AAAC,SAAOC,IAAI,IAAIC,CAAC,QAAK,0BAA0B;AAAC,SAAOC,oBAAoB,IAAIC,CAAC,QAAK,0CAA0C;AAAC,SAAOC,oBAAoB,IAAIC,CAAC,QAAK,0CAA0C;AAAC,SAASC,CAACA,CAACA,CAAC,EAACC,CAAC,EAAC;EAAC,MAAMC,CAAC,GAACF,CAAC,CAACG,QAAQ;EAACD,CAAC,CAACE,OAAO,CAACjB,CAAC,CAAC,EAACa,CAAC,CAACI,OAAO,CAACf,CAAC,CAAC,EAACa,CAAC,CAACG,QAAQ,CAACC,GAAG,CAAC,IAAIb,CAAC,CAAC,aAAa,EAAEN,CAAC,IAAEA,CAAC,CAACoB,WAAY,CAAC,EAAC,IAAIhB,CAAC,CAAC,WAAW,EAAEJ,CAAC,IAAEA,CAAC,CAACqB,SAAU,CAAC,EAAC,IAAIf,CAAC,CAAC,WAAW,EAAE,CAACN,CAAC,EAACE,CAAC,KAAGF,CAAC,CAACsB,SAAS,GAACpB,CAAC,CAACqB,MAAM,CAACC,UAAW,CAAC,EAAC,IAAIlB,CAAC,CAAC,aAAa,EAAEN,CAAC,IAAEA,CAAC,CAACyB,WAAY,CAAC,EAAC,IAAIrB,CAAC,CAAC,YAAY,EAAEJ,CAAC,IAAEA,CAAC,CAAC0B,UAAW,CAAC,EAAC,IAAIpB,CAAC,CAAC,YAAY,EAAE,CAACN,CAAC,EAACE,CAAC,KAAGF,CAAC,CAAC2B,UAAU,GAACzB,CAAC,CAACqB,MAAM,CAACC,UAAW,CAAC,EAAC,IAAId,CAAC,CAAC,UAAU,EAAEV,CAAC,IAAEA,CAAC,CAAC4B,KAAK,EAAEC,UAAW,CAAC,EAAC,IAAIjB,CAAC,CAAC,WAAW,EAAEZ,CAAC,IAAEA,CAAC,CAAC8B,OAAQ,CAAC,CAAC,EAACf,CAAC,CAACgB,IAAI,CAACZ,GAAG,CAACX,CAAC;AAC54B;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,EAACO,CAAC,CAACgB,IAAI,CAACZ,GAAG,CAACX,CAAC;AAChB;AACA,EAAE,CAAC,EAACO,CAAC,CAACgB,IAAI,CAACZ,GAAG,CAACX,CAAC;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,EAACO,CAAC,CAACgB,IAAI,CAACZ,GAAG,CAACX,CAAC;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,EAACM,CAAC,CAACkB,sBAAsB,GAACjB,CAAC,CAACG,QAAQ,CAACC,GAAG,CAAC,IAAIP,CAAC,CAAC,YAAY,EAAE,CAACZ,CAAC,EAACE,CAAC,KAAGF,CAAC,CAACiC,MAAO,CAAC,EAAC,IAAI3B,CAAC,CAAC,0BAA0B,EAAEN,CAAC,IAAEA,CAAC,CAACkC,wBAAyB,CAAC,CAAC,CAACH,IAAI,CAACZ,GAAG,CAACX,CAAC;AAC/J;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,GAACO,CAAC,CAACgB,IAAI,CAACZ,GAAG,CAACX,CAAC;AAChB;AACA,EAAE,CAAC;AAAA;AAAC,SAAOK,CAAC,IAAIsB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}