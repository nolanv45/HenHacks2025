{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { isSome as t, equals as e } from \"../../../core/arrayUtils.js\";\nimport { asinClamped as s } from \"../../../core/mathUtils.js\";\nimport { dot as r, subtract as n, exactEquals as i, set as o, squaredDistance as c } from \"../../../core/libs/gl-matrix-2/math/vec2.js\";\nimport { create as u } from \"../../../core/libs/gl-matrix-2/factories/vec2f64.js\";\nimport { b as a, p as h, s as f, a as l, k as d, i as p, c as m, d as g, I as _, f as L, e as k, n as x } from \"../../../chunks/vec32.js\";\nimport { clone as y, create as P, UNIT_Z as z, fromValues as M } from \"../../../core/libs/gl-matrix-2/factories/vec3f64.js\";\nimport { s as T, h as q } from \"../../../chunks/vec42.js\";\nimport { create as w } from \"../../../core/libs/gl-matrix-2/factories/vec4f64.js\";\nimport { toRadians as j } from \"../../../geometry/support/geodesicConstants.js\";\nimport { directGeodeticSolver as v, inverseGeodeticSolver as A, InverseGeodeticSolverResult as D } from \"../../../geometry/support/geodesicUtils.js\";\nimport { create as b, intersectLine as E, signedDistance as R, projectPoint as I, fromPositionAndNormal as N, fromPoints as U, distance as Z, getNormal as S } from \"../../../geometry/support/plane.js\";\nimport { l as C, m as G, p as O, a as F, n as H } from \"../../../chunks/sphere.js\";\nimport { tangentFrame as V } from \"../../3d/support/mathUtils.js\";\nimport { fromVec3 as Y, clone as B, fromValues as J, asVec2 as K, create as Q, createWritable as W } from \"./normalizedPoint.js\";\nimport { vectorsHaveCloseZ as X, isClose as $, intersectVerticalPlaneAndVerticalCylinder as tt, isPointInsidePlane as et, projectPointToLineLike as st, projectPointToVerticalCylinder as rt, projectPointToVerticalPlane as nt, VerticalPlaneType as it, intersectLineLikes as ot, intersectVerticalPlaneAndLineLike as ct, intersectLineLikeAndVerticalCylinder as ut, intersectLineLikeAndCircle as at, intersectVerticalPlanes as ht, intersectVerticalCylinders as ft, pointsInsidePlane as lt, intersectVerticalPlaneAndPoint as dt } from \"../../support/geometry3dUtils.js\";\nimport { LineType as pt } from \"../../support/geometry2dUtils.js\";\nclass mt {\n  intersect(t) {\n    return Ht(this, t);\n  }\n  closestPoints(t) {\n    return [this.closestTo(t)];\n  }\n}\nclass gt extends mt {\n  constructor(t) {\n    super(), this.point = t;\n  }\n  equals(t) {\n    return this === t || Le(t) && h(this.point, t.point);\n  }\n  closestTo() {\n    return B(this.point);\n  }\n}\nclass _t extends mt {\n  constructor(t, e, s) {\n    super(), this.start = t, this.end = e, this.lineLike = {\n      start: t,\n      end: e,\n      type: s\n    };\n  }\n  equals(t) {\n    return this === t || ke(t) && this.lineLike.type === t.lineLike.type && h(this.start, t.start) && h(this.end, t.end);\n  }\n  closestTo(t) {\n    const e = W();\n    return st(t, this.lineLike, e), e;\n  }\n}\nclass Lt extends _t {\n  constructor(t, e) {\n    super(t, e, pt.LINE);\n  }\n}\nclass kt extends _t {\n  constructor(t, e) {\n    super(t, e, pt.RAY);\n  }\n}\nclass xt extends mt {\n  constructor(t) {\n    super(), this.constraints = t;\n  }\n  equals(t) {\n    return this === t || _e(t) && e(this.constraints, t.constraints, (t, e) => t.equals(e));\n  }\n  closestTo(t) {\n    let e,\n      s = 1 / 0;\n    for (const r of this.constraints) {\n      const n = r.closestTo(t),\n        i = f(t, n);\n      i < s && (s = i, e = n);\n    }\n    return B(e ?? t);\n  }\n  closestPoints(t) {\n    return this.constraints.flatMap(e => e === this ? [] : e.closestPoints(t));\n  }\n}\nclass yt extends mt {\n  constructor(t, e) {\n    super(), this.center = t, this.radius = e;\n  }\n  equals(t) {\n    return this === t || Pe(t) && this.center[0] === t.center[0] && this.center[1] === t.center[1] && this.radius === t.radius;\n  }\n  closestTo(t) {\n    const e = W();\n    return rt(t, this.center, this.radius, e), e;\n  }\n}\nclass Pt extends mt {\n  constructor(t, e) {\n    super(), this.center = t, this.radius = e;\n  }\n  equals(t) {\n    return this === t || ze(t) && h(this.center, t.center) && this.radius === t.radius;\n  }\n  closestTo(t) {\n    const e = W();\n    return rt(t, this.center, this.radius, e), e[2] = this.center[2], e;\n  }\n  asCircle() {\n    return new zt(B(this.center), this.radius, J(0, 0, 1));\n  }\n}\nclass zt extends mt {\n  constructor(t, e, s, r = void 0) {\n    super(), this.center = t, this.radius = e, this.normal = s, this.slicePlane = r;\n  }\n  equals(t) {\n    return this === t || Me(t) && h(this.center, t.center) && h(this.normal, t.normal) && this.radius === t.radius;\n  }\n  closestTo(t) {\n    const {\n      center: e,\n      radius: s\n    } = this;\n    I(this.getPlane(Tt), t, Mt);\n    const r = l(Mt, Mt, e),\n      n = d(r);\n    if ($(n, 0)) return B(t);\n    const i = s / Math.sqrt(n),\n      o = W();\n    a(o, e, r, i);\n    const {\n      slicePlane: c\n    } = this;\n    if (c && !et(c, o)) {\n      const e = Jt(c, this);\n      return e?.closestTo(t) ?? B(t);\n    }\n    return o;\n  }\n  getPlane(t = b()) {\n    return N(this.center, this.normal, t);\n  }\n}\nconst Mt = P(),\n  Tt = b();\nclass qt extends mt {\n  constructor(t) {\n    super(), this.z = t;\n  }\n  equals(t) {\n    return this === t || xe(t) && this.z === t.z;\n  }\n  closestTo(t) {\n    return J(t[0], t[1], this.z);\n  }\n  getPlane(t = b()) {\n    return p(wt, 0, 0, this.z), N(wt, z, t);\n  }\n}\nconst wt = P();\nclass jt extends mt {\n  constructor(t, e, s) {\n    super(), this.start = t, this.end = e, this.planeLike = {\n      start: K(t),\n      end: K(e),\n      type: s\n    };\n  }\n  equals(t) {\n    return this === t || ye(t) && this.planeLike.type === t.planeLike.type && h(this.start, t.start) && h(this.end, t.end);\n  }\n  closestTo(t) {\n    const e = W();\n    return nt(t, this.planeLike, e), e;\n  }\n  closestEndTo(t) {\n    const {\n      start: e,\n      end: s\n    } = this.planeLike;\n    return Math.sign(r(n(vt, s, e), n(At, K(t), e))) > 0 ? this.end : this.start;\n  }\n  getPlane(t = b()) {\n    const e = m(Dt, this.end);\n    return e[2] += 1, U(this.start, this.end, e, t);\n  }\n  getSlicePlane(t = b()) {\n    const {\n      start: e,\n      end: s,\n      type: r\n    } = this.planeLike;\n    if (r === it.PLANE) return;\n    const n = p(Dt, e[0], e[1], 0),\n      i = p(bt, s[0], s[1], 0),\n      o = g(bt, i, n);\n    return N(n, o, t), t;\n  }\n}\nconst vt = u(),\n  At = u(),\n  Dt = P(),\n  bt = P();\nclass Et extends jt {\n  constructor(t, e) {\n    super(t, e, it.HALF_PLANE);\n  }\n}\nclass Rt extends jt {\n  constructor(t, e) {\n    super(t, e, it.PLANE);\n  }\n}\nclass It extends mt {\n  constructor(t, e) {\n    super(), this.sphere = C(t, e);\n  }\n  equals(t) {\n    return this === t || Te(t) && G(this.sphere, t.sphere);\n  }\n  closestTo(t) {\n    const e = W();\n    return O(this.sphere, t, e), e;\n  }\n  get center() {\n    return F(this.sphere);\n  }\n  get radius() {\n    return this.sphere[3];\n  }\n}\nclass Nt extends mt {\n  constructor(t, e, s) {\n    super(), this.start = t, this.end = e, this.getZ = s, this.planeLike = {\n      start: K(t),\n      end: K(e),\n      type: it.PLANE\n    };\n  }\n  equals(t) {\n    return this === t || qe(t) && h(this.start, t.start) && h(this.end, t.end) && this.getZ === t.getZ;\n  }\n  closestTo(t) {\n    return Ft(this, t);\n  }\n  addIfOnTheGround(t, e) {\n    for (const s of e) {\n      const e = this.getZ(s[0], s[1]) ?? 0;\n      $(s[2], e) && (s[2] = e, t.push(s));\n    }\n  }\n}\nclass Ut extends mt {\n  constructor(t, e, s) {\n    super(), this._x = t, this._y = e, this._z = s;\n  }\n  equals(t) {\n    return this === t || je(t) && this._x === t._x && this._y === t._y && this._z === t._z;\n  }\n  closestTo([t, e, s]) {\n    return Q(this._x ?? t, this._y ?? e, this._z ?? s);\n  }\n}\nclass Zt extends mt {\n  constructor(t, e, s, r, n) {\n    super(), this._origin = t, this._spatialReference = e, this._distanceMeters = s, this._z = r, this._directionDegrees = n;\n  }\n  equals(t) {\n    return this === t || we(t) && i(this._origin, t._origin) && this._spatialReference === t._spatialReference && this._distanceMeters === t._distanceMeters && this._z === t._z && this._directionDegrees === t._directionDegrees;\n  }\n  closestTo([t, e, s]) {\n    return o(St, t, e), i(St, this._origin) || this._applyDirectionAndDistance(St), Q(St[0], St[1], this._z ?? s);\n  }\n  _applyDirectionAndDistance(t) {\n    if (null != this._directionDegrees && null != this._distanceMeters) v(t, this._origin, this._directionDegrees, this._distanceMeters, this._spatialReference);else if (null != this._directionDegrees) Gt(t, this._origin, this._directionDegrees, t, this._spatialReference);else if (null != this._distanceMeters) {\n      const {\n        azimuth: e\n      } = A(Ct, this._origin, t, this._spatialReference);\n      v(t, this._origin, e ?? 0, this._distanceMeters, this._spatialReference);\n    }\n  }\n}\nconst St = [0, 0],\n  Ct = new D();\nfunction Gt(t, e, s, r, n) {\n  let {\n    azimuth: i,\n    distance: o\n  } = A(Ot, e, r, n);\n  i ??= 0;\n  let c = o * Math.cos((i - s) * j);\n  c = Math.max(0, c), v(t, e, s, c, n);\n}\nconst Ot = new D();\nfunction Ft(t, e) {\n  const s = W();\n  return nt(e, t.planeLike, s), s[2] = t.getZ(s[0], s[1]) ?? ve, s;\n}\nfunction Ht(t, e) {\n  if (_e(t)) {\n    const s = [];\n    for (const r of t.constraints) {\n      const t = r.intersect(e);\n      t && s.push(t);\n    }\n    return ge(s);\n  }\n  if (_e(e)) return Ht(e, t);\n  if (qe(t)) return le(t, e);\n  if (qe(e)) return le(e, t);\n  if (Le(t)) {\n    const {\n      point: s\n    } = t;\n    if (Le(e)) return h(s, e.point) ? t : void 0;\n    const r = e.closestTo(s);\n    return _(r, s) ? t : void 0;\n  }\n  if (ke(t)) {\n    if (Le(e)) return Ht(e, t);\n    if (ke(e)) return pe(ot(t.lineLike, e.lineLike));\n    if (xe(e)) return Vt(t, e);\n    if (ye(e)) return pe(ct(e.planeLike, t.lineLike));\n    if (Pe(e)) return pe(ut(t.lineLike, e.center, e.radius));\n    if (Me(e)) return pe(at(t.lineLike, e));\n    if (ze(e)) return Yt(t, e);\n    if (Te(e)) return Bt(t, e);\n  } else if (xe(t)) {\n    if (Le(e) || ke(e)) return Ht(e, t);\n    if (xe(e)) return Kt(t, e);\n    if (ye(e)) return Qt(t, e);\n    if (Pe(e)) return Wt(t, e);\n    if (Me(e)) return $t(t, e);\n    if (ze(e)) return Xt(t, e);\n    if (Te(e)) return te(t, e);\n  } else if (ye(t)) {\n    if (Le(e) || ke(e) || xe(e)) return Ht(e, t);\n    if (ye(e)) return de(ht(t.planeLike, e.planeLike));\n    if (Pe(e)) return de(tt(t.planeLike, e.center, e.radius));\n    if (Me(e)) return se(t, e);\n    if (ze(e)) return ee(t, e);\n    if (Te(e)) return re(t, e);\n  } else if (Pe(t)) {\n    if (Le(e) || ke(e) || xe(e) || ye(e)) return Ht(e, t);\n    if (Pe(e)) return de(ft(K(t.center), t.radius, K(e.center), e.radius));\n    if (Me(e)) return ne();\n    if (ze(e)) return ie(t, e);\n    if (Te(e)) return oe();\n  } else if (Me(t)) {\n    if (Le(e) || ke(e) || xe(e) || ye(e) || Pe(e)) return Ht(e, t);\n    if (Me(e)) return ce();\n    if (ze(e)) return ce(e.asCircle());\n    if (Te(e)) return ue();\n  } else if (ze(t)) {\n    if (Le(e) || ke(e) || xe(e) || ye(e) || Pe(e) || Me(e)) return Ht(e, t);\n    if (ze(e)) return ae(e, t);\n    if (Te(e)) return he();\n  } else if (Te(t)) {\n    if (Le(e) || ke(e) || xe(e) || ye(e) || Pe(e) || ze(e)) return Ht(e, t);\n    if (Te(e)) return fe();\n  }\n}\nconst Vt = (() => {\n  const t = b();\n  return (e, s) => {\n    const {\n      start: r,\n      end: n\n    } = e;\n    if (X(r, n) && $(r[2], s.z)) return e;\n    const i = W();\n    return E(s.getPlane(t), r, n, i) ? new gt(i) : void 0;\n  };\n})();\nfunction Yt({\n  lineLike: t\n}, {\n  center: e,\n  radius: s\n}) {\n  const r = e[2];\n  return pe(ut(t, e, s).filter(t => $(t[2], r)));\n}\nfunction Bt({\n  lineLike: t\n}, {\n  sphere: e\n}) {\n  return pe(H(e, t.start, t.end));\n}\nconst Jt = (() => {\n  const t = w(),\n    e = P(),\n    r = P();\n  return (n, i, o) => {\n    const {\n      normal: c,\n      center: u,\n      radius: h\n    } = i;\n    V(c, e, r);\n    const f = S(n),\n      l = h * L(f, e),\n      d = h * L(f, r);\n    T(t, u[0], u[1], u[2], 1);\n    const p = q(n, t),\n      m = Math.hypot(l, d),\n      g = $(m, 0);\n    if ($(Z(n, u), 0)) {\n      if (g) return i;\n      if ($(h, 0)) return !o || et(o, u) ? new gt(B(u)) : void 0;\n      k(e, f, c), x(e, e);\n      const t = new Array(),\n        s = y(u);\n      a(s, s, e, h), o && !et(o, s) || t.push(s);\n      const r = y(u);\n      return a(r, r, e, -h), o && !et(o, r) || t.push(r), pe(t);\n    }\n    if (g) return;\n    const _ = -p / m;\n    if (Math.abs(_) > 1 || $(_, 1)) return;\n    const z = Math.atan(l / d),\n      M = s(_) - z,\n      w = Math.PI - M,\n      j = new Array(),\n      v = P();\n    a(v, u, e, h * Math.cos(M)), a(v, v, r, h * Math.sin(M)), j.push(v);\n    const A = P();\n    return a(A, u, e, h * Math.cos(w)), a(A, A, r, h * Math.sin(w)), j.push(A), pe(o ? lt(o, j) : j);\n  };\n})();\nfunction Kt(t, e) {\n  return $(t.z, e.z) ? t : void 0;\n}\nfunction Qt({\n  z: t\n}, {\n  planeLike: e\n}) {\n  const [s, r] = e.start,\n    [n, i] = e.end,\n    o = J(s, r, t),\n    c = J(n, i, t);\n  return e.type === it.PLANE ? new Lt(o, c) : new kt(o, c);\n}\nfunction Wt(t, e) {\n  const [s, r] = e.center;\n  return new Pt(J(s, r, t.z), e.radius);\n}\nfunction Xt(t, e) {\n  return $(e.center[2], t.z) ? e : void 0;\n}\nconst $t = (() => {\n  const t = b();\n  return (e, s) => Jt(e.getPlane(t), s, s.slicePlane);\n})();\nfunction te(t, {\n  center: e,\n  radius: s\n}) {\n  const r = Math.abs(e[2] - t.z);\n  if (r > s && !$(r, s)) return;\n  const n = J(e[0], e[1], t.z),\n    i = Math.sqrt(s ** 2 - r ** 2);\n  return $(i, 0) ? void 0 : new Pt(n, i);\n}\nconst ee = (() => {\n    const t = b();\n    return (e, {\n      center: s,\n      radius: r\n    }) => {\n      const n = tt(e.planeLike, s, r),\n        i = s[2];\n      e.getSlicePlane(t);\n      const o = new Array();\n      for (const [c, u] of n) {\n        const e = [c, u, i];\n        et(t, e) && o.push(e);\n      }\n      return pe(o);\n    };\n  })(),\n  se = (() => {\n    const t = b(),\n      e = b();\n    return (s, r) => Jt(s.getPlane(t), r, s.getSlicePlane(e));\n  })(),\n  re = (() => {\n    const t = b();\n    return (e, {\n      center: s,\n      radius: r\n    }) => {\n      const n = e.getPlane(t),\n        i = R(n, s),\n        o = Math.abs(i);\n      if (o > r && !$(o, r)) return;\n      const c = Math.sqrt(r ** 2 - i ** 2);\n      if ($(c, 0)) {\n        const t = W();\n        return I(n, s, t), new gt(t);\n      }\n      const u = W(),\n        h = y(S(n));\n      return a(u, s, h, i), new zt(u, c, h, e.getSlicePlane());\n    };\n  })();\nfunction ne(t, e) {}\nfunction ie(t, e) {\n  const s = c(K(t.center), K(e.center));\n  if ($(s, 0) && $(t.radius, e.radius)) return e;\n  return me(ft(K(t.center), t.radius, K(e.center), e.radius), e.center[2]);\n}\nfunction oe(t, e) {}\nfunction ce(t, e) {}\nfunction ue(t, e) {}\nfunction ae(t, e) {\n  if (!X(t.center, e.center)) return;\n  const s = c(K(t.center), K(e.center));\n  if ($(s, 0) && $(t.radius, e.radius)) return t;\n  return me(ft(K(t.center), t.radius, K(e.center), e.radius), t.center[2]);\n}\nfunction he(t, e) {}\nfunction fe(t, e) {}\nfunction le(t, e) {\n  const {\n      planeLike: s,\n      getZ: r\n    } = t,\n    n = new Array();\n  if (Le(e)) t.addIfOnTheGround(n, dt(s, e.point));else if (ke(e)) t.addIfOnTheGround(n, ct(s, e.lineLike));else if (Pe(e)) for (const [i, o] of tt(s, e.center, e.radius)) {\n    const t = r(i, o);\n    null != t && n.push(M(i, o, t));\n  } else if (ye(e) || qe(e)) for (const [i, o] of ht(s, e.planeLike)) {\n    const t = r(i, o) ?? ve;\n    n.push(M(i, o, t));\n  }\n  return pe(n);\n}\nfunction de(t) {\n  return ge(t.map(([t, e]) => {\n    const s = J(t, e, 0),\n      r = J(t, e, 1);\n    return new Lt(s, r);\n  }));\n}\nfunction pe(t) {\n  return ge(t.map(t => t ? new gt(Y(t)) : void 0));\n}\nfunction me(t, e) {\n  return pe(t.map(([t, s]) => [t, s, e]));\n}\nfunction ge(e) {\n  if (0 !== e.length) return 1 === e.length ? e[0] ?? void 0 : new xt(e.filter(t));\n}\nfunction _e(t) {\n  return t instanceof xt;\n}\nfunction Le(t) {\n  return t instanceof gt;\n}\nfunction ke(t) {\n  return t instanceof _t;\n}\nfunction xe(t) {\n  return t instanceof qt;\n}\nfunction ye(t) {\n  return t instanceof jt;\n}\nfunction Pe(t) {\n  return t instanceof yt;\n}\nfunction ze(t) {\n  return t instanceof Pt;\n}\nfunction Me(t) {\n  return t instanceof zt;\n}\nfunction Te(t) {\n  return t instanceof It;\n}\nfunction qe(t) {\n  return t instanceof Nt;\n}\nfunction we(t) {\n  return t instanceof Zt;\n}\nfunction je(t) {\n  return t instanceof Ut;\n}\nconst ve = 0;\nexport { zt as CircleConstraint, mt as Constraint, Ut as CoordinateConstraint, Nt as DrapedLineConstraint, Zt as GeodesicConstraint, Pt as HorizontalCircleConstraint, qt as HorizontalPlaneConstraint, Lt as LineConstraint, _t as LineLikeConstraint, gt as PointConstraint, kt as RayConstraint, xt as SetConstraint, It as SphereConstraint, yt as VerticalCylinderConstraint, Et as VerticalHalfPlaneConstraint, Rt as VerticalPlaneConstraint, jt as VerticalPlaneLikeConstraint, ge as constraintOrSet, Le as isPoint };","map":{"version":3,"names":["isSome","t","equals","e","asinClamped","s","dot","r","subtract","n","exactEquals","i","set","o","squaredDistance","c","create","u","b","a","p","h","f","l","k","d","m","g","I","_","L","x","clone","y","P","UNIT_Z","z","fromValues","M","T","q","w","toRadians","j","directGeodeticSolver","v","inverseGeodeticSolver","A","InverseGeodeticSolverResult","D","intersectLine","E","signedDistance","R","projectPoint","fromPositionAndNormal","N","fromPoints","U","distance","Z","getNormal","S","C","G","O","F","H","tangentFrame","V","fromVec3","Y","B","J","asVec2","K","Q","createWritable","W","vectorsHaveCloseZ","X","isClose","$","intersectVerticalPlaneAndVerticalCylinder","tt","isPointInsidePlane","et","projectPointToLineLike","st","projectPointToVerticalCylinder","rt","projectPointToVerticalPlane","nt","VerticalPlaneType","it","intersectLineLikes","ot","intersectVerticalPlaneAndLineLike","ct","intersectLineLikeAndVerticalCylinder","ut","intersectLineLikeAndCircle","at","intersectVerticalPlanes","ht","intersectVerticalCylinders","ft","pointsInsidePlane","lt","intersectVerticalPlaneAndPoint","dt","LineType","pt","mt","intersect","Ht","closestPoints","closestTo","gt","constructor","point","Le","_t","start","end","lineLike","type","ke","Lt","LINE","kt","RAY","xt","constraints","_e","flatMap","yt","center","radius","Pe","Pt","ze","asCircle","zt","normal","slicePlane","Me","getPlane","Tt","Mt","Math","sqrt","Jt","qt","xe","wt","jt","planeLike","ye","closestEndTo","sign","vt","At","Dt","getSlicePlane","PLANE","bt","Et","HALF_PLANE","Rt","It","sphere","Te","Nt","getZ","qe","Ft","addIfOnTheGround","push","Ut","_x","_y","_z","je","Zt","_origin","_spatialReference","_distanceMeters","_directionDegrees","we","St","_applyDirectionAndDistance","Gt","azimuth","Ct","Ot","cos","max","ve","ge","le","pe","Vt","Yt","Bt","Kt","Qt","Wt","$t","Xt","te","de","se","ee","re","ne","ie","oe","ce","ue","ae","he","fe","filter","hypot","Array","abs","atan","PI","sin","me","map","length","CircleConstraint","Constraint","CoordinateConstraint","DrapedLineConstraint","GeodesicConstraint","HorizontalCircleConstraint","HorizontalPlaneConstraint","LineConstraint","LineLikeConstraint","PointConstraint","RayConstraint","SetConstraint","SphereConstraint","VerticalCylinderConstraint","VerticalHalfPlaneConstraint","VerticalPlaneConstraint","VerticalPlaneLikeConstraint","constraintOrSet","isPoint"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/interactive/sketch/constraints.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{isSome as t,equals as e}from\"../../../core/arrayUtils.js\";import{asinClamped as s}from\"../../../core/mathUtils.js\";import{dot as r,subtract as n,exactEquals as i,set as o,squaredDistance as c}from\"../../../core/libs/gl-matrix-2/math/vec2.js\";import{create as u}from\"../../../core/libs/gl-matrix-2/factories/vec2f64.js\";import{b as a,p as h,s as f,a as l,k as d,i as p,c as m,d as g,I as _,f as L,e as k,n as x}from\"../../../chunks/vec32.js\";import{clone as y,create as P,UNIT_Z as z,fromValues as M}from\"../../../core/libs/gl-matrix-2/factories/vec3f64.js\";import{s as T,h as q}from\"../../../chunks/vec42.js\";import{create as w}from\"../../../core/libs/gl-matrix-2/factories/vec4f64.js\";import{toRadians as j}from\"../../../geometry/support/geodesicConstants.js\";import{directGeodeticSolver as v,inverseGeodeticSolver as A,InverseGeodeticSolverResult as D}from\"../../../geometry/support/geodesicUtils.js\";import{create as b,intersectLine as E,signedDistance as R,projectPoint as I,fromPositionAndNormal as N,fromPoints as U,distance as Z,getNormal as S}from\"../../../geometry/support/plane.js\";import{l as C,m as G,p as O,a as F,n as H}from\"../../../chunks/sphere.js\";import{tangentFrame as V}from\"../../3d/support/mathUtils.js\";import{fromVec3 as Y,clone as B,fromValues as J,asVec2 as K,create as Q,createWritable as W}from\"./normalizedPoint.js\";import{vectorsHaveCloseZ as X,isClose as $,intersectVerticalPlaneAndVerticalCylinder as tt,isPointInsidePlane as et,projectPointToLineLike as st,projectPointToVerticalCylinder as rt,projectPointToVerticalPlane as nt,VerticalPlaneType as it,intersectLineLikes as ot,intersectVerticalPlaneAndLineLike as ct,intersectLineLikeAndVerticalCylinder as ut,intersectLineLikeAndCircle as at,intersectVerticalPlanes as ht,intersectVerticalCylinders as ft,pointsInsidePlane as lt,intersectVerticalPlaneAndPoint as dt}from\"../../support/geometry3dUtils.js\";import{LineType as pt}from\"../../support/geometry2dUtils.js\";class mt{intersect(t){return Ht(this,t)}closestPoints(t){return[this.closestTo(t)]}}class gt extends mt{constructor(t){super(),this.point=t}equals(t){return this===t||Le(t)&&h(this.point,t.point)}closestTo(){return B(this.point)}}class _t extends mt{constructor(t,e,s){super(),this.start=t,this.end=e,this.lineLike={start:t,end:e,type:s}}equals(t){return this===t||ke(t)&&this.lineLike.type===t.lineLike.type&&h(this.start,t.start)&&h(this.end,t.end)}closestTo(t){const e=W();return st(t,this.lineLike,e),e}}class Lt extends _t{constructor(t,e){super(t,e,pt.LINE)}}class kt extends _t{constructor(t,e){super(t,e,pt.RAY)}}class xt extends mt{constructor(t){super(),this.constraints=t}equals(t){return this===t||_e(t)&&e(this.constraints,t.constraints,((t,e)=>t.equals(e)))}closestTo(t){let e,s=1/0;for(const r of this.constraints){const n=r.closestTo(t),i=f(t,n);i<s&&(s=i,e=n)}return B(e??t)}closestPoints(t){return this.constraints.flatMap((e=>e===this?[]:e.closestPoints(t)))}}class yt extends mt{constructor(t,e){super(),this.center=t,this.radius=e}equals(t){return this===t||Pe(t)&&this.center[0]===t.center[0]&&this.center[1]===t.center[1]&&this.radius===t.radius}closestTo(t){const e=W();return rt(t,this.center,this.radius,e),e}}class Pt extends mt{constructor(t,e){super(),this.center=t,this.radius=e}equals(t){return this===t||ze(t)&&h(this.center,t.center)&&this.radius===t.radius}closestTo(t){const e=W();return rt(t,this.center,this.radius,e),e[2]=this.center[2],e}asCircle(){return new zt(B(this.center),this.radius,J(0,0,1))}}class zt extends mt{constructor(t,e,s,r=void 0){super(),this.center=t,this.radius=e,this.normal=s,this.slicePlane=r}equals(t){return this===t||Me(t)&&h(this.center,t.center)&&h(this.normal,t.normal)&&this.radius===t.radius}closestTo(t){const{center:e,radius:s}=this;I(this.getPlane(Tt),t,Mt);const r=l(Mt,Mt,e),n=d(r);if($(n,0))return B(t);const i=s/Math.sqrt(n),o=W();a(o,e,r,i);const{slicePlane:c}=this;if(c&&!et(c,o)){const e=Jt(c,this);return e?.closestTo(t)??B(t)}return o}getPlane(t=b()){return N(this.center,this.normal,t)}}const Mt=P(),Tt=b();class qt extends mt{constructor(t){super(),this.z=t}equals(t){return this===t||xe(t)&&this.z===t.z}closestTo(t){return J(t[0],t[1],this.z)}getPlane(t=b()){return p(wt,0,0,this.z),N(wt,z,t)}}const wt=P();class jt extends mt{constructor(t,e,s){super(),this.start=t,this.end=e,this.planeLike={start:K(t),end:K(e),type:s}}equals(t){return this===t||ye(t)&&this.planeLike.type===t.planeLike.type&&h(this.start,t.start)&&h(this.end,t.end)}closestTo(t){const e=W();return nt(t,this.planeLike,e),e}closestEndTo(t){const{start:e,end:s}=this.planeLike;return Math.sign(r(n(vt,s,e),n(At,K(t),e)))>0?this.end:this.start}getPlane(t=b()){const e=m(Dt,this.end);return e[2]+=1,U(this.start,this.end,e,t)}getSlicePlane(t=b()){const{start:e,end:s,type:r}=this.planeLike;if(r===it.PLANE)return;const n=p(Dt,e[0],e[1],0),i=p(bt,s[0],s[1],0),o=g(bt,i,n);return N(n,o,t),t}}const vt=u(),At=u(),Dt=P(),bt=P();class Et extends jt{constructor(t,e){super(t,e,it.HALF_PLANE)}}class Rt extends jt{constructor(t,e){super(t,e,it.PLANE)}}class It extends mt{constructor(t,e){super(),this.sphere=C(t,e)}equals(t){return this===t||Te(t)&&G(this.sphere,t.sphere)}closestTo(t){const e=W();return O(this.sphere,t,e),e}get center(){return F(this.sphere)}get radius(){return this.sphere[3]}}class Nt extends mt{constructor(t,e,s){super(),this.start=t,this.end=e,this.getZ=s,this.planeLike={start:K(t),end:K(e),type:it.PLANE}}equals(t){return this===t||qe(t)&&h(this.start,t.start)&&h(this.end,t.end)&&this.getZ===t.getZ}closestTo(t){return Ft(this,t)}addIfOnTheGround(t,e){for(const s of e){const e=this.getZ(s[0],s[1])??0;$(s[2],e)&&(s[2]=e,t.push(s))}}}class Ut extends mt{constructor(t,e,s){super(),this._x=t,this._y=e,this._z=s}equals(t){return this===t||je(t)&&this._x===t._x&&this._y===t._y&&this._z===t._z}closestTo([t,e,s]){return Q(this._x??t,this._y??e,this._z??s)}}class Zt extends mt{constructor(t,e,s,r,n){super(),this._origin=t,this._spatialReference=e,this._distanceMeters=s,this._z=r,this._directionDegrees=n}equals(t){return this===t||we(t)&&i(this._origin,t._origin)&&this._spatialReference===t._spatialReference&&this._distanceMeters===t._distanceMeters&&this._z===t._z&&this._directionDegrees===t._directionDegrees}closestTo([t,e,s]){return o(St,t,e),i(St,this._origin)||this._applyDirectionAndDistance(St),Q(St[0],St[1],this._z??s)}_applyDirectionAndDistance(t){if(null!=this._directionDegrees&&null!=this._distanceMeters)v(t,this._origin,this._directionDegrees,this._distanceMeters,this._spatialReference);else if(null!=this._directionDegrees)Gt(t,this._origin,this._directionDegrees,t,this._spatialReference);else if(null!=this._distanceMeters){const{azimuth:e}=A(Ct,this._origin,t,this._spatialReference);v(t,this._origin,e??0,this._distanceMeters,this._spatialReference)}}}const St=[0,0],Ct=new D;function Gt(t,e,s,r,n){let{azimuth:i,distance:o}=A(Ot,e,r,n);i??=0;let c=o*Math.cos((i-s)*j);c=Math.max(0,c),v(t,e,s,c,n)}const Ot=new D;function Ft(t,e){const s=W();return nt(e,t.planeLike,s),s[2]=t.getZ(s[0],s[1])??ve,s}function Ht(t,e){if(_e(t)){const s=[];for(const r of t.constraints){const t=r.intersect(e);t&&s.push(t)}return ge(s)}if(_e(e))return Ht(e,t);if(qe(t))return le(t,e);if(qe(e))return le(e,t);if(Le(t)){const{point:s}=t;if(Le(e))return h(s,e.point)?t:void 0;const r=e.closestTo(s);return _(r,s)?t:void 0}if(ke(t)){if(Le(e))return Ht(e,t);if(ke(e))return pe(ot(t.lineLike,e.lineLike));if(xe(e))return Vt(t,e);if(ye(e))return pe(ct(e.planeLike,t.lineLike));if(Pe(e))return pe(ut(t.lineLike,e.center,e.radius));if(Me(e))return pe(at(t.lineLike,e));if(ze(e))return Yt(t,e);if(Te(e))return Bt(t,e)}else if(xe(t)){if(Le(e)||ke(e))return Ht(e,t);if(xe(e))return Kt(t,e);if(ye(e))return Qt(t,e);if(Pe(e))return Wt(t,e);if(Me(e))return $t(t,e);if(ze(e))return Xt(t,e);if(Te(e))return te(t,e)}else if(ye(t)){if(Le(e)||ke(e)||xe(e))return Ht(e,t);if(ye(e))return de(ht(t.planeLike,e.planeLike));if(Pe(e))return de(tt(t.planeLike,e.center,e.radius));if(Me(e))return se(t,e);if(ze(e))return ee(t,e);if(Te(e))return re(t,e)}else if(Pe(t)){if(Le(e)||ke(e)||xe(e)||ye(e))return Ht(e,t);if(Pe(e))return de(ft(K(t.center),t.radius,K(e.center),e.radius));if(Me(e))return ne();if(ze(e))return ie(t,e);if(Te(e))return oe()}else if(Me(t)){if(Le(e)||ke(e)||xe(e)||ye(e)||Pe(e))return Ht(e,t);if(Me(e))return ce();if(ze(e))return ce(e.asCircle());if(Te(e))return ue()}else if(ze(t)){if(Le(e)||ke(e)||xe(e)||ye(e)||Pe(e)||Me(e))return Ht(e,t);if(ze(e))return ae(e,t);if(Te(e))return he()}else if(Te(t)){if(Le(e)||ke(e)||xe(e)||ye(e)||Pe(e)||ze(e))return Ht(e,t);if(Te(e))return fe()}}const Vt=(()=>{const t=b();return(e,s)=>{const{start:r,end:n}=e;if(X(r,n)&&$(r[2],s.z))return e;const i=W();return E(s.getPlane(t),r,n,i)?new gt(i):void 0}})();function Yt({lineLike:t},{center:e,radius:s}){const r=e[2];return pe(ut(t,e,s).filter((t=>$(t[2],r))))}function Bt({lineLike:t},{sphere:e}){return pe(H(e,t.start,t.end))}const Jt=(()=>{const t=w(),e=P(),r=P();return(n,i,o)=>{const{normal:c,center:u,radius:h}=i;V(c,e,r);const f=S(n),l=h*L(f,e),d=h*L(f,r);T(t,u[0],u[1],u[2],1);const p=q(n,t),m=Math.hypot(l,d),g=$(m,0);if($(Z(n,u),0)){if(g)return i;if($(h,0))return!o||et(o,u)?new gt(B(u)):void 0;k(e,f,c),x(e,e);const t=new Array,s=y(u);a(s,s,e,h),o&&!et(o,s)||t.push(s);const r=y(u);return a(r,r,e,-h),o&&!et(o,r)||t.push(r),pe(t)}if(g)return;const _=-p/m;if(Math.abs(_)>1||$(_,1))return;const z=Math.atan(l/d),M=s(_)-z,w=Math.PI-M,j=new Array,v=P();a(v,u,e,h*Math.cos(M)),a(v,v,r,h*Math.sin(M)),j.push(v);const A=P();return a(A,u,e,h*Math.cos(w)),a(A,A,r,h*Math.sin(w)),j.push(A),pe(o?lt(o,j):j)}})();function Kt(t,e){return $(t.z,e.z)?t:void 0}function Qt({z:t},{planeLike:e}){const[s,r]=e.start,[n,i]=e.end,o=J(s,r,t),c=J(n,i,t);return e.type===it.PLANE?new Lt(o,c):new kt(o,c)}function Wt(t,e){const[s,r]=e.center;return new Pt(J(s,r,t.z),e.radius)}function Xt(t,e){return $(e.center[2],t.z)?e:void 0}const $t=(()=>{const t=b();return(e,s)=>Jt(e.getPlane(t),s,s.slicePlane)})();function te(t,{center:e,radius:s}){const r=Math.abs(e[2]-t.z);if(r>s&&!$(r,s))return;const n=J(e[0],e[1],t.z),i=Math.sqrt(s**2-r**2);return $(i,0)?void 0:new Pt(n,i)}const ee=(()=>{const t=b();return(e,{center:s,radius:r})=>{const n=tt(e.planeLike,s,r),i=s[2];e.getSlicePlane(t);const o=new Array;for(const[c,u]of n){const e=[c,u,i];et(t,e)&&o.push(e)}return pe(o)}})(),se=(()=>{const t=b(),e=b();return(s,r)=>Jt(s.getPlane(t),r,s.getSlicePlane(e))})(),re=(()=>{const t=b();return(e,{center:s,radius:r})=>{const n=e.getPlane(t),i=R(n,s),o=Math.abs(i);if(o>r&&!$(o,r))return;const c=Math.sqrt(r**2-i**2);if($(c,0)){const t=W();return I(n,s,t),new gt(t)}const u=W(),h=y(S(n));return a(u,s,h,i),new zt(u,c,h,e.getSlicePlane())}})();function ne(t,e){}function ie(t,e){const s=c(K(t.center),K(e.center));if($(s,0)&&$(t.radius,e.radius))return e;return me(ft(K(t.center),t.radius,K(e.center),e.radius),e.center[2])}function oe(t,e){}function ce(t,e){}function ue(t,e){}function ae(t,e){if(!X(t.center,e.center))return;const s=c(K(t.center),K(e.center));if($(s,0)&&$(t.radius,e.radius))return t;return me(ft(K(t.center),t.radius,K(e.center),e.radius),t.center[2])}function he(t,e){}function fe(t,e){}function le(t,e){const{planeLike:s,getZ:r}=t,n=new Array;if(Le(e))t.addIfOnTheGround(n,dt(s,e.point));else if(ke(e))t.addIfOnTheGround(n,ct(s,e.lineLike));else if(Pe(e))for(const[i,o]of tt(s,e.center,e.radius)){const t=r(i,o);null!=t&&n.push(M(i,o,t))}else if(ye(e)||qe(e))for(const[i,o]of ht(s,e.planeLike)){const t=r(i,o)??ve;n.push(M(i,o,t))}return pe(n)}function de(t){return ge(t.map((([t,e])=>{const s=J(t,e,0),r=J(t,e,1);return new Lt(s,r)})))}function pe(t){return ge(t.map((t=>t?new gt(Y(t)):void 0)))}function me(t,e){return pe(t.map((([t,s])=>[t,s,e])))}function ge(e){if(0!==e.length)return 1===e.length?e[0]??void 0:new xt(e.filter(t))}function _e(t){return t instanceof xt}function Le(t){return t instanceof gt}function ke(t){return t instanceof _t}function xe(t){return t instanceof qt}function ye(t){return t instanceof jt}function Pe(t){return t instanceof yt}function ze(t){return t instanceof Pt}function Me(t){return t instanceof zt}function Te(t){return t instanceof It}function qe(t){return t instanceof Nt}function we(t){return t instanceof Zt}function je(t){return t instanceof Ut}const ve=0;export{zt as CircleConstraint,mt as Constraint,Ut as CoordinateConstraint,Nt as DrapedLineConstraint,Zt as GeodesicConstraint,Pt as HorizontalCircleConstraint,qt as HorizontalPlaneConstraint,Lt as LineConstraint,_t as LineLikeConstraint,gt as PointConstraint,kt as RayConstraint,xt as SetConstraint,It as SphereConstraint,yt as VerticalCylinderConstraint,Et as VerticalHalfPlaneConstraint,Rt as VerticalPlaneConstraint,jt as VerticalPlaneLikeConstraint,ge as constraintOrSet,Le as isPoint};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}