{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { ShaderOutput as o, isColorEmission as r, isColorOrColorEmission as l } from \"../core/shaderLibrary/ShaderOutput.js\";\nimport { Emissions as t } from \"../core/shaderLibrary/output/Emissions.glsl.js\";\nimport { OutputHighlight as i } from \"../core/shaderLibrary/output/OutputHighlight.glsl.js\";\nimport { ColorConversion as a } from \"../core/shaderLibrary/util/ColorConversion.glsl.js\";\nimport { glsl as s, If as u } from \"../core/shaderModules/glsl.js\";\nimport { OITPass as e } from \"../lib/OITPass.js\";\nimport { alphaCutoff as n } from \"../../../../webscene/support/AlphaCutoff.js\";\nfunction p(p, d) {\n  p.include(i, d), p.include(t, d), p.fragment.include(a);\n  const f = d.output === o.ObjectAndLayerIdColor,\n    c = r(d.output),\n    m = l(d.output) && d.oitPass === e.ColorAlpha,\n    g = l(d.output) && d.oitPass !== e.ColorAlpha,\n    C = d.discardInvisibleFragments;\n  let h = 0;\n  (g || c || m) && p.outputs.add(\"fragColor\", \"vec4\", h++), c && p.outputs.add(\"fragEmission\", \"vec4\", h++), m && p.outputs.add(\"fragAlpha\", \"float\", h++), p.fragment.code.add(s`\n    void outputColorHighlightOID(vec4 finalColor, const in vec3 vWorldPosition) {\n      ${u(f, \"finalColor.a = 1.0;\")}\n\n      ${u(C, `if (finalColor.a < ${s.float(n)}) { discard; }`)}\n\n      finalColor = applySlice(finalColor, vWorldPosition);\n      ${u(m, s`fragColor = premultiplyAlpha(finalColor);\n             fragAlpha = finalColor.a;`)}\n      ${u(g, \"fragColor = finalColor;\")}\n      ${u(c, \"fragEmission = finalColor.a * getEmissions();\")}\n      calculateOcclusionAndOutputHighlight();\n      ${u(f, \"outputObjectAndLayerIdColor();\")}\n    }\n  `);\n}\nexport { p as outputColorHighlightOID };","map":{"version":3,"names":["ShaderOutput","o","isColorEmission","r","isColorOrColorEmission","l","Emissions","t","OutputHighlight","i","ColorConversion","a","glsl","s","If","u","OITPass","e","alphaCutoff","n","p","d","include","fragment","f","output","ObjectAndLayerIdColor","c","m","oitPass","ColorAlpha","g","C","discardInvisibleFragments","h","outputs","add","code","float","outputColorHighlightOID"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/3d/webgl-engine/shaders/OutputColorHighlightOID.glsl.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{ShaderOutput as o,isColorEmission as r,isColorOrColorEmission as l}from\"../core/shaderLibrary/ShaderOutput.js\";import{Emissions as t}from\"../core/shaderLibrary/output/Emissions.glsl.js\";import{OutputHighlight as i}from\"../core/shaderLibrary/output/OutputHighlight.glsl.js\";import{ColorConversion as a}from\"../core/shaderLibrary/util/ColorConversion.glsl.js\";import{glsl as s,If as u}from\"../core/shaderModules/glsl.js\";import{OITPass as e}from\"../lib/OITPass.js\";import{alphaCutoff as n}from\"../../../../webscene/support/AlphaCutoff.js\";function p(p,d){p.include(i,d),p.include(t,d),p.fragment.include(a);const f=d.output===o.ObjectAndLayerIdColor,c=r(d.output),m=l(d.output)&&d.oitPass===e.ColorAlpha,g=l(d.output)&&d.oitPass!==e.ColorAlpha,C=d.discardInvisibleFragments;let h=0;(g||c||m)&&p.outputs.add(\"fragColor\",\"vec4\",h++),c&&p.outputs.add(\"fragEmission\",\"vec4\",h++),m&&p.outputs.add(\"fragAlpha\",\"float\",h++),p.fragment.code.add(s`\n    void outputColorHighlightOID(vec4 finalColor, const in vec3 vWorldPosition) {\n      ${u(f,\"finalColor.a = 1.0;\")}\n\n      ${u(C,`if (finalColor.a < ${s.float(n)}) { discard; }`)}\n\n      finalColor = applySlice(finalColor, vWorldPosition);\n      ${u(m,s`fragColor = premultiplyAlpha(finalColor);\n             fragAlpha = finalColor.a;`)}\n      ${u(g,\"fragColor = finalColor;\")}\n      ${u(c,\"fragEmission = finalColor.a * getEmissions();\")}\n      calculateOcclusionAndOutputHighlight();\n      ${u(f,\"outputObjectAndLayerIdColor();\")}\n    }\n  `)}export{p as outputColorHighlightOID};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,YAAY,IAAIC,CAAC,EAACC,eAAe,IAAIC,CAAC,EAACC,sBAAsB,IAAIC,CAAC,QAAK,uCAAuC;AAAC,SAAOC,SAAS,IAAIC,CAAC,QAAK,gDAAgD;AAAC,SAAOC,eAAe,IAAIC,CAAC,QAAK,sDAAsD;AAAC,SAAOC,eAAe,IAAIC,CAAC,QAAK,oDAAoD;AAAC,SAAOC,IAAI,IAAIC,CAAC,EAACC,EAAE,IAAIC,CAAC,QAAK,+BAA+B;AAAC,SAAOC,OAAO,IAAIC,CAAC,QAAK,mBAAmB;AAAC,SAAOC,WAAW,IAAIC,CAAC,QAAK,6CAA6C;AAAC,SAASC,CAACA,CAACA,CAAC,EAACC,CAAC,EAAC;EAACD,CAAC,CAACE,OAAO,CAACb,CAAC,EAACY,CAAC,CAAC,EAACD,CAAC,CAACE,OAAO,CAACf,CAAC,EAACc,CAAC,CAAC,EAACD,CAAC,CAACG,QAAQ,CAACD,OAAO,CAACX,CAAC,CAAC;EAAC,MAAMa,CAAC,GAACH,CAAC,CAACI,MAAM,KAAGxB,CAAC,CAACyB,qBAAqB;IAACC,CAAC,GAACxB,CAAC,CAACkB,CAAC,CAACI,MAAM,CAAC;IAACG,CAAC,GAACvB,CAAC,CAACgB,CAAC,CAACI,MAAM,CAAC,IAAEJ,CAAC,CAACQ,OAAO,KAAGZ,CAAC,CAACa,UAAU;IAACC,CAAC,GAAC1B,CAAC,CAACgB,CAAC,CAACI,MAAM,CAAC,IAAEJ,CAAC,CAACQ,OAAO,KAAGZ,CAAC,CAACa,UAAU;IAACE,CAAC,GAACX,CAAC,CAACY,yBAAyB;EAAC,IAAIC,CAAC,GAAC,CAAC;EAAC,CAACH,CAAC,IAAEJ,CAAC,IAAEC,CAAC,KAAGR,CAAC,CAACe,OAAO,CAACC,GAAG,CAAC,WAAW,EAAC,MAAM,EAACF,CAAC,EAAE,CAAC,EAACP,CAAC,IAAEP,CAAC,CAACe,OAAO,CAACC,GAAG,CAAC,cAAc,EAAC,MAAM,EAACF,CAAC,EAAE,CAAC,EAACN,CAAC,IAAER,CAAC,CAACe,OAAO,CAACC,GAAG,CAAC,WAAW,EAAC,OAAO,EAACF,CAAC,EAAE,CAAC,EAACd,CAAC,CAACG,QAAQ,CAACc,IAAI,CAACD,GAAG,CAACvB,CAAC;AAC/6B;AACA,QAAQE,CAAC,CAACS,CAAC,EAAC,qBAAqB,CAAC;AAClC;AACA,QAAQT,CAAC,CAACiB,CAAC,EAAC,sBAAsBnB,CAAC,CAACyB,KAAK,CAACnB,CAAC,CAAC,gBAAgB,CAAC;AAC7D;AACA;AACA,QAAQJ,CAAC,CAACa,CAAC,EAACf,CAAC;AACb,uCAAuC,CAAC;AACxC,QAAQE,CAAC,CAACgB,CAAC,EAAC,yBAAyB,CAAC;AACtC,QAAQhB,CAAC,CAACY,CAAC,EAAC,+CAA+C,CAAC;AAC5D;AACA,QAAQZ,CAAC,CAACS,CAAC,EAAC,gCAAgC,CAAC;AAC7C;AACA,GAAG,CAAC;AAAA;AAAC,SAAOJ,CAAC,IAAImB,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}