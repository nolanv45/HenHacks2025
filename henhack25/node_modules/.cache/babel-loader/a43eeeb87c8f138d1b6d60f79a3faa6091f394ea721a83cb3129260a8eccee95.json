{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { _ as o } from \"../../../chunks/tslib.es6.js\";\nimport { clone as t } from \"../../../core/lang.js\";\nimport { property as s } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/has.js\";\nimport \"../../../core/Logger.js\";\nimport { subclass as r } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport { convolutionKernel as e } from \"../rasterFunctionConstants.js\";\nimport n from \"./BaseFunctionArguments.js\";\nimport { convolutionKernels as i } from \"./convolutionUtils.js\";\nvar p;\nlet c = p = class extends n {\n  constructor() {\n    super(...arguments), this.rows = 3, this.cols = 3, this.kernel = [0, 0, 0, 0, 1, 0, 0, 0, 0];\n  }\n  set convolutionType(o) {\n    this._set(\"convolutionType\", o);\n    const t = i.get(o);\n    if (!t || o === e.userDefined || o === e.none) return;\n    const s = Math.sqrt(t.length);\n    this._set(\"kernel\", t), this._set(\"cols\", s), this._set(\"rows\", s);\n  }\n  clone() {\n    return new p({\n      cols: this.cols,\n      rows: this.rows,\n      kernel: [...this.kernel],\n      convolutionType: this.convolutionType,\n      raster: t(this.raster)\n    });\n  }\n};\no([s({\n  json: {\n    type: Number,\n    write: !0\n  }\n})], c.prototype, \"rows\", void 0), o([s({\n  json: {\n    type: Number,\n    write: !0\n  }\n})], c.prototype, \"cols\", void 0), o([s({\n  json: {\n    name: \"type\",\n    type: Number,\n    write: !0\n  }\n})], c.prototype, \"convolutionType\", null), o([s({\n  json: {\n    type: [Number],\n    write: !0\n  }\n})], c.prototype, \"kernel\", void 0), c = p = o([r(\"esri.layers.support.rasterFunctions.ConvolutionFunctionArguments\")], c);\nconst l = c;\nexport { l as default };","map":{"version":3,"names":["_","o","clone","t","property","s","subclass","r","convolutionKernel","e","n","convolutionKernels","i","p","c","constructor","arguments","rows","cols","kernel","convolutionType","_set","get","userDefined","none","Math","sqrt","length","raster","json","type","Number","write","prototype","name","l","default"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/layers/support/rasterFunctions/ConvolutionFunctionArguments.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{_ as o}from\"../../../chunks/tslib.es6.js\";import{clone as t}from\"../../../core/lang.js\";import{property as s}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/has.js\";import\"../../../core/Logger.js\";import{subclass as r}from\"../../../core/accessorSupport/decorators/subclass.js\";import{convolutionKernel as e}from\"../rasterFunctionConstants.js\";import n from\"./BaseFunctionArguments.js\";import{convolutionKernels as i}from\"./convolutionUtils.js\";var p;let c=p=class extends n{constructor(){super(...arguments),this.rows=3,this.cols=3,this.kernel=[0,0,0,0,1,0,0,0,0]}set convolutionType(o){this._set(\"convolutionType\",o);const t=i.get(o);if(!t||o===e.userDefined||o===e.none)return;const s=Math.sqrt(t.length);this._set(\"kernel\",t),this._set(\"cols\",s),this._set(\"rows\",s)}clone(){return new p({cols:this.cols,rows:this.rows,kernel:[...this.kernel],convolutionType:this.convolutionType,raster:t(this.raster)})}};o([s({json:{type:Number,write:!0}})],c.prototype,\"rows\",void 0),o([s({json:{type:Number,write:!0}})],c.prototype,\"cols\",void 0),o([s({json:{name:\"type\",type:Number,write:!0}})],c.prototype,\"convolutionType\",null),o([s({json:{type:[Number],write:!0}})],c.prototype,\"kernel\",void 0),c=p=o([r(\"esri.layers.support.rasterFunctions.ConvolutionFunctionArguments\")],c);const l=c;export{l as default};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,CAAC,IAAIC,CAAC,QAAK,8BAA8B;AAAC,SAAOC,KAAK,IAAIC,CAAC,QAAK,uBAAuB;AAAC,SAAOC,QAAQ,IAAIC,CAAC,QAAK,sDAAsD;AAAC,OAAM,sBAAsB;AAAC,OAAM,yBAAyB;AAAC,SAAOC,QAAQ,IAAIC,CAAC,QAAK,sDAAsD;AAAC,SAAOC,iBAAiB,IAAIC,CAAC,QAAK,+BAA+B;AAAC,OAAOC,CAAC,MAAK,4BAA4B;AAAC,SAAOC,kBAAkB,IAAIC,CAAC,QAAK,uBAAuB;AAAC,IAAIC,CAAC;AAAC,IAAIC,CAAC,GAACD,CAAC,GAAC,cAAcH,CAAC;EAACK,WAAWA,CAAA,EAAE;IAAC,KAAK,CAAC,GAAGC,SAAS,CAAC,EAAC,IAAI,CAACC,IAAI,GAAC,CAAC,EAAC,IAAI,CAACC,IAAI,GAAC,CAAC,EAAC,IAAI,CAACC,MAAM,GAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;EAAA;EAAC,IAAIC,eAAeA,CAACnB,CAAC,EAAC;IAAC,IAAI,CAACoB,IAAI,CAAC,iBAAiB,EAACpB,CAAC,CAAC;IAAC,MAAME,CAAC,GAACS,CAAC,CAACU,GAAG,CAACrB,CAAC,CAAC;IAAC,IAAG,CAACE,CAAC,IAAEF,CAAC,KAAGQ,CAAC,CAACc,WAAW,IAAEtB,CAAC,KAAGQ,CAAC,CAACe,IAAI,EAAC;IAAO,MAAMnB,CAAC,GAACoB,IAAI,CAACC,IAAI,CAACvB,CAAC,CAACwB,MAAM,CAAC;IAAC,IAAI,CAACN,IAAI,CAAC,QAAQ,EAAClB,CAAC,CAAC,EAAC,IAAI,CAACkB,IAAI,CAAC,MAAM,EAAChB,CAAC,CAAC,EAAC,IAAI,CAACgB,IAAI,CAAC,MAAM,EAAChB,CAAC,CAAC;EAAA;EAACH,KAAKA,CAAA,EAAE;IAAC,OAAO,IAAIW,CAAC,CAAC;MAACK,IAAI,EAAC,IAAI,CAACA,IAAI;MAACD,IAAI,EAAC,IAAI,CAACA,IAAI;MAACE,MAAM,EAAC,CAAC,GAAG,IAAI,CAACA,MAAM,CAAC;MAACC,eAAe,EAAC,IAAI,CAACA,eAAe;MAACQ,MAAM,EAACzB,CAAC,CAAC,IAAI,CAACyB,MAAM;IAAC,CAAC,CAAC;EAAA;AAAC,CAAC;AAAC3B,CAAC,CAAC,CAACI,CAAC,CAAC;EAACwB,IAAI,EAAC;IAACC,IAAI,EAACC,MAAM;IAACC,KAAK,EAAC,CAAC;EAAC;AAAC,CAAC,CAAC,CAAC,EAAClB,CAAC,CAACmB,SAAS,EAAC,MAAM,EAAC,KAAK,CAAC,CAAC,EAAChC,CAAC,CAAC,CAACI,CAAC,CAAC;EAACwB,IAAI,EAAC;IAACC,IAAI,EAACC,MAAM;IAACC,KAAK,EAAC,CAAC;EAAC;AAAC,CAAC,CAAC,CAAC,EAAClB,CAAC,CAACmB,SAAS,EAAC,MAAM,EAAC,KAAK,CAAC,CAAC,EAAChC,CAAC,CAAC,CAACI,CAAC,CAAC;EAACwB,IAAI,EAAC;IAACK,IAAI,EAAC,MAAM;IAACJ,IAAI,EAACC,MAAM;IAACC,KAAK,EAAC,CAAC;EAAC;AAAC,CAAC,CAAC,CAAC,EAAClB,CAAC,CAACmB,SAAS,EAAC,iBAAiB,EAAC,IAAI,CAAC,EAAChC,CAAC,CAAC,CAACI,CAAC,CAAC;EAACwB,IAAI,EAAC;IAACC,IAAI,EAAC,CAACC,MAAM,CAAC;IAACC,KAAK,EAAC,CAAC;EAAC;AAAC,CAAC,CAAC,CAAC,EAAClB,CAAC,CAACmB,SAAS,EAAC,QAAQ,EAAC,KAAK,CAAC,CAAC,EAACnB,CAAC,GAACD,CAAC,GAACZ,CAAC,CAAC,CAACM,CAAC,CAAC,kEAAkE,CAAC,CAAC,EAACO,CAAC,CAAC;AAAC,MAAMqB,CAAC,GAACrB,CAAC;AAAC,SAAOqB,CAAC,IAAIC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}