{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { MeshWriter as t } from \"../mesh/MeshWriter.js\";\nimport { DataType as e } from \"../../../../../../webgl/enums.js\";\nconst r = {\n  createComputedParams: t => t,\n  optionalAttributes: {},\n  attributes: {\n    pos: {\n      type: e.SHORT,\n      count: 2,\n      pack: \"position\",\n      packPrecisionFactor: 10\n    },\n    id: {\n      type: e.UNSIGNED_BYTE,\n      count: 3,\n      pack: \"id\"\n    },\n    bitset: {\n      type: e.UNSIGNED_BYTE,\n      count: 1\n    },\n    offset: {\n      type: e.BYTE,\n      count: 2,\n      packAlternating: {\n        count: 4,\n        pack: () => [[-1, -1], [1, -1], [-1, 1], [1, 1]]\n      }\n    }\n  }\n};\nclass i extends t {\n  constructor() {\n    super(...arguments), this.vertexSpec = r;\n  }\n  _write(t, e) {\n    t.recordStart(this.instanceId, this.attributeLayout);\n    const r = e.getDisplayId();\n    if (\"esriGeometryPoint\" === e.geometryType) {\n      const i = e.readXForDisplay(),\n        o = e.readYForDisplay();\n      this._writeQuad(t, r, i, o);\n    } else if (\"esriGeometryMultipoint\" === e.geometryType) {\n      const i = e.readGeometryForDisplay();\n      i?.forEachVertex((e, i) => {\n        e >= 0 && e <= 512 && i >= 0 && i <= 512 && this._writeQuad(t, r, e, i);\n      });\n    }\n    t.recordEnd();\n  }\n  _writeQuad(t, e, r, i) {\n    const o = t.vertexCount();\n    this._writeVertex(t, e, r, i), t.indexWrite(o + 0), t.indexWrite(o + 1), t.indexWrite(o + 2), t.indexWrite(o + 1), t.indexWrite(o + 3), t.indexWrite(o + 2);\n  }\n}\nexport { i as HeatmapMeshWriter, r as heatmapVertexSpec };","map":{"version":3,"names":["MeshWriter","t","DataType","e","r","createComputedParams","optionalAttributes","attributes","pos","type","SHORT","count","pack","packPrecisionFactor","id","UNSIGNED_BYTE","bitset","offset","BYTE","packAlternating","i","constructor","arguments","vertexSpec","_write","recordStart","instanceId","attributeLayout","getDisplayId","geometryType","readXForDisplay","o","readYForDisplay","_writeQuad","readGeometryForDisplay","forEachVertex","recordEnd","vertexCount","_writeVertex","indexWrite","HeatmapMeshWriter","heatmapVertexSpec"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/2d/engine/webgl/shaderGraph/techniques/heatmap/HeatmapMeshWriter.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{MeshWriter as t}from\"../mesh/MeshWriter.js\";import{DataType as e}from\"../../../../../../webgl/enums.js\";const r={createComputedParams:t=>t,optionalAttributes:{},attributes:{pos:{type:e.SHORT,count:2,pack:\"position\",packPrecisionFactor:10},id:{type:e.UNSIGNED_BYTE,count:3,pack:\"id\"},bitset:{type:e.UNSIGNED_BYTE,count:1},offset:{type:e.BYTE,count:2,packAlternating:{count:4,pack:()=>[[-1,-1],[1,-1],[-1,1],[1,1]]}}}};class i extends t{constructor(){super(...arguments),this.vertexSpec=r}_write(t,e){t.recordStart(this.instanceId,this.attributeLayout);const r=e.getDisplayId();if(\"esriGeometryPoint\"===e.geometryType){const i=e.readXForDisplay(),o=e.readYForDisplay();this._writeQuad(t,r,i,o)}else if(\"esriGeometryMultipoint\"===e.geometryType){const i=e.readGeometryForDisplay();i?.forEachVertex(((e,i)=>{e>=0&&e<=512&&i>=0&&i<=512&&this._writeQuad(t,r,e,i)}))}t.recordEnd()}_writeQuad(t,e,r,i){const o=t.vertexCount();this._writeVertex(t,e,r,i),t.indexWrite(o+0),t.indexWrite(o+1),t.indexWrite(o+2),t.indexWrite(o+1),t.indexWrite(o+3),t.indexWrite(o+2)}}export{i as HeatmapMeshWriter,r as heatmapVertexSpec};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}