{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport e from \"../../../core/Error.js\";\nimport t from \"../../../geometry/Multipoint.js\";\nimport o from \"../../../geometry/Point.js\";\nimport s from \"../../../geometry/Polygon.js\";\nimport r from \"../../../geometry/Polyline.js\";\nimport { WasmGeometryTypeCodes as n } from \"./KnowledgeWasmInterface.js\";\nfunction a(e, o) {\n  const s = {\n      spatialReference: o\n    },\n    r = c(e, s),\n    n = e.lengths,\n    a = e.coords,\n    h = n[0];\n  s.points = [];\n  let l = 0;\n  for (let t = 0; t < h; t++) {\n    const e = [];\n    for (let t = 0; t < r; t++) e[t] = a[l], l++;\n    s.points.push(e);\n  }\n  return new t(s);\n}\nfunction h(e, t) {\n  const s = {\n    spatialReference: t\n  };\n  let r = 2;\n  c(e, s);\n  const n = e.coords;\n  return s.x = n[0], s.y = n[1], e.has_z && (s.z = n[r], r++), e.has_m && (s.m = n[r]), new o(s);\n}\nfunction l(e, t) {\n  const {\n    paths: o,\n    hasM: s,\n    hasZ: a\n  } = p(e, n.ESRI_GEOMETRY_POLYLINE);\n  return new r({\n    paths: o,\n    hasM: s,\n    hasZ: a,\n    spatialReference: t\n  });\n}\nfunction i(e, t) {\n  const {\n    paths: o,\n    hasM: r,\n    hasZ: a\n  } = p(e, n.ESRI_GEOMETRY_POLYGON);\n  return new s({\n    rings: o,\n    hasM: r,\n    hasZ: a,\n    spatialReference: t\n  });\n}\nfunction p(t, o) {\n  const s = {\n      paths: [],\n      hasM: !1,\n      hasZ: !1\n    },\n    r = c(t, s),\n    {\n      coords: n,\n      geometry_type: a,\n      lengths: h\n    } = t;\n  if (a.value !== o) throw new e(\"KnowledgeGraph:illegal-geometry-type\", \"Illegal Geometry type for multipath conversion\");\n  let l = 0;\n  return h.forEach(e => {\n    const t = [];\n    for (let o = 0; o < e; o++) {\n      const e = [];\n      for (let t = 0; t < r; t++) e[t] = n[l], l++;\n      t.push(e);\n    }\n    s.paths.push(t);\n  }), s;\n}\nfunction c(e, t) {\n  let o = 2;\n  return e.has_z ? (t.hasZ = e.has_z, o++) : t.hasZ = !1, e.has_m ? (t.hasM = e.has_m, o++) : t.hasM = !1, o;\n}\nexport { a as wasmToMultipointGeometry, h as wasmToPointGeometry, i as wasmToPolygonGeometry, l as wasmToPolylineGeometry };","map":{"version":3,"names":["e","t","o","s","r","WasmGeometryTypeCodes","n","a","spatialReference","c","lengths","coords","h","points","l","push","x","y","has_z","z","has_m","m","paths","hasM","hasZ","p","ESRI_GEOMETRY_POLYLINE","i","ESRI_GEOMETRY_POLYGON","rings","geometry_type","value","forEach","wasmToMultipointGeometry","wasmToPointGeometry","wasmToPolygonGeometry","wasmToPolylineGeometry"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/wasmToGeometryFactories.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport e from\"../../../core/Error.js\";import t from\"../../../geometry/Multipoint.js\";import o from\"../../../geometry/Point.js\";import s from\"../../../geometry/Polygon.js\";import r from\"../../../geometry/Polyline.js\";import{WasmGeometryTypeCodes as n}from\"./KnowledgeWasmInterface.js\";function a(e,o){const s={spatialReference:o},r=c(e,s),n=e.lengths,a=e.coords,h=n[0];s.points=[];let l=0;for(let t=0;t<h;t++){const e=[];for(let t=0;t<r;t++)e[t]=a[l],l++;s.points.push(e)}return new t(s)}function h(e,t){const s={spatialReference:t};let r=2;c(e,s);const n=e.coords;return s.x=n[0],s.y=n[1],e.has_z&&(s.z=n[r],r++),e.has_m&&(s.m=n[r]),new o(s)}function l(e,t){const{paths:o,hasM:s,hasZ:a}=p(e,n.ESRI_GEOMETRY_POLYLINE);return new r({paths:o,hasM:s,hasZ:a,spatialReference:t})}function i(e,t){const{paths:o,hasM:r,hasZ:a}=p(e,n.ESRI_GEOMETRY_POLYGON);return new s({rings:o,hasM:r,hasZ:a,spatialReference:t})}function p(t,o){const s={paths:[],hasM:!1,hasZ:!1},r=c(t,s),{coords:n,geometry_type:a,lengths:h}=t;if(a.value!==o)throw new e(\"KnowledgeGraph:illegal-geometry-type\",\"Illegal Geometry type for multipath conversion\");let l=0;return h.forEach((e=>{const t=[];for(let o=0;o<e;o++){const e=[];for(let t=0;t<r;t++)e[t]=n[l],l++;t.push(e)}s.paths.push(t)})),s}function c(e,t){let o=2;return e.has_z?(t.hasZ=e.has_z,o++):t.hasZ=!1,e.has_m?(t.hasM=e.has_m,o++):t.hasM=!1,o}export{a as wasmToMultipointGeometry,h as wasmToPointGeometry,i as wasmToPolygonGeometry,l as wasmToPolylineGeometry};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAOA,CAAC,MAAK,wBAAwB;AAAC,OAAOC,CAAC,MAAK,iCAAiC;AAAC,OAAOC,CAAC,MAAK,4BAA4B;AAAC,OAAOC,CAAC,MAAK,8BAA8B;AAAC,OAAOC,CAAC,MAAK,+BAA+B;AAAC,SAAOC,qBAAqB,IAAIC,CAAC,QAAK,6BAA6B;AAAC,SAASC,CAACA,CAACP,CAAC,EAACE,CAAC,EAAC;EAAC,MAAMC,CAAC,GAAC;MAACK,gBAAgB,EAACN;IAAC,CAAC;IAACE,CAAC,GAACK,CAAC,CAACT,CAAC,EAACG,CAAC,CAAC;IAACG,CAAC,GAACN,CAAC,CAACU,OAAO;IAACH,CAAC,GAACP,CAAC,CAACW,MAAM;IAACC,CAAC,GAACN,CAAC,CAAC,CAAC,CAAC;EAACH,CAAC,CAACU,MAAM,GAAC,EAAE;EAAC,IAAIC,CAAC,GAAC,CAAC;EAAC,KAAI,IAAIb,CAAC,GAAC,CAAC,EAACA,CAAC,GAACW,CAAC,EAACX,CAAC,EAAE,EAAC;IAAC,MAAMD,CAAC,GAAC,EAAE;IAAC,KAAI,IAAIC,CAAC,GAAC,CAAC,EAACA,CAAC,GAACG,CAAC,EAACH,CAAC,EAAE,EAACD,CAAC,CAACC,CAAC,CAAC,GAACM,CAAC,CAACO,CAAC,CAAC,EAACA,CAAC,EAAE;IAACX,CAAC,CAACU,MAAM,CAACE,IAAI,CAACf,CAAC,CAAC;EAAA;EAAC,OAAO,IAAIC,CAAC,CAACE,CAAC,CAAC;AAAA;AAAC,SAASS,CAACA,CAACZ,CAAC,EAACC,CAAC,EAAC;EAAC,MAAME,CAAC,GAAC;IAACK,gBAAgB,EAACP;EAAC,CAAC;EAAC,IAAIG,CAAC,GAAC,CAAC;EAACK,CAAC,CAACT,CAAC,EAACG,CAAC,CAAC;EAAC,MAAMG,CAAC,GAACN,CAAC,CAACW,MAAM;EAAC,OAAOR,CAAC,CAACa,CAAC,GAACV,CAAC,CAAC,CAAC,CAAC,EAACH,CAAC,CAACc,CAAC,GAACX,CAAC,CAAC,CAAC,CAAC,EAACN,CAAC,CAACkB,KAAK,KAAGf,CAAC,CAACgB,CAAC,GAACb,CAAC,CAACF,CAAC,CAAC,EAACA,CAAC,EAAE,CAAC,EAACJ,CAAC,CAACoB,KAAK,KAAGjB,CAAC,CAACkB,CAAC,GAACf,CAAC,CAACF,CAAC,CAAC,CAAC,EAAC,IAAIF,CAAC,CAACC,CAAC,CAAC;AAAA;AAAC,SAASW,CAACA,CAACd,CAAC,EAACC,CAAC,EAAC;EAAC,MAAK;IAACqB,KAAK,EAACpB,CAAC;IAACqB,IAAI,EAACpB,CAAC;IAACqB,IAAI,EAACjB;EAAC,CAAC,GAACkB,CAAC,CAACzB,CAAC,EAACM,CAAC,CAACoB,sBAAsB,CAAC;EAAC,OAAO,IAAItB,CAAC,CAAC;IAACkB,KAAK,EAACpB,CAAC;IAACqB,IAAI,EAACpB,CAAC;IAACqB,IAAI,EAACjB,CAAC;IAACC,gBAAgB,EAACP;EAAC,CAAC,CAAC;AAAA;AAAC,SAAS0B,CAACA,CAAC3B,CAAC,EAACC,CAAC,EAAC;EAAC,MAAK;IAACqB,KAAK,EAACpB,CAAC;IAACqB,IAAI,EAACnB,CAAC;IAACoB,IAAI,EAACjB;EAAC,CAAC,GAACkB,CAAC,CAACzB,CAAC,EAACM,CAAC,CAACsB,qBAAqB,CAAC;EAAC,OAAO,IAAIzB,CAAC,CAAC;IAAC0B,KAAK,EAAC3B,CAAC;IAACqB,IAAI,EAACnB,CAAC;IAACoB,IAAI,EAACjB,CAAC;IAACC,gBAAgB,EAACP;EAAC,CAAC,CAAC;AAAA;AAAC,SAASwB,CAACA,CAACxB,CAAC,EAACC,CAAC,EAAC;EAAC,MAAMC,CAAC,GAAC;MAACmB,KAAK,EAAC,EAAE;MAACC,IAAI,EAAC,CAAC,CAAC;MAACC,IAAI,EAAC,CAAC;IAAC,CAAC;IAACpB,CAAC,GAACK,CAAC,CAACR,CAAC,EAACE,CAAC,CAAC;IAAC;MAACQ,MAAM,EAACL,CAAC;MAACwB,aAAa,EAACvB,CAAC;MAACG,OAAO,EAACE;IAAC,CAAC,GAACX,CAAC;EAAC,IAAGM,CAAC,CAACwB,KAAK,KAAG7B,CAAC,EAAC,MAAM,IAAIF,CAAC,CAAC,sCAAsC,EAAC,gDAAgD,CAAC;EAAC,IAAIc,CAAC,GAAC,CAAC;EAAC,OAAOF,CAAC,CAACoB,OAAO,CAAEhC,CAAC,IAAE;IAAC,MAAMC,CAAC,GAAC,EAAE;IAAC,KAAI,IAAIC,CAAC,GAAC,CAAC,EAACA,CAAC,GAACF,CAAC,EAACE,CAAC,EAAE,EAAC;MAAC,MAAMF,CAAC,GAAC,EAAE;MAAC,KAAI,IAAIC,CAAC,GAAC,CAAC,EAACA,CAAC,GAACG,CAAC,EAACH,CAAC,EAAE,EAACD,CAAC,CAACC,CAAC,CAAC,GAACK,CAAC,CAACQ,CAAC,CAAC,EAACA,CAAC,EAAE;MAACb,CAAC,CAACc,IAAI,CAACf,CAAC,CAAC;IAAA;IAACG,CAAC,CAACmB,KAAK,CAACP,IAAI,CAACd,CAAC,CAAC;EAAA,CAAE,CAAC,EAACE,CAAC;AAAA;AAAC,SAASM,CAACA,CAACT,CAAC,EAACC,CAAC,EAAC;EAAC,IAAIC,CAAC,GAAC,CAAC;EAAC,OAAOF,CAAC,CAACkB,KAAK,IAAEjB,CAAC,CAACuB,IAAI,GAACxB,CAAC,CAACkB,KAAK,EAAChB,CAAC,EAAE,IAAED,CAAC,CAACuB,IAAI,GAAC,CAAC,CAAC,EAACxB,CAAC,CAACoB,KAAK,IAAEnB,CAAC,CAACsB,IAAI,GAACvB,CAAC,CAACoB,KAAK,EAAClB,CAAC,EAAE,IAAED,CAAC,CAACsB,IAAI,GAAC,CAAC,CAAC,EAACrB,CAAC;AAAA;AAAC,SAAOK,CAAC,IAAI0B,wBAAwB,EAACrB,CAAC,IAAIsB,mBAAmB,EAACP,CAAC,IAAIQ,qBAAqB,EAACrB,CAAC,IAAIsB,sBAAsB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}