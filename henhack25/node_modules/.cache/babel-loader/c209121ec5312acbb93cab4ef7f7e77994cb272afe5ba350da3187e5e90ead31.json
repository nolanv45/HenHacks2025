{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport e from \"../request.js\";\nimport r from \"../core/Error.js\";\nimport t from \"../core/Logger.js\";\nimport { getDeepValue as o } from \"../core/object.js\";\nimport { removeTrailingSlash as s } from \"../core/urlUtils.js\";\nimport { asValidOptions as a, parseUrl as n } from \"./utils.js\";\nimport i from \"./support/NetworkServiceDescription.js\";\nconst l = () => t.getLogger(\"esri.rest.networkService\");\nfunction u(e, r, t, o) {\n  o[t] = [r.length, r.length + e.length], e.forEach(e => {\n    r.push(e.geometry);\n  });\n}\nfunction f(e, r) {\n  for (let t = 0; t < r.length; t++) {\n    const o = e[r[t]];\n    if (o && o.length) for (const e of o) e.z = void 0;\n  }\n  l().warnOnce(\"The remote Network Analysis service is powered by a network dataset which is not Z-aware.\\nZ-coordinates of the input geometry are ignored.\");\n}\nfunction c(e, r) {\n  for (let t = 0; t < r.length; t++) {\n    const o = e[r[t]];\n    if (o && o.length) for (const e of o) if (null != e && e.hasZ) return !0;\n  }\n  return !1;\n}\nasync function d(t, o, s) {\n  if (!t) throw new r(\"network-service:missing-url\", \"Url to Network service is missing\");\n  const n = a({\n      f: \"json\",\n      token: o\n    }, s),\n    {\n      data: l\n    } = await e(t, n),\n    u = l.currentVersion >= 10.4 ? p(t, o, s) : v(t, s),\n    {\n      defaultTravelMode: f,\n      supportedTravelModes: c\n    } = await u;\n  return l.defaultTravelMode = f, l.supportedTravelModes = c, i.fromJSON(l);\n}\nasync function v(r, t) {\n  const i = a({\n      f: \"json\"\n    }, t),\n    {\n      data: l\n    } = await e(r.replace(/\\/rest\\/.*$/i, \"/info\"), i);\n  if (!l?.owningSystemUrl) return {\n    supportedTravelModes: [],\n    defaultTravelMode: null\n  };\n  const {\n      owningSystemUrl: u\n    } = l,\n    f = s(u) + \"/sharing/rest/portals/self\",\n    {\n      data: c\n    } = await e(f, i),\n    d = o(\"helperServices.routingUtilities.url\", c);\n  if (!d) return {\n    supportedTravelModes: [],\n    defaultTravelMode: null\n  };\n  const v = n(u),\n    p = /\\/solve$/i.test(v.path) ? \"Route\" : /\\/solveclosestfacility$/i.test(v.path) ? \"ClosestFacility\" : \"ServiceAreas\",\n    m = a({\n      f: \"json\",\n      serviceName: p\n    }, t),\n    h = s(d) + \"/GetTravelModes/execute\",\n    g = await e(h, m),\n    w = [];\n  let T = null;\n  if (g?.data?.results?.length) {\n    const e = g.data.results;\n    for (const r of e) if (\"supportedTravelModes\" === r.paramName) {\n      if (r.value?.features) for (const {\n        attributes: e\n      } of r.value.features) if (e) {\n        const r = JSON.parse(e.TravelMode);\n        w.push(r);\n      }\n    } else \"defaultTravelMode\" === r.paramName && (T = r.value);\n  }\n  return {\n    supportedTravelModes: w,\n    defaultTravelMode: T\n  };\n}\nasync function p(t, o, n) {\n  try {\n    const r = a({\n        f: \"json\",\n        token: o\n      }, n),\n      i = s(t) + \"/retrieveTravelModes\",\n      {\n        data: {\n          supportedTravelModes: l,\n          defaultTravelMode: u\n        }\n      } = await e(i, r);\n    return {\n      supportedTravelModes: l,\n      defaultTravelMode: u\n    };\n  } catch (i) {\n    throw new r(\"network-service:retrieveTravelModes\", \"Could not get to the NAServer's retrieveTravelModes.\", {\n      error: i\n    });\n  }\n}\nexport { u as collectGeometries, f as dropZValuesOffInputGeometry, d as fetchServiceDescription, c as isInputGeometryZAware };","map":{"version":3,"names":["e","r","t","getDeepValue","o","removeTrailingSlash","s","asValidOptions","a","parseUrl","n","i","l","getLogger","u","length","forEach","push","geometry","f","z","warnOnce","c","hasZ","d","token","data","currentVersion","p","v","defaultTravelMode","supportedTravelModes","fromJSON","replace","owningSystemUrl","test","path","m","serviceName","h","g","w","T","results","paramName","value","features","attributes","JSON","parse","TravelMode","error","collectGeometries","dropZValuesOffInputGeometry","fetchServiceDescription","isInputGeometryZAware"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/rest/networkService.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport e from\"../request.js\";import r from\"../core/Error.js\";import t from\"../core/Logger.js\";import{getDeepValue as o}from\"../core/object.js\";import{removeTrailingSlash as s}from\"../core/urlUtils.js\";import{asValidOptions as a,parseUrl as n}from\"./utils.js\";import i from\"./support/NetworkServiceDescription.js\";const l=()=>t.getLogger(\"esri.rest.networkService\");function u(e,r,t,o){o[t]=[r.length,r.length+e.length],e.forEach((e=>{r.push(e.geometry)}))}function f(e,r){for(let t=0;t<r.length;t++){const o=e[r[t]];if(o&&o.length)for(const e of o)e.z=void 0}l().warnOnce(\"The remote Network Analysis service is powered by a network dataset which is not Z-aware.\\nZ-coordinates of the input geometry are ignored.\")}function c(e,r){for(let t=0;t<r.length;t++){const o=e[r[t]];if(o&&o.length)for(const e of o)if(null!=e&&e.hasZ)return!0}return!1}async function d(t,o,s){if(!t)throw new r(\"network-service:missing-url\",\"Url to Network service is missing\");const n=a({f:\"json\",token:o},s),{data:l}=await e(t,n),u=l.currentVersion>=10.4?p(t,o,s):v(t,s),{defaultTravelMode:f,supportedTravelModes:c}=await u;return l.defaultTravelMode=f,l.supportedTravelModes=c,i.fromJSON(l)}async function v(r,t){const i=a({f:\"json\"},t),{data:l}=await e(r.replace(/\\/rest\\/.*$/i,\"/info\"),i);if(!l?.owningSystemUrl)return{supportedTravelModes:[],defaultTravelMode:null};const{owningSystemUrl:u}=l,f=s(u)+\"/sharing/rest/portals/self\",{data:c}=await e(f,i),d=o(\"helperServices.routingUtilities.url\",c);if(!d)return{supportedTravelModes:[],defaultTravelMode:null};const v=n(u),p=/\\/solve$/i.test(v.path)?\"Route\":/\\/solveclosestfacility$/i.test(v.path)?\"ClosestFacility\":\"ServiceAreas\",m=a({f:\"json\",serviceName:p},t),h=s(d)+\"/GetTravelModes/execute\",g=await e(h,m),w=[];let T=null;if(g?.data?.results?.length){const e=g.data.results;for(const r of e)if(\"supportedTravelModes\"===r.paramName){if(r.value?.features)for(const{attributes:e}of r.value.features)if(e){const r=JSON.parse(e.TravelMode);w.push(r)}}else\"defaultTravelMode\"===r.paramName&&(T=r.value)}return{supportedTravelModes:w,defaultTravelMode:T}}async function p(t,o,n){try{const r=a({f:\"json\",token:o},n),i=s(t)+\"/retrieveTravelModes\",{data:{supportedTravelModes:l,defaultTravelMode:u}}=await e(i,r);return{supportedTravelModes:l,defaultTravelMode:u}}catch(i){throw new r(\"network-service:retrieveTravelModes\",\"Could not get to the NAServer's retrieveTravelModes.\",{error:i})}}export{u as collectGeometries,f as dropZValuesOffInputGeometry,d as fetchServiceDescription,c as isInputGeometryZAware};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}