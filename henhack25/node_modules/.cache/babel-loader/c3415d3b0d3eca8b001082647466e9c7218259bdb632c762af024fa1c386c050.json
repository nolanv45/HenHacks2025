{"ast":null,"code":"import { attachToAncestor, makeDefineCustomElements, noShadowRoot } from \"./chunk-NO7HOBNA.js\";\nimport \"./chunk-PGHUBTOM.js\";\n\n// src/context.ts\nimport { retrieveComponent } from \"@arcgis/components-controllers\";\nimport { ContextConsumer, ContextProvider } from \"@lit/context\";\nfunction useContextProvider(options) {\n  const component = retrieveComponent();\n  const controller = new ContextProvider(component.el, options);\n  component.addController(controller);\n  return controller;\n}\nfunction useContextConsumer(options) {\n  const component = retrieveComponent();\n  const controller = new ContextConsumer(component.el, options);\n  component.addController(controller);\n  return controller;\n}\n\n// src/createEvent.ts\nimport { retrieveComponent as retrieveComponent2, keyTrackResolve, trackKey } from \"@arcgis/components-controllers\";\nimport { isEsriInternalEnv } from \"@arcgis/components-utils\";\nvar createEventFactory = (eventName = \"\", options = {}, component = retrieveComponent2()) => {\n  const emitter = {\n    emit: payload => {\n      if (process.env.NODE_ENV !== \"production\" && isEsriInternalEnv() && !component.el.isConnected) {\n        console.warn(`Trying to emit an ${eventName} event on a disconnected element ${component.el.tagName.toLowerCase()}`);\n      }\n      if (eventName === \"\") {\n        keyTrackResolve();\n        if (process.env.NODE_ENV !== \"production\" && isEsriInternalEnv() && eventName === \"\") {\n          throw new Error(\"Unable to resolve event name from property name\");\n        }\n      }\n      const event = new CustomEvent(eventName, {\n        detail: payload,\n        cancelable: true,\n        bubbles: true,\n        composed: true,\n        ...options\n      });\n      component.el.dispatchEvent(event);\n      return event;\n    }\n  };\n  if (eventName === \"\") {\n    trackKey(void 0, resolution => {\n      if (process.env.NODE_ENV !== \"production\" && isEsriInternalEnv() && resolution === void 0) {\n        throw new Error(`createEvent must be called in property default value only`);\n      }\n      eventName = resolution.key;\n    }, emitter);\n  }\n  return emitter;\n};\nvar createEvent = createEventFactory.bind(null, \"\");\n\n// src/decorators.ts\nimport { state } from \"@lit/reactive-element/decorators/state.js\";\nimport { property as litProperty } from \"@lit/reactive-element/decorators/property.js\";\nvar property = litProperty;\nvar method = void 0;\n\n// src/LitElement.ts\nimport { Deferred, camelToKebab, isEsriInternalEnv as isEsriInternalEnv2 } from \"@arcgis/components-utils\";\nimport { LitElement as OriginalLitElement, isServer } from \"lit\";\nimport { useControllerManager } from \"@arcgis/components-controllers\";\nvar emptyFunction = () => void 0;\nvar LitElement = class _LitElement extends OriginalLitElement {\n  constructor() {\n    super();\n    /**\n     * In lazy build, the actual DOM element differs from the class instance:\n     * - \"this.el\" is a proxy custom element - it's physically present in the DOM\n     *   even before the Lit component is loaded.\n     * - \"this\" is the actual Lit component - in case of Lazy builds, it's\n     *   never directly attached to the DOM. Instead, all interactions with the\n     *   proxy are forwarded to the actual Lit component. And, when Lit wants to\n     *   render, it renders into the shadow root of the proxy.\n     *\n     * \"this.el\" should be used instead of \"this\" for all things involving the\n     * DOM (addEventListener, querySelector, children, setAttribute,\n     * MutationObserver, etc...)\n     *\n     * @example\n     * ```ts\n     * // Generally, you shouldn't have to write logic specific to lazy or non-lazy\n     * // build, but if you have to, you can detect if you are in a lazy build like so:\n     * const isLazy = this.el !== this;\n     * ```\n     */\n    this.el = this.constructor.lazy ?? this;\n    /**\n     * Controller Manager orchestrates all controllers used by this component,\n     * connecting their lifecycle hooks and providing context information.\n     */\n    this.manager = useControllerManager(this);\n    /** @internal */\n    this._postLoad = this.constructor.lazy?._postLoad ?? new Deferred();\n    /**\n     * Direct offspring that should be awaited before loaded() is emitted.\n     *\n     * `attachToAncestor()` will add elements to this array\n     *\n     * @internal\n     */\n    this._offspring = this.constructor.lazy?._offspring ?? [];\n    this._postLoaded = this.constructor.lazy?._postLoaded ?? new Deferred();\n    this._enableUpdating = this.enableUpdating;\n    this.enableUpdating = emptyFunction;\n    const ourShouldUpdate = _LitElement.prototype.shouldUpdate;\n    if (this.shouldUpdate !== ourShouldUpdate) {\n      this._originalShouldUpdate = this.shouldUpdate;\n      this.shouldUpdate = ourShouldUpdate;\n    }\n    if (process.env.NODE_ENV !== \"production\") {\n      const isOwnComponent = globalThis.devOnly$ownTagNames?.has(this.el.tagName.toLowerCase());\n      const constructor = this.constructor;\n      const warningsWereCustomized = constructor.enabledWarnings !== OriginalLitElement.enabledWarnings;\n      if (!isOwnComponent && !warningsWereCustomized) {\n        constructor.disableWarning?.(\"change-in-update\");\n      }\n      if (isEsriInternalEnv2()) {\n        globalThis.devOnly$luminaComponentRefCallback?.(this);\n      }\n    }\n    if (isServer) {\n      this.el.setAttribute(this.constructor.runtime.hydratedAttribute, \"\");\n    }\n  }\n  /**\n   * Customize Lit's default style handling to support non-shadow-root styles\n   */\n  static finalizeStyles(styles) {\n    if (process.env.NODE_ENV === \"test\" && Array.isArray(styles)) {\n      styles = styles.filter(Boolean);\n    }\n    const finalizedStyles = super.finalizeStyles(styles);\n    const useLightDom = this.shadowRootOptions === noShadowRoot;\n    return this.runtime?.commonStyles === void 0 || useLightDom ? finalizedStyles : [this.runtime.commonStyles, ...finalizedStyles];\n  }\n  static createProperty(name, options) {\n    const flags = typeof options === \"number\" ? options : Array.isArray(options) ? options[0] : 0;\n    const rest = Array.isArray(options) ? options[1] : void 0;\n    super.createProperty(name, {\n      /**\n       * By default to infer attribute name from property name, Lit just\n       * converts property name to lowercase. That is consistent with\n       * native DOM attributes.\n       *\n       * However, that is not consistent with Stencil and would be a\n       * breaking change for us. Also, kebab-case is more common among the\n       * web components. But the most important reason is that we have\n       * some pretty long attribute names, which would be utterly\n       * unreadable in lowercase.\n       *\n       * Also, if browsers add new attributes, that may cause a conflict\n       * with our attributes.\n       *\n       * Thus, overwriting Lit's default behavior to use kebab-case:\n       */\n      attribute: !!(flags & 1 /* ATTRIBUTE */) && typeof name === \"string\" ? camelToKebab(name) : false,\n      reflect: !!(flags & 2 /* REFLECT */),\n      type: flags & 4 /* BOOLEAN */ ? Boolean : flags & 8 /* NUMBER */ ? Number : void 0,\n      /**\n       * At the moment in Lit, state:true just means attribute:false, so this\n       * line is technically redundant, but let's keep it here just in case Lit\n       * will add more meaning to state:true in the future.\n       */\n      state: !!(flags & 16 /* STATE */),\n      // Controllers add this option to Lit\n      readOnly: !!(flags & 32 /* READ_ONLY */),\n      noAccessor: !!(flags & 64 /* NO_ACCESSOR */),\n      ...rest\n    });\n  }\n  static {\n    this.lumina = true;\n  }\n  connectedCallback() {\n    if (this.el.hasAttribute(\"defer-hydration\")) {\n      return;\n    }\n    const isFirstCall = !this.manager.connectedCalled;\n    super.connectedCallback();\n    if (isFirstCall) {\n      queueMicrotask(\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises, @typescript-eslint/promise-function-async\n      () => this._load().catch(error => {\n        this._postLoaded.reject(error);\n        setTimeout(() => {\n          throw error;\n        });\n      }));\n    }\n  }\n  /**\n   * Overwrite Lit's default behavior of attaching shadow root to the lit\n   * element, and instead use this.el to support lazy builds.\n   *\n   * Also, support the case when component asked to not use shadow root\n   */\n  createRenderRoot() {\n    const existingShadowRoot = this.el.shadowRoot;\n    const Class = this.constructor;\n    const options = Class.shadowRootOptions;\n    const useLightDom = options === noShadowRoot;\n    const renderRoot = existingShadowRoot ?? (useLightDom ? this.el : this.el.attachShadow(options));\n    Object.defineProperty(this, \"shadowRoot\", {\n      // Create shadow root on the proxy instance, to make Lit render content there\n      value: renderRoot\n    });\n    if (existingShadowRoot) {\n      if (process.env.NODE_ENV === \"production\") {\n        OriginalLitElement.prototype.createRenderRoot.call(this);\n      }\n      return existingShadowRoot;\n    }\n    if (this.isConnected) {\n      const domRoot = renderRoot.getRootNode();\n      if (process.env.NODE_ENV === \"test\") {\n        domRoot.adoptedStyleSheets ??= [];\n      }\n      domRoot.adoptedStyleSheets = [...domRoot.adoptedStyleSheets, ...Class.elementStyles.map(stylesheet => \"styleSheet\" in stylesheet ? stylesheet.styleSheet : stylesheet)];\n    }\n    return renderRoot;\n  }\n  /** Do asynchronous component load */\n  async _load() {\n    const parentLoadPromise = this.el._ancestorLoad ?? attachToAncestor(this.el);\n    if (parentLoadPromise) {\n      await parentLoadPromise;\n    }\n    await this.manager._load();\n    this._enableUpdating(true);\n    this.performUpdate();\n    this._postLoad.resolve();\n    await Promise.resolve();\n    const pendingChildren = this._offspring.filter(loaded => !loaded.manager?.loadedCalled);\n    if (pendingChildren.length) {\n      await Promise.allSettled(pendingChildren.map(async child => await child.componentOnReady()));\n    }\n    this._offspring.length = 0;\n    this.el.setAttribute(this.constructor.runtime.hydratedAttribute, \"\");\n    this.manager._loaded();\n    this._postLoaded.resolve();\n  }\n  /**\n   * Overwriting default shouldUpdate simply to get access to\n   * \"changedProperties\" so that we can later provide it to ControllerManager\n   */\n  shouldUpdate(_changedProperties) {\n    this.$changes = _changedProperties;\n    return this._originalShouldUpdate?.(_changedProperties) ?? true;\n  }\n  listen(name, listener, options) {\n    const boundListener = listener?.bind(this) ?? listener;\n    this.manager.onLifecycle(() => {\n      this.el.addEventListener(name, boundListener, options);\n      return () => this.el.removeEventListener(name, boundListener, options);\n    });\n  }\n  listenOn(target, name, listener, options) {\n    const boundListener = listener?.bind(this) ?? listener;\n    this.manager.onLifecycle(() => {\n      target.addEventListener(name, boundListener, options);\n      return () => target.removeEventListener(name, boundListener, options);\n    });\n  }\n  /**\n   * Create a promise that resolves once component is fully loaded.\n   *\n   * @example\n   * const map = document.createElement('arcgis-map');\n   * document.body.append(map);\n   * map.componentOnReady().then(() => {\n   *   console.log('Map is ready to go!');\n   * });\n   */\n  async componentOnReady() {\n    await this._postLoaded.promise;\n    return this;\n  }\n};\nLitElement.$createEvent = createEventFactory;\nif (process.env.NODE_ENV !== \"production\" && isEsriInternalEnv2()) {\n  const globalWithLit = globalThis;\n  globalWithLit.litIssuedWarnings ??= /* @__PURE__ */new Set();\n  globalWithLit.litIssuedWarnings.add(\"Overriding ReactiveElement.createProperty() is deprecated. The override will not be called with standard decorators See https://lit.dev/msg/no-override-create-property for more information.\");\n}\n\n// src/runtime.ts\nimport { isEsriInternalEnv as isEsriInternalEnv3 } from \"@arcgis/components-utils\";\nfunction makeRuntime(options) {\n  let assetPath;\n  const setAssetPath = path => {\n    assetPath = new URL(path,\n    /**\n     * setAssetPath() is called in global scope whenever Lumina runtime is\n     * imported. Thus we need to carefully handle different environments.\n     *\n     * Need `|| undefined` because Stencil's unit tests mock-dock defines\n     * `location.href` as empty string, which crashes `new URL()`. Stencil's\n     * test environment does not define `NODE_ENV` by default, so we have to\n     * add a few bytes to production.\n     *\n     * For happy-dom and jsdom, we are assuming that `NODE_ENV` is set.\n     * Depending on configuration, `location?.href` is either undefined (not\n     * an exception) or `about:blank` (an exception - thus handling that case\n     * explicitly).\n     *\n     * For Node.js without a DOM environment, `location?.href` is undefined so\n     * all is good.\n     */\n    process.env.NODE_ENV === \"test\" ? globalThis.location?.href === \"about:blank\" ? void 0 : globalThis.location?.href || void 0 : globalThis.location?.href || void 0).href;\n  };\n  const runtime = {\n    ...options,\n    // FEATURE: research https://vitejs.dev/guide/build.html#advanced-base-options\n    getAssetPath(suffix) {\n      const assetUrl = new URL(suffix, assetPath);\n      return assetUrl.origin !== globalThis.location?.origin ? assetUrl.href : assetUrl.pathname;\n    },\n    setAssetPath,\n    customElement(tagName, component) {\n      component.runtime = runtime;\n      component.tagName = tagName;\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, component);\n      }\n    }\n  };\n  setAssetPath(options.defaultAssetPath);\n  if (process.env.NODE_ENV !== \"production\" && isEsriInternalEnv3()) {\n    globalThis.devOnly$luminaRuntime = runtime;\n  }\n  return runtime;\n}\n\n// src/jsx/types.ts\nvar Fragment = void 0;\nvar bindAttribute = void 0;\nvar bindBooleanAttribute = void 0;\nvar bindProperty = void 0;\nvar bindEvent = void 0;\n\n// src/jsx/directives.ts\nimport { classMap } from \"lit-html/directives/class-map.js\";\nimport { styleMap } from \"lit/directives/style-map.js\";\nimport { directive as litDirective } from \"lit-html/directive.js\";\nimport { live as litLive } from \"lit-html/directives/live.js\";\nvar safeClassMap = parameters => typeof parameters === \"object\" && parameters != null ? classMap(parameters) : parameters;\nvar safeStyleMap = parameters => typeof parameters === \"object\" && parameters != null ? styleMap(parameters) : parameters;\nvar directive = litDirective;\nvar live = litLive;\n\n// src/jsx/utils.ts\nimport { noChange as litNoChange, nothing as litNothing } from \"lit-html\";\nvar nothing = litNothing;\nvar noChange = litNoChange;\nfunction setAttribute(element, attributeName, value) {\n  if (value == null) {\n    element.removeAttribute(attributeName);\n  } else {\n    element.setAttribute(attributeName, value);\n  }\n}\nvar stringOrBoolean = {\n  toAttribute: value => value === true ? \"\" : value === false ? null : value\n};\n\n// src/wrappersUtils.ts\nvar emptyObject = {};\nvar makeReactWrapperFactory = (react, createComponent) => options => {\n  const tagName = options.tagName;\n  let customElementPrototype = emptyObject;\n  const elementClass = {\n    name: tagName,\n    /**\n     * Lit's createComponent tries to access the elementClass.prototype in\n     * global scope (in development mode). The elementClass may not be defined\n     * yet (because we are in a lazy loading build, or because current app\n     * doesn't import a given custom element as it doesn't use it).\n     *\n     * Thus, we return an empty object as a fake prototype.\n     *\n     * Right after the call to `createComponent`, we set to\n     * customElementPrototype undefined so that the next access of\n     * `.prototype` tries to get the real prototype.\n     * `createPrototypeProxy()` is called, this small proxy delays retrieving the custom\n     * element prototype until it is actually needed, and caches the result for future calls.\n     */\n    get prototype() {\n      if (customElementPrototype === void 0) {\n        customElementPrototype = customElements.get(tagName)?.prototype;\n        if (!customElementPrototype) {\n          throw new Error(`Custom element \"${tagName}\" not found`);\n        }\n        Object.defineProperty(elementClass, \"prototype\", {\n          value: customElementPrototype\n        });\n      }\n      return customElementPrototype;\n    }\n  };\n  const result = createComponent({\n    ...options,\n    react,\n    elementClass\n  });\n  customElementPrototype = void 0;\n  return result;\n};\nvar getReactWrapperOptions = (tagNameAndElement, events) => ({\n  tagName: tagNameAndElement,\n  events\n});\nexport { Fragment, LitElement, bindAttribute, bindBooleanAttribute, bindEvent, bindProperty, createEvent, directive, getReactWrapperOptions, live, makeDefineCustomElements, makeReactWrapperFactory, makeRuntime, method, noChange, noShadowRoot, nothing, property, safeClassMap, safeStyleMap, setAttribute, state, stringOrBoolean, useContextConsumer, useContextProvider };","map":{"version":3,"names":["attachToAncestor","makeDefineCustomElements","noShadowRoot","retrieveComponent","ContextConsumer","ContextProvider","useContextProvider","options","component","controller","el","addController","useContextConsumer","retrieveComponent2","keyTrackResolve","trackKey","isEsriInternalEnv","createEventFactory","eventName","emitter","emit","payload","process","env","NODE_ENV","isConnected","console","warn","tagName","toLowerCase","Error","event","CustomEvent","detail","cancelable","bubbles","composed","dispatchEvent","resolution","key","createEvent","bind","state","property","litProperty","method","Deferred","camelToKebab","isEsriInternalEnv2","LitElement","OriginalLitElement","isServer","useControllerManager","emptyFunction","_LitElement","constructor","lazy","manager","_postLoad","_offspring","_postLoaded","_enableUpdating","enableUpdating","ourShouldUpdate","prototype","shouldUpdate","_originalShouldUpdate","isOwnComponent","globalThis","devOnly$ownTagNames","has","warningsWereCustomized","enabledWarnings","disableWarning","devOnly$luminaComponentRefCallback","setAttribute","runtime","hydratedAttribute","finalizeStyles","styles","Array","isArray","filter","Boolean","finalizedStyles","useLightDom","shadowRootOptions","commonStyles","createProperty","name","flags","rest","attribute","reflect","type","Number","readOnly","noAccessor","lumina","connectedCallback","hasAttribute","isFirstCall","connectedCalled","queueMicrotask","_load","catch","error","reject","setTimeout","createRenderRoot","existingShadowRoot","shadowRoot","Class","renderRoot","attachShadow","Object","defineProperty","value","call","domRoot","getRootNode","adoptedStyleSheets","elementStyles","map","stylesheet","styleSheet","parentLoadPromise","_ancestorLoad","performUpdate","resolve","Promise","pendingChildren","loaded","loadedCalled","length","allSettled","child","componentOnReady","_loaded","_changedProperties","$changes","listen","listener","boundListener","onLifecycle","addEventListener","removeEventListener","listenOn","target","promise","$createEvent","globalWithLit","litIssuedWarnings","Set","add","isEsriInternalEnv3","makeRuntime","assetPath","setAssetPath","path","URL","location","href","getAssetPath","suffix","assetUrl","origin","pathname","customElement","customElements","get","define","defaultAssetPath","devOnly$luminaRuntime","Fragment","bindAttribute","bindBooleanAttribute","bindProperty","bindEvent","classMap","styleMap","directive","litDirective","live","litLive","safeClassMap","parameters","safeStyleMap","noChange","litNoChange","nothing","litNothing","element","attributeName","removeAttribute","stringOrBoolean","toAttribute","emptyObject","makeReactWrapperFactory","react","createComponent","customElementPrototype","elementClass","result","getReactWrapperOptions","tagNameAndElement","events"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/lumina/dist/index.js"],"sourcesContent":["import {\n  attachToAncestor,\n  makeDefineCustomElements,\n  noShadowRoot\n} from \"./chunk-NO7HOBNA.js\";\nimport \"./chunk-PGHUBTOM.js\";\n\n// src/context.ts\nimport { retrieveComponent } from \"@arcgis/components-controllers\";\nimport { ContextConsumer, ContextProvider } from \"@lit/context\";\nfunction useContextProvider(options) {\n  const component = retrieveComponent();\n  const controller = new ContextProvider(component.el, options);\n  component.addController(controller);\n  return controller;\n}\nfunction useContextConsumer(options) {\n  const component = retrieveComponent();\n  const controller = new ContextConsumer(component.el, options);\n  component.addController(controller);\n  return controller;\n}\n\n// src/createEvent.ts\nimport { retrieveComponent as retrieveComponent2, keyTrackResolve, trackKey } from \"@arcgis/components-controllers\";\nimport { isEsriInternalEnv } from \"@arcgis/components-utils\";\nvar createEventFactory = (eventName = \"\", options = {}, component = retrieveComponent2()) => {\n  const emitter = {\n    emit: (payload) => {\n      if (process.env.NODE_ENV !== \"production\" && isEsriInternalEnv() && !component.el.isConnected) {\n        console.warn(\n          `Trying to emit an ${eventName} event on a disconnected element ${component.el.tagName.toLowerCase()}`\n        );\n      }\n      if (eventName === \"\") {\n        keyTrackResolve();\n        if (process.env.NODE_ENV !== \"production\" && isEsriInternalEnv() && eventName === \"\") {\n          throw new Error(\"Unable to resolve event name from property name\");\n        }\n      }\n      const event = new CustomEvent(eventName, {\n        detail: payload,\n        cancelable: true,\n        bubbles: true,\n        composed: true,\n        ...options\n      });\n      component.el.dispatchEvent(event);\n      return event;\n    }\n  };\n  if (eventName === \"\") {\n    trackKey(\n      void 0,\n      (resolution) => {\n        if (process.env.NODE_ENV !== \"production\" && isEsriInternalEnv() && resolution === void 0) {\n          throw new Error(`createEvent must be called in property default value only`);\n        }\n        eventName = resolution.key;\n      },\n      emitter\n    );\n  }\n  return emitter;\n};\nvar createEvent = createEventFactory.bind(null, \"\");\n\n// src/decorators.ts\nimport { state } from \"@lit/reactive-element/decorators/state.js\";\nimport { property as litProperty } from \"@lit/reactive-element/decorators/property.js\";\nvar property = litProperty;\nvar method = void 0;\n\n// src/LitElement.ts\nimport { Deferred, camelToKebab, isEsriInternalEnv as isEsriInternalEnv2 } from \"@arcgis/components-utils\";\nimport { LitElement as OriginalLitElement, isServer } from \"lit\";\nimport { useControllerManager } from \"@arcgis/components-controllers\";\nvar emptyFunction = () => void 0;\nvar LitElement = class _LitElement extends OriginalLitElement {\n  constructor() {\n    super();\n    /**\n     * In lazy build, the actual DOM element differs from the class instance:\n     * - \"this.el\" is a proxy custom element - it's physically present in the DOM\n     *   even before the Lit component is loaded.\n     * - \"this\" is the actual Lit component - in case of Lazy builds, it's\n     *   never directly attached to the DOM. Instead, all interactions with the\n     *   proxy are forwarded to the actual Lit component. And, when Lit wants to\n     *   render, it renders into the shadow root of the proxy.\n     *\n     * \"this.el\" should be used instead of \"this\" for all things involving the\n     * DOM (addEventListener, querySelector, children, setAttribute,\n     * MutationObserver, etc...)\n     *\n     * @example\n     * ```ts\n     * // Generally, you shouldn't have to write logic specific to lazy or non-lazy\n     * // build, but if you have to, you can detect if you are in a lazy build like so:\n     * const isLazy = this.el !== this;\n     * ```\n     */\n    this.el = this.constructor.lazy ?? this;\n    /**\n     * Controller Manager orchestrates all controllers used by this component,\n     * connecting their lifecycle hooks and providing context information.\n     */\n    this.manager = useControllerManager(this);\n    /** @internal */\n    this._postLoad = this.constructor.lazy?._postLoad ?? new Deferred();\n    /**\n     * Direct offspring that should be awaited before loaded() is emitted.\n     *\n     * `attachToAncestor()` will add elements to this array\n     *\n     * @internal\n     */\n    this._offspring = this.constructor.lazy?._offspring ?? [];\n    this._postLoaded = this.constructor.lazy?._postLoaded ?? new Deferred();\n    this._enableUpdating = this.enableUpdating;\n    this.enableUpdating = emptyFunction;\n    const ourShouldUpdate = _LitElement.prototype.shouldUpdate;\n    if (this.shouldUpdate !== ourShouldUpdate) {\n      this._originalShouldUpdate = this.shouldUpdate;\n      this.shouldUpdate = ourShouldUpdate;\n    }\n    if (process.env.NODE_ENV !== \"production\") {\n      const isOwnComponent = globalThis.devOnly$ownTagNames?.has(\n        this.el.tagName.toLowerCase()\n      );\n      const constructor = this.constructor;\n      const warningsWereCustomized = constructor.enabledWarnings !== OriginalLitElement.enabledWarnings;\n      if (!isOwnComponent && !warningsWereCustomized) {\n        constructor.disableWarning?.(\"change-in-update\");\n      }\n      if (isEsriInternalEnv2()) {\n        globalThis.devOnly$luminaComponentRefCallback?.(this);\n      }\n    }\n    if (isServer) {\n      this.el.setAttribute(this.constructor.runtime.hydratedAttribute, \"\");\n    }\n  }\n  /**\n   * Customize Lit's default style handling to support non-shadow-root styles\n   */\n  static finalizeStyles(styles) {\n    if (process.env.NODE_ENV === \"test\" && Array.isArray(styles)) {\n      styles = styles.filter(Boolean);\n    }\n    const finalizedStyles = super.finalizeStyles(styles);\n    const useLightDom = this.shadowRootOptions === noShadowRoot;\n    return this.runtime?.commonStyles === void 0 || useLightDom ? finalizedStyles : [this.runtime.commonStyles, ...finalizedStyles];\n  }\n  static createProperty(name, options) {\n    const flags = typeof options === \"number\" ? options : Array.isArray(options) ? options[0] : 0;\n    const rest = Array.isArray(options) ? options[1] : void 0;\n    super.createProperty(name, {\n      /**\n       * By default to infer attribute name from property name, Lit just\n       * converts property name to lowercase. That is consistent with\n       * native DOM attributes.\n       *\n       * However, that is not consistent with Stencil and would be a\n       * breaking change for us. Also, kebab-case is more common among the\n       * web components. But the most important reason is that we have\n       * some pretty long attribute names, which would be utterly\n       * unreadable in lowercase.\n       *\n       * Also, if browsers add new attributes, that may cause a conflict\n       * with our attributes.\n       *\n       * Thus, overwriting Lit's default behavior to use kebab-case:\n       */\n      attribute: !!(flags & 1 /* ATTRIBUTE */) && typeof name === \"string\" ? camelToKebab(name) : false,\n      reflect: !!(flags & 2 /* REFLECT */),\n      type: flags & 4 /* BOOLEAN */ ? Boolean : flags & 8 /* NUMBER */ ? Number : void 0,\n      /**\n       * At the moment in Lit, state:true just means attribute:false, so this\n       * line is technically redundant, but let's keep it here just in case Lit\n       * will add more meaning to state:true in the future.\n       */\n      state: !!(flags & 16 /* STATE */),\n      // Controllers add this option to Lit\n      readOnly: !!(flags & 32 /* READ_ONLY */),\n      noAccessor: !!(flags & 64 /* NO_ACCESSOR */),\n      ...rest\n    });\n  }\n  static {\n    this.lumina = true;\n  }\n  connectedCallback() {\n    if (this.el.hasAttribute(\"defer-hydration\")) {\n      return;\n    }\n    const isFirstCall = !this.manager.connectedCalled;\n    super.connectedCallback();\n    if (isFirstCall) {\n      queueMicrotask(\n        // eslint-disable-next-line @typescript-eslint/no-misused-promises, @typescript-eslint/promise-function-async\n        () => this._load().catch((error) => {\n          this._postLoaded.reject(error);\n          setTimeout(() => {\n            throw error;\n          });\n        })\n      );\n    }\n  }\n  /**\n   * Overwrite Lit's default behavior of attaching shadow root to the lit\n   * element, and instead use this.el to support lazy builds.\n   *\n   * Also, support the case when component asked to not use shadow root\n   */\n  createRenderRoot() {\n    const existingShadowRoot = this.el.shadowRoot;\n    const Class = this.constructor;\n    const options = Class.shadowRootOptions;\n    const useLightDom = options === noShadowRoot;\n    const renderRoot = existingShadowRoot ?? (useLightDom ? this.el : this.el.attachShadow(options));\n    Object.defineProperty(this, \"shadowRoot\", {\n      // Create shadow root on the proxy instance, to make Lit render content there\n      value: renderRoot\n    });\n    if (existingShadowRoot) {\n      if (process.env.NODE_ENV === \"production\") {\n        OriginalLitElement.prototype.createRenderRoot.call(this);\n      }\n      return existingShadowRoot;\n    }\n    if (this.isConnected) {\n      const domRoot = renderRoot.getRootNode();\n      if (process.env.NODE_ENV === \"test\") {\n        domRoot.adoptedStyleSheets ??= [];\n      }\n      domRoot.adoptedStyleSheets = [\n        ...domRoot.adoptedStyleSheets,\n        ...Class.elementStyles.map((stylesheet) => \"styleSheet\" in stylesheet ? stylesheet.styleSheet : stylesheet)\n      ];\n    }\n    return renderRoot;\n  }\n  /** Do asynchronous component load */\n  async _load() {\n    const parentLoadPromise = this.el._ancestorLoad ?? attachToAncestor(this.el);\n    if (parentLoadPromise) {\n      await parentLoadPromise;\n    }\n    await this.manager._load();\n    this._enableUpdating(true);\n    this.performUpdate();\n    this._postLoad.resolve();\n    await Promise.resolve();\n    const pendingChildren = this._offspring.filter((loaded) => !loaded.manager?.loadedCalled);\n    if (pendingChildren.length) {\n      await Promise.allSettled(pendingChildren.map(async (child) => await child.componentOnReady()));\n    }\n    this._offspring.length = 0;\n    this.el.setAttribute(this.constructor.runtime.hydratedAttribute, \"\");\n    this.manager._loaded();\n    this._postLoaded.resolve();\n  }\n  /**\n   * Overwriting default shouldUpdate simply to get access to\n   * \"changedProperties\" so that we can later provide it to ControllerManager\n   */\n  shouldUpdate(_changedProperties) {\n    this.$changes = _changedProperties;\n    return this._originalShouldUpdate?.(_changedProperties) ?? true;\n  }\n  listen(name, listener, options) {\n    const boundListener = listener?.bind(this) ?? listener;\n    this.manager.onLifecycle(() => {\n      this.el.addEventListener(name, boundListener, options);\n      return () => this.el.removeEventListener(name, boundListener, options);\n    });\n  }\n  listenOn(target, name, listener, options) {\n    const boundListener = listener?.bind(this) ?? listener;\n    this.manager.onLifecycle(() => {\n      target.addEventListener(name, boundListener, options);\n      return () => target.removeEventListener(name, boundListener, options);\n    });\n  }\n  /**\n   * Create a promise that resolves once component is fully loaded.\n   *\n   * @example\n   * const map = document.createElement('arcgis-map');\n   * document.body.append(map);\n   * map.componentOnReady().then(() => {\n   *   console.log('Map is ready to go!');\n   * });\n   */\n  async componentOnReady() {\n    await this._postLoaded.promise;\n    return this;\n  }\n};\nLitElement.$createEvent = createEventFactory;\nif (process.env.NODE_ENV !== \"production\" && isEsriInternalEnv2()) {\n  const globalWithLit = globalThis;\n  globalWithLit.litIssuedWarnings ??= /* @__PURE__ */ new Set();\n  globalWithLit.litIssuedWarnings.add(\n    \"Overriding ReactiveElement.createProperty() is deprecated. The override will not be called with standard decorators See https://lit.dev/msg/no-override-create-property for more information.\"\n  );\n}\n\n// src/runtime.ts\nimport { isEsriInternalEnv as isEsriInternalEnv3 } from \"@arcgis/components-utils\";\nfunction makeRuntime(options) {\n  let assetPath;\n  const setAssetPath = (path) => {\n    assetPath = new URL(\n      path,\n      /**\n       * setAssetPath() is called in global scope whenever Lumina runtime is\n       * imported. Thus we need to carefully handle different environments.\n       *\n       * Need `|| undefined` because Stencil's unit tests mock-dock defines\n       * `location.href` as empty string, which crashes `new URL()`. Stencil's\n       * test environment does not define `NODE_ENV` by default, so we have to\n       * add a few bytes to production.\n       *\n       * For happy-dom and jsdom, we are assuming that `NODE_ENV` is set.\n       * Depending on configuration, `location?.href` is either undefined (not\n       * an exception) or `about:blank` (an exception - thus handling that case\n       * explicitly).\n       *\n       * For Node.js without a DOM environment, `location?.href` is undefined so\n       * all is good.\n       */\n      process.env.NODE_ENV === \"test\" ? globalThis.location?.href === \"about:blank\" ? void 0 : globalThis.location?.href || void 0 : globalThis.location?.href || void 0\n    ).href;\n  };\n  const runtime = {\n    ...options,\n    // FEATURE: research https://vitejs.dev/guide/build.html#advanced-base-options\n    getAssetPath(suffix) {\n      const assetUrl = new URL(suffix, assetPath);\n      return assetUrl.origin !== globalThis.location?.origin ? assetUrl.href : assetUrl.pathname;\n    },\n    setAssetPath,\n    customElement(tagName, component) {\n      component.runtime = runtime;\n      component.tagName = tagName;\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, component);\n      }\n    }\n  };\n  setAssetPath(options.defaultAssetPath);\n  if (process.env.NODE_ENV !== \"production\" && isEsriInternalEnv3()) {\n    globalThis.devOnly$luminaRuntime = runtime;\n  }\n  return runtime;\n}\n\n// src/jsx/types.ts\nvar Fragment = void 0;\nvar bindAttribute = void 0;\nvar bindBooleanAttribute = void 0;\nvar bindProperty = void 0;\nvar bindEvent = void 0;\n\n// src/jsx/directives.ts\nimport { classMap } from \"lit-html/directives/class-map.js\";\nimport { styleMap } from \"lit/directives/style-map.js\";\nimport { directive as litDirective } from \"lit-html/directive.js\";\nimport { live as litLive } from \"lit-html/directives/live.js\";\nvar safeClassMap = (parameters) => typeof parameters === \"object\" && parameters != null ? classMap(parameters) : parameters;\nvar safeStyleMap = (parameters) => typeof parameters === \"object\" && parameters != null ? styleMap(parameters) : parameters;\nvar directive = litDirective;\nvar live = litLive;\n\n// src/jsx/utils.ts\nimport { noChange as litNoChange, nothing as litNothing } from \"lit-html\";\nvar nothing = litNothing;\nvar noChange = litNoChange;\nfunction setAttribute(element, attributeName, value) {\n  if (value == null) {\n    element.removeAttribute(attributeName);\n  } else {\n    element.setAttribute(attributeName, value);\n  }\n}\nvar stringOrBoolean = {\n  toAttribute: (value) => value === true ? \"\" : value === false ? null : value\n};\n\n// src/wrappersUtils.ts\nvar emptyObject = {};\nvar makeReactWrapperFactory = (react, createComponent) => (options) => {\n  const tagName = options.tagName;\n  let customElementPrototype = emptyObject;\n  const elementClass = {\n    name: tagName,\n    /**\n     * Lit's createComponent tries to access the elementClass.prototype in\n     * global scope (in development mode). The elementClass may not be defined\n     * yet (because we are in a lazy loading build, or because current app\n     * doesn't import a given custom element as it doesn't use it).\n     *\n     * Thus, we return an empty object as a fake prototype.\n     *\n     * Right after the call to `createComponent`, we set to\n     * customElementPrototype undefined so that the next access of\n     * `.prototype` tries to get the real prototype.\n     * `createPrototypeProxy()` is called, this small proxy delays retrieving the custom\n     * element prototype until it is actually needed, and caches the result for future calls.\n     */\n    get prototype() {\n      if (customElementPrototype === void 0) {\n        customElementPrototype = customElements.get(tagName)?.prototype;\n        if (!customElementPrototype) {\n          throw new Error(`Custom element \"${tagName}\" not found`);\n        }\n        Object.defineProperty(elementClass, \"prototype\", { value: customElementPrototype });\n      }\n      return customElementPrototype;\n    }\n  };\n  const result = createComponent({\n    ...options,\n    react,\n    elementClass\n  });\n  customElementPrototype = void 0;\n  return result;\n};\nvar getReactWrapperOptions = (tagNameAndElement, events) => ({ tagName: tagNameAndElement, events });\nexport {\n  Fragment,\n  LitElement,\n  bindAttribute,\n  bindBooleanAttribute,\n  bindEvent,\n  bindProperty,\n  createEvent,\n  directive,\n  getReactWrapperOptions,\n  live,\n  makeDefineCustomElements,\n  makeReactWrapperFactory,\n  makeRuntime,\n  method,\n  noChange,\n  noShadowRoot,\n  nothing,\n  property,\n  safeClassMap,\n  safeStyleMap,\n  setAttribute,\n  state,\n  stringOrBoolean,\n  useContextConsumer,\n  useContextProvider\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}