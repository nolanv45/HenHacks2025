{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { convertUnit as e } from \"../core/unitUtils.js\";\nimport { load as r, supportsCurves as o, execute as t, isLoaded as s } from \"../geometry/operators/gx/operatorGeodeticArea.js\";\nimport { geodeticCurveType as a } from \"../geometry/operators/support/geodeticCurveType.js\";\nlet i, p, u, n;\nfunction c() {\n  return !!i && s();\n}\nasync function m() {\n  if (!c()) {\n    const [e] = await Promise.all([import(\"../geometry/operators/support/apiConverter.js\"), r()]);\n    i = e.fromGeometry, p = e.fromSpatialReference, u = e.getSpatialReference, n = o();\n  }\n}\nfunction l(r, o = {}) {\n  const {\n      curveType: s = \"geodesic\",\n      unit: n\n    } = o,\n    c = u(r);\n  let m = t(i(r), p(c), a[s]);\n  return m && n && (m = e(m, \"square-meters\", n)), m;\n}\nconst f = Object.freeze(Object.defineProperty({\n  __proto__: null,\n  execute: l,\n  isLoaded: c,\n  load: m,\n  get supportsCurves() {\n    return n;\n  }\n}, Symbol.toStringTag, {\n  value: \"Module\"\n}));\nexport { l as e, f as g, c as i, m as l, n as s };","map":{"version":3,"names":["convertUnit","e","load","r","supportsCurves","o","execute","t","isLoaded","s","geodeticCurveType","a","i","p","u","n","c","m","Promise","all","fromGeometry","fromSpatialReference","getSpatialReference","l","curveType","unit","f","Object","freeze","defineProperty","__proto__","Symbol","toStringTag","value","g"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/chunks/geodeticAreaOperator.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{convertUnit as e}from\"../core/unitUtils.js\";import{load as r,supportsCurves as o,execute as t,isLoaded as s}from\"../geometry/operators/gx/operatorGeodeticArea.js\";import{geodeticCurveType as a}from\"../geometry/operators/support/geodeticCurveType.js\";let i,p,u,n;function c(){return!!i&&s()}async function m(){if(!c()){const[e]=await Promise.all([import(\"../geometry/operators/support/apiConverter.js\"),r()]);i=e.fromGeometry,p=e.fromSpatialReference,u=e.getSpatialReference,n=o()}}function l(r,o={}){const{curveType:s=\"geodesic\",unit:n}=o,c=u(r);let m=t(i(r),p(c),a[s]);return m&&n&&(m=e(m,\"square-meters\",n)),m}const f=Object.freeze(Object.defineProperty({__proto__:null,execute:l,isLoaded:c,load:m,get supportsCurves(){return n}},Symbol.toStringTag,{value:\"Module\"}));export{l as e,f as g,c as i,m as l,n as s};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,WAAW,IAAIC,CAAC,QAAK,sBAAsB;AAAC,SAAOC,IAAI,IAAIC,CAAC,EAACC,cAAc,IAAIC,CAAC,EAACC,OAAO,IAAIC,CAAC,EAACC,QAAQ,IAAIC,CAAC,QAAK,kDAAkD;AAAC,SAAOC,iBAAiB,IAAIC,CAAC,QAAK,oDAAoD;AAAC,IAAIC,CAAC,EAACC,CAAC,EAACC,CAAC,EAACC,CAAC;AAAC,SAASC,CAACA,CAAA,EAAE;EAAC,OAAM,CAAC,CAACJ,CAAC,IAAEH,CAAC,CAAC,CAAC;AAAA;AAAC,eAAeQ,CAACA,CAAA,EAAE;EAAC,IAAG,CAACD,CAAC,CAAC,CAAC,EAAC;IAAC,MAAK,CAACf,CAAC,CAAC,GAAC,MAAMiB,OAAO,CAACC,GAAG,CAAC,CAAC,MAAM,CAAC,+CAA+C,CAAC,EAAChB,CAAC,CAAC,CAAC,CAAC,CAAC;IAACS,CAAC,GAACX,CAAC,CAACmB,YAAY,EAACP,CAAC,GAACZ,CAAC,CAACoB,oBAAoB,EAACP,CAAC,GAACb,CAAC,CAACqB,mBAAmB,EAACP,CAAC,GAACV,CAAC,CAAC,CAAC;EAAA;AAAC;AAAC,SAASkB,CAACA,CAACpB,CAAC,EAACE,CAAC,GAAC,CAAC,CAAC,EAAC;EAAC,MAAK;MAACmB,SAAS,EAACf,CAAC,GAAC,UAAU;MAACgB,IAAI,EAACV;IAAC,CAAC,GAACV,CAAC;IAACW,CAAC,GAACF,CAAC,CAACX,CAAC,CAAC;EAAC,IAAIc,CAAC,GAACV,CAAC,CAACK,CAAC,CAACT,CAAC,CAAC,EAACU,CAAC,CAACG,CAAC,CAAC,EAACL,CAAC,CAACF,CAAC,CAAC,CAAC;EAAC,OAAOQ,CAAC,IAAEF,CAAC,KAAGE,CAAC,GAAChB,CAAC,CAACgB,CAAC,EAAC,eAAe,EAACF,CAAC,CAAC,CAAC,EAACE,CAAC;AAAA;AAAC,MAAMS,CAAC,GAACC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACE,cAAc,CAAC;EAACC,SAAS,EAAC,IAAI;EAACxB,OAAO,EAACiB,CAAC;EAACf,QAAQ,EAACQ,CAAC;EAACd,IAAI,EAACe,CAAC;EAAC,IAAIb,cAAcA,CAAA,EAAE;IAAC,OAAOW,CAAC;EAAA;AAAC,CAAC,EAACgB,MAAM,CAACC,WAAW,EAAC;EAACC,KAAK,EAAC;AAAQ,CAAC,CAAC,CAAC;AAAC,SAAOV,CAAC,IAAItB,CAAC,EAACyB,CAAC,IAAIQ,CAAC,EAAClB,CAAC,IAAIJ,CAAC,EAACK,CAAC,IAAIM,CAAC,EAACR,CAAC,IAAIN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}