{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { set as e, subtract as t, scale as s, add as i, normalize as r } from \"../../../../core/libs/gl-matrix-2/math/vec2.js\";\nimport { create as n } from \"../../../../core/libs/gl-matrix-2/factories/vec2f64.js\";\nclass o {\n  rebuildConnectingProfileGeometry(e, t, s) {\n    for (let i = 0; i < t.vertices.length; ++i) s(e.frame, t.vertices[i], t.normals[i], 0, 0);\n  }\n}\nclass l extends o {\n  constructor() {\n    super(), this.numVertices = 0, this.numIndices = 0;\n  }\n  rebuildCapGeometry() {}\n  buildTopology() {}\n}\nclass f extends o {\n  constructor(e, t = 0, s = !1) {\n    super(), this.profile = e, this.profilePlaneOffset = t, this.flip = s;\n  }\n  get numVertices() {\n    return this.profile.vertices.length;\n  }\n  get numIndices() {\n    return 3 * this.profile.numSegments;\n  }\n  rebuildConnectingProfileGeometry(e, t, s) {\n    const i = this.profilePlaneOffset;\n    for (let r = 0; r < t.vertices.length; ++r) s(e.frame, t.vertices[r], t.normals[r], i, 0);\n  }\n  rebuildCapGeometry(t, s) {\n    const i = this.profile,\n      r = this.flip ? 1 : -1,\n      n = this.profilePlaneOffset,\n      o = m;\n    e(o, 0, 0);\n    for (let e = 0; e < i.vertices.length; ++e) s(t.frame, i.vertices[e], o, n, r);\n  }\n  buildTopology(e, t) {\n    const s = this.profile,\n      i = this.vertexBufferStart + s.indices[0];\n    for (let r = 1; r < s.numSegments; ++r) {\n      const e = s.indices[2 * r],\n        n = s.indices[2 * r + 1],\n        o = this.vertexBufferStart + e,\n        l = this.vertexBufferStart + n;\n      this.flip ? t(l, o, i) : t(i, o, l);\n    }\n  }\n}\nclass h extends o {\n  constructor(e) {\n    super(), this.flip = !1, this.sign = 0, this.breakNormals = !1, this.numSegments = 3, this.profile = e.profile, this.flip = e.flip, this.sign = this.flip ? 1 : -1, this.breakNormals = e.breakNormals, this.numSegments = e.subdivisions;\n  }\n  get numVertices() {\n    let e = this.profile.vertices.length * (this.numSegments - 1) + this.profile.poles.length;\n    return this.breakNormals && (e += this.profile.vertices.length), e;\n  }\n  get numIndices() {\n    let e = 0;\n    const t = this.profile;\n    e += 2 * t.numSegments * (this.numSegments - 1);\n    for (let s = 0; s < t.numSegments; ++s) {\n      const i = t.indices[2 * s],\n        r = t.indices[2 * s + 1];\n      t.poleIndices[i] === t.poleIndices[r] ? e += 1 : e += 2;\n    }\n    return 3 * e;\n  }\n  rebuildCapGeometry(n, o) {\n    const l = this.profile,\n      f = n.frame,\n      h = .5 * this.sign,\n      p = c,\n      a = m;\n    e(a, 0, 0);\n    for (const e of l.poles) e.normal ? o(f, e.position, e.normal, h, 0) : o(f, e.position, a, h, this.sign);\n    if (this.breakNormals) for (let e = 0; e < l.vertices.length; ++e) o(f, l.vertices[e], l.normals[e], 0, 0);\n    for (let e = 0; e < this.numSegments - 1; ++e) {\n      const n = (1 - (e + 1) / this.numSegments) * Math.PI * .5,\n        c = Math.sin(n),\n        m = Math.cos(n);\n      for (let e = 0; e < l.vertices.length; ++e) {\n        const n = l.poles[l.poleIndices[e]];\n        t(p, l.vertices[e], n.position), s(p, p, c), n.normal ? (i(p, p, n.position), o(f, p, n.normal, h * m, 0)) : (r(a, p), s(a, a, c), i(p, p, n.position), o(f, p, a, h * m, this.sign * m));\n      }\n    }\n  }\n  buildTopology(e, t) {\n    const s = this.profile,\n      i = this.breakNormals ? this.vertexBufferStart + s.poles.length : this.firstProfileVertexIndex,\n      r = this.breakNormals ? this.vertexBufferStart + s.poles.length + s.vertices.length : this.vertexBufferStart + s.poles.length;\n    for (let n = 0; n < s.numSegments; ++n) {\n      const e = s.indices[2 * n],\n        o = s.indices[2 * n + 1],\n        l = this.vertexBufferStart + s.poleIndices[e],\n        f = this.vertexBufferStart + s.poleIndices[o];\n      let h = i + e,\n        c = i + o;\n      for (let i = 0; i < this.numSegments - 1; ++i) {\n        const n = r + i * s.vertices.length + e,\n          l = r + i * s.vertices.length + o;\n        this.flip ? (t(n, c, h), t(c, n, l)) : (t(h, c, n), t(l, n, c)), h = n, c = l;\n      }\n      this.flip ? (t(l, c, h), l !== f && t(l, f, c)) : (t(h, c, l), l !== f && t(c, f, l));\n    }\n  }\n}\nconst c = n(),\n  m = n();\nexport { l as NoCapBuilder, o as PathCapBuilder, h as RoundCapBuilder, f as TriangulationCapBuilder };","map":{"version":3,"names":["set","e","subtract","t","scale","s","add","i","normalize","r","create","n","o","rebuildConnectingProfileGeometry","vertices","length","frame","normals","l","constructor","numVertices","numIndices","rebuildCapGeometry","buildTopology","f","profile","profilePlaneOffset","flip","numSegments","m","vertexBufferStart","indices","h","sign","breakNormals","subdivisions","poles","poleIndices","p","c","a","normal","position","Math","PI","sin","cos","firstProfileVertexIndex","NoCapBuilder","PathCapBuilder","RoundCapBuilder","TriangulationCapBuilder"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/3d/webgl-engine/lib/PathCapBuilder.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{set as e,subtract as t,scale as s,add as i,normalize as r}from\"../../../../core/libs/gl-matrix-2/math/vec2.js\";import{create as n}from\"../../../../core/libs/gl-matrix-2/factories/vec2f64.js\";class o{rebuildConnectingProfileGeometry(e,t,s){for(let i=0;i<t.vertices.length;++i)s(e.frame,t.vertices[i],t.normals[i],0,0)}}class l extends o{constructor(){super(),this.numVertices=0,this.numIndices=0}rebuildCapGeometry(){}buildTopology(){}}class f extends o{constructor(e,t=0,s=!1){super(),this.profile=e,this.profilePlaneOffset=t,this.flip=s}get numVertices(){return this.profile.vertices.length}get numIndices(){return 3*this.profile.numSegments}rebuildConnectingProfileGeometry(e,t,s){const i=this.profilePlaneOffset;for(let r=0;r<t.vertices.length;++r)s(e.frame,t.vertices[r],t.normals[r],i,0)}rebuildCapGeometry(t,s){const i=this.profile,r=this.flip?1:-1,n=this.profilePlaneOffset,o=m;e(o,0,0);for(let e=0;e<i.vertices.length;++e)s(t.frame,i.vertices[e],o,n,r)}buildTopology(e,t){const s=this.profile,i=this.vertexBufferStart+s.indices[0];for(let r=1;r<s.numSegments;++r){const e=s.indices[2*r],n=s.indices[2*r+1],o=this.vertexBufferStart+e,l=this.vertexBufferStart+n;this.flip?t(l,o,i):t(i,o,l)}}}class h extends o{constructor(e){super(),this.flip=!1,this.sign=0,this.breakNormals=!1,this.numSegments=3,this.profile=e.profile,this.flip=e.flip,this.sign=this.flip?1:-1,this.breakNormals=e.breakNormals,this.numSegments=e.subdivisions}get numVertices(){let e=this.profile.vertices.length*(this.numSegments-1)+this.profile.poles.length;return this.breakNormals&&(e+=this.profile.vertices.length),e}get numIndices(){let e=0;const t=this.profile;e+=2*t.numSegments*(this.numSegments-1);for(let s=0;s<t.numSegments;++s){const i=t.indices[2*s],r=t.indices[2*s+1];t.poleIndices[i]===t.poleIndices[r]?e+=1:e+=2}return 3*e}rebuildCapGeometry(n,o){const l=this.profile,f=n.frame,h=.5*this.sign,p=c,a=m;e(a,0,0);for(const e of l.poles)e.normal?o(f,e.position,e.normal,h,0):o(f,e.position,a,h,this.sign);if(this.breakNormals)for(let e=0;e<l.vertices.length;++e)o(f,l.vertices[e],l.normals[e],0,0);for(let e=0;e<this.numSegments-1;++e){const n=(1-(e+1)/this.numSegments)*Math.PI*.5,c=Math.sin(n),m=Math.cos(n);for(let e=0;e<l.vertices.length;++e){const n=l.poles[l.poleIndices[e]];t(p,l.vertices[e],n.position),s(p,p,c),n.normal?(i(p,p,n.position),o(f,p,n.normal,h*m,0)):(r(a,p),s(a,a,c),i(p,p,n.position),o(f,p,a,h*m,this.sign*m))}}}buildTopology(e,t){const s=this.profile,i=this.breakNormals?this.vertexBufferStart+s.poles.length:this.firstProfileVertexIndex,r=this.breakNormals?this.vertexBufferStart+s.poles.length+s.vertices.length:this.vertexBufferStart+s.poles.length;for(let n=0;n<s.numSegments;++n){const e=s.indices[2*n],o=s.indices[2*n+1],l=this.vertexBufferStart+s.poleIndices[e],f=this.vertexBufferStart+s.poleIndices[o];let h=i+e,c=i+o;for(let i=0;i<this.numSegments-1;++i){const n=r+i*s.vertices.length+e,l=r+i*s.vertices.length+o;this.flip?(t(n,c,h),t(c,n,l)):(t(h,c,n),t(l,n,c)),h=n,c=l}this.flip?(t(l,c,h),l!==f&&t(l,f,c)):(t(h,c,l),l!==f&&t(c,f,l))}}}const c=n(),m=n();export{l as NoCapBuilder,o as PathCapBuilder,h as RoundCapBuilder,f as TriangulationCapBuilder};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}