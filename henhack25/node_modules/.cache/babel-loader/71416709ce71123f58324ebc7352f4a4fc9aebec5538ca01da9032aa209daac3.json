{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { setSingleImageTextures as t, setCoordsAndTransforms as a } from \"./utils.js\";\nconst e = {\n  vsPath: \"raster/rfx/vs\",\n  fsPath: \"raster/rfx/focalstatistics\",\n  attributes: new Map([[\"a_position\", 0], [\"a_texcoord\", 1]])\n};\nfunction r(t, a) {\n  const {\n      painter: r,\n      rasterFunction: s\n    } = t,\n    {\n      kernelRows: n,\n      kernelCols: o,\n      fillNoDataOnly: i,\n      statisticsType: c\n    } = s.parameters,\n    l = [{\n      name: \"rows\",\n      value: n\n    }, {\n      name: \"cols\",\n      value: o\n    }, c];\n  return i && l.push(\"fill\"), r.materialManager.getProgram(e, l);\n}\nfunction s(e, r, s) {\n  t(e, r, s), a(r), r.setUniform2fv(\"u_srcImageSize\", [s.width, s.height]);\n  const {\n    clampRange: n\n  } = e.rasterFunction.parameters;\n  r.setUniform2fv(\"u_clampRange\", n);\n}\nconst n = {\n  createProgram: r,\n  bindTextureAndUniforms: s\n};\nexport { n as default };","map":{"version":3,"names":["setSingleImageTextures","t","setCoordsAndTransforms","a","e","vsPath","fsPath","attributes","Map","r","painter","rasterFunction","s","kernelRows","n","kernelCols","o","fillNoDataOnly","i","statisticsType","c","parameters","l","name","value","push","materialManager","getProgram","setUniform2fv","width","height","clampRange","createProgram","bindTextureAndUniforms","default"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/2d/engine/imagery/processor/focalStatisticsProcessor.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{setSingleImageTextures as t,setCoordsAndTransforms as a}from\"./utils.js\";const e={vsPath:\"raster/rfx/vs\",fsPath:\"raster/rfx/focalstatistics\",attributes:new Map([[\"a_position\",0],[\"a_texcoord\",1]])};function r(t,a){const{painter:r,rasterFunction:s}=t,{kernelRows:n,kernelCols:o,fillNoDataOnly:i,statisticsType:c}=s.parameters,l=[{name:\"rows\",value:n},{name:\"cols\",value:o},c];return i&&l.push(\"fill\"),r.materialManager.getProgram(e,l)}function s(e,r,s){t(e,r,s),a(r),r.setUniform2fv(\"u_srcImageSize\",[s.width,s.height]);const{clampRange:n}=e.rasterFunction.parameters;r.setUniform2fv(\"u_clampRange\",n)}const n={createProgram:r,bindTextureAndUniforms:s};export{n as default};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,sBAAsB,IAAIC,CAAC,EAACC,sBAAsB,IAAIC,CAAC,QAAK,YAAY;AAAC,MAAMC,CAAC,GAAC;EAACC,MAAM,EAAC,eAAe;EAACC,MAAM,EAAC,4BAA4B;EAACC,UAAU,EAAC,IAAIC,GAAG,CAAC,CAAC,CAAC,YAAY,EAAC,CAAC,CAAC,EAAC,CAAC,YAAY,EAAC,CAAC,CAAC,CAAC;AAAC,CAAC;AAAC,SAASC,CAACA,CAACR,CAAC,EAACE,CAAC,EAAC;EAAC,MAAK;MAACO,OAAO,EAACD,CAAC;MAACE,cAAc,EAACC;IAAC,CAAC,GAACX,CAAC;IAAC;MAACY,UAAU,EAACC,CAAC;MAACC,UAAU,EAACC,CAAC;MAACC,cAAc,EAACC,CAAC;MAACC,cAAc,EAACC;IAAC,CAAC,GAACR,CAAC,CAACS,UAAU;IAACC,CAAC,GAAC,CAAC;MAACC,IAAI,EAAC,MAAM;MAACC,KAAK,EAACV;IAAC,CAAC,EAAC;MAACS,IAAI,EAAC,MAAM;MAACC,KAAK,EAACR;IAAC,CAAC,EAACI,CAAC,CAAC;EAAC,OAAOF,CAAC,IAAEI,CAAC,CAACG,IAAI,CAAC,MAAM,CAAC,EAAChB,CAAC,CAACiB,eAAe,CAACC,UAAU,CAACvB,CAAC,EAACkB,CAAC,CAAC;AAAA;AAAC,SAASV,CAACA,CAACR,CAAC,EAACK,CAAC,EAACG,CAAC,EAAC;EAACX,CAAC,CAACG,CAAC,EAACK,CAAC,EAACG,CAAC,CAAC,EAACT,CAAC,CAACM,CAAC,CAAC,EAACA,CAAC,CAACmB,aAAa,CAAC,gBAAgB,EAAC,CAAChB,CAAC,CAACiB,KAAK,EAACjB,CAAC,CAACkB,MAAM,CAAC,CAAC;EAAC,MAAK;IAACC,UAAU,EAACjB;EAAC,CAAC,GAACV,CAAC,CAACO,cAAc,CAACU,UAAU;EAACZ,CAAC,CAACmB,aAAa,CAAC,cAAc,EAACd,CAAC,CAAC;AAAA;AAAC,MAAMA,CAAC,GAAC;EAACkB,aAAa,EAACvB,CAAC;EAACwB,sBAAsB,EAACrB;AAAC,CAAC;AAAC,SAAOE,CAAC,IAAIoB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}