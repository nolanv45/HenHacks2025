{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { b as t, c as e } from \"./tslib.es6.js\";\nimport { t as i, G as s, g as n, c as o, v as a, h as m } from \"./Geometry.js\";\nimport { S as r, a as u } from \"./QuadraticBezier.js\";\nimport { v as c, p as h, E as l, F as _, Q as p, R as d, S as g, U as x, V as y, W as P, w as S, X as f, t as G, Y as D, G as v } from \"./ProjectionTransformation.js\";\nimport { h as T, a as b } from \"./Envelope.js\";\nimport { Envelope2D as w } from \"./Envelope2D.js\";\nimport { P as M, b as E, n as R, E as C, o as I } from \"./Point2D.js\";\nimport { T as B } from \"./Transformation2D.js\";\nimport { s as A, w as q, m as N } from \"./Distance2DCalculator-Coa0qAFt.js\";\nimport { O as F } from \"./OperatorShapePreservingDensify.js\";\nimport { O as Y } from \"./OperatorClip.js\";\nfunction X() {\n  return new w();\n}\nclass k {\n  [Symbol.dispose]() {\n    this.m_peR1.destroy(), this.m_peR2.destroy(), this.m_peR3.destroy(), this.m_peR1 = null, this.m_peR2 = null, this.m_peR3 = null;\n  }\n  constructor(t, e, i) {\n    this.m_peR1 = new l(), this.m_peR2 = new l(), this.m_peR3 = new l(), void 0 !== t ? this.reset(t, e, i) : this.reset(1, 0, 1);\n  }\n  reset(t, e, i) {\n    this.m_a = t, this.m_e2 = e, this.m_b = this.m_a * Math.sqrt(1 - this.m_e2), this.m_unitToDegree = i, this.m_unitToRad = .017453292519943295 * i, this.m_u180 = 180 / this.m_unitToDegree, this.m_u360 = 360 / this.m_unitToDegree;\n  }\n  calculateBbox(t, e, i, s) {\n    const n = this.m_peR1,\n      o = this.m_peR2,\n      a = this.m_peR3;\n    _.geodeticDistance(this.m_a, this.m_e2, t * this.m_unitToRad, e * this.m_unitToRad, i * this.m_unitToRad, s * this.m_unitToRad, a, n, o, 0);\n    const m = Math.cos(n.val),\n      r = Math.cos(o.val + 3.141592653589793),\n      u = e * this.m_unitToRad,\n      c = G.phiToEta(this.m_e2, u),\n      h = Math.sin(n.val) * Math.cos(c);\n    let l = e;\n    if (m * r < 0) {\n      const t = m < 0 ? -1 : 1,\n        e = Math.acos(Math.abs(h)) * t;\n      l = G.etaToPhi(this.m_e2, e) / this.m_unitToRad;\n    }\n    let p = I((i - t) * this.m_unitToRad, 2 * Math.PI);\n    Math.abs(p) > Math.PI && (p = p > 0 ? p - 2 * Math.PI : p + 2 * Math.PI), p /= this.m_unitToRad, i = t + p;\n    const d = X();\n    return d.xmin = Math.min(t, i), d.xmax = Math.max(t, i), d.ymin = Math.min(e, s), d.ymin = Math.min(d.ymin, l), d.ymax = Math.max(e, s), d.ymax = Math.max(d.ymax, l), d;\n  }\n  minDistanceGeodesic(t, e) {\n    const i = O(t),\n      s = O(e);\n    if (i && s) return this.lowerDistanceGeodetic_(t.xmin, t.ymin, e.xmin, e.ymin);\n    const n = this.normalizeGeodesic_(e, t);\n    return U(t, n) ? t.ymin >= n.ymax ? this.minDistanceGeodesicUpDown_(t, n) : n.ymin >= t.ymax ? this.minDistanceGeodesicUpDown_(n, t) : t.xmin > n.xmax ? this.minDistanceGeodesicLeftRight_(n, t) : this.minDistanceGeodesicLeftRight_(t, n) : 0;\n  }\n  normalizeGeodesic_(t, e) {\n    const i = t.clone(),\n      s = t.clone();\n    let n = V(i, e);\n    if (0 === n) return i;\n    for (; s.xmax > e.xmin;) {\n      s.xmin -= this.m_u360, s.xmax -= this.m_u360;\n      const t = V(s, e);\n      if (t < n && (i.assign(s), n = t, 0 === n)) return i;\n    }\n    for (s.assign(t); s.xmin < e.xmax;) {\n      s.xmin += this.m_u360, s.xmax += this.m_u360;\n      const t = V(s, e);\n      if (t < n && (i.assign(s), n = t, 0 === n)) return i;\n    }\n    return i;\n  }\n  lowerDistanceGeodetic_(t, e, i, s) {\n    const n = this.m_peR1;\n    {\n      const o = this.m_b * this.m_b / this.m_a,\n        a = G.phiToPhig(this.m_e2, this.m_unitToRad * e),\n        m = G.phiToPhig(this.m_e2, this.m_unitToRad * s);\n      _.geodeticDistance(o, 0, this.m_unitToRad * t, a, this.m_unitToRad * i, m, n, null, null, 0);\n    }\n    return n.val;\n  }\n  minDistanceGeodesicUpDown_(t, e) {\n    if (e.xmin <= t.xmin ? e.xmax >= t.xmin : t.xmax >= e.xmin) return this.lowerDistanceGeodetic_(0, t.ymin, 0, e.ymax);\n    if (e.xmin > t.xmax) {\n      const i = this.lowerDistanceGeodeticSegMeridional_(t.xmax, t.ymin, t.ymax, e.xmin, e.ymin, e.ymax);\n      if (e.xmax - t.xmin < this.m_u180) return i;\n      const s = this.lowerDistanceGeodeticSegMeridional_(t.xmin, t.ymin, t.ymax, e.xmax, e.ymin, e.ymax);\n      return Math.min(i, s);\n    }\n    {\n      const i = this.lowerDistanceGeodeticSegMeridional_(t.xmin, t.ymin, t.ymax, e.xmax, e.ymin, e.ymax);\n      if (t.xmax - e.xmin < this.m_u180) return i;\n      const s = this.lowerDistanceGeodeticSegMeridional_(t.xmax, t.ymin, t.ymax, e.xmin, e.ymin, e.ymax);\n      return Math.min(i, s);\n    }\n  }\n  minDistanceGeodesicLeftRight_(t, e) {\n    let i = Math.abs(t.xmax - e.xmin);\n    for (; i > this.m_u180;) i -= this.m_u360;\n    let s = Math.abs(t.xmin - e.xmax);\n    for (; s > this.m_u180;) s -= this.m_u360;\n    return Math.abs(i) <= Math.abs(s) ? this.minDistanceGeodesicLeftRightNormalized_(t, e) : this.minDistanceGeodesicLeftRightNormalized_(e, t);\n  }\n  minDistanceGeodesicLeftRightNormalized_(t, e) {\n    let i, s;\n    return i = this.lowerDistanceGeodetic_(t.xmax, t.ymin, e.xmin, e.ymin), t.ymin >= e.ymin && t.ymin <= e.ymax && (s = this.lowerDistanceGeodeticPtMeridional_(t.xmax, t.ymin, e.xmin, e.ymin, e.ymax), i = Math.min(i, s)), e.ymin >= t.ymin && e.ymin <= t.ymax && (s = this.lowerDistanceGeodeticPtMeridional_(e.xmin, e.ymin, t.xmax, t.ymin, t.ymax), i = Math.min(i, s)), s = this.lowerDistanceGeodetic_(t.xmax, t.ymax, e.xmin, e.ymax), i = Math.min(i, s), t.ymax >= e.ymin && t.ymax <= e.ymax && (s = this.lowerDistanceGeodeticPtMeridional_(t.xmax, t.ymax, e.xmin, e.ymin, e.ymax), i = Math.min(i, s)), e.ymax >= t.ymin && e.ymax <= t.ymax && (s = this.lowerDistanceGeodeticPtMeridional_(e.xmin, e.ymax, t.xmax, t.ymin, t.ymax), i = Math.min(i, s)), i;\n  }\n  lowerDistanceGeodeticSegMeridional_(t, e, i, s, n, o) {\n    let a = this.lowerDistanceGeodeticPtMeridional_(t, e, s, n, o);\n    const m = this.lowerDistanceGeodeticPtMeridional_(t, i, s, n, o);\n    let r = this.lowerDistanceGeodeticPtMeridional_(s, n, t, e, i);\n    const u = this.lowerDistanceGeodeticPtMeridional_(s, o, t, e, i);\n    return a = Math.min(a, m), r = Math.min(r, u), Math.min(a, r);\n  }\n  lowerDistanceGeodeticPtMeridional_(t, e, i, s, n) {\n    const o = this.m_b * this.m_b / this.m_a,\n      a = G.phiToPhig(this.m_e2, this.m_unitToRad * e),\n      m = G.phiToPhig(this.m_e2, this.m_unitToRad * s),\n      r = G.phiToPhig(this.m_e2, this.m_unitToRad * n),\n      u = this.m_peR1,\n      c = this.m_peR2;\n    _.geodeticDistance(o, 0, this.m_unitToRad * i, m, this.m_unitToRad * t, a, u, null, null, 0), _.geodeticDistance(o, 0, this.m_unitToRad * i, r, this.m_unitToRad * t, a, c, null, null, 0);\n    const h = p(1, 0, new M(this.m_unitToRad * t, a)),\n      l = p(1, 0, new M(this.m_unitToRad * i, m)),\n      d = p(1, 0, new M(this.m_unitToRad * i, r));\n    let g = new T();\n    g.setCrossProductVector(l, d);\n    const x = l.dotProduct(d);\n    if (g.length() < 1.568e-10) return x >= 0 ? Math.min(u.val, c.val) : 0;\n    g = g.getUnitVector();\n    let y = new T();\n    if (y.setCrossProductVector(g, h), y.length() < 1.568e-10) {\n      return Math.min(u.val, c.val) - 1e-5 * o;\n    }\n    y = y.getUnitVector();\n    let P = h.sub(g.mul(h.dotProduct(g)));\n    {\n      const e = new T();\n      e.setCrossProductVector(l, P);\n      const i = new T();\n      i.setCrossProductVector(P, d);\n      let s = g.dotProduct(e) > 0 && g.dotProduct(i) > 0;\n      if (s || (P.negateThis(), e.setCrossProductVector(l, P), i.setCrossProductVector(P, d), s = g.dotProduct(e) > 0 && g.dotProduct(i) > 0), s) {\n        P = P.getUnitVector();\n        const e = D(1, 0, P),\n          i = this.m_peR3;\n        _.geodeticDistance(o, 0, this.m_unitToRad * t, a, e.x, e.y, i, null, null, 0);\n        const s = Math.min(u.val, c.val);\n        return Math.min(s, i.val);\n      }\n    }\n    return Math.min(u.val, c.val);\n  }\n}\nfunction O(t) {\n  return t.xmin === t.xmax && t.ymin === t.ymax;\n}\nfunction U(t, e) {\n  return e.xmax < t.xmin || e.xmin > t.xmax || e.ymax < t.ymin || e.ymin > t.ymax;\n}\nfunction V(t, e) {\n  let i,\n    s = 0;\n  return i = t.xmin - e.xmax, i > s && (s = i), i = e.xmin - t.xmax, i > s && (s = i), s;\n}\nclass j {}\nfunction L(t) {\n  return {\n    outPoint: void 0 === t ? new M() : t.clone()\n  };\n}\nfunction z(t, e) {\n  t.outPoint.assign(e.outPoint);\n}\nfunction H() {\n  return new w();\n}\nclass Q {\n  constructor(t, e, i, s) {\n    let n = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n    let o = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 4;\n    this.m_ptDistFrom = new M(), this.m_segStartPt = new M(), this.m_segEndPt = new M(), this.m_geodeticLength = new l(), this.m_az12 = new l(), this.m_minGeodeticDist = new l(), this.m_segStartPt3d = new T(), this.m_segEndPt3d = new T(), this.m_sr = s, this.m_distCurveType = n, this.m_segCurveType = o, this.m_inputGCS = this.m_sr.getGCS(), this.m_rpu = this.m_inputGCS.getUnit().getUnitToBaseFactor(), this.m_bIsPannablePcs = 2 === this.m_sr.getCoordinateSystemType() && this.m_sr.isPannable();\n    const a = v();\n    this.m_inputGCS.querySpheroidData(a), this.m_a = a.majorSemiAxis, this.m_eSquared = a.e2, this.setPointDistFrom(t), this.setSegmentEndPoints(e, i);\n  }\n  setSegmentEndPoints(t, e) {\n    this.m_segStartPt.assign(t), this.m_segEndPt.assign(e), this.m_bIsPannablePcs || (this.m_segStartPt.mulThis(this.m_rpu), this.m_segEndPt.mulThis(this.m_rpu)), 2 === this.m_segCurveType && (this.m_segStartPt3d.assign(p(this.m_a, this.m_eSquared, this.m_segStartPt)), this.m_segEndPt3d.assign(p(this.m_a, this.m_eSquared, this.m_segEndPt))), this.calculateAndUpdateSegmentLength();\n  }\n  setPointDistFrom(t) {\n    this.m_ptDistFrom.assign(t), this.m_ptDistFrom.scale(this.m_rpu);\n  }\n  setSegmentCurveType(t) {\n    this.m_segCurveType = t;\n  }\n  setDistanceCurveType(t) {\n    this.m_distCurveType = t;\n  }\n  makeFunctor() {\n    return i => {\n      let s;\n      switch (this.m_segCurveType) {\n        case 0:\n        case 1:\n        case 3:\n          {\n            const o = {\n              stack: [],\n              error: void 0,\n              hasError: !1\n            };\n            try {\n              const e = t(o, new l(), !1),\n                n = t(o, new l(), !1);\n              _.geodeticCoordinate(this.m_a, this.m_eSquared, this.m_segStartPt.x, this.m_segStartPt.y, this.m_geodeticLength.val * i, this.m_az12.val, e, n, this.m_segCurveType), s = new M(e.val, n.val);\n              break;\n            } catch (n) {\n              o.error = n, o.hasError = !0;\n            } finally {\n              e(o);\n            }\n          }\n        case 2:\n          {\n            const t = T.lerp(this.m_segStartPt3d, this.m_segEndPt3d, i);\n            s = D(this.m_a, this.m_eSquared, t);\n            break;\n          }\n        case 4:\n          s = M.lerp(this.m_segStartPt, this.m_segEndPt, i), this.m_bIsPannablePcs && (g(this.m_sr, 0, [s], 1), s.mulThis(this.m_rpu));\n          break;\n        default:\n          o(\"Invalid curve type\");\n      }\n      return _.geodeticDistance(this.m_a, this.m_eSquared, this.m_ptDistFrom.x, this.m_ptDistFrom.y, s.x, s.y, this.m_minGeodeticDist, null, null, this.m_distCurveType), this.m_minGeodeticDist.val;\n    };\n  }\n  calculateAndUpdateSegmentLength() {\n    switch (this.m_segCurveType) {\n      case 0:\n      case 2:\n      case 1:\n      case 3:\n        _.geodeticDistance(this.m_a, this.m_eSquared, this.m_segStartPt.x, this.m_segStartPt.y, this.m_segEndPt.x, this.m_segEndPt.y, this.m_geodeticLength, this.m_az12, null, this.m_segCurveType);\n        break;\n      case 4:\n        this.m_geodeticLength.val = M.distance(this.m_segStartPt, this.m_segEndPt);\n        break;\n      default:\n        o(\"Invalid curve type\");\n    }\n  }\n  [Symbol.dispose]() {\n    this.m_geodeticLength[Symbol.dispose](), this.m_az12[Symbol.dispose](), this.m_minGeodeticDist[Symbol.dispose]();\n  }\n}\nfunction W() {\n  return new j();\n}\nclass J {\n  [Symbol.dispose]() {\n    this.m_envHelper[Symbol.dispose]();\n  }\n  constructor(t, e, i, s, n) {\n    this.m_boxGeomA = H(), this.m_boxGeomB = H(), this.m_envGeomA = new w(), this.m_envGeomB = new w(), this.m_progressCounter = 0, this.m_transformPCS2GCS = null, this.m_segmentBoxesA = new Map(), this.m_segmentBoxesB = new Map(), this.m_boundaryPtsA = [], this.m_boundaryPtsB = [], this.m_scaleToRadians = new B(), this.m_scaleToDegrees = new B(), this.m_inputSR = t, this.m_distCurveType = e, this.m_progressTracker = i, this.m_maxDistance = s, this.m_maxDeviation = n, this.m_inputGCS = t.getGCS(), this.m_peGeogcs = this.m_inputGCS.getPECoordSys(), this.m_tolerance = 0;\n    const o = v();\n    this.m_inputGCS.querySpheroidData(o), this.m_a = o.majorSemiAxis, this.m_eSquared = o.e2, this.m_rpu = this.m_inputGCS.getUnit().getUnitToBaseFactor(), this.m_envHelper = new k(this.m_a, this.m_eSquared, 1), 4 === this.m_distCurveType && (this.m_distCurveType = 0), this.m_boxGeomA.setEmpty(), this.m_boxGeomB.setEmpty(), this.m_envGeomA.setEmpty(), this.m_envGeomB.setEmpty(), this.m_bIsPannablePcs = 2 === this.m_inputSR.getCoordinateSystemType() && this.m_inputSR.isPannable();\n  }\n  progress() {\n    let t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !1;\n  }\n  calculate(t, e, i, s) {\n    const n = L(),\n      o = L();\n    if (t.queryEnvelope(this.m_envGeomA), e.queryEnvelope(this.m_envGeomB), this.checkGeometriesIntersect(t, e, n, o)) return i && z(i, n), s && z(s, o), 0;\n    const a = this.prepareGeometry(t);\n    if (a.isEmpty()) return Number.NaN;\n    const m = this.prepareGeometry(e);\n    if (m.isEmpty()) return Number.NaN;\n    this.m_tolerance = this.computeTolerance(a, m);\n    const r = this._ExecuteBruteForce(a, m, n, o);\n    return r >= this.m_maxDistance ? Number.NaN : (i && (this.prepareOutput(n), z(i, n)), s && (this.prepareOutput(o), z(s, o)), r);\n  }\n  createDistanceFunctor(t, e, i) {\n    const s = new Q(t, e, i, this.m_inputSR, this.m_distCurveType);\n    return this.m_bIsPannablePcs || 1 === this.m_inputSR.getCoordinateSystemType() || s.setSegmentCurveType(2), s;\n  }\n  _NormalizeAndProject(t) {\n    if (this.m_inputSR.isPannable() && (t = new c().foldInto360Range(t, this.m_inputSR)), 2 === this.m_inputSR.getCoordinateSystemType()) {\n      const e = h(this.m_inputSR, this.m_inputGCS, null);\n      t = new c().execute(t, e, this.m_progressTracker);\n    }\n    return t;\n  }\n  _ExecuteBruteForce(t, e, n, o) {\n    switch (t.getGeometryType()) {\n      case s.enumPoint:\n        return this.calculateDistanceGeodeticPointGeometry(t, e, n, o);\n      case s.enumMultiPoint:\n        return this.calculateDistanceGeodeticMultipointGeometry(t, e, n, o);\n      case s.enumPolyline:\n      case s.enumPolygon:\n      case s.enumEnvelope:\n        return this.calculateDistanceGeodeticMultipathGeometry(t, e, n, o);\n      default:\n        i(\"\");\n    }\n  }\n  calculateDistanceGeodeticPointGeometry(t, e, n, o) {\n    switch (e.getGeometryType()) {\n      case s.enumPoint:\n        return this.calculateDistanceGeodeticPointPoint(t, e, n, o);\n      case s.enumMultiPoint:\n        return this.calculateDistanceGeodeticPointMultipoint(t, e, n, o);\n      case s.enumPolyline:\n      case s.enumPolygon:\n        return this.calculateDistanceGeodeticPointMultipath(t, e, n, o);\n      default:\n        i(\"\");\n    }\n  }\n  calculateDistanceGeodeticPointPoint(i, s, n, o) {\n    const a = {\n      stack: [],\n      error: void 0,\n      hasError: !1\n    };\n    try {\n      const e = i.getXY();\n      e.scale(this.m_rpu);\n      const m = s.getXY();\n      m.scale(this.m_rpu), n.outPoint.assign(e), o.outPoint.assign(m);\n      const r = t(a, new l(), !1);\n      return _.geodeticDistance(this.m_a, this.m_eSquared, e.x, e.y, m.x, m.y, r, null, null, this.m_distCurveType), r.val;\n    } catch (m) {\n      a.error = m, a.hasError = !0;\n    } finally {\n      e(a);\n    }\n  }\n  calculateDistanceGeodeticPointMultipoint(i, s, n, o) {\n    const a = {\n      stack: [],\n      error: void 0,\n      hasError: !1\n    };\n    try {\n      this.computeEnvelopesAndBoxes(i, s);\n      const e = this.estimateMinimumDistance(n, o);\n      let m = e < this.m_maxDistance ? e : this.m_maxDistance;\n      const r = i.getXY();\n      r.scale(this.m_rpu), n.outPoint.assign(r);\n      const u = p(this.m_a, this.m_eSquared, r),\n        c = new M(),\n        h = s.getImpl(),\n        d = t(a, new l(), !1),\n        g = h.getPointCount();\n      for (let t = 0; t < g; ++t) {\n        h.queryXY(t, c), c.scale(this.m_rpu);\n        const e = p(this.m_a, this.m_eSquared, c);\n        if (!(T.distance(u, e) > m) && !(this.m_envHelper.minDistanceGeodesic(this.m_boxGeomA, this.m_boxGeomB) > m) && (_.geodeticDistance(this.m_a, this.m_eSquared, r.x, r.y, c.x, c.y, d, null, null, this.m_distCurveType), d.val < m && (m = d.val, o.outPoint = c, 0 === m))) return m;\n      }\n      return m === this.m_maxDistance ? Number.POSITIVE_INFINITY : m;\n    } catch (m) {\n      a.error = m, a.hasError = !0;\n    } finally {\n      e(a);\n    }\n  }\n  calculateDistanceGeodeticPointMultipath(i, s, o, a) {\n    const m = {\n      stack: [],\n      error: void 0,\n      hasError: !1\n    };\n    try {\n      const e = new M(),\n        r = new M();\n      e.assign(i.getXY()), r.assign(i.getXY()), o.outPoint.assign(r.mul(this.m_rpu)), this.m_bIsPannablePcs && d(this.m_inputSR, [e], 1, !1), this.computeEnvelopesAndBoxes(i, s);\n      const u = this.estimateMinimumDistance(o, a);\n      let c = u < this.m_maxDistance ? u : this.m_maxDistance;\n      const h = s.getImpl(),\n        l = new M(0, 0),\n        _ = new M(0, 0),\n        p = [1],\n        g = this.canUseSpatialTree(i, s),\n        x = W();\n      g && this.buildSpatialTree(x, s);\n      const y = H();\n      y.setCoords({\n        xmin: r.x,\n        ymin: r.y,\n        xmax: r.x,\n        ymax: r.y\n      });\n      const P = t(m, this.createDistanceFunctor(r, l, _), !1),\n        S = h.querySegmentIterator();\n      if (S.stripAttributes(), g) n(0);else for (; S.nextPath();) for (; S.hasNextSegment();) {\n        const t = S.nextSegment(),\n          i = this.findOrComputeBoxSegment(S.getStartPointIndex(), t, this.m_segmentBoxesB);\n        if (this.m_envHelper.minDistanceGeodesic(y, i) > c) continue;\n        const s = this.calculateDistanceGeodeticPointSegment(e, r, t, p, P);\n        if (s.second < c && (this.updateOutputSegment(a, t, s.first), c = s.second, 0 === c)) return 0;\n      }\n      return c === this.m_maxDistance ? Number.POSITIVE_INFINITY : c;\n    } catch (r) {\n      m.error = r, m.hasError = !0;\n    } finally {\n      e(m);\n    }\n  }\n  calculateDistanceGeodeticMultipointGeometry(t, e, n, o) {\n    switch (e.getGeometryType()) {\n      case s.enumPoint:\n        return this.calculateDistanceGeodeticPointMultipoint(e, t, o, n);\n      case s.enumMultiPoint:\n        return this.calculateDistanceGeodeticMultipointMultipoint(t, e, n, o);\n      case s.enumPolyline:\n      case s.enumPolygon:\n      case s.enumEnvelope:\n        return this.calculateDistanceGeodeticMultipointMultipath(t, e, n, o);\n      default:\n        i(\"\");\n    }\n  }\n  calculateDistanceGeodeticMultipointMultipoint(i, s, n, o) {\n    const a = {\n      stack: [],\n      error: void 0,\n      hasError: !1\n    };\n    try {\n      const e = t(a, new l(), !1);\n      this.computeEnvelopesAndBoxes(i, s);\n      const m = this.estimateMinimumDistance(n, o);\n      let r = m < this.m_maxDistance ? m : this.m_maxDistance;\n      const u = new M(),\n        c = new M(),\n        h = i.getImpl(),\n        d = s.getImpl(),\n        g = H(),\n        x = h.getPointCount(),\n        y = d.getPointCount();\n      for (let t = 0; t < x; ++t) {\n        if (u.assign(h.getXY(t)), g.setCoords({\n          xmin: u.x,\n          ymin: u.y,\n          xmax: u.x,\n          ymax: u.y\n        }), this.m_envHelper.minDistanceGeodesic(g, this.m_boxGeomB) > r) continue;\n        u.scale(this.m_rpu);\n        const i = p(this.m_a, this.m_eSquared, u);\n        for (let t = 0; t < y; ++t) {\n          c.assign(d.getXY(t)), c.scale(this.m_rpu);\n          const s = p(this.m_a, this.m_eSquared, c);\n          if (!(T.distance(i, s) >= r) && (_.geodeticDistance(this.m_a, this.m_eSquared, u.x, u.y, c.x, c.y, e, null, null, this.m_distCurveType), e.val < r && (n.outPoint.assign(u), o.outPoint.assign(c), r = e.val, 0 === r))) return r;\n        }\n      }\n      return r === this.m_maxDistance ? Number.POSITIVE_INFINITY : r;\n    } catch (m) {\n      a.error = m, a.hasError = !0;\n    } finally {\n      e(a);\n    }\n  }\n  calculateDistanceGeodeticMultipointMultipath(i, s, o, a) {\n    const m = {\n      stack: [],\n      error: void 0,\n      hasError: !1\n    };\n    try {\n      const e = s.getImpl().querySegmentIterator();\n      e.stripAttributes(), this.computeEnvelopesAndBoxes(i, s);\n      const r = this.estimateMinimumDistance(o, a);\n      let u = r < this.m_maxDistance ? r : this.m_maxDistance;\n      const c = new M(),\n        h = new M(0, 0),\n        l = new M(0, 0),\n        _ = new M(0, 0),\n        p = [0],\n        g = H(),\n        x = t(m, this.createDistanceFunctor(h, l, _), !1),\n        y = W(),\n        P = this.canUseSpatialTree(i, s);\n      P && this.buildSpatialTree(y, s);\n      const S = i.getPointCount();\n      for (let t = 0; t < S; ++t) if (c.assign(i.getXY(t)), h.assign(i.getXY(t)), this.m_bIsPannablePcs && d(this.m_inputSR, [c], 1, !1), g.setCoords({\n        xmin: h.x,\n        ymin: h.y,\n        xmax: h.x,\n        ymax: h.y\n      }), !(this.m_envHelper.minDistanceGeodesic(g, this.m_boxGeomB) > u)) if (x.setPointDistFrom(h), P) n(0);else {\n        for (; e.nextPath();) for (; e.hasNextSegment();) {\n          const t = e.nextSegment();\n          if (this.m_envHelper.minDistanceGeodesic(g, this.findOrComputeBoxSegment(e.getStartPointIndex(), t, this.m_segmentBoxesB)) > u) continue;\n          const i = this.calculateDistanceGeodeticPointSegment(c, h, t, p, x);\n          if (i.second < u && (o.outPoint.assign(h.mul(this.m_rpu)), this.updateOutputSegment(a, t, i.first), u = i.second, 0 === u)) return 0;\n        }\n        e.resetToFirstPath();\n      }\n      return u === this.m_maxDistance ? Number.POSITIVE_INFINITY : u;\n    } catch (r) {\n      m.error = r, m.hasError = !0;\n    } finally {\n      e(m);\n    }\n  }\n  calculateDistanceGeodeticMultipathGeometry(t, e, n, o) {\n    switch (e.getGeometryType()) {\n      case s.enumPoint:\n        return this.calculateDistanceGeodeticPointMultipath(e, t, o, n);\n      case s.enumMultiPoint:\n        return this.calculateDistanceGeodeticMultipointMultipath(e, t, o, n);\n      case s.enumPolyline:\n      case s.enumPolygon:\n      case s.enumEnvelope:\n        return this.calculateDistanceGeodeticMultipathMultipath(t, e, n, o);\n      default:\n        i(\"\");\n    }\n  }\n  calculateDistanceGeodeticMultipathMultipath(t, e, i, s) {\n    const n = [t],\n      o = [e],\n      a = this.swapGeometries(n, o),\n      m = n[0],\n      r = o[0];\n    this.computeEnvelopesAndBoxes(n[0], o[0]);\n    const u = this.estimateMinimumDistance(i, s),\n      c = this.calculateDistanceGeodeticMultipathMultipath_(m, r, i, s, u);\n    return a && (s.outPoint = E(i.outPoint, i.outPoint = s.outPoint)), c;\n  }\n  calculateDistanceGeodeticMultipathMultipath_(i, s, o, a) {\n    let m = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : Number.MAX_VALUE;\n    const u = {\n      stack: [],\n      error: void 0,\n      hasError: !1\n    };\n    try {\n      let e = m;\n      const c = new M(0, 0),\n        h = new M(),\n        l = new M(0, 0),\n        _ = new M(),\n        p = new M(0, 0),\n        d = new M(),\n        y = new M(),\n        P = new M(),\n        S = [new M()],\n        f = [0],\n        G = [0],\n        D = H(),\n        v = H(),\n        T = t(u, this.createDistanceFunctor(p, c, l), !1),\n        b = W(),\n        w = this.canUseSpatialTree(i, s);\n      w && this.buildSpatialTree(b, s);\n      const E = s.querySegmentIterator();\n      E.stripAttributes();\n      const R = new r(),\n        C = A(i);\n      for (let t = 0; t < C.length; ++t) {\n        const s = C[t];\n        i.getSegmentBuffer(s, R, !0);\n        const m = R.get();\n        if (D.assign(this.findOrComputeBoxSegment(s, m, this.m_segmentBoxesA)), w) n(0);else {\n          if (p.assign(m.getStartXY()), d.assign(m.getStartXY()), y.assign(m.getEndXY()), P.assign(m.getEndXY()), this.m_bIsPannablePcs && (g(this.m_inputSR, 0, [d], 1), g(this.m_inputSR, 0, [P], 1)), this.m_envHelper.minDistanceGeodesic(D, this.m_boxGeomB) > e) continue;\n          for (; E.nextPath();) {\n            for (; E.hasNextSegment();) {\n              const t = E.nextSegment();\n              if (c.assign(t.getStartXY()), h.assign(t.getStartXY()), l.assign(t.getEndXY()), _.assign(t.getEndXY()), m.intersect(t, S, f, G, this.m_tolerance)) return this.updateOutputSegment(o, m, f[0]), this.updateOutputSegment(a, t, G[0]), 0;\n              if (this.m_bIsPannablePcs && (g(this.m_inputSR, 0, [h], 1), g(this.m_inputSR, 0, [_], 1)), v.assign(this.findOrComputeBoxPoint(E.getStartPointIndex(), h, _, this.m_segmentBoxesB)), this.m_envHelper.minDistanceGeodesic(D, v) > e) continue;\n              T.setSegmentEndPoints(c, l), T.setPointDistFrom(d);\n              let i = x(T.makeFunctor(), 0, 1, 1e-10);\n              if (i.second < e && (o.outPoint.assign(d.mul(this.m_rpu)), this.updateOutputSegment(a, t, i.first), e = i.second, 0 === e)) break;\n              if (T.setPointDistFrom(P), i = x(T.makeFunctor(), 0, 1, 1e-10), i.second < e && (o.outPoint.assign(P.mul(this.m_rpu)), this.updateOutputSegment(a, t, i.first), e = i.second, 0 === e)) break;\n              if (T.setSegmentEndPoints(p, y), T.setPointDistFrom(h), i = x(T.makeFunctor(), 0, 1, 1e-10), i.second < e && (this.updateOutputSegment(o, m, i.first), a.outPoint.assign(h.mul(this.m_rpu)), e = i.second, 0 === e)) break;\n              if (T.setPointDistFrom(_), i = x(T.makeFunctor(), 0, 1, 1e-10), i.second < e && (this.updateOutputSegment(o, m, i.first), a.outPoint.assign(_.mul(this.m_rpu)), e = i.second, 0 === e)) break;\n            }\n            if (0 === e) return 0;\n          }\n          E.resetToFirstPath();\n        }\n      }\n      return e === this.m_maxDistance ? Number.POSITIVE_INFINITY : e;\n    } catch (c) {\n      u.error = c, u.hasError = !0;\n    } finally {\n      e(u);\n    }\n  }\n  calculateDistanceGeodeticPointSegment(t, e, i, s, n) {\n    const o = i.getStartXY(),\n      a = i.getEndXY();\n    return i.intersectPoint(t, s, this.m_tolerance) ? R(s[0], 0) : (n.setPointDistFrom(e), n.setSegmentEndPoints(o, a), x(n.makeFunctor(), 0, 1, 1e-10));\n  }\n  prepareGeometry(t) {\n    let e = t.clone();\n    const i = t.getGeometryType();\n    if (i === s.enumPoint || i === s.enumMultiPoint) return this._NormalizeAndProject(e);\n    if (i === s.enumEnvelope && (e = this.envelopeToPolygon(e)), this.m_inputSR.isPannable()) return this.prepareGeometryPannable(e, 4);\n    if (2 === this.m_inputSR.getCoordinateSystemType()) {\n      if (e = y(e, this.m_inputSR, 0, null), e.isEmpty()) return e;\n      e = new F().execute(e, this.m_inputSR, 5e4, this.m_maxDeviation / 2, 0, null);\n      const t = this.m_inputSR.getSRToGCSTransform();\n      return new c().execute(e, t, this.m_progressTracker);\n    }\n    const n = new w();\n    e.queryLooseEnvelope(n);\n    const o = this.m_inputSR.getPannableExtent();\n    if (n.ymin < o.ymin || n.ymax > o.ymax) {\n      const t = new w(n.xmin - 1, o.ymin, n.xmax + 1, o.ymax);\n      if (e = new Y().execute(e, t, this.m_inputSR, this.m_progressTracker), e.isEmpty()) return e;\n    }\n    return n.width() > 2 * o.width() ? (e = P(e, -2 * o.width(), 2 * o.width(), this.m_inputSR, !0, 0, !0, this.m_progressTracker), e) : e;\n  }\n  prepareGeometryPannable(t, e) {\n    const i = new w();\n    t.queryEnvelope(i);\n    const s = this.m_inputSR.getPannableExtent();\n    if (s.containsEnvelope(i)) return t;\n    const n = new C();\n    s.queryIntervalX(n);\n    const o = new C();\n    return i.queryIntervalX(o), t = n.contains(o) ? S(t, this.m_inputSR) : new c().foldInto360RangeGeodetic(t, this.m_inputSR, e);\n  }\n  prepareOutput(t) {\n    t.outPoint.scale(1 / this.m_rpu), 2 === this.m_inputSR.getCoordinateSystemType() && d(this.m_inputSR, [t.outPoint], 1, !1);\n  }\n  updateOutputSegment(t, e, i) {\n    e.queryCoord2D(i, t.outPoint), this.m_bIsPannablePcs && g(this.m_inputSR, 0, [t.outPoint], 1), t.outPoint.mulThis(this.m_rpu);\n  }\n  computeTolerance(t, e) {\n    t.queryEnvelope(this.m_envGeomA), e.queryEnvelope(this.m_envGeomB);\n    const i = new w(this.m_envGeomA);\n    return i.mergeEnvelope2D(this.m_envGeomB), b(null, i);\n  }\n  envelopeToPolygon(t) {\n    const e = new u();\n    return e.addEnvelope(t, !1), e;\n  }\n  computeEnvelopesAndBoxes(t, e) {\n    t.queryEnvelope(this.m_envGeomA), e.queryEnvelope(this.m_envGeomB), this.m_boxGeomA = this.computeBoxGeometry(t, this.m_boundaryPtsA, this.m_segmentBoxesA), this.m_boxGeomB = this.computeBoxGeometry(e, this.m_boundaryPtsB, this.m_segmentBoxesB);\n  }\n  computeBoxGeometry(t, e, i) {\n    switch (t.getGeometryType()) {\n      case s.enumPoint:\n        return this.computeBoxPoint(t, e);\n      case s.enumMultiPoint:\n        return this.computeBoxMultiPoint(t, e);\n      case s.enumPolyline:\n      case s.enumPolygon:\n        return this.computeBoxMultiPath(t, e, i);\n      default:\n        o(\"Invalid geometry type\");\n    }\n  }\n  computeBoxPoint(t, e) {\n    const i = t.getXY();\n    e.length = 0, e.push(i.mul(this.m_rpu));\n    const s = H();\n    return s.setCoords({\n      xmin: i.x,\n      ymin: i.y,\n      xmax: i.x,\n      ymax: i.y\n    }), s;\n  }\n  computeBoxMultiPoint(t, e) {\n    let i = !0;\n    for (let n = 0; n < t.getPointCount(); ++n) {\n      const s = t.getXY(n);\n      if (i) {\n        e.length = 0;\n        for (let t = 0; t < 4; ++t) e.push(s.clone());\n        i = !1;\n      }\n      s.x < e[0].x && e[0].assign(s), s.y > e[1].y && e[1].assign(s), s.x > e[2].x && e[2].assign(s), s.y < e[3].y && e[3].assign(s);\n    }\n    for (let n = 0; n < e.length; ++n) e[n].mulThis(this.m_rpu);\n    const s = H();\n    return t.queryEnvelope(s), s;\n  }\n  computeBoxMultiPath(t, e, i) {\n    let s = !0;\n    const n = H();\n    n.setEmpty();\n    const o = t.querySegmentIterator();\n    for (o.stripAttributes(); o.nextPath();) for (; o.hasNextSegment();) {\n      const t = o.nextSegment(),\n        a = t.getStartXY(),\n        m = t.getEndXY();\n      if (this.m_bIsPannablePcs && (g(this.m_inputSR, 0, [a], 1), g(this.m_inputSR, 0, [m], 1)), s) {\n        for (let t = 0; t < 4; ++t) e.push(a.clone());\n        s = !1;\n      }\n      a.x < e[0].x && e[0].assign(a), a.y > e[1].y && e[1].assign(a), a.x > e[2].x && e[2].assign(a), a.y < e[3].y && e[3].assign(a), m.x < e[0].x && e[0].assign(m), m.y > e[1].y && e[1].assign(m), m.x > e[2].x && e[2].assign(m), m.y < e[3].y && e[3].assign(m);\n      const r = this.findOrComputeBoxPoint(o.getStartPointIndex(), a, m, i);\n      n.mergeEnvelope2D(r);\n    }\n    for (let a = 0; a < e.length; ++a) e[a].mulThis(this.m_rpu);\n    return n;\n  }\n  findOrComputeBoxSegment(t, e, i) {\n    if (!i.has(t)) {\n      let s = H();\n      if (e.queryEnvelope(s), this.m_bIsPannablePcs) {\n        const t = M.construct(s.xmin, s.ymin),\n          e = M.construct(s.xmax, s.ymax);\n        g(this.m_inputSR, 0, [t], 1), g(this.m_inputSR, 0, [e], 1), s = this.m_envHelper.calculateBbox(t.x, t.y, e.x, e.y);\n      }\n      return i.set(t, s), s;\n    }\n    return i.get(t);\n  }\n  findOrComputeBoxPoint(t, e, i, s) {\n    if (!s.has(t)) {\n      let n = H();\n      return n.setCoords({\n        xmin: e.x,\n        ymin: e.y,\n        xmax: i.x,\n        ymax: i.y\n      }), this.m_bIsPannablePcs && (n = this.m_envHelper.calculateBbox(n.xmin, n.ymin, n.xmax, n.ymax)), s.set(t, n), n;\n    }\n    return s.get(t);\n  }\n  estimateMinimumDistance(i, s) {\n    const n = {\n      stack: [],\n      error: void 0,\n      hasError: !1\n    };\n    try {\n      const e = t => p(this.m_a, this.m_eSquared, t),\n        o = this.m_boundaryPtsA.map(e),\n        a = this.m_boundaryPtsB.map(e);\n      let m = Number.MAX_VALUE,\n        r = 0,\n        u = 0;\n      for (let t = 0; t < o.length; ++t) for (let e = 0; e < a.length; ++e) {\n        const i = T.distance(o[t], a[e]);\n        i < m && (m = i, r = t, u = e);\n      }\n      i.outPoint.assign(this.m_boundaryPtsA[r]), s.outPoint.assign(this.m_boundaryPtsB[u]);\n      const c = t(n, new l(), !1);\n      return _.geodeticDistance(this.m_a, this.m_eSquared, this.m_boundaryPtsA[r].x, this.m_boundaryPtsA[r].y, this.m_boundaryPtsB[u].x, this.m_boundaryPtsB[u].y, c, null, null, this.m_distCurveType), c.val;\n    } catch (o) {\n      n.error = o, n.hasError = !0;\n    } finally {\n      e(n);\n    }\n  }\n  swapGeometries(t, e) {\n    return a(t[0]) > a(e[0]) && (e[0] = E(t[0], t[0] = e[0]), this.m_envGeomB = E(this.m_envGeomA, this.m_envGeomA = this.m_envGeomB), !0);\n  }\n  canUseSpatialTree(t, e) {\n    return !1;\n  }\n  checkGeometriesIntersect(t, e, i, n) {\n    let o = t.getGeometryType(),\n      a = e.getGeometryType();\n    if (this.m_envGeomA.isIntersecting(this.m_envGeomB)) {\n      if (o === s.enumPoint && 2 === e.getDimension()) {\n        const s = [0],\n          o = [t.getXY()];\n        if (f(e, o, 1, this.m_tolerance, s), 0 !== s[0]) return i.outPoint.assign(o[0]), n.outPoint.assign(o[0]), !0;\n      } else if (a === s.enumPoint && 2 === t.getDimension()) {\n        const s = [2],\n          o = [e.getXY()];\n        if (f(t, o, 1, this.m_tolerance, s), 0 !== s[0]) return i.outPoint.assign(o[0]), n.outPoint.assign(o[0]), !0;\n      }\n      if (o === s.enumMultiPoint && 2 === e.getDimension()) return this.multipointIntersectsArea(t, e, i, n);\n      if (a === s.enumMultiPoint && 2 === t.getDimension()) return this.multipointIntersectsArea(e, t, n, i);\n      let r,\n        u,\n        c = t,\n        h = e;\n      if (o === s.enumEnvelope && (r = this.envelopeToPolygon(t), c = r, o = s.enumPolygon), a === s.enumEnvelope && (u = this.envelopeToPolygon(e), h = u, a = s.enumPolygon), m(o) && m(a)) {\n        const t = c.querySegmentIterator(),\n          e = h.querySegmentIterator(),\n          s = N(),\n          o = N();\n        if (q(c, h, t, e, s, o)) return i.outPoint.assign(s.outPoint), n.outPoint.assign(s.outPoint), !0;\n      }\n    }\n    return !1;\n  }\n  multipointIntersectsArea(t, e, i, s) {\n    const n = t.getPointCount();\n    for (let o = 0; o < n; ++o) {\n      const n = [2],\n        a = t.getXY(o);\n      if (f(e, [a], 1, this.m_tolerance, n), 0 !== n[0]) return i.outPoint.assign(a), s.outPoint.assign(a), !0;\n    }\n    return !1;\n  }\n  getNearestNeighbourVisitor(t, e, i, s, o, a, m) {\n    return n(0), {};\n  }\n  buildSpatialTree(t, e) {\n    n(0);\n  }\n}\nexport { J as G, Q as a, L as m };","map":{"version":3,"names":["b","t","c","e","i","G","s","g","n","o","v","a","h","m","S","r","u","p","E","l","F","_","Q","R","d","U","x","V","y","W","P","w","X","f","Y","D","T","Envelope2D","M","C","I","B","A","q","N","O","k","Symbol","dispose","m_peR1","destroy","m_peR2","m_peR3","constructor","reset","m_a","m_e2","m_b","Math","sqrt","m_unitToDegree","m_unitToRad","m_u180","m_u360","calculateBbox","geodeticDistance","cos","val","phiToEta","sin","acos","abs","etaToPhi","PI","xmin","min","xmax","max","ymin","ymax","minDistanceGeodesic","lowerDistanceGeodetic_","normalizeGeodesic_","minDistanceGeodesicUpDown_","minDistanceGeodesicLeftRight_","clone","assign","phiToPhig","lowerDistanceGeodeticSegMeridional_","minDistanceGeodesicLeftRightNormalized_","lowerDistanceGeodeticPtMeridional_","setCrossProductVector","dotProduct","length","getUnitVector","sub","mul","negateThis","j","L","outPoint","z","H","arguments","undefined","m_ptDistFrom","m_segStartPt","m_segEndPt","m_geodeticLength","m_az12","m_minGeodeticDist","m_segStartPt3d","m_segEndPt3d","m_sr","m_distCurveType","m_segCurveType","m_inputGCS","getGCS","m_rpu","getUnit","getUnitToBaseFactor","m_bIsPannablePcs","getCoordinateSystemType","isPannable","querySpheroidData","majorSemiAxis","m_eSquared","e2","setPointDistFrom","setSegmentEndPoints","mulThis","calculateAndUpdateSegmentLength","scale","setSegmentCurveType","setDistanceCurveType","makeFunctor","stack","error","hasError","geodeticCoordinate","lerp","distance","J","m_envHelper","m_boxGeomA","m_boxGeomB","m_envGeomA","m_envGeomB","m_progressCounter","m_transformPCS2GCS","m_segmentBoxesA","Map","m_segmentBoxesB","m_boundaryPtsA","m_boundaryPtsB","m_scaleToRadians","m_scaleToDegrees","m_inputSR","m_progressTracker","m_maxDistance","m_maxDeviation","m_peGeogcs","getPECoordSys","m_tolerance","setEmpty","progress","calculate","queryEnvelope","checkGeometriesIntersect","prepareGeometry","isEmpty","Number","NaN","computeTolerance","_ExecuteBruteForce","prepareOutput","createDistanceFunctor","_NormalizeAndProject","foldInto360Range","execute","getGeometryType","enumPoint","calculateDistanceGeodeticPointGeometry","enumMultiPoint","calculateDistanceGeodeticMultipointGeometry","enumPolyline","enumPolygon","enumEnvelope","calculateDistanceGeodeticMultipathGeometry","calculateDistanceGeodeticPointPoint","calculateDistanceGeodeticPointMultipoint","calculateDistanceGeodeticPointMultipath","getXY","computeEnvelopesAndBoxes","estimateMinimumDistance","getImpl","getPointCount","queryXY","POSITIVE_INFINITY","canUseSpatialTree","buildSpatialTree","setCoords","querySegmentIterator","stripAttributes","nextPath","hasNextSegment","nextSegment","findOrComputeBoxSegment","getStartPointIndex","calculateDistanceGeodeticPointSegment","second","updateOutputSegment","first","calculateDistanceGeodeticMultipointMultipoint","calculateDistanceGeodeticMultipointMultipath","resetToFirstPath","calculateDistanceGeodeticMultipathMultipath","swapGeometries","calculateDistanceGeodeticMultipathMultipath_","MAX_VALUE","getSegmentBuffer","get","getStartXY","getEndXY","intersect","findOrComputeBoxPoint","intersectPoint","envelopeToPolygon","prepareGeometryPannable","getSRToGCSTransform","queryLooseEnvelope","getPannableExtent","width","containsEnvelope","queryIntervalX","contains","foldInto360RangeGeodetic","queryCoord2D","mergeEnvelope2D","addEnvelope","computeBoxGeometry","computeBoxPoint","computeBoxMultiPoint","computeBoxMultiPath","push","has","construct","set","map","isIntersecting","getDimension","multipointIntersectsArea","getNearestNeighbourVisitor"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/chunks/GeodeticDistanceCalculator-D4iQ-_NX.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{b as t,c as e}from\"./tslib.es6.js\";import{t as i,G as s,g as n,c as o,v as a,h as m}from\"./Geometry.js\";import{S as r,a as u}from\"./QuadraticBezier.js\";import{v as c,p as h,E as l,F as _,Q as p,R as d,S as g,U as x,V as y,W as P,w as S,X as f,t as G,Y as D,G as v}from\"./ProjectionTransformation.js\";import{h as T,a as b}from\"./Envelope.js\";import{Envelope2D as w}from\"./Envelope2D.js\";import{P as M,b as E,n as R,E as C,o as I}from\"./Point2D.js\";import{T as B}from\"./Transformation2D.js\";import{s as A,w as q,m as N}from\"./Distance2DCalculator-Coa0qAFt.js\";import{O as F}from\"./OperatorShapePreservingDensify.js\";import{O as Y}from\"./OperatorClip.js\";function X(){return new w}class k{[Symbol.dispose](){this.m_peR1.destroy(),this.m_peR2.destroy(),this.m_peR3.destroy(),this.m_peR1=null,this.m_peR2=null,this.m_peR3=null}constructor(t,e,i){this.m_peR1=new l,this.m_peR2=new l,this.m_peR3=new l,void 0!==t?this.reset(t,e,i):this.reset(1,0,1)}reset(t,e,i){this.m_a=t,this.m_e2=e,this.m_b=this.m_a*Math.sqrt(1-this.m_e2),this.m_unitToDegree=i,this.m_unitToRad=.017453292519943295*i,this.m_u180=180/this.m_unitToDegree,this.m_u360=360/this.m_unitToDegree}calculateBbox(t,e,i,s){const n=this.m_peR1,o=this.m_peR2,a=this.m_peR3;_.geodeticDistance(this.m_a,this.m_e2,t*this.m_unitToRad,e*this.m_unitToRad,i*this.m_unitToRad,s*this.m_unitToRad,a,n,o,0);const m=Math.cos(n.val),r=Math.cos(o.val+3.141592653589793),u=e*this.m_unitToRad,c=G.phiToEta(this.m_e2,u),h=Math.sin(n.val)*Math.cos(c);let l=e;if(m*r<0){const t=m<0?-1:1,e=Math.acos(Math.abs(h))*t;l=G.etaToPhi(this.m_e2,e)/this.m_unitToRad}let p=I((i-t)*this.m_unitToRad,2*Math.PI);Math.abs(p)>Math.PI&&(p=p>0?p-2*Math.PI:p+2*Math.PI),p/=this.m_unitToRad,i=t+p;const d=X();return d.xmin=Math.min(t,i),d.xmax=Math.max(t,i),d.ymin=Math.min(e,s),d.ymin=Math.min(d.ymin,l),d.ymax=Math.max(e,s),d.ymax=Math.max(d.ymax,l),d}minDistanceGeodesic(t,e){const i=O(t),s=O(e);if(i&&s)return this.lowerDistanceGeodetic_(t.xmin,t.ymin,e.xmin,e.ymin);const n=this.normalizeGeodesic_(e,t);return U(t,n)?t.ymin>=n.ymax?this.minDistanceGeodesicUpDown_(t,n):n.ymin>=t.ymax?this.minDistanceGeodesicUpDown_(n,t):t.xmin>n.xmax?this.minDistanceGeodesicLeftRight_(n,t):this.minDistanceGeodesicLeftRight_(t,n):0}normalizeGeodesic_(t,e){const i=t.clone(),s=t.clone();let n=V(i,e);if(0===n)return i;for(;s.xmax>e.xmin;){s.xmin-=this.m_u360,s.xmax-=this.m_u360;const t=V(s,e);if(t<n&&(i.assign(s),n=t,0===n))return i}for(s.assign(t);s.xmin<e.xmax;){s.xmin+=this.m_u360,s.xmax+=this.m_u360;const t=V(s,e);if(t<n&&(i.assign(s),n=t,0===n))return i}return i}lowerDistanceGeodetic_(t,e,i,s){const n=this.m_peR1;{const o=this.m_b*this.m_b/this.m_a,a=G.phiToPhig(this.m_e2,this.m_unitToRad*e),m=G.phiToPhig(this.m_e2,this.m_unitToRad*s);_.geodeticDistance(o,0,this.m_unitToRad*t,a,this.m_unitToRad*i,m,n,null,null,0)}return n.val}minDistanceGeodesicUpDown_(t,e){if(e.xmin<=t.xmin?e.xmax>=t.xmin:t.xmax>=e.xmin)return this.lowerDistanceGeodetic_(0,t.ymin,0,e.ymax);if(e.xmin>t.xmax){const i=this.lowerDistanceGeodeticSegMeridional_(t.xmax,t.ymin,t.ymax,e.xmin,e.ymin,e.ymax);if(e.xmax-t.xmin<this.m_u180)return i;const s=this.lowerDistanceGeodeticSegMeridional_(t.xmin,t.ymin,t.ymax,e.xmax,e.ymin,e.ymax);return Math.min(i,s)}{const i=this.lowerDistanceGeodeticSegMeridional_(t.xmin,t.ymin,t.ymax,e.xmax,e.ymin,e.ymax);if(t.xmax-e.xmin<this.m_u180)return i;const s=this.lowerDistanceGeodeticSegMeridional_(t.xmax,t.ymin,t.ymax,e.xmin,e.ymin,e.ymax);return Math.min(i,s)}}minDistanceGeodesicLeftRight_(t,e){let i=Math.abs(t.xmax-e.xmin);for(;i>this.m_u180;)i-=this.m_u360;let s=Math.abs(t.xmin-e.xmax);for(;s>this.m_u180;)s-=this.m_u360;return Math.abs(i)<=Math.abs(s)?this.minDistanceGeodesicLeftRightNormalized_(t,e):this.minDistanceGeodesicLeftRightNormalized_(e,t)}minDistanceGeodesicLeftRightNormalized_(t,e){let i,s;return i=this.lowerDistanceGeodetic_(t.xmax,t.ymin,e.xmin,e.ymin),t.ymin>=e.ymin&&t.ymin<=e.ymax&&(s=this.lowerDistanceGeodeticPtMeridional_(t.xmax,t.ymin,e.xmin,e.ymin,e.ymax),i=Math.min(i,s)),e.ymin>=t.ymin&&e.ymin<=t.ymax&&(s=this.lowerDistanceGeodeticPtMeridional_(e.xmin,e.ymin,t.xmax,t.ymin,t.ymax),i=Math.min(i,s)),s=this.lowerDistanceGeodetic_(t.xmax,t.ymax,e.xmin,e.ymax),i=Math.min(i,s),t.ymax>=e.ymin&&t.ymax<=e.ymax&&(s=this.lowerDistanceGeodeticPtMeridional_(t.xmax,t.ymax,e.xmin,e.ymin,e.ymax),i=Math.min(i,s)),e.ymax>=t.ymin&&e.ymax<=t.ymax&&(s=this.lowerDistanceGeodeticPtMeridional_(e.xmin,e.ymax,t.xmax,t.ymin,t.ymax),i=Math.min(i,s)),i}lowerDistanceGeodeticSegMeridional_(t,e,i,s,n,o){let a=this.lowerDistanceGeodeticPtMeridional_(t,e,s,n,o);const m=this.lowerDistanceGeodeticPtMeridional_(t,i,s,n,o);let r=this.lowerDistanceGeodeticPtMeridional_(s,n,t,e,i);const u=this.lowerDistanceGeodeticPtMeridional_(s,o,t,e,i);return a=Math.min(a,m),r=Math.min(r,u),Math.min(a,r)}lowerDistanceGeodeticPtMeridional_(t,e,i,s,n){const o=this.m_b*this.m_b/this.m_a,a=G.phiToPhig(this.m_e2,this.m_unitToRad*e),m=G.phiToPhig(this.m_e2,this.m_unitToRad*s),r=G.phiToPhig(this.m_e2,this.m_unitToRad*n),u=this.m_peR1,c=this.m_peR2;_.geodeticDistance(o,0,this.m_unitToRad*i,m,this.m_unitToRad*t,a,u,null,null,0),_.geodeticDistance(o,0,this.m_unitToRad*i,r,this.m_unitToRad*t,a,c,null,null,0);const h=p(1,0,new M(this.m_unitToRad*t,a)),l=p(1,0,new M(this.m_unitToRad*i,m)),d=p(1,0,new M(this.m_unitToRad*i,r));let g=new T;g.setCrossProductVector(l,d);const x=l.dotProduct(d);if(g.length()<1.568e-10)return x>=0?Math.min(u.val,c.val):0;g=g.getUnitVector();let y=new T;if(y.setCrossProductVector(g,h),y.length()<1.568e-10){return Math.min(u.val,c.val)-1e-5*o}y=y.getUnitVector();let P=h.sub(g.mul(h.dotProduct(g)));{const e=new T;e.setCrossProductVector(l,P);const i=new T;i.setCrossProductVector(P,d);let s=g.dotProduct(e)>0&&g.dotProduct(i)>0;if(s||(P.negateThis(),e.setCrossProductVector(l,P),i.setCrossProductVector(P,d),s=g.dotProduct(e)>0&&g.dotProduct(i)>0),s){P=P.getUnitVector();const e=D(1,0,P),i=this.m_peR3;_.geodeticDistance(o,0,this.m_unitToRad*t,a,e.x,e.y,i,null,null,0);const s=Math.min(u.val,c.val);return Math.min(s,i.val)}}return Math.min(u.val,c.val)}}function O(t){return t.xmin===t.xmax&&t.ymin===t.ymax}function U(t,e){return e.xmax<t.xmin||e.xmin>t.xmax||e.ymax<t.ymin||e.ymin>t.ymax}function V(t,e){let i,s=0;return i=t.xmin-e.xmax,i>s&&(s=i),i=e.xmin-t.xmax,i>s&&(s=i),s}class j{}function L(t){return{outPoint:void 0===t?new M:t.clone()}}function z(t,e){t.outPoint.assign(e.outPoint)}function H(){return new w}class Q{constructor(t,e,i,s,n=0,o=4){this.m_ptDistFrom=new M,this.m_segStartPt=new M,this.m_segEndPt=new M,this.m_geodeticLength=new l,this.m_az12=new l,this.m_minGeodeticDist=new l,this.m_segStartPt3d=new T,this.m_segEndPt3d=new T,this.m_sr=s,this.m_distCurveType=n,this.m_segCurveType=o,this.m_inputGCS=this.m_sr.getGCS(),this.m_rpu=this.m_inputGCS.getUnit().getUnitToBaseFactor(),this.m_bIsPannablePcs=2===this.m_sr.getCoordinateSystemType()&&this.m_sr.isPannable();const a=v();this.m_inputGCS.querySpheroidData(a),this.m_a=a.majorSemiAxis,this.m_eSquared=a.e2,this.setPointDistFrom(t),this.setSegmentEndPoints(e,i)}setSegmentEndPoints(t,e){this.m_segStartPt.assign(t),this.m_segEndPt.assign(e),this.m_bIsPannablePcs||(this.m_segStartPt.mulThis(this.m_rpu),this.m_segEndPt.mulThis(this.m_rpu)),2===this.m_segCurveType&&(this.m_segStartPt3d.assign(p(this.m_a,this.m_eSquared,this.m_segStartPt)),this.m_segEndPt3d.assign(p(this.m_a,this.m_eSquared,this.m_segEndPt))),this.calculateAndUpdateSegmentLength()}setPointDistFrom(t){this.m_ptDistFrom.assign(t),this.m_ptDistFrom.scale(this.m_rpu)}setSegmentCurveType(t){this.m_segCurveType=t}setDistanceCurveType(t){this.m_distCurveType=t}makeFunctor(){return i=>{let s;switch(this.m_segCurveType){case 0:case 1:case 3:{const o={stack:[],error:void 0,hasError:!1};try{const e=t(o,new l,!1),n=t(o,new l,!1);_.geodeticCoordinate(this.m_a,this.m_eSquared,this.m_segStartPt.x,this.m_segStartPt.y,this.m_geodeticLength.val*i,this.m_az12.val,e,n,this.m_segCurveType),s=new M(e.val,n.val);break}catch(n){o.error=n,o.hasError=!0}finally{e(o)}}case 2:{const t=T.lerp(this.m_segStartPt3d,this.m_segEndPt3d,i);s=D(this.m_a,this.m_eSquared,t);break}case 4:s=M.lerp(this.m_segStartPt,this.m_segEndPt,i),this.m_bIsPannablePcs&&(g(this.m_sr,0,[s],1),s.mulThis(this.m_rpu));break;default:o(\"Invalid curve type\")}return _.geodeticDistance(this.m_a,this.m_eSquared,this.m_ptDistFrom.x,this.m_ptDistFrom.y,s.x,s.y,this.m_minGeodeticDist,null,null,this.m_distCurveType),this.m_minGeodeticDist.val}}calculateAndUpdateSegmentLength(){switch(this.m_segCurveType){case 0:case 2:case 1:case 3:_.geodeticDistance(this.m_a,this.m_eSquared,this.m_segStartPt.x,this.m_segStartPt.y,this.m_segEndPt.x,this.m_segEndPt.y,this.m_geodeticLength,this.m_az12,null,this.m_segCurveType);break;case 4:this.m_geodeticLength.val=M.distance(this.m_segStartPt,this.m_segEndPt);break;default:o(\"Invalid curve type\")}}[Symbol.dispose](){this.m_geodeticLength[Symbol.dispose](),this.m_az12[Symbol.dispose](),this.m_minGeodeticDist[Symbol.dispose]()}}function W(){return new j}class J{[Symbol.dispose](){this.m_envHelper[Symbol.dispose]()}constructor(t,e,i,s,n){this.m_boxGeomA=H(),this.m_boxGeomB=H(),this.m_envGeomA=new w,this.m_envGeomB=new w,this.m_progressCounter=0,this.m_transformPCS2GCS=null,this.m_segmentBoxesA=new Map,this.m_segmentBoxesB=new Map,this.m_boundaryPtsA=[],this.m_boundaryPtsB=[],this.m_scaleToRadians=new B,this.m_scaleToDegrees=new B,this.m_inputSR=t,this.m_distCurveType=e,this.m_progressTracker=i,this.m_maxDistance=s,this.m_maxDeviation=n,this.m_inputGCS=t.getGCS(),this.m_peGeogcs=this.m_inputGCS.getPECoordSys(),this.m_tolerance=0;const o=v();this.m_inputGCS.querySpheroidData(o),this.m_a=o.majorSemiAxis,this.m_eSquared=o.e2,this.m_rpu=this.m_inputGCS.getUnit().getUnitToBaseFactor(),this.m_envHelper=new k(this.m_a,this.m_eSquared,1),4===this.m_distCurveType&&(this.m_distCurveType=0),this.m_boxGeomA.setEmpty(),this.m_boxGeomB.setEmpty(),this.m_envGeomA.setEmpty(),this.m_envGeomB.setEmpty(),this.m_bIsPannablePcs=2===this.m_inputSR.getCoordinateSystemType()&&this.m_inputSR.isPannable()}progress(t=!1){}calculate(t,e,i,s){const n=L(),o=L();if(t.queryEnvelope(this.m_envGeomA),e.queryEnvelope(this.m_envGeomB),this.checkGeometriesIntersect(t,e,n,o))return i&&z(i,n),s&&z(s,o),0;const a=this.prepareGeometry(t);if(a.isEmpty())return Number.NaN;const m=this.prepareGeometry(e);if(m.isEmpty())return Number.NaN;this.m_tolerance=this.computeTolerance(a,m);const r=this._ExecuteBruteForce(a,m,n,o);return r>=this.m_maxDistance?Number.NaN:(i&&(this.prepareOutput(n),z(i,n)),s&&(this.prepareOutput(o),z(s,o)),r)}createDistanceFunctor(t,e,i){const s=new Q(t,e,i,this.m_inputSR,this.m_distCurveType);return this.m_bIsPannablePcs||1===this.m_inputSR.getCoordinateSystemType()||s.setSegmentCurveType(2),s}_NormalizeAndProject(t){if(this.m_inputSR.isPannable()&&(t=(new c).foldInto360Range(t,this.m_inputSR)),2===this.m_inputSR.getCoordinateSystemType()){const e=h(this.m_inputSR,this.m_inputGCS,null);t=(new c).execute(t,e,this.m_progressTracker)}return t}_ExecuteBruteForce(t,e,n,o){switch(t.getGeometryType()){case s.enumPoint:return this.calculateDistanceGeodeticPointGeometry(t,e,n,o);case s.enumMultiPoint:return this.calculateDistanceGeodeticMultipointGeometry(t,e,n,o);case s.enumPolyline:case s.enumPolygon:case s.enumEnvelope:return this.calculateDistanceGeodeticMultipathGeometry(t,e,n,o);default:i(\"\")}}calculateDistanceGeodeticPointGeometry(t,e,n,o){switch(e.getGeometryType()){case s.enumPoint:return this.calculateDistanceGeodeticPointPoint(t,e,n,o);case s.enumMultiPoint:return this.calculateDistanceGeodeticPointMultipoint(t,e,n,o);case s.enumPolyline:case s.enumPolygon:return this.calculateDistanceGeodeticPointMultipath(t,e,n,o);default:i(\"\")}}calculateDistanceGeodeticPointPoint(i,s,n,o){const a={stack:[],error:void 0,hasError:!1};try{const e=i.getXY();e.scale(this.m_rpu);const m=s.getXY();m.scale(this.m_rpu),n.outPoint.assign(e),o.outPoint.assign(m);const r=t(a,new l,!1);return _.geodeticDistance(this.m_a,this.m_eSquared,e.x,e.y,m.x,m.y,r,null,null,this.m_distCurveType),r.val}catch(m){a.error=m,a.hasError=!0}finally{e(a)}}calculateDistanceGeodeticPointMultipoint(i,s,n,o){const a={stack:[],error:void 0,hasError:!1};try{this.computeEnvelopesAndBoxes(i,s);const e=this.estimateMinimumDistance(n,o);let m=e<this.m_maxDistance?e:this.m_maxDistance;const r=i.getXY();r.scale(this.m_rpu),n.outPoint.assign(r);const u=p(this.m_a,this.m_eSquared,r),c=new M,h=s.getImpl(),d=t(a,new l,!1),g=h.getPointCount();for(let t=0;t<g;++t){h.queryXY(t,c),c.scale(this.m_rpu);const e=p(this.m_a,this.m_eSquared,c);if(!(T.distance(u,e)>m)&&(!(this.m_envHelper.minDistanceGeodesic(this.m_boxGeomA,this.m_boxGeomB)>m)&&(_.geodeticDistance(this.m_a,this.m_eSquared,r.x,r.y,c.x,c.y,d,null,null,this.m_distCurveType),d.val<m&&(m=d.val,o.outPoint=c,0===m))))return m}return m===this.m_maxDistance?Number.POSITIVE_INFINITY:m}catch(m){a.error=m,a.hasError=!0}finally{e(a)}}calculateDistanceGeodeticPointMultipath(i,s,o,a){const m={stack:[],error:void 0,hasError:!1};try{const e=new M,r=new M;e.assign(i.getXY()),r.assign(i.getXY()),o.outPoint.assign(r.mul(this.m_rpu)),this.m_bIsPannablePcs&&d(this.m_inputSR,[e],1,!1),this.computeEnvelopesAndBoxes(i,s);const u=this.estimateMinimumDistance(o,a);let c=u<this.m_maxDistance?u:this.m_maxDistance;const h=s.getImpl(),l=new M(0,0),_=new M(0,0),p=[1],g=this.canUseSpatialTree(i,s),x=W();g&&this.buildSpatialTree(x,s);const y=H();y.setCoords({xmin:r.x,ymin:r.y,xmax:r.x,ymax:r.y});const P=t(m,this.createDistanceFunctor(r,l,_),!1),S=h.querySegmentIterator();if(S.stripAttributes(),g)n(0);else for(;S.nextPath();)for(;S.hasNextSegment();){const t=S.nextSegment(),i=this.findOrComputeBoxSegment(S.getStartPointIndex(),t,this.m_segmentBoxesB);if(this.m_envHelper.minDistanceGeodesic(y,i)>c)continue;const s=this.calculateDistanceGeodeticPointSegment(e,r,t,p,P);if(s.second<c&&(this.updateOutputSegment(a,t,s.first),c=s.second,0===c))return 0}return c===this.m_maxDistance?Number.POSITIVE_INFINITY:c}catch(r){m.error=r,m.hasError=!0}finally{e(m)}}calculateDistanceGeodeticMultipointGeometry(t,e,n,o){switch(e.getGeometryType()){case s.enumPoint:return this.calculateDistanceGeodeticPointMultipoint(e,t,o,n);case s.enumMultiPoint:return this.calculateDistanceGeodeticMultipointMultipoint(t,e,n,o);case s.enumPolyline:case s.enumPolygon:case s.enumEnvelope:return this.calculateDistanceGeodeticMultipointMultipath(t,e,n,o);default:i(\"\")}}calculateDistanceGeodeticMultipointMultipoint(i,s,n,o){const a={stack:[],error:void 0,hasError:!1};try{const e=t(a,new l,!1);this.computeEnvelopesAndBoxes(i,s);const m=this.estimateMinimumDistance(n,o);let r=m<this.m_maxDistance?m:this.m_maxDistance;const u=new M,c=new M,h=i.getImpl(),d=s.getImpl(),g=H(),x=h.getPointCount(),y=d.getPointCount();for(let t=0;t<x;++t){if(u.assign(h.getXY(t)),g.setCoords({xmin:u.x,ymin:u.y,xmax:u.x,ymax:u.y}),this.m_envHelper.minDistanceGeodesic(g,this.m_boxGeomB)>r)continue;u.scale(this.m_rpu);const i=p(this.m_a,this.m_eSquared,u);for(let t=0;t<y;++t){c.assign(d.getXY(t)),c.scale(this.m_rpu);const s=p(this.m_a,this.m_eSquared,c);if(!(T.distance(i,s)>=r)&&(_.geodeticDistance(this.m_a,this.m_eSquared,u.x,u.y,c.x,c.y,e,null,null,this.m_distCurveType),e.val<r&&(n.outPoint.assign(u),o.outPoint.assign(c),r=e.val,0===r)))return r}}return r===this.m_maxDistance?Number.POSITIVE_INFINITY:r}catch(m){a.error=m,a.hasError=!0}finally{e(a)}}calculateDistanceGeodeticMultipointMultipath(i,s,o,a){const m={stack:[],error:void 0,hasError:!1};try{const e=s.getImpl().querySegmentIterator();e.stripAttributes(),this.computeEnvelopesAndBoxes(i,s);const r=this.estimateMinimumDistance(o,a);let u=r<this.m_maxDistance?r:this.m_maxDistance;const c=new M,h=new M(0,0),l=new M(0,0),_=new M(0,0),p=[0],g=H(),x=t(m,this.createDistanceFunctor(h,l,_),!1),y=W(),P=this.canUseSpatialTree(i,s);P&&this.buildSpatialTree(y,s);const S=i.getPointCount();for(let t=0;t<S;++t)if(c.assign(i.getXY(t)),h.assign(i.getXY(t)),this.m_bIsPannablePcs&&d(this.m_inputSR,[c],1,!1),g.setCoords({xmin:h.x,ymin:h.y,xmax:h.x,ymax:h.y}),!(this.m_envHelper.minDistanceGeodesic(g,this.m_boxGeomB)>u))if(x.setPointDistFrom(h),P)n(0);else{for(;e.nextPath();)for(;e.hasNextSegment();){const t=e.nextSegment();if(this.m_envHelper.minDistanceGeodesic(g,this.findOrComputeBoxSegment(e.getStartPointIndex(),t,this.m_segmentBoxesB))>u)continue;const i=this.calculateDistanceGeodeticPointSegment(c,h,t,p,x);if(i.second<u&&(o.outPoint.assign(h.mul(this.m_rpu)),this.updateOutputSegment(a,t,i.first),u=i.second,0===u))return 0}e.resetToFirstPath()}return u===this.m_maxDistance?Number.POSITIVE_INFINITY:u}catch(r){m.error=r,m.hasError=!0}finally{e(m)}}calculateDistanceGeodeticMultipathGeometry(t,e,n,o){switch(e.getGeometryType()){case s.enumPoint:return this.calculateDistanceGeodeticPointMultipath(e,t,o,n);case s.enumMultiPoint:return this.calculateDistanceGeodeticMultipointMultipath(e,t,o,n);case s.enumPolyline:case s.enumPolygon:case s.enumEnvelope:return this.calculateDistanceGeodeticMultipathMultipath(t,e,n,o);default:i(\"\")}}calculateDistanceGeodeticMultipathMultipath(t,e,i,s){const n=[t],o=[e],a=this.swapGeometries(n,o),m=n[0],r=o[0];this.computeEnvelopesAndBoxes(n[0],o[0]);const u=this.estimateMinimumDistance(i,s),c=this.calculateDistanceGeodeticMultipathMultipath_(m,r,i,s,u);return a&&(s.outPoint=E(i.outPoint,i.outPoint=s.outPoint)),c}calculateDistanceGeodeticMultipathMultipath_(i,s,o,a,m=Number.MAX_VALUE){const u={stack:[],error:void 0,hasError:!1};try{let e=m;const c=new M(0,0),h=new M,l=new M(0,0),_=new M,p=new M(0,0),d=new M,y=new M,P=new M,S=[new M],f=[0],G=[0],D=H(),v=H(),T=t(u,this.createDistanceFunctor(p,c,l),!1),b=W(),w=this.canUseSpatialTree(i,s);w&&this.buildSpatialTree(b,s);const E=s.querySegmentIterator();E.stripAttributes();const R=new r,C=A(i);for(let t=0;t<C.length;++t){const s=C[t];i.getSegmentBuffer(s,R,!0);const m=R.get();if(D.assign(this.findOrComputeBoxSegment(s,m,this.m_segmentBoxesA)),w)n(0);else{if(p.assign(m.getStartXY()),d.assign(m.getStartXY()),y.assign(m.getEndXY()),P.assign(m.getEndXY()),this.m_bIsPannablePcs&&(g(this.m_inputSR,0,[d],1),g(this.m_inputSR,0,[P],1)),this.m_envHelper.minDistanceGeodesic(D,this.m_boxGeomB)>e)continue;for(;E.nextPath();){for(;E.hasNextSegment();){const t=E.nextSegment();if(c.assign(t.getStartXY()),h.assign(t.getStartXY()),l.assign(t.getEndXY()),_.assign(t.getEndXY()),m.intersect(t,S,f,G,this.m_tolerance))return this.updateOutputSegment(o,m,f[0]),this.updateOutputSegment(a,t,G[0]),0;if(this.m_bIsPannablePcs&&(g(this.m_inputSR,0,[h],1),g(this.m_inputSR,0,[_],1)),v.assign(this.findOrComputeBoxPoint(E.getStartPointIndex(),h,_,this.m_segmentBoxesB)),this.m_envHelper.minDistanceGeodesic(D,v)>e)continue;T.setSegmentEndPoints(c,l),T.setPointDistFrom(d);let i=x(T.makeFunctor(),0,1,1e-10);if(i.second<e&&(o.outPoint.assign(d.mul(this.m_rpu)),this.updateOutputSegment(a,t,i.first),e=i.second,0===e))break;if(T.setPointDistFrom(P),i=x(T.makeFunctor(),0,1,1e-10),i.second<e&&(o.outPoint.assign(P.mul(this.m_rpu)),this.updateOutputSegment(a,t,i.first),e=i.second,0===e))break;if(T.setSegmentEndPoints(p,y),T.setPointDistFrom(h),i=x(T.makeFunctor(),0,1,1e-10),i.second<e&&(this.updateOutputSegment(o,m,i.first),a.outPoint.assign(h.mul(this.m_rpu)),e=i.second,0===e))break;if(T.setPointDistFrom(_),i=x(T.makeFunctor(),0,1,1e-10),i.second<e&&(this.updateOutputSegment(o,m,i.first),a.outPoint.assign(_.mul(this.m_rpu)),e=i.second,0===e))break}if(0===e)return 0}E.resetToFirstPath()}}return e===this.m_maxDistance?Number.POSITIVE_INFINITY:e}catch(c){u.error=c,u.hasError=!0}finally{e(u)}}calculateDistanceGeodeticPointSegment(t,e,i,s,n){const o=i.getStartXY(),a=i.getEndXY();return i.intersectPoint(t,s,this.m_tolerance)?R(s[0],0):(n.setPointDistFrom(e),n.setSegmentEndPoints(o,a),x(n.makeFunctor(),0,1,1e-10))}prepareGeometry(t){let e=t.clone();const i=t.getGeometryType();if(i===s.enumPoint||i===s.enumMultiPoint)return this._NormalizeAndProject(e);if(i===s.enumEnvelope&&(e=this.envelopeToPolygon(e)),this.m_inputSR.isPannable())return this.prepareGeometryPannable(e,4);if(2===this.m_inputSR.getCoordinateSystemType()){if(e=y(e,this.m_inputSR,0,null),e.isEmpty())return e;e=(new F).execute(e,this.m_inputSR,5e4,this.m_maxDeviation/2,0,null);const t=this.m_inputSR.getSRToGCSTransform();return(new c).execute(e,t,this.m_progressTracker)}const n=new w;e.queryLooseEnvelope(n);const o=this.m_inputSR.getPannableExtent();if(n.ymin<o.ymin||n.ymax>o.ymax){const t=new w(n.xmin-1,o.ymin,n.xmax+1,o.ymax);if(e=(new Y).execute(e,t,this.m_inputSR,this.m_progressTracker),e.isEmpty())return e}return n.width()>2*o.width()?(e=P(e,-2*o.width(),2*o.width(),this.m_inputSR,!0,0,!0,this.m_progressTracker),e):e}prepareGeometryPannable(t,e){const i=new w;t.queryEnvelope(i);const s=this.m_inputSR.getPannableExtent();if(s.containsEnvelope(i))return t;const n=new C;s.queryIntervalX(n);const o=new C;return i.queryIntervalX(o),t=n.contains(o)?S(t,this.m_inputSR):(new c).foldInto360RangeGeodetic(t,this.m_inputSR,e)}prepareOutput(t){t.outPoint.scale(1/this.m_rpu),2===this.m_inputSR.getCoordinateSystemType()&&d(this.m_inputSR,[t.outPoint],1,!1)}updateOutputSegment(t,e,i){e.queryCoord2D(i,t.outPoint),this.m_bIsPannablePcs&&g(this.m_inputSR,0,[t.outPoint],1),t.outPoint.mulThis(this.m_rpu)}computeTolerance(t,e){t.queryEnvelope(this.m_envGeomA),e.queryEnvelope(this.m_envGeomB);const i=new w(this.m_envGeomA);return i.mergeEnvelope2D(this.m_envGeomB),b(null,i)}envelopeToPolygon(t){const e=new u;return e.addEnvelope(t,!1),e}computeEnvelopesAndBoxes(t,e){t.queryEnvelope(this.m_envGeomA),e.queryEnvelope(this.m_envGeomB),this.m_boxGeomA=this.computeBoxGeometry(t,this.m_boundaryPtsA,this.m_segmentBoxesA),this.m_boxGeomB=this.computeBoxGeometry(e,this.m_boundaryPtsB,this.m_segmentBoxesB)}computeBoxGeometry(t,e,i){switch(t.getGeometryType()){case s.enumPoint:return this.computeBoxPoint(t,e);case s.enumMultiPoint:return this.computeBoxMultiPoint(t,e);case s.enumPolyline:case s.enumPolygon:return this.computeBoxMultiPath(t,e,i);default:o(\"Invalid geometry type\")}}computeBoxPoint(t,e){const i=t.getXY();e.length=0,e.push(i.mul(this.m_rpu));const s=H();return s.setCoords({xmin:i.x,ymin:i.y,xmax:i.x,ymax:i.y}),s}computeBoxMultiPoint(t,e){let i=!0;for(let n=0;n<t.getPointCount();++n){const s=t.getXY(n);if(i){e.length=0;for(let t=0;t<4;++t)e.push(s.clone());i=!1}s.x<e[0].x&&e[0].assign(s),s.y>e[1].y&&e[1].assign(s),s.x>e[2].x&&e[2].assign(s),s.y<e[3].y&&e[3].assign(s)}for(let n=0;n<e.length;++n)e[n].mulThis(this.m_rpu);const s=H();return t.queryEnvelope(s),s}computeBoxMultiPath(t,e,i){let s=!0;const n=H();n.setEmpty();const o=t.querySegmentIterator();for(o.stripAttributes();o.nextPath();)for(;o.hasNextSegment();){const t=o.nextSegment(),a=t.getStartXY(),m=t.getEndXY();if(this.m_bIsPannablePcs&&(g(this.m_inputSR,0,[a],1),g(this.m_inputSR,0,[m],1)),s){for(let t=0;t<4;++t)e.push(a.clone());s=!1}a.x<e[0].x&&e[0].assign(a),a.y>e[1].y&&e[1].assign(a),a.x>e[2].x&&e[2].assign(a),a.y<e[3].y&&e[3].assign(a),m.x<e[0].x&&e[0].assign(m),m.y>e[1].y&&e[1].assign(m),m.x>e[2].x&&e[2].assign(m),m.y<e[3].y&&e[3].assign(m);const r=this.findOrComputeBoxPoint(o.getStartPointIndex(),a,m,i);n.mergeEnvelope2D(r)}for(let a=0;a<e.length;++a)e[a].mulThis(this.m_rpu);return n}findOrComputeBoxSegment(t,e,i){if(!i.has(t)){let s=H();if(e.queryEnvelope(s),this.m_bIsPannablePcs){const t=M.construct(s.xmin,s.ymin),e=M.construct(s.xmax,s.ymax);g(this.m_inputSR,0,[t],1),g(this.m_inputSR,0,[e],1),s=this.m_envHelper.calculateBbox(t.x,t.y,e.x,e.y)}return i.set(t,s),s}return i.get(t)}findOrComputeBoxPoint(t,e,i,s){if(!s.has(t)){let n=H();return n.setCoords({xmin:e.x,ymin:e.y,xmax:i.x,ymax:i.y}),this.m_bIsPannablePcs&&(n=this.m_envHelper.calculateBbox(n.xmin,n.ymin,n.xmax,n.ymax)),s.set(t,n),n}return s.get(t)}estimateMinimumDistance(i,s){const n={stack:[],error:void 0,hasError:!1};try{const e=t=>p(this.m_a,this.m_eSquared,t),o=this.m_boundaryPtsA.map(e),a=this.m_boundaryPtsB.map(e);let m=Number.MAX_VALUE,r=0,u=0;for(let t=0;t<o.length;++t)for(let e=0;e<a.length;++e){const i=T.distance(o[t],a[e]);i<m&&(m=i,r=t,u=e)}i.outPoint.assign(this.m_boundaryPtsA[r]),s.outPoint.assign(this.m_boundaryPtsB[u]);const c=t(n,new l,!1);return _.geodeticDistance(this.m_a,this.m_eSquared,this.m_boundaryPtsA[r].x,this.m_boundaryPtsA[r].y,this.m_boundaryPtsB[u].x,this.m_boundaryPtsB[u].y,c,null,null,this.m_distCurveType),c.val}catch(o){n.error=o,n.hasError=!0}finally{e(n)}}swapGeometries(t,e){return a(t[0])>a(e[0])&&(e[0]=E(t[0],t[0]=e[0]),this.m_envGeomB=E(this.m_envGeomA,this.m_envGeomA=this.m_envGeomB),!0)}canUseSpatialTree(t,e){return!1}checkGeometriesIntersect(t,e,i,n){let o=t.getGeometryType(),a=e.getGeometryType();if(this.m_envGeomA.isIntersecting(this.m_envGeomB)){if(o===s.enumPoint&&2===e.getDimension()){const s=[0],o=[t.getXY()];if(f(e,o,1,this.m_tolerance,s),0!==s[0])return i.outPoint.assign(o[0]),n.outPoint.assign(o[0]),!0}else if(a===s.enumPoint&&2===t.getDimension()){const s=[2],o=[e.getXY()];if(f(t,o,1,this.m_tolerance,s),0!==s[0])return i.outPoint.assign(o[0]),n.outPoint.assign(o[0]),!0}if(o===s.enumMultiPoint&&2===e.getDimension())return this.multipointIntersectsArea(t,e,i,n);if(a===s.enumMultiPoint&&2===t.getDimension())return this.multipointIntersectsArea(e,t,n,i);let r,u,c=t,h=e;if(o===s.enumEnvelope&&(r=this.envelopeToPolygon(t),c=r,o=s.enumPolygon),a===s.enumEnvelope&&(u=this.envelopeToPolygon(e),h=u,a=s.enumPolygon),m(o)&&m(a)){const t=c.querySegmentIterator(),e=h.querySegmentIterator(),s=N(),o=N();if(q(c,h,t,e,s,o))return i.outPoint.assign(s.outPoint),n.outPoint.assign(s.outPoint),!0}}return!1}multipointIntersectsArea(t,e,i,s){const n=t.getPointCount();for(let o=0;o<n;++o){const n=[2],a=t.getXY(o);if(f(e,[a],1,this.m_tolerance,n),0!==n[0])return i.outPoint.assign(a),s.outPoint.assign(a),!0}return!1}getNearestNeighbourVisitor(t,e,i,s,o,a,m){return n(0),{}}buildSpatialTree(t,e){n(0)}}export{J as G,Q as a,L as m};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}