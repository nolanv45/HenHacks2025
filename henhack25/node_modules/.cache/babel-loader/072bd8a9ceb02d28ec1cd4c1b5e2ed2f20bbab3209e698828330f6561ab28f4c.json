{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { ForwardLinearDepth as e } from \"../views/3d/webgl-engine/core/shaderLibrary/ForwardLinearDepth.glsl.js\";\nimport { Offset as r } from \"../views/3d/webgl-engine/core/shaderLibrary/Offset.glsl.js\";\nimport { isColorOrColorEmission as o } from \"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutput.js\";\nimport { SliceDraw as i } from \"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";\nimport { Transform as a } from \"../views/3d/webgl-engine/core/shaderLibrary/Transform.glsl.js\";\nimport { InstancedDoublePrecision as l } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/InstancedDoublePrecision.glsl.js\";\nimport { NormalAttribute as t } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/NormalAttribute.glsl.js\";\nimport { PositionAttribute as s } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/PositionAttribute.glsl.js\";\nimport { SymbolColor as n } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/SymbolColor.glsl.js\";\nimport { TextureCoordinateAttribute as d } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/TextureCoordinateAttribute.glsl.js\";\nimport { VertexColor as c } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/VertexColor.glsl.js\";\nimport { VerticalOffset as g } from \"../views/3d/webgl-engine/core/shaderLibrary/attributes/VerticalOffset.glsl.js\";\nimport { DefaultMaterialAuxiliaryPasses as m } from \"../views/3d/webgl-engine/core/shaderLibrary/default/DefaultMaterialAuxiliaryPasses.glsl.js\";\nimport { EvaluateAmbientOcclusion as v } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateAmbientOcclusion.glsl.js\";\nimport { EvaluateSceneLighting as b, addAmbientBoostFactor as w, addLightingGlobalFactor as p } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateSceneLighting.glsl.js\";\nimport { addMainLightDirection as u, addMainLightIntensity as h } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/MainLighting.glsl.js\";\nimport { PhysicallyBasedRendering as f } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRendering.glsl.js\";\nimport { PBRMode as x, PhysicallyBasedRenderingParameters as y } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js\";\nimport { ReadShadowMapPass as C, ReadShadowMapDraw as L } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/ReadShadowMap.glsl.js\";\nimport { terrainDepthTest as j } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/TerrainDepthTest.glsl.js\";\nimport { VisualVariables as O } from \"../views/3d/webgl-engine/core/shaderLibrary/shading/VisualVariables.glsl.js\";\nimport { DiscardOrAdjustAlphaPass as P } from \"../views/3d/webgl-engine/core/shaderLibrary/util/DiscardOrAdjustAlpha.glsl.js\";\nimport { MixExternalColor as M } from \"../views/3d/webgl-engine/core/shaderLibrary/util/MixExternalColor.glsl.js\";\nimport { addProjViewLocalOrigin as A, addCameraPosition as S } from \"../views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js\";\nimport { Float3PassUniform as E } from \"../views/3d/webgl-engine/core/shaderModules/Float3PassUniform.js\";\nimport { Float4PassUniform as D } from \"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";\nimport { FloatPassUniform as F } from \"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";\nimport { glsl as $, If as N } from \"../views/3d/webgl-engine/core/shaderModules/glsl.js\";\nimport { Texture2DPassUniform as V } from \"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";\nimport { VertexAttribute as I } from \"../views/3d/webgl-engine/lib/VertexAttribute.js\";\nimport { outputColorHighlightOID as T } from \"../views/3d/webgl-engine/shaders/OutputColorHighlightOID.glsl.js\";\nimport { ShaderBuilder as B } from \"../views/webgl/ShaderBuilder.js\";\nimport { alphaCutoff as R } from \"../webscene/support/AlphaCutoff.js\";\nfunction _(_) {\n  const z = new B(),\n    {\n      vertex: k,\n      fragment: G,\n      varyings: U\n    } = z,\n    {\n      output: W,\n      offsetBackfaces: H,\n      instancedColor: q,\n      pbrMode: J,\n      snowCover: K,\n      spherical: Q\n    } = _,\n    X = J === x.Normal || J === x.Schematic;\n  if (A(k, _), z.include(s), U.add(\"vpos\", \"vec3\"), z.include(O, _), z.include(l, _), z.include(g, _), z.include(j, _), o(W) && (S(z.vertex, _), z.include(t, _), z.include(a, _), H && z.include(r), q && z.attributes.add(I.INSTANCECOLOR, \"vec4\"), U.add(\"vNormalWorld\", \"vec3\"), U.add(\"localvpos\", \"vec3\"), z.include(d, _), z.include(e, _), z.include(n, _), z.include(c, _), k.uniforms.add(new D(\"externalColor\", e => e.externalColor)), U.add(\"vcolorExt\", \"vec4\"), k.main.add($`\n      forwardNormalizedVertexColor();\n      vcolorExt = externalColor;\n      ${N(q, \"vcolorExt *= instanceColor * 0.003921568627451;\")}\n      vcolorExt *= vvColor();\n      vcolorExt *= getSymbolColor();\n      forwardColorMixMode();\n\n      bool alphaCut = vcolorExt.a < ${$.float(R)};\n      vpos = getVertexInLocalOriginSpace();\n      localvpos = vpos - view[3].xyz;\n      vpos = subtractOrigin(vpos);\n      vNormalWorld = dpNormal(vvLocalNormal(normalModel()));\n      vpos = addVerticalOffset(vpos, localOrigin);\n      vec4 basePosition = transformPosition(proj, view, vpos);\n\n      forwardViewPosDepth((view * vec4(vpos, 1.0)).xyz);\n      forwardLinearDepth();\n      forwardTextureCoordinates();\n\n      gl_Position = alphaCut ? vec4(1e38, 1e38, 1e38, 1.0) :\n      ${N(H, \"offsetBackfacingClipPosition(basePosition, vpos, vNormalWorld, cameraPosition);\", \"basePosition;\")}\n    `)), o(W)) {\n    const {\n      hasColorTexture: e,\n      hasColorTextureTransform: r,\n      receiveShadows: o\n    } = _;\n    z.include(b, _), z.include(v, _), z.include(P, _), z.include(_.instancedDoublePrecision ? C : L, _), z.fragment.include(i, _), z.include(T, _), S(z.fragment, _), u(G), w(G), p(G), G.uniforms.add(k.uniforms.get(\"localOrigin\"), k.uniforms.get(\"view\"), new E(\"ambient\", e => e.ambient), new E(\"diffuse\", e => e.diffuse), new F(\"opacity\", e => e.opacity), new F(\"layerOpacity\", e => e.layerOpacity)), e && G.uniforms.add(new V(\"tex\", e => e.texture)), z.include(y, _), z.include(f, _), G.include(M), h(G), G.main.add($`\n      discardBySlice(vpos);\n      discardByTerrainDepth();\n      vec4 texColor = ${e ? `texture(tex, ${r ? \"colorUV\" : \"vuv0\"})` : \" vec4(1.0)\"};\n      ${N(e, `${N(_.textureAlphaPremultiplied, \"texColor.rgb /= texColor.a;\")}\\n        discardOrAdjustAlpha(texColor);`)}\n      vec3 viewDirection = normalize(vpos - cameraPosition);\n      applyPBRFactors();\n      float ssao = evaluateAmbientOcclusionInverse();\n      ssao *= getBakedOcclusion();\n\n      float additionalAmbientScale = additionalDirectedAmbientLight(vpos + localOrigin);\n      vec3 additionalLight = ssao * mainLightIntensity * additionalAmbientScale * ambientBoostFactor * lightingGlobalFactor;\n      float shadow = ${o ? \"max(lightingGlobalFactor * (1.0 - additionalAmbientScale), readShadowMap(vpos, linearDepth))\" : Q ? \"lightingGlobalFactor * (1.0 - additionalAmbientScale)\" : \"0.0\"};\n      vec3 matColor = max(ambient, diffuse);\n      ${_.hasVertexColors ? $`vec3 albedo = mixExternalColor(vColor.rgb * matColor, texColor.rgb, vcolorExt.rgb, int(colorMixMode));\n             float opacity_ = layerOpacity * mixExternalOpacity(vColor.a * opacity, texColor.a, vcolorExt.a, int(colorMixMode));` : $`vec3 albedo = mixExternalColor(matColor, texColor.rgb, vcolorExt.rgb, int(colorMixMode));\n             float opacity_ = layerOpacity * mixExternalOpacity(opacity, texColor.a, vcolorExt.a, int(colorMixMode));`}\n      ${N(K, \"albedo = mix(albedo, vec3(1), 0.9);\")}\n      ${$`vec3 shadingNormal = normalize(vNormalWorld);\n             albedo *= 1.2;\n             vec3 viewForward = vec3(view[0][2], view[1][2], view[2][2]);\n             float alignmentLightView = clamp(dot(viewForward, -mainLightDirection), 0.0, 1.0);\n             float transmittance = 1.0 - clamp(dot(viewForward, shadingNormal), 0.0, 1.0);\n             float treeRadialFalloff = vColor.r;\n             float backLightFactor = 0.5 * treeRadialFalloff * alignmentLightView * transmittance * (1.0 - shadow);\n             additionalLight += backLightFactor * mainLightIntensity;`}\n      ${N(X, `vec3 normalGround = ${Q ? \"normalize(vpos + localOrigin)\" : \"vec3(0.0, 0.0, 1.0)\"};`)}\n      ${X ? $`float additionalAmbientIrradiance = additionalAmbientIrradianceFactor * mainLightIntensity[2];\n                 ${N(K, $`mrr = vec3(0.0, 1.0, 0.04);`)}\n            vec4 emission = ${K ? \"vec4(0.0)\" : \"getEmissions()\"};\n            vec3 shadedColor = evaluateSceneLightingPBR(shadingNormal, albedo, shadow, 1.0 - ssao, additionalLight, viewDirection, normalGround, mrr, emission, additionalAmbientIrradiance);` : $`vec3 shadedColor = evaluateSceneLighting(shadingNormal, albedo, shadow, 1.0 - ssao, additionalLight);`}\n      vec4 finalColor = vec4(shadedColor, opacity_);\n      outputColorHighlightOID(finalColor, vpos);`);\n  }\n  return z.include(m, _), z;\n}\nconst z = Object.freeze(Object.defineProperty({\n  __proto__: null,\n  build: _\n}, Symbol.toStringTag, {\n  value: \"Module\"\n}));\nexport { z as R, _ as b };","map":{"version":3,"names":["ForwardLinearDepth","e","Offset","r","isColorOrColorEmission","o","SliceDraw","i","Transform","a","InstancedDoublePrecision","l","NormalAttribute","t","PositionAttribute","s","SymbolColor","n","TextureCoordinateAttribute","d","VertexColor","c","VerticalOffset","g","DefaultMaterialAuxiliaryPasses","m","EvaluateAmbientOcclusion","v","EvaluateSceneLighting","b","addAmbientBoostFactor","w","addLightingGlobalFactor","p","addMainLightDirection","u","addMainLightIntensity","h","PhysicallyBasedRendering","f","PBRMode","x","PhysicallyBasedRenderingParameters","y","ReadShadowMapPass","C","ReadShadowMapDraw","L","terrainDepthTest","j","VisualVariables","O","DiscardOrAdjustAlphaPass","P","MixExternalColor","M","addProjViewLocalOrigin","A","addCameraPosition","S","Float3PassUniform","E","Float4PassUniform","D","FloatPassUniform","F","glsl","$","If","N","Texture2DPassUniform","V","VertexAttribute","I","outputColorHighlightOID","T","ShaderBuilder","B","alphaCutoff","R","_","z","vertex","k","fragment","G","varyings","U","output","W","offsetBackfaces","H","instancedColor","q","pbrMode","J","snowCover","K","spherical","Q","X","Normal","Schematic","include","add","attributes","INSTANCECOLOR","uniforms","externalColor","main","float","hasColorTexture","hasColorTextureTransform","receiveShadows","instancedDoublePrecision","get","ambient","diffuse","opacity","layerOpacity","texture","textureAlphaPremultiplied","hasVertexColors","Object","freeze","defineProperty","__proto__","build","Symbol","toStringTag","value"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/chunks/RealisticTree.glsl.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{ForwardLinearDepth as e}from\"../views/3d/webgl-engine/core/shaderLibrary/ForwardLinearDepth.glsl.js\";import{Offset as r}from\"../views/3d/webgl-engine/core/shaderLibrary/Offset.glsl.js\";import{isColorOrColorEmission as o}from\"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutput.js\";import{SliceDraw as i}from\"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";import{Transform as a}from\"../views/3d/webgl-engine/core/shaderLibrary/Transform.glsl.js\";import{InstancedDoublePrecision as l}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/InstancedDoublePrecision.glsl.js\";import{NormalAttribute as t}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/NormalAttribute.glsl.js\";import{PositionAttribute as s}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/PositionAttribute.glsl.js\";import{SymbolColor as n}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/SymbolColor.glsl.js\";import{TextureCoordinateAttribute as d}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/TextureCoordinateAttribute.glsl.js\";import{VertexColor as c}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/VertexColor.glsl.js\";import{VerticalOffset as g}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/VerticalOffset.glsl.js\";import{DefaultMaterialAuxiliaryPasses as m}from\"../views/3d/webgl-engine/core/shaderLibrary/default/DefaultMaterialAuxiliaryPasses.glsl.js\";import{EvaluateAmbientOcclusion as v}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateAmbientOcclusion.glsl.js\";import{EvaluateSceneLighting as b,addAmbientBoostFactor as w,addLightingGlobalFactor as p}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateSceneLighting.glsl.js\";import{addMainLightDirection as u,addMainLightIntensity as h}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/MainLighting.glsl.js\";import{PhysicallyBasedRendering as f}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRendering.glsl.js\";import{PBRMode as x,PhysicallyBasedRenderingParameters as y}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js\";import{ReadShadowMapPass as C,ReadShadowMapDraw as L}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/ReadShadowMap.glsl.js\";import{terrainDepthTest as j}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/TerrainDepthTest.glsl.js\";import{VisualVariables as O}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/VisualVariables.glsl.js\";import{DiscardOrAdjustAlphaPass as P}from\"../views/3d/webgl-engine/core/shaderLibrary/util/DiscardOrAdjustAlpha.glsl.js\";import{MixExternalColor as M}from\"../views/3d/webgl-engine/core/shaderLibrary/util/MixExternalColor.glsl.js\";import{addProjViewLocalOrigin as A,addCameraPosition as S}from\"../views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js\";import{Float3PassUniform as E}from\"../views/3d/webgl-engine/core/shaderModules/Float3PassUniform.js\";import{Float4PassUniform as D}from\"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";import{FloatPassUniform as F}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{glsl as $,If as N}from\"../views/3d/webgl-engine/core/shaderModules/glsl.js\";import{Texture2DPassUniform as V}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";import{VertexAttribute as I}from\"../views/3d/webgl-engine/lib/VertexAttribute.js\";import{outputColorHighlightOID as T}from\"../views/3d/webgl-engine/shaders/OutputColorHighlightOID.glsl.js\";import{ShaderBuilder as B}from\"../views/webgl/ShaderBuilder.js\";import{alphaCutoff as R}from\"../webscene/support/AlphaCutoff.js\";function _(_){const z=new B,{vertex:k,fragment:G,varyings:U}=z,{output:W,offsetBackfaces:H,instancedColor:q,pbrMode:J,snowCover:K,spherical:Q}=_,X=J===x.Normal||J===x.Schematic;if(A(k,_),z.include(s),U.add(\"vpos\",\"vec3\"),z.include(O,_),z.include(l,_),z.include(g,_),z.include(j,_),o(W)&&(S(z.vertex,_),z.include(t,_),z.include(a,_),H&&z.include(r),q&&z.attributes.add(I.INSTANCECOLOR,\"vec4\"),U.add(\"vNormalWorld\",\"vec3\"),U.add(\"localvpos\",\"vec3\"),z.include(d,_),z.include(e,_),z.include(n,_),z.include(c,_),k.uniforms.add(new D(\"externalColor\",(e=>e.externalColor))),U.add(\"vcolorExt\",\"vec4\"),k.main.add($`\n      forwardNormalizedVertexColor();\n      vcolorExt = externalColor;\n      ${N(q,\"vcolorExt *= instanceColor * 0.003921568627451;\")}\n      vcolorExt *= vvColor();\n      vcolorExt *= getSymbolColor();\n      forwardColorMixMode();\n\n      bool alphaCut = vcolorExt.a < ${$.float(R)};\n      vpos = getVertexInLocalOriginSpace();\n      localvpos = vpos - view[3].xyz;\n      vpos = subtractOrigin(vpos);\n      vNormalWorld = dpNormal(vvLocalNormal(normalModel()));\n      vpos = addVerticalOffset(vpos, localOrigin);\n      vec4 basePosition = transformPosition(proj, view, vpos);\n\n      forwardViewPosDepth((view * vec4(vpos, 1.0)).xyz);\n      forwardLinearDepth();\n      forwardTextureCoordinates();\n\n      gl_Position = alphaCut ? vec4(1e38, 1e38, 1e38, 1.0) :\n      ${N(H,\"offsetBackfacingClipPosition(basePosition, vpos, vNormalWorld, cameraPosition);\",\"basePosition;\")}\n    `)),o(W)){const{hasColorTexture:e,hasColorTextureTransform:r,receiveShadows:o}=_;z.include(b,_),z.include(v,_),z.include(P,_),z.include(_.instancedDoublePrecision?C:L,_),z.fragment.include(i,_),z.include(T,_),S(z.fragment,_),u(G),w(G),p(G),G.uniforms.add(k.uniforms.get(\"localOrigin\"),k.uniforms.get(\"view\"),new E(\"ambient\",(e=>e.ambient)),new E(\"diffuse\",(e=>e.diffuse)),new F(\"opacity\",(e=>e.opacity)),new F(\"layerOpacity\",(e=>e.layerOpacity))),e&&G.uniforms.add(new V(\"tex\",(e=>e.texture))),z.include(y,_),z.include(f,_),G.include(M),h(G),G.main.add($`\n      discardBySlice(vpos);\n      discardByTerrainDepth();\n      vec4 texColor = ${e?`texture(tex, ${r?\"colorUV\":\"vuv0\"})`:\" vec4(1.0)\"};\n      ${N(e,`${N(_.textureAlphaPremultiplied,\"texColor.rgb /= texColor.a;\")}\\n        discardOrAdjustAlpha(texColor);`)}\n      vec3 viewDirection = normalize(vpos - cameraPosition);\n      applyPBRFactors();\n      float ssao = evaluateAmbientOcclusionInverse();\n      ssao *= getBakedOcclusion();\n\n      float additionalAmbientScale = additionalDirectedAmbientLight(vpos + localOrigin);\n      vec3 additionalLight = ssao * mainLightIntensity * additionalAmbientScale * ambientBoostFactor * lightingGlobalFactor;\n      float shadow = ${o?\"max(lightingGlobalFactor * (1.0 - additionalAmbientScale), readShadowMap(vpos, linearDepth))\":Q?\"lightingGlobalFactor * (1.0 - additionalAmbientScale)\":\"0.0\"};\n      vec3 matColor = max(ambient, diffuse);\n      ${_.hasVertexColors?$`vec3 albedo = mixExternalColor(vColor.rgb * matColor, texColor.rgb, vcolorExt.rgb, int(colorMixMode));\n             float opacity_ = layerOpacity * mixExternalOpacity(vColor.a * opacity, texColor.a, vcolorExt.a, int(colorMixMode));`:$`vec3 albedo = mixExternalColor(matColor, texColor.rgb, vcolorExt.rgb, int(colorMixMode));\n             float opacity_ = layerOpacity * mixExternalOpacity(opacity, texColor.a, vcolorExt.a, int(colorMixMode));`}\n      ${N(K,\"albedo = mix(albedo, vec3(1), 0.9);\")}\n      ${$`vec3 shadingNormal = normalize(vNormalWorld);\n             albedo *= 1.2;\n             vec3 viewForward = vec3(view[0][2], view[1][2], view[2][2]);\n             float alignmentLightView = clamp(dot(viewForward, -mainLightDirection), 0.0, 1.0);\n             float transmittance = 1.0 - clamp(dot(viewForward, shadingNormal), 0.0, 1.0);\n             float treeRadialFalloff = vColor.r;\n             float backLightFactor = 0.5 * treeRadialFalloff * alignmentLightView * transmittance * (1.0 - shadow);\n             additionalLight += backLightFactor * mainLightIntensity;`}\n      ${N(X,`vec3 normalGround = ${Q?\"normalize(vpos + localOrigin)\":\"vec3(0.0, 0.0, 1.0)\"};`)}\n      ${X?$`float additionalAmbientIrradiance = additionalAmbientIrradianceFactor * mainLightIntensity[2];\n                 ${N(K,$`mrr = vec3(0.0, 1.0, 0.04);`)}\n            vec4 emission = ${K?\"vec4(0.0)\":\"getEmissions()\"};\n            vec3 shadedColor = evaluateSceneLightingPBR(shadingNormal, albedo, shadow, 1.0 - ssao, additionalLight, viewDirection, normalGround, mrr, emission, additionalAmbientIrradiance);`:$`vec3 shadedColor = evaluateSceneLighting(shadingNormal, albedo, shadow, 1.0 - ssao, additionalLight);`}\n      vec4 finalColor = vec4(shadedColor, opacity_);\n      outputColorHighlightOID(finalColor, vpos);`)}return z.include(m,_),z}const z=Object.freeze(Object.defineProperty({__proto__:null,build:_},Symbol.toStringTag,{value:\"Module\"}));export{z as R,_ as b};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}