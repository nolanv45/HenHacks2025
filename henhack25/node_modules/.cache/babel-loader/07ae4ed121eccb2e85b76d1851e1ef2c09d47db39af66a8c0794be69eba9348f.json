{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { GeometryCursor as t } from \"../../geometry/GeometryCursor.js\";\nimport { CurveHelper as e, pixelTolerance as s } from \"./CurveHelper.js\";\nconst n = 1e-7;\nclass i {\n  constructor() {\n    this._values = [], this.extPtGap = 0, this.ctrlPtGap = 0, this._length = 0, this._currentValue = 0;\n  }\n  isEmpty() {\n    return 0 === this._values.length;\n  }\n  size() {\n    return this._values.length;\n  }\n  init(t, e, s = !0) {\n    if (this._setEmpty(), !t || 0 === t.length) return !1;\n    for (let i = 0; i < t.length; i++) {\n      let e = Math.abs(t[i]);\n      s && e < n && (e = n), this._values.push(e), this._length += e;\n    }\n    return e && 1 & t.length && (this._length *= 2), 0 !== this._length && (this.ctrlPtGap = this.extPtGap = 0, this._currentValue = -1, !0);\n  }\n  scale(t) {\n    const e = this._values ? this._values.length : 0;\n    for (let s = 0; s < e; ++s) this._values[s] *= t;\n    this._length *= t, this.extPtGap *= t, this.ctrlPtGap *= t;\n  }\n  addValue(t) {\n    this._length += t, this._values.push(t);\n  }\n  firstValue() {\n    return this._values[0];\n  }\n  lastValue() {\n    return this._values[this._values.length - 1];\n  }\n  nextValue() {\n    return this._currentValue++, this._currentValue === this._values.length && (this._currentValue = 0), this._values[this._currentValue];\n  }\n  reset() {\n    this._currentValue = -1;\n  }\n  length() {\n    return this._length;\n  }\n  _setEmpty() {\n    this.extPtGap = this.ctrlPtGap = this._length = 0, this._currentValue = -1, this._values.length = 0;\n  }\n}\nclass h {\n  constructor() {\n    this.pt = null, this.ca = 0, this.sa = 0;\n  }\n}\nvar r;\n!function (t) {\n  t[t.FAIL = 0] = \"FAIL\", t[t.END = 1] = \"END\", t[t.CONTINUE = 2] = \"CONTINUE\";\n}(r || (r = {}));\nclass a {\n  constructor() {\n    this.reset();\n  }\n  reset() {\n    this.segment = null, this.segmentLength = 0, this.abscissa = 0, this.isPathEnd = !1, this.isPartEnd = !1;\n  }\n  isValid() {\n    return null !== this.segment;\n  }\n  copyTo(t) {\n    t.segment = this.segment, t.segmentLength = this.segmentLength, t.abscissa = this.abscissa, t.isPathEnd = this.isPathEnd, t.isPartEnd = this.isPartEnd;\n  }\n}\nclass o extends e {\n  constructor(t = 0, e = !1) {\n    super(t, e), this._tolerance = s, this._currentPosition = new a();\n  }\n  updateTolerance(t) {\n    this._tolerance = s * t;\n  }\n  init(t, e, s = !0) {\n    return s ? (this._patternLength = e.length(), this._partExtPtGap = e.extPtGap, this._partCtrlPtGap = e.ctrlPtGap) : (this._patternLength = 0, this._partExtPtGap = 0, this._partCtrlPtGap = 0), this._currentPosition.reset(), this._partSegCount = 0, this._pathCursor = t, this._seg = -1, this._setPosAtNextPart();\n  }\n  curPositionIsValid() {\n    return this._currentPosition.isValid();\n  }\n  nextPosition(t, e = r.FAIL) {\n    const s = new a();\n    return !!this._nextPosition(t, s, null, e) && (s.copyTo(this._currentPosition), !0);\n  }\n  curPointAndAngle(t) {\n    t.pt = this._getPoint(this._currentPosition);\n    const [e, s] = this._getAngleCS(this._currentPosition);\n    t.ca = e, t.sa = s;\n  }\n  nextPointAndAngle(t, e, s = r.FAIL) {\n    const n = new a();\n    if (!this._nextPosition(t, n, null, s)) return !1;\n    n.copyTo(this._currentPosition), e.pt = this._getPoint(n);\n    const [i, h] = this._getAngleCS(n);\n    return e.ca = i, e.sa = h, !0;\n  }\n  nextCurve(e) {\n    if (0 === e) return null;\n    const s = t.createEmptyOptimizedCIM(\"esriGeometryPolyline\");\n    s.startPath(), s.nextPath();\n    const n = new a();\n    return this._nextPosition(e, n, s, r.END) ? (n.copyTo(this._currentPosition), s) : null;\n  }\n  isPathEnd() {\n    return this._currentPosition.isPathEnd;\n  }\n  getPathEnd() {\n    return this._currentPosition.segment[1];\n  }\n  getPt(t) {\n    return this._pathCursor.seekInPath(t), [this._pathCursor.x, this._pathCursor.y];\n  }\n  getSeg(t) {\n    return [this.getPt(t), this.getPt(t + 1)];\n  }\n  _nextPosition(t, e, s, n) {\n    if (this._currentPosition.isPathEnd) return !1;\n    let i = this._currentPosition.abscissa;\n    for (this._currentPosition.segmentLength > 0 && (i /= this._currentPosition.segmentLength), this._currentPosition.copyTo(e); e.abscissa + t * this._partLengthRatio > e.segmentLength + this._tolerance;) {\n      if (s) {\n        if (0 === s.pathSize) if (0 === i) {\n          const t = e.segment[0];\n          s.pushXY(t[0], t[1]);\n        } else s.pushPoint(this.getSegCoord2D(e.segment, i));\n        const t = e.segment[1];\n        s.pushXY(t[0], t[1]);\n      }\n      if (i = 0, t -= (e.segmentLength - e.abscissa) / this._partLengthRatio, this._partSegCount) e.segment = this._nextSegment(), e.segmentLength = this.getSegLength(e.segment), e.abscissa = 0, this._partSegCount--;else {\n        if (!this._setPosAtNextPart()) return n !== r.FAIL && (e.segmentLength = this.getSegLength(e.segment), e.isPartEnd = !0, n === r.END ? (e.abscissa = e.segmentLength, e.isPathEnd = !0) : e.abscissa = e.segmentLength + t, !0);\n        this._currentPosition.copyTo(e);\n      }\n    }\n    if (e.abscissa += t * this._partLengthRatio, s) {\n      0 === s.pathSize && (0 === i ? s.pushPoint(e.segment[0]) : s.pushPoint(this.getSegCoord2D(e.segment, i)));\n      const t = e.abscissa / e.segmentLength;\n      1 === t ? s.pushPoint(e.segment[1]) : s.pushPoint(this.getSegCoord2D(e.segment, t));\n    }\n    return this._partSegCount || Math.abs(e.abscissa - e.segmentLength) < this._tolerance && (e.isPathEnd = this._partIsLast, e.isPartEnd = !0), !0;\n  }\n  _getPoint(t) {\n    const e = t.segmentLength <= 0 ? 0 : t.abscissa / t.segmentLength;\n    return this.getSegCoord2D(this._currentPosition.segment, e);\n  }\n  _getAngleCS(t) {\n    const e = t.segmentLength <= 0 ? 0 : t.abscissa / t.segmentLength;\n    return this.getSegAngleCS(this._currentPosition.segment, e);\n  }\n  _setPosAtNextPart() {\n    for (; this._partSegCount;) this._hasNextSegment() && this._nextSegment(), this._partSegCount--;\n    if (!this._hasNextSegment()) return !1;\n    for (this._partLength = 0, this._partIsLast = !0, this._partSegCount = 0; this._hasNextSegment();) if (this._partLength += this.getSegLength(this._nextSegment()), this._partSegCount++, this._pathCursor.getControlPointAt(this._getEndPointIndex())) {\n      this._partIsLast = !this._hasNextSegment();\n      break;\n    }\n    let t = this._partSegCount;\n    for (; t;) this._previousSegment(), --t;\n    this._currentPosition.segment = this._nextSegment(), this._currentPosition.segmentLength = this.getSegLength(this._currentPosition.segment), this._currentPosition.abscissa = 0, this._currentPosition.isPathEnd = this._currentPosition.isPartEnd = !1, --this._partSegCount;\n    const e = this._getStartPointIndex();\n    this._ctrlPtBegin = this._pathCursor.getControlPointAt(e);\n    let s = e + this._partSegCount + 1;\n    if (s >= this._pathCursor.pathSize && (s = 0), this._ctrlPtEnd = this._pathCursor.getControlPointAt(s), this._patternLength > 0) {\n      const t = this._ctrlPtBegin ? this._partCtrlPtGap : this._partExtPtGap,\n        e = this._ctrlPtEnd ? this._partCtrlPtGap : this._partExtPtGap;\n      let s = Math.round((this._partLength - (t + e)) / this._patternLength);\n      s <= 0 && (s = t + e > 0 ? 0 : 1), this._partLengthRatio = this._partLength / (t + e + s * this._patternLength), this._partLengthRatio < .01 && (this._partLengthRatio = 1);\n    } else this._partLengthRatio = 1;\n    return !0;\n  }\n  _hasNextSegment() {\n    return this._seg < this._pathCursor.pathSize - 2;\n  }\n  _previousSegment() {\n    return this.getSeg(--this._seg);\n  }\n  _nextSegment() {\n    return this.getSeg(++this._seg);\n  }\n  _getStartPointIndex() {\n    return this._seg;\n  }\n  _getEndPointIndex() {\n    return this._seg + 1;\n  }\n}\nexport { i as DashPattern, r as EndType, o as GeometryWalker, h as Pos };","map":{"version":3,"names":["GeometryCursor","t","CurveHelper","e","pixelTolerance","s","n","i","constructor","_values","extPtGap","ctrlPtGap","_length","_currentValue","isEmpty","length","size","init","_setEmpty","Math","abs","push","scale","addValue","firstValue","lastValue","nextValue","reset","h","pt","ca","sa","r","FAIL","END","CONTINUE","a","segment","segmentLength","abscissa","isPathEnd","isPartEnd","isValid","copyTo","o","_tolerance","_currentPosition","updateTolerance","_patternLength","_partExtPtGap","_partCtrlPtGap","_partSegCount","_pathCursor","_seg","_setPosAtNextPart","curPositionIsValid","nextPosition","_nextPosition","curPointAndAngle","_getPoint","_getAngleCS","nextPointAndAngle","nextCurve","createEmptyOptimizedCIM","startPath","nextPath","getPathEnd","getPt","seekInPath","x","y","getSeg","_partLengthRatio","pathSize","pushXY","pushPoint","getSegCoord2D","_nextSegment","getSegLength","_partIsLast","getSegAngleCS","_hasNextSegment","_partLength","getControlPointAt","_getEndPointIndex","_previousSegment","_getStartPointIndex","_ctrlPtBegin","_ctrlPtEnd","round","DashPattern","EndType","GeometryWalker","Pos"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/symbols/cim/GeometryWalker.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{GeometryCursor as t}from\"../../geometry/GeometryCursor.js\";import{CurveHelper as e,pixelTolerance as s}from\"./CurveHelper.js\";const n=1e-7;class i{constructor(){this._values=[],this.extPtGap=0,this.ctrlPtGap=0,this._length=0,this._currentValue=0}isEmpty(){return 0===this._values.length}size(){return this._values.length}init(t,e,s=!0){if(this._setEmpty(),!t||0===t.length)return!1;for(let i=0;i<t.length;i++){let e=Math.abs(t[i]);s&&e<n&&(e=n),this._values.push(e),this._length+=e}return e&&1&t.length&&(this._length*=2),0!==this._length&&(this.ctrlPtGap=this.extPtGap=0,this._currentValue=-1,!0)}scale(t){const e=this._values?this._values.length:0;for(let s=0;s<e;++s)this._values[s]*=t;this._length*=t,this.extPtGap*=t,this.ctrlPtGap*=t}addValue(t){this._length+=t,this._values.push(t)}firstValue(){return this._values[0]}lastValue(){return this._values[this._values.length-1]}nextValue(){return this._currentValue++,this._currentValue===this._values.length&&(this._currentValue=0),this._values[this._currentValue]}reset(){this._currentValue=-1}length(){return this._length}_setEmpty(){this.extPtGap=this.ctrlPtGap=this._length=0,this._currentValue=-1,this._values.length=0}}class h{constructor(){this.pt=null,this.ca=0,this.sa=0}}var r;!function(t){t[t.FAIL=0]=\"FAIL\",t[t.END=1]=\"END\",t[t.CONTINUE=2]=\"CONTINUE\"}(r||(r={}));class a{constructor(){this.reset()}reset(){this.segment=null,this.segmentLength=0,this.abscissa=0,this.isPathEnd=!1,this.isPartEnd=!1}isValid(){return null!==this.segment}copyTo(t){t.segment=this.segment,t.segmentLength=this.segmentLength,t.abscissa=this.abscissa,t.isPathEnd=this.isPathEnd,t.isPartEnd=this.isPartEnd}}class o extends e{constructor(t=0,e=!1){super(t,e),this._tolerance=s,this._currentPosition=new a}updateTolerance(t){this._tolerance=s*t}init(t,e,s=!0){return s?(this._patternLength=e.length(),this._partExtPtGap=e.extPtGap,this._partCtrlPtGap=e.ctrlPtGap):(this._patternLength=0,this._partExtPtGap=0,this._partCtrlPtGap=0),this._currentPosition.reset(),this._partSegCount=0,this._pathCursor=t,this._seg=-1,this._setPosAtNextPart()}curPositionIsValid(){return this._currentPosition.isValid()}nextPosition(t,e=r.FAIL){const s=new a;return!!this._nextPosition(t,s,null,e)&&(s.copyTo(this._currentPosition),!0)}curPointAndAngle(t){t.pt=this._getPoint(this._currentPosition);const[e,s]=this._getAngleCS(this._currentPosition);t.ca=e,t.sa=s}nextPointAndAngle(t,e,s=r.FAIL){const n=new a;if(!this._nextPosition(t,n,null,s))return!1;n.copyTo(this._currentPosition),e.pt=this._getPoint(n);const[i,h]=this._getAngleCS(n);return e.ca=i,e.sa=h,!0}nextCurve(e){if(0===e)return null;const s=t.createEmptyOptimizedCIM(\"esriGeometryPolyline\");s.startPath(),s.nextPath();const n=new a;return this._nextPosition(e,n,s,r.END)?(n.copyTo(this._currentPosition),s):null}isPathEnd(){return this._currentPosition.isPathEnd}getPathEnd(){return this._currentPosition.segment[1]}getPt(t){return this._pathCursor.seekInPath(t),[this._pathCursor.x,this._pathCursor.y]}getSeg(t){return[this.getPt(t),this.getPt(t+1)]}_nextPosition(t,e,s,n){if(this._currentPosition.isPathEnd)return!1;let i=this._currentPosition.abscissa;for(this._currentPosition.segmentLength>0&&(i/=this._currentPosition.segmentLength),this._currentPosition.copyTo(e);e.abscissa+t*this._partLengthRatio>e.segmentLength+this._tolerance;){if(s){if(0===s.pathSize)if(0===i){const t=e.segment[0];s.pushXY(t[0],t[1])}else s.pushPoint(this.getSegCoord2D(e.segment,i));const t=e.segment[1];s.pushXY(t[0],t[1])}if(i=0,t-=(e.segmentLength-e.abscissa)/this._partLengthRatio,this._partSegCount)e.segment=this._nextSegment(),e.segmentLength=this.getSegLength(e.segment),e.abscissa=0,this._partSegCount--;else{if(!this._setPosAtNextPart())return n!==r.FAIL&&(e.segmentLength=this.getSegLength(e.segment),e.isPartEnd=!0,n===r.END?(e.abscissa=e.segmentLength,e.isPathEnd=!0):e.abscissa=e.segmentLength+t,!0);this._currentPosition.copyTo(e)}}if(e.abscissa+=t*this._partLengthRatio,s){0===s.pathSize&&(0===i?s.pushPoint(e.segment[0]):s.pushPoint(this.getSegCoord2D(e.segment,i)));const t=e.abscissa/e.segmentLength;1===t?s.pushPoint(e.segment[1]):s.pushPoint(this.getSegCoord2D(e.segment,t))}return this._partSegCount||Math.abs(e.abscissa-e.segmentLength)<this._tolerance&&(e.isPathEnd=this._partIsLast,e.isPartEnd=!0),!0}_getPoint(t){const e=t.segmentLength<=0?0:t.abscissa/t.segmentLength;return this.getSegCoord2D(this._currentPosition.segment,e)}_getAngleCS(t){const e=t.segmentLength<=0?0:t.abscissa/t.segmentLength;return this.getSegAngleCS(this._currentPosition.segment,e)}_setPosAtNextPart(){for(;this._partSegCount;)this._hasNextSegment()&&this._nextSegment(),this._partSegCount--;if(!this._hasNextSegment())return!1;for(this._partLength=0,this._partIsLast=!0,this._partSegCount=0;this._hasNextSegment();)if(this._partLength+=this.getSegLength(this._nextSegment()),this._partSegCount++,this._pathCursor.getControlPointAt(this._getEndPointIndex())){this._partIsLast=!this._hasNextSegment();break}let t=this._partSegCount;for(;t;)this._previousSegment(),--t;this._currentPosition.segment=this._nextSegment(),this._currentPosition.segmentLength=this.getSegLength(this._currentPosition.segment),this._currentPosition.abscissa=0,this._currentPosition.isPathEnd=this._currentPosition.isPartEnd=!1,--this._partSegCount;const e=this._getStartPointIndex();this._ctrlPtBegin=this._pathCursor.getControlPointAt(e);let s=e+this._partSegCount+1;if(s>=this._pathCursor.pathSize&&(s=0),this._ctrlPtEnd=this._pathCursor.getControlPointAt(s),this._patternLength>0){const t=this._ctrlPtBegin?this._partCtrlPtGap:this._partExtPtGap,e=this._ctrlPtEnd?this._partCtrlPtGap:this._partExtPtGap;let s=Math.round((this._partLength-(t+e))/this._patternLength);s<=0&&(s=t+e>0?0:1),this._partLengthRatio=this._partLength/(t+e+s*this._patternLength),this._partLengthRatio<.01&&(this._partLengthRatio=1)}else this._partLengthRatio=1;return!0}_hasNextSegment(){return this._seg<this._pathCursor.pathSize-2}_previousSegment(){return this.getSeg(--this._seg)}_nextSegment(){return this.getSeg(++this._seg)}_getStartPointIndex(){return this._seg}_getEndPointIndex(){return this._seg+1}}export{i as DashPattern,r as EndType,o as GeometryWalker,h as Pos};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}