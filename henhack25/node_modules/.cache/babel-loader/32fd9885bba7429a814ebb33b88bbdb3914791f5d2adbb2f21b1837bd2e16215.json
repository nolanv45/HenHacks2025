{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../../chunks/tslib.es6.js\";\nimport t from \"../../../../core/Accessor.js\";\nimport i from \"../../../../core/Logger.js\";\nimport { assertIsSome as s } from \"../../../../core/maybe.js\";\nimport { debounce as r, isAbortError as a } from \"../../../../core/promiseUtils.js\";\nimport { property as o } from \"../../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../../core/has.js\";\nimport \"../../../../core/RandomLCG.js\";\nimport { subclass as l } from \"../../../../core/accessorSupport/decorators/subclass.js\";\nimport { UpdatingHandles as n } from \"../../../../core/support/UpdatingHandles.js\";\nimport h from \"../../../../geometry/Extent.js\";\nimport c from \"../../../../geometry/Point.js\";\nimport u from \"../../../../layers/support/PixelBlock.js\";\nimport p from \"../../../../layers/support/TileInfo.js\";\nimport { update as d, unregister as y, getRasterId as m, register as g } from \"../../../../layers/support/rasterDatasets/RawBlockCache.js\";\nimport { getWorldWidth as _, computeProjectedScales as f } from \"../../../../layers/support/rasterFunctions/rasterProjectionHelper.js\";\nimport b from \"../../tiling/TileInfoView.js\";\nimport \"../../tiling/TileKey.js\";\nimport w from \"../../tiling/TileQueue.js\";\nimport I from \"../../tiling/TileStrategy.js\";\nimport { tileSize as P } from \"../../engine/webgl/definitions.js\";\nimport { TaskPriority as R } from \"../../../support/Scheduler.js\";\nimport { getWebGLCapabilities as C } from \"../../../webgl/capabilities.js\";\nconst S = [0, 0];\nlet v = class extends t {\n  constructor() {\n    var _this;\n    super(...arguments), _this = this, this._updatingHandles = new n(), this._emptyTilePixelBlock = null, this._tileStrategy = null, this._tileInfoView = null, this._fetchQueue = null, this._blockCacheRegistryUrl = null, this._blockCacheRegistryId = null, this._srcResolutions = [], this.previousLOD = null, this._needBlockCacheUpdate = !1, this._globalSymbolizerParams = null, this._symbolizerParams = null, this._abortController = null, this._isCustomTilingScheme = !1, this._maxIndexedColormapSize = 0, this._rasterFunctionState = \"na\", this._globalUpdateRequested = !1, this.attached = !1, this.timeExtent = null, this.redrawOrRefetch = r(async function () {\n      let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      const t = _this._rasterFunctionState;\n      if (e.reprocess && (await _this._updatingHandles.addPromise(_this.layer.updateRasterFunction()), _this.updateRasterFunctionParameters()), !_this.previousLOD || _this.layerView.suspended) return;\n      const i = _this._rasterFunctionState,\n        {\n          type: s\n        } = _this;\n      return e.refetch || \"raster\" !== s && !!e.reprocess || \"cpu\" === i || \"cpu\" === t ? _this._updatingHandles.addPromise(_this.doRefresh()) : _this._updatingHandles.addPromise(_this._redrawImage(e.signal));\n    });\n  }\n  destroy() {\n    this._updatingHandles.destroy();\n  }\n  get useWebGLForProcessing() {\n    return this._get(\"useWebGLForProcessing\") ?? !0;\n  }\n  set useWebGLForProcessing(e) {\n    this._set(\"useWebGLForProcessing\", e);\n  }\n  get useProgressiveUpdate() {\n    return this._get(\"useProgressiveUpdate\") ?? !0;\n  }\n  set useProgressiveUpdate(e) {\n    if (this._tileStrategy && this.useProgressiveUpdate !== e) {\n      this._tileStrategy.destroy(), this.container.removeAllChildren();\n      const t = this._getCacheSize(e);\n      this._tileStrategy = new I({\n        cachePolicy: \"purge\",\n        acquireTile: e => this.acquireTile(e),\n        releaseTile: e => this.releaseTile(e),\n        cacheSize: t,\n        tileInfoView: this._tileInfoView\n      }), this._set(\"useProgressiveUpdate\", e), this.layerView.requestUpdate();\n    }\n  }\n  update(e) {\n    this._fetchQueue.pause(), this._fetchQueue.state = e.state, this._tileStrategy.update(e), this._fetchQueue.resume();\n    const {\n        extent: t,\n        resolution: i,\n        scale: s\n      } = e.state,\n      r = this._tileInfoView.getClosestInfoForScale(s);\n    if (this.layer.raster) {\n      if (!this.useProgressiveUpdate || this._needBlockCacheUpdate) {\n        const e = this._srcResolutions[r.level],\n          s = \"toJSON\" in t ? t : h.fromJSON(t);\n        d(this._blockCacheRegistryUrl, this._blockCacheRegistryId, s, i, e, this.layer.raster.ioConfig.sampling);\n      }\n      this._needBlockCacheUpdate = !1, this.previousLOD?.level !== r.level && (this.previousLOD = r, null == this._symbolizerParams || this.layerView.hasTilingEffects || this._updateSymbolizerParams(), this._tileStrategy.updateCacheSize(0));\n    }\n  }\n  moveEnd() {\n    !this.layerView.hasTilingEffects && this.useProgressiveUpdate || (this._abortController && this._abortController.abort(), this._abortController = new AbortController(), 0 === this._fetchQueue.length && this._redrawImage(this._abortController.signal).then(() => {\n      this._globalUpdateRequested = !1, this.layerView.requestUpdate();\n    }));\n    const e = this._getCacheSize(this.useProgressiveUpdate);\n    this._tileStrategy.updateCacheSize(e), this.layerView.requestUpdate();\n  }\n  get updating() {\n    return this._globalUpdateRequested || this._updatingHandles?.updating;\n  }\n  attach() {\n    const e = C();\n    this._maxIndexedColormapSize = 4 * (e.maxTextureSize || 4096), this._initializeTileInfo(), this._tileInfoView = new b(this.layerView.tileInfo, this.layerView.fullExtent);\n    const t = this._computeFetchConcurrency();\n    this._fetchQueue = new w({\n      tileInfoView: this._tileInfoView,\n      concurrency: t,\n      process: (e, t) => this._fetchTile(e, t),\n      priority: R.MAPVIEW_FETCH_QUEUE,\n      scheduler: this.scheduler\n    });\n    const i = this._getCacheSize(this.useProgressiveUpdate);\n    this._tileStrategy = new I({\n      cachePolicy: \"purge\",\n      acquireTile: e => this.acquireTile(e),\n      releaseTile: e => this.releaseTile(e),\n      cacheSize: i,\n      tileInfoView: this._tileInfoView\n    }), this._updateBlockCacheRegistry();\n  }\n  detach() {\n    this._tileStrategy.destroy(), this._fetchQueue.clear(), this.container.removeAllChildren(), this._fetchQueue = this._tileStrategy = this._tileInfoView = null, y(this._blockCacheRegistryUrl, this._blockCacheRegistryId), this._blockCacheRegistryUrl = this._blockCacheRegistryId = null;\n  }\n  acquireTile(e) {\n    const t = this.container.createTile(e);\n    return this._updatingHandles.addPromise(this._enqueueTileFetch(t)), this.layerView.requestUpdate(), this._needBlockCacheUpdate = !0, this._globalUpdateRequested = this.layerView.hasTilingEffects || !this.useProgressiveUpdate, t;\n  }\n  releaseTile(e) {\n    this._fetchQueue.abort(e.key.id), this.container.removeChild(e), e.once(\"detach\", () => {\n      e.destroy(), this.layerView.requestUpdate();\n    }), this.layerView.requestUpdate();\n  }\n  createEmptyTilePixelBlock() {\n    let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    const t = null == e || e.join(\",\") === this._tileInfoView.tileInfo.size.join(\",\");\n    if (t && null != this._emptyTilePixelBlock) return this._emptyTilePixelBlock;\n    e = e || this._tileInfoView.tileInfo.size;\n    const [i, s] = e,\n      r = new u({\n        width: i,\n        height: s,\n        pixels: [new Uint8Array(i * s)],\n        mask: new Uint8Array(i * s),\n        pixelType: \"u8\"\n      });\n    return t && (this._emptyTilePixelBlock = r), r;\n  }\n  _getBandIds() {\n    if (!(\"rasterFunctionChain\" in this.container) || !this.container.rasterFunctionChain) return this.layer.bandIds;\n    const {\n        bandIds: e,\n        raster: t\n      } = this.layer,\n      i = \"rasterFunction\" in t ? t.rasterFunction.rawInputBandIds : null;\n    return e?.length && i?.length && 1 !== t.rasterInfo.bandCount ? e.map(e => i[Math.min(e, i.length - 1)]) : \"rasterFunction\" in t ? i : e;\n  }\n  updateRasterFunctionParameters() {}\n  _fetchTile(e, t) {\n    const i = this._getFetchOptions(e.level, t.signal);\n    return this.fetchTile(e, i);\n  }\n  _getFetchOptions(e, t) {\n    const i = this.canUseWebGLForProcessing(),\n      {\n        layerView: s\n      } = this,\n      {\n        tileInfo: r\n      } = s,\n      a = !r.isWrappable && null != _(s.view.spatialReference),\n      o = i && this.layer.raster.hasUniqueSourceStorageInfo;\n    return {\n      allowPartialFill: !0,\n      datumTransformation: s.datumTransformation,\n      interpolation: i ? \"nearest\" : this.layer.interpolation,\n      registryId: this._blockCacheRegistryId,\n      requestRawData: o,\n      skipRasterFunction: \"raster\" === this.type && null != this.container.rasterFunctionChain,\n      signal: t,\n      srcResolution: this._srcResolutions[e],\n      timeExtent: s.timeExtent,\n      tileInfo: r,\n      disableWrapAround: a\n    };\n  }\n  _getCacheSize(e) {\n    return e ? 40 : 0;\n  }\n  _initializeTileInfo() {\n    const {\n        layerView: e\n      } = this,\n      t = e.view.spatialReference;\n    if (this._canUseLayerLODs()) {\n      const {\n          origin: i,\n          lods: s\n        } = this.layer.tileInfo,\n        r = s.map(_ref => {\n          let {\n            scale: e\n          } = _ref;\n          return e;\n        }),\n        a = p.create({\n          spatialReference: t,\n          size: P,\n          scales: r,\n          origin: i\n        });\n      return e.set(\"tileInfo\", a), void (this._srcResolutions = s.map(_ref2 => {\n        let {\n          resolution: e\n        } = _ref2;\n        return {\n          x: e,\n          y: e\n        };\n      }));\n    }\n    const {\n        scales: i,\n        srcResolutions: r,\n        isCustomTilingScheme: a\n      } = f(this.layer.serviceRasterInfo, t, {\n        tileSize: P,\n        alignGlobalDatasetWithAGOL: !0,\n        limitToSrcResolution: !1\n      }),\n      o = p.create({\n        spatialReference: t,\n        size: P,\n        scales: i\n      }),\n      l = 0 === o.origin.x;\n    s(e.fullExtent);\n    const {\n      xmin: n,\n      ymax: h\n    } = e.fullExtent;\n    (l || a && o.origin.x > n) && (o.origin = new c({\n      x: n,\n      y: h,\n      spatialReference: t\n    })), this._isCustomTilingScheme = a, e.set(\"tileInfo\", o), this._srcResolutions = r ?? [];\n  }\n  _canUseLayerLODs() {\n    const {\n      layer: e,\n      layerView: t\n    } = this;\n    if (\"Map\" !== e.raster.tileType) return !1;\n    const {\n        lods: i\n      } = e.tileInfo,\n      s = t.view.constraints?.effectiveLODs;\n    return s?.length === i.length && s.every((_ref3, t) => {\n      let {\n        scale: e\n      } = _ref3;\n      return Math.abs(e - i[t].scale) < .001;\n    });\n  }\n  _computeFetchConcurrency() {\n    const {\n        blockBoundary: e\n      } = this.layer.serviceRasterInfo.storageInfo,\n      t = e[e.length - 1];\n    return (t.maxCol - t.minCol + 1) * (t.maxRow - t.minRow + 1) > 64 ? 2 : 10;\n  }\n  async _enqueueTileFetch(e, t) {\n    if (!this._fetchQueue.has(e.key.id)) {\n      try {\n        const t = await this._fetchQueue.push(e.key),\n          r = this._getBandIds();\n        let o = !this.useProgressiveUpdate || this.layerView.hasTilingEffects && !this._globalSymbolizerParams;\n        if (this._globalUpdateRequested && !this.layerView.moving && 0 === this._fetchQueue.length) {\n          o = !1;\n          try {\n            await this._redrawImage(this._abortController?.signal);\n          } catch (s) {\n            a(s) && i.getLogger(this).error(s);\n          }\n          this._globalUpdateRequested = !1;\n        }\n        !this.canUseWebGLForProcessing() && \"rasterVF\" !== this.type || this.layerView.hasTilingEffects || null != this._symbolizerParams || this._updateSymbolizerParams();\n        const l = this._tileInfoView.getTileCoords(S, e.key),\n          n = this._tileInfoView.getTileResolution(e.key);\n        await this.updateTileSource(e, {\n          source: t,\n          symbolizerParams: this._symbolizerParams,\n          globalSymbolizerParams: this._globalSymbolizerParams,\n          suspended: o,\n          bandIds: r,\n          coords: l,\n          resolution: n\n        }), e.once(\"attach\", () => this.layerView.requestUpdate()), this.container.addChild(e);\n      } catch (s) {\n        a(s) || i.getLogger(this).error(s);\n      }\n      this.layerView.requestUpdate();\n    }\n  }\n  async _redrawImage(e) {\n    if (0 === this.container.children.length) return;\n    await this.layer.updateRenderer(), this.layerView.hasTilingEffects ? await this._updateGlobalSymbolizerParams(e) : (this._updateSymbolizerParams(), this._globalSymbolizerParams = null);\n    const t = this.container.children.map(async e => this.updateTileSymbolizerParameters(e, {\n      local: this._symbolizerParams,\n      global: this._globalSymbolizerParams\n    }));\n    await Promise.allSettled(t), this.container.requestRender();\n  }\n  async _updateGlobalSymbolizerParams(e) {\n    const t = this._getFetchOptions(this.previousLOD.level, e),\n      i = await this.layer.fetchPixels(this.layerView.view.extent, this.layerView.view.width, this.layerView.view.height, {\n        ...t,\n        interpolation: \"nearest\",\n        requestRawData: !1,\n        skipRasterFunction: !1\n      });\n    if (!i?.pixelBlock) return;\n    const {\n        resolution: s\n      } = this.previousLOD,\n      r = this._getBandIds(),\n      a = this.layer.symbolizer.generateWebGLParameters({\n        pixelBlock: i.pixelBlock.extractBands(r),\n        isGCS: this.layerView.view.spatialReference.isGeographic,\n        resolution: {\n          x: s,\n          y: s\n        },\n        bandIds: r\n      });\n    !this.canUseWebGLForProcessing() && a && \"stretch\" === a.type && this.layer.renderer && \"raster-stretch\" === this.layer.renderer.type && (a.factor = a.factor.map(e => 255 * e), a.minOutput = Math.round(255 * a.minOutput), a.maxOutput = Math.round(255 * a.maxOutput)), this._globalSymbolizerParams = a;\n  }\n  _updateSymbolizerParams() {\n    const {\n        resolution: e\n      } = this.previousLOD,\n      t = this._getBandIds();\n    this._symbolizerParams = this.layer.symbolizer.generateWebGLParameters({\n      pixelBlock: null,\n      isGCS: this.layerView.view.spatialReference.isGeographic,\n      resolution: {\n        x: e,\n        y: e\n      },\n      bandIds: t\n    });\n  }\n  _updateBlockCacheRegistry() {\n    let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !1;\n    const {\n        layer: t,\n        layerView: i\n      } = this,\n      {\n        raster: s\n      } = t,\n      {\n        multidimensionalDefinition: r\n      } = t.normalizeRasterFetchOptions({\n        multidimensionalDefinition: t.multidimensionalDefinition,\n        timeExtent: i.timeExtent\n      }),\n      a = s.rasterInfo.multidimensionalInfo ? s.getSliceIndex(r) : null,\n      o = m(s.rasterId, a);\n    if (o !== this._blockCacheRegistryUrl) {\n      if (null != this._blockCacheRegistryUrl && y(this._blockCacheRegistryUrl, this._blockCacheRegistryId), this._blockCacheRegistryId = g(o, s.rasterInfo), e) {\n        const {\n            view: e\n          } = i,\n          t = this._tileInfoView.getClosestInfoForScale(e.scale),\n          r = this._srcResolutions[t.level];\n        d(o, this._blockCacheRegistryId, e.extent, e.resolution, r, s.ioConfig.sampling);\n      }\n      this._blockCacheRegistryUrl = o;\n    }\n  }\n  async doRefresh() {\n    if (!this.attached || !this.previousLOD || this.layerView.suspended) return;\n    await this.layer.updateRenderer(), this.layerView.hasTilingEffects || this._updateSymbolizerParams(), this._updateBlockCacheRegistry(!0), this._fetchQueue.reset();\n    const e = [];\n    this._globalUpdateRequested = this.layerView.hasTilingEffects || !this.useProgressiveUpdate, this._tileStrategy.refresh(t => e.push(this._enqueueTileFetch(t))), await this._updatingHandles.addPromise(Promise.allSettled(e));\n  }\n};\ne([o()], v.prototype, \"_globalUpdateRequested\", void 0), e([o()], v.prototype, \"attached\", void 0), e([o()], v.prototype, \"container\", void 0), e([o()], v.prototype, \"layer\", void 0), e([o()], v.prototype, \"layerView\", void 0), e([o()], v.prototype, \"scheduler\", void 0), e([o()], v.prototype, \"type\", void 0), e([o()], v.prototype, \"useWebGLForProcessing\", null), e([o()], v.prototype, \"useProgressiveUpdate\", null), e([o()], v.prototype, \"timeExtent\", void 0), e([o()], v.prototype, \"updating\", null), v = e([l(\"esri.views.2d.layers.imagery.BaseImageryTileSubView2D\")], v);\nexport { v as BaseImageryTileSubView2D };","map":{"version":3,"names":["_","e","t","i","assertIsSome","s","debounce","r","isAbortError","a","property","o","subclass","l","UpdatingHandles","n","h","c","u","p","update","d","unregister","y","getRasterId","m","register","g","getWorldWidth","computeProjectedScales","f","b","w","I","tileSize","P","TaskPriority","R","getWebGLCapabilities","C","S","v","constructor","_this","arguments","this","_updatingHandles","_emptyTilePixelBlock","_tileStrategy","_tileInfoView","_fetchQueue","_blockCacheRegistryUrl","_blockCacheRegistryId","_srcResolutions","previousLOD","_needBlockCacheUpdate","_globalSymbolizerParams","_symbolizerParams","_abortController","_isCustomTilingScheme","_maxIndexedColormapSize","_rasterFunctionState","_globalUpdateRequested","attached","timeExtent","redrawOrRefetch","length","undefined","reprocess","addPromise","layer","updateRasterFunction","updateRasterFunctionParameters","layerView","suspended","type","refetch","doRefresh","_redrawImage","signal","destroy","useWebGLForProcessing","_get","_set","useProgressiveUpdate","container","removeAllChildren","_getCacheSize","cachePolicy","acquireTile","releaseTile","cacheSize","tileInfoView","requestUpdate","pause","state","resume","extent","resolution","scale","getClosestInfoForScale","raster","level","fromJSON","ioConfig","sampling","hasTilingEffects","_updateSymbolizerParams","updateCacheSize","moveEnd","abort","AbortController","then","updating","attach","maxTextureSize","_initializeTileInfo","tileInfo","fullExtent","_computeFetchConcurrency","concurrency","process","_fetchTile","priority","MAPVIEW_FETCH_QUEUE","scheduler","_updateBlockCacheRegistry","detach","clear","createTile","_enqueueTileFetch","key","id","removeChild","once","createEmptyTilePixelBlock","join","size","width","height","pixels","Uint8Array","mask","pixelType","_getBandIds","rasterFunctionChain","bandIds","rasterFunction","rawInputBandIds","rasterInfo","bandCount","map","Math","min","_getFetchOptions","fetchTile","canUseWebGLForProcessing","isWrappable","view","spatialReference","hasUniqueSourceStorageInfo","allowPartialFill","datumTransformation","interpolation","registryId","requestRawData","skipRasterFunction","srcResolution","disableWrapAround","_canUseLayerLODs","origin","lods","_ref","create","scales","set","_ref2","x","srcResolutions","isCustomTilingScheme","serviceRasterInfo","alignGlobalDatasetWithAGOL","limitToSrcResolution","xmin","ymax","tileType","constraints","effectiveLODs","every","_ref3","abs","blockBoundary","storageInfo","maxCol","minCol","maxRow","minRow","has","push","moving","getLogger","error","getTileCoords","getTileResolution","updateTileSource","source","symbolizerParams","globalSymbolizerParams","coords","addChild","children","updateRenderer","_updateGlobalSymbolizerParams","updateTileSymbolizerParameters","local","global","Promise","allSettled","requestRender","fetchPixels","pixelBlock","symbolizer","generateWebGLParameters","extractBands","isGCS","isGeographic","renderer","factor","minOutput","round","maxOutput","multidimensionalDefinition","normalizeRasterFetchOptions","multidimensionalInfo","getSliceIndex","rasterId","reset","refresh","prototype","BaseImageryTileSubView2D"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/2d/layers/imagery/BaseImageryTileSubView2D.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../../chunks/tslib.es6.js\";import t from\"../../../../core/Accessor.js\";import i from\"../../../../core/Logger.js\";import{assertIsSome as s}from\"../../../../core/maybe.js\";import{debounce as r,isAbortError as a}from\"../../../../core/promiseUtils.js\";import{property as o}from\"../../../../core/accessorSupport/decorators/property.js\";import\"../../../../core/has.js\";import\"../../../../core/RandomLCG.js\";import{subclass as l}from\"../../../../core/accessorSupport/decorators/subclass.js\";import{UpdatingHandles as n}from\"../../../../core/support/UpdatingHandles.js\";import h from\"../../../../geometry/Extent.js\";import c from\"../../../../geometry/Point.js\";import u from\"../../../../layers/support/PixelBlock.js\";import p from\"../../../../layers/support/TileInfo.js\";import{update as d,unregister as y,getRasterId as m,register as g}from\"../../../../layers/support/rasterDatasets/RawBlockCache.js\";import{getWorldWidth as _,computeProjectedScales as f}from\"../../../../layers/support/rasterFunctions/rasterProjectionHelper.js\";import b from\"../../tiling/TileInfoView.js\";import\"../../tiling/TileKey.js\";import w from\"../../tiling/TileQueue.js\";import I from\"../../tiling/TileStrategy.js\";import{tileSize as P}from\"../../engine/webgl/definitions.js\";import{TaskPriority as R}from\"../../../support/Scheduler.js\";import{getWebGLCapabilities as C}from\"../../../webgl/capabilities.js\";const S=[0,0];let v=class extends t{constructor(){super(...arguments),this._updatingHandles=new n,this._emptyTilePixelBlock=null,this._tileStrategy=null,this._tileInfoView=null,this._fetchQueue=null,this._blockCacheRegistryUrl=null,this._blockCacheRegistryId=null,this._srcResolutions=[],this.previousLOD=null,this._needBlockCacheUpdate=!1,this._globalSymbolizerParams=null,this._symbolizerParams=null,this._abortController=null,this._isCustomTilingScheme=!1,this._maxIndexedColormapSize=0,this._rasterFunctionState=\"na\",this._globalUpdateRequested=!1,this.attached=!1,this.timeExtent=null,this.redrawOrRefetch=r((async(e={})=>{const t=this._rasterFunctionState;if(e.reprocess&&(await this._updatingHandles.addPromise(this.layer.updateRasterFunction()),this.updateRasterFunctionParameters()),!this.previousLOD||this.layerView.suspended)return;const i=this._rasterFunctionState,{type:s}=this;return e.refetch||\"raster\"!==s&&!!e.reprocess||\"cpu\"===i||\"cpu\"===t?this._updatingHandles.addPromise(this.doRefresh()):this._updatingHandles.addPromise(this._redrawImage(e.signal))}))}destroy(){this._updatingHandles.destroy()}get useWebGLForProcessing(){return this._get(\"useWebGLForProcessing\")??!0}set useWebGLForProcessing(e){this._set(\"useWebGLForProcessing\",e)}get useProgressiveUpdate(){return this._get(\"useProgressiveUpdate\")??!0}set useProgressiveUpdate(e){if(this._tileStrategy&&this.useProgressiveUpdate!==e){this._tileStrategy.destroy(),this.container.removeAllChildren();const t=this._getCacheSize(e);this._tileStrategy=new I({cachePolicy:\"purge\",acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),cacheSize:t,tileInfoView:this._tileInfoView}),this._set(\"useProgressiveUpdate\",e),this.layerView.requestUpdate()}}update(e){this._fetchQueue.pause(),this._fetchQueue.state=e.state,this._tileStrategy.update(e),this._fetchQueue.resume();const{extent:t,resolution:i,scale:s}=e.state,r=this._tileInfoView.getClosestInfoForScale(s);if(this.layer.raster){if(!this.useProgressiveUpdate||this._needBlockCacheUpdate){const e=this._srcResolutions[r.level],s=\"toJSON\"in t?t:h.fromJSON(t);d(this._blockCacheRegistryUrl,this._blockCacheRegistryId,s,i,e,this.layer.raster.ioConfig.sampling)}this._needBlockCacheUpdate=!1,this.previousLOD?.level!==r.level&&(this.previousLOD=r,null==this._symbolizerParams||this.layerView.hasTilingEffects||this._updateSymbolizerParams(),this._tileStrategy.updateCacheSize(0))}}moveEnd(){!this.layerView.hasTilingEffects&&this.useProgressiveUpdate||(this._abortController&&this._abortController.abort(),this._abortController=new AbortController,0===this._fetchQueue.length&&this._redrawImage(this._abortController.signal).then((()=>{this._globalUpdateRequested=!1,this.layerView.requestUpdate()})));const e=this._getCacheSize(this.useProgressiveUpdate);this._tileStrategy.updateCacheSize(e),this.layerView.requestUpdate()}get updating(){return this._globalUpdateRequested||this._updatingHandles?.updating}attach(){const e=C();this._maxIndexedColormapSize=4*(e.maxTextureSize||4096),this._initializeTileInfo(),this._tileInfoView=new b(this.layerView.tileInfo,this.layerView.fullExtent);const t=this._computeFetchConcurrency();this._fetchQueue=new w({tileInfoView:this._tileInfoView,concurrency:t,process:(e,t)=>this._fetchTile(e,t),priority:R.MAPVIEW_FETCH_QUEUE,scheduler:this.scheduler});const i=this._getCacheSize(this.useProgressiveUpdate);this._tileStrategy=new I({cachePolicy:\"purge\",acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),cacheSize:i,tileInfoView:this._tileInfoView}),this._updateBlockCacheRegistry()}detach(){this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null,y(this._blockCacheRegistryUrl,this._blockCacheRegistryId),this._blockCacheRegistryUrl=this._blockCacheRegistryId=null}acquireTile(e){const t=this.container.createTile(e);return this._updatingHandles.addPromise(this._enqueueTileFetch(t)),this.layerView.requestUpdate(),this._needBlockCacheUpdate=!0,this._globalUpdateRequested=this.layerView.hasTilingEffects||!this.useProgressiveUpdate,t}releaseTile(e){this._fetchQueue.abort(e.key.id),this.container.removeChild(e),e.once(\"detach\",(()=>{e.destroy(),this.layerView.requestUpdate()})),this.layerView.requestUpdate()}createEmptyTilePixelBlock(e=null){const t=null==e||e.join(\",\")===this._tileInfoView.tileInfo.size.join(\",\");if(t&&null!=this._emptyTilePixelBlock)return this._emptyTilePixelBlock;e=e||this._tileInfoView.tileInfo.size;const[i,s]=e,r=new u({width:i,height:s,pixels:[new Uint8Array(i*s)],mask:new Uint8Array(i*s),pixelType:\"u8\"});return t&&(this._emptyTilePixelBlock=r),r}_getBandIds(){if(!(\"rasterFunctionChain\"in this.container)||!this.container.rasterFunctionChain)return this.layer.bandIds;const{bandIds:e,raster:t}=this.layer,i=\"rasterFunction\"in t?t.rasterFunction.rawInputBandIds:null;return e?.length&&i?.length&&1!==t.rasterInfo.bandCount?e.map((e=>i[Math.min(e,i.length-1)])):\"rasterFunction\"in t?i:e}updateRasterFunctionParameters(){}_fetchTile(e,t){const i=this._getFetchOptions(e.level,t.signal);return this.fetchTile(e,i)}_getFetchOptions(e,t){const i=this.canUseWebGLForProcessing(),{layerView:s}=this,{tileInfo:r}=s,a=!r.isWrappable&&null!=_(s.view.spatialReference),o=i&&this.layer.raster.hasUniqueSourceStorageInfo;return{allowPartialFill:!0,datumTransformation:s.datumTransformation,interpolation:i?\"nearest\":this.layer.interpolation,registryId:this._blockCacheRegistryId,requestRawData:o,skipRasterFunction:\"raster\"===this.type&&null!=this.container.rasterFunctionChain,signal:t,srcResolution:this._srcResolutions[e],timeExtent:s.timeExtent,tileInfo:r,disableWrapAround:a}}_getCacheSize(e){return e?40:0}_initializeTileInfo(){const{layerView:e}=this,t=e.view.spatialReference;if(this._canUseLayerLODs()){const{origin:i,lods:s}=this.layer.tileInfo,r=s.map((({scale:e})=>e)),a=p.create({spatialReference:t,size:P,scales:r,origin:i});return e.set(\"tileInfo\",a),void(this._srcResolutions=s.map((({resolution:e})=>({x:e,y:e}))))}const{scales:i,srcResolutions:r,isCustomTilingScheme:a}=f(this.layer.serviceRasterInfo,t,{tileSize:P,alignGlobalDatasetWithAGOL:!0,limitToSrcResolution:!1}),o=p.create({spatialReference:t,size:P,scales:i}),l=0===o.origin.x;s(e.fullExtent);const{xmin:n,ymax:h}=e.fullExtent;(l||a&&o.origin.x>n)&&(o.origin=new c({x:n,y:h,spatialReference:t})),this._isCustomTilingScheme=a,e.set(\"tileInfo\",o),this._srcResolutions=r??[]}_canUseLayerLODs(){const{layer:e,layerView:t}=this;if(\"Map\"!==e.raster.tileType)return!1;const{lods:i}=e.tileInfo,s=t.view.constraints?.effectiveLODs;return s?.length===i.length&&s.every((({scale:e},t)=>Math.abs(e-i[t].scale)<.001))}_computeFetchConcurrency(){const{blockBoundary:e}=this.layer.serviceRasterInfo.storageInfo,t=e[e.length-1];return(t.maxCol-t.minCol+1)*(t.maxRow-t.minRow+1)>64?2:10}async _enqueueTileFetch(e,t){if(!this._fetchQueue.has(e.key.id)){try{const t=await this._fetchQueue.push(e.key),r=this._getBandIds();let o=!this.useProgressiveUpdate||this.layerView.hasTilingEffects&&!this._globalSymbolizerParams;if(this._globalUpdateRequested&&!this.layerView.moving&&0===this._fetchQueue.length){o=!1;try{await this._redrawImage(this._abortController?.signal)}catch(s){a(s)&&i.getLogger(this).error(s)}this._globalUpdateRequested=!1}!this.canUseWebGLForProcessing()&&\"rasterVF\"!==this.type||this.layerView.hasTilingEffects||null!=this._symbolizerParams||this._updateSymbolizerParams();const l=this._tileInfoView.getTileCoords(S,e.key),n=this._tileInfoView.getTileResolution(e.key);await this.updateTileSource(e,{source:t,symbolizerParams:this._symbolizerParams,globalSymbolizerParams:this._globalSymbolizerParams,suspended:o,bandIds:r,coords:l,resolution:n}),e.once(\"attach\",(()=>this.layerView.requestUpdate())),this.container.addChild(e)}catch(s){a(s)||i.getLogger(this).error(s)}this.layerView.requestUpdate()}}async _redrawImage(e){if(0===this.container.children.length)return;await this.layer.updateRenderer(),this.layerView.hasTilingEffects?await this._updateGlobalSymbolizerParams(e):(this._updateSymbolizerParams(),this._globalSymbolizerParams=null);const t=this.container.children.map((async e=>this.updateTileSymbolizerParameters(e,{local:this._symbolizerParams,global:this._globalSymbolizerParams})));await Promise.allSettled(t),this.container.requestRender()}async _updateGlobalSymbolizerParams(e){const t=this._getFetchOptions(this.previousLOD.level,e),i=await this.layer.fetchPixels(this.layerView.view.extent,this.layerView.view.width,this.layerView.view.height,{...t,interpolation:\"nearest\",requestRawData:!1,skipRasterFunction:!1});if(!i?.pixelBlock)return;const{resolution:s}=this.previousLOD,r=this._getBandIds(),a=this.layer.symbolizer.generateWebGLParameters({pixelBlock:i.pixelBlock.extractBands(r),isGCS:this.layerView.view.spatialReference.isGeographic,resolution:{x:s,y:s},bandIds:r});!this.canUseWebGLForProcessing()&&a&&\"stretch\"===a.type&&this.layer.renderer&&\"raster-stretch\"===this.layer.renderer.type&&(a.factor=a.factor.map((e=>255*e)),a.minOutput=Math.round(255*a.minOutput),a.maxOutput=Math.round(255*a.maxOutput)),this._globalSymbolizerParams=a}_updateSymbolizerParams(){const{resolution:e}=this.previousLOD,t=this._getBandIds();this._symbolizerParams=this.layer.symbolizer.generateWebGLParameters({pixelBlock:null,isGCS:this.layerView.view.spatialReference.isGeographic,resolution:{x:e,y:e},bandIds:t})}_updateBlockCacheRegistry(e=!1){const{layer:t,layerView:i}=this,{raster:s}=t,{multidimensionalDefinition:r}=t.normalizeRasterFetchOptions({multidimensionalDefinition:t.multidimensionalDefinition,timeExtent:i.timeExtent}),a=s.rasterInfo.multidimensionalInfo?s.getSliceIndex(r):null,o=m(s.rasterId,a);if(o!==this._blockCacheRegistryUrl){if(null!=this._blockCacheRegistryUrl&&y(this._blockCacheRegistryUrl,this._blockCacheRegistryId),this._blockCacheRegistryId=g(o,s.rasterInfo),e){const{view:e}=i,t=this._tileInfoView.getClosestInfoForScale(e.scale),r=this._srcResolutions[t.level];d(o,this._blockCacheRegistryId,e.extent,e.resolution,r,s.ioConfig.sampling)}this._blockCacheRegistryUrl=o}}async doRefresh(){if(!this.attached||!this.previousLOD||this.layerView.suspended)return;await this.layer.updateRenderer(),this.layerView.hasTilingEffects||this._updateSymbolizerParams(),this._updateBlockCacheRegistry(!0),this._fetchQueue.reset();const e=[];this._globalUpdateRequested=this.layerView.hasTilingEffects||!this.useProgressiveUpdate,this._tileStrategy.refresh((t=>e.push(this._enqueueTileFetch(t)))),await this._updatingHandles.addPromise(Promise.allSettled(e))}};e([o()],v.prototype,\"_globalUpdateRequested\",void 0),e([o()],v.prototype,\"attached\",void 0),e([o()],v.prototype,\"container\",void 0),e([o()],v.prototype,\"layer\",void 0),e([o()],v.prototype,\"layerView\",void 0),e([o()],v.prototype,\"scheduler\",void 0),e([o()],v.prototype,\"type\",void 0),e([o()],v.prototype,\"useWebGLForProcessing\",null),e([o()],v.prototype,\"useProgressiveUpdate\",null),e([o()],v.prototype,\"timeExtent\",void 0),e([o()],v.prototype,\"updating\",null),v=e([l(\"esri.views.2d.layers.imagery.BaseImageryTileSubView2D\")],v);export{v as BaseImageryTileSubView2D};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}