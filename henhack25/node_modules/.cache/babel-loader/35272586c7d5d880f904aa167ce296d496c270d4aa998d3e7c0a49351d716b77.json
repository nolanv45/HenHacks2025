{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { set as e } from \"../../../../../core/libs/gl-matrix-2/math/vec2.js\";\nimport { create as l } from \"../../../../../core/libs/gl-matrix-2/factories/vec2f64.js\";\nimport { glsl as i } from \"../shaderModules/glsl.js\";\nimport { Integer2PassUniform as t } from \"../shaderModules/Integer2PassUniform.js\";\nimport { IntegerPassUniform as o } from \"../shaderModules/IntegerPassUniform.js\";\nimport { Texture2DPassUniform as n } from \"../shaderModules/Texture2DPassUniform.js\";\nimport { g as c } from \"../../../../../chunks/HighlightDownsample.glsl.js\";\nfunction s(l) {\n  const {\n    vertex: s\n  } = l;\n  s.uniforms.add(new n(\"coverageTexture\", e => e.coverageTexture), new t(\"highlightRenderCellCount\", l => e(r, l.horizontalCellCount, l.verticalCellCount)), new t(\"highlightTextureResolution\", _ref => {\n    let {\n      highlightTexture: l\n    } = _ref;\n    return e(r, l.descriptor.width, l.descriptor.height);\n  }), new o(\"highlightLevel\", e => e.highlightLevel)).constants.add(\"cellSize\", \"int\", c), l.varyings.add(\"sUV\", \"vec2\"), l.varyings.add(\"vOutlinePossible\", \"float\"), s.code.add(i`const ivec2 cellVertices[4] = ivec2[4](ivec2(0,0), ivec2(1,0), ivec2(0,1), ivec2(1,1));`).main.add(i`int cellIndex = gl_InstanceID;\nint cellX = cellIndex % highlightRenderCellCount[0];\nint cellY = (cellIndex - cellX) / highlightRenderCellCount[0];\nivec2 cellPos = ivec2(cellX, cellY);\nuvec2 covTexel = uvec2(texelFetch(coverageTexture, cellPos, 0).rg * 255.0);\nint channelIndex = (highlightLevel >> 2) & 3;\nuint channelValue = covTexel[channelIndex];\nint highlightIndex = (highlightLevel & 3) << 1;\nbool covered = ((channelValue >> highlightIndex) & 1u) == 1u;\nif (!covered) {\ngl_Position = vec4(0.0);\nreturn;\n}\nvOutlinePossible = (((channelValue >> highlightIndex) & 2u) == 2u) ? 1.0 : 0.0;\nivec2 iPosInCell = cellVertices[gl_VertexID];\nvec2 sPos = vec2(cellPos * cellSize + iPosInCell * (cellSize));\nvec2 vPos = sPos / vec2(highlightTextureResolution);\nsUV = vPos;\ngl_Position = vec4(2.0 * vPos - vec2(1.0), 0.0, 1.0);`);\n}\nconst r = l();\nexport { s as HighlightCellGridScreenSpacePass };","map":{"version":3,"names":["set","e","create","l","glsl","i","Integer2PassUniform","t","IntegerPassUniform","o","Texture2DPassUniform","n","g","c","s","vertex","uniforms","add","coverageTexture","r","horizontalCellCount","verticalCellCount","_ref","highlightTexture","descriptor","width","height","highlightLevel","constants","varyings","code","main","HighlightCellGridScreenSpacePass"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/HighlightCellGridScreenSpacePass.glsl.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{set as e}from\"../../../../../core/libs/gl-matrix-2/math/vec2.js\";import{create as l}from\"../../../../../core/libs/gl-matrix-2/factories/vec2f64.js\";import{glsl as i}from\"../shaderModules/glsl.js\";import{Integer2PassUniform as t}from\"../shaderModules/Integer2PassUniform.js\";import{IntegerPassUniform as o}from\"../shaderModules/IntegerPassUniform.js\";import{Texture2DPassUniform as n}from\"../shaderModules/Texture2DPassUniform.js\";import{g as c}from\"../../../../../chunks/HighlightDownsample.glsl.js\";function s(l){const{vertex:s}=l;s.uniforms.add(new n(\"coverageTexture\",(e=>e.coverageTexture)),new t(\"highlightRenderCellCount\",(l=>e(r,l.horizontalCellCount,l.verticalCellCount))),new t(\"highlightTextureResolution\",(({highlightTexture:l})=>e(r,l.descriptor.width,l.descriptor.height))),new o(\"highlightLevel\",(e=>e.highlightLevel))).constants.add(\"cellSize\",\"int\",c),l.varyings.add(\"sUV\",\"vec2\"),l.varyings.add(\"vOutlinePossible\",\"float\"),s.code.add(i`const ivec2 cellVertices[4] = ivec2[4](ivec2(0,0), ivec2(1,0), ivec2(0,1), ivec2(1,1));`).main.add(i`int cellIndex = gl_InstanceID;\nint cellX = cellIndex % highlightRenderCellCount[0];\nint cellY = (cellIndex - cellX) / highlightRenderCellCount[0];\nivec2 cellPos = ivec2(cellX, cellY);\nuvec2 covTexel = uvec2(texelFetch(coverageTexture, cellPos, 0).rg * 255.0);\nint channelIndex = (highlightLevel >> 2) & 3;\nuint channelValue = covTexel[channelIndex];\nint highlightIndex = (highlightLevel & 3) << 1;\nbool covered = ((channelValue >> highlightIndex) & 1u) == 1u;\nif (!covered) {\ngl_Position = vec4(0.0);\nreturn;\n}\nvOutlinePossible = (((channelValue >> highlightIndex) & 2u) == 2u) ? 1.0 : 0.0;\nivec2 iPosInCell = cellVertices[gl_VertexID];\nvec2 sPos = vec2(cellPos * cellSize + iPosInCell * (cellSize));\nvec2 vPos = sPos / vec2(highlightTextureResolution);\nsUV = vPos;\ngl_Position = vec4(2.0 * vPos - vec2(1.0), 0.0, 1.0);`)}const r=l();export{s as HighlightCellGridScreenSpacePass};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,GAAG,IAAIC,CAAC,QAAK,mDAAmD;AAAC,SAAOC,MAAM,IAAIC,CAAC,QAAK,2DAA2D;AAAC,SAAOC,IAAI,IAAIC,CAAC,QAAK,0BAA0B;AAAC,SAAOC,mBAAmB,IAAIC,CAAC,QAAK,yCAAyC;AAAC,SAAOC,kBAAkB,IAAIC,CAAC,QAAK,wCAAwC;AAAC,SAAOC,oBAAoB,IAAIC,CAAC,QAAK,0CAA0C;AAAC,SAAOC,CAAC,IAAIC,CAAC,QAAK,mDAAmD;AAAC,SAASC,CAACA,CAACX,CAAC,EAAC;EAAC,MAAK;IAACY,MAAM,EAACD;EAAC,CAAC,GAACX,CAAC;EAACW,CAAC,CAACE,QAAQ,CAACC,GAAG,CAAC,IAAIN,CAAC,CAAC,iBAAiB,EAAEV,CAAC,IAAEA,CAAC,CAACiB,eAAgB,CAAC,EAAC,IAAIX,CAAC,CAAC,0BAA0B,EAAEJ,CAAC,IAAEF,CAAC,CAACkB,CAAC,EAAChB,CAAC,CAACiB,mBAAmB,EAACjB,CAAC,CAACkB,iBAAiB,CAAE,CAAC,EAAC,IAAId,CAAC,CAAC,4BAA4B,EAAEe,IAAA;IAAA,IAAC;MAACC,gBAAgB,EAACpB;IAAC,CAAC,GAAAmB,IAAA;IAAA,OAAGrB,CAAC,CAACkB,CAAC,EAAChB,CAAC,CAACqB,UAAU,CAACC,KAAK,EAACtB,CAAC,CAACqB,UAAU,CAACE,MAAM,CAAC;EAAA,CAAC,CAAC,EAAC,IAAIjB,CAAC,CAAC,gBAAgB,EAAER,CAAC,IAAEA,CAAC,CAAC0B,cAAe,CAAC,CAAC,CAACC,SAAS,CAACX,GAAG,CAAC,UAAU,EAAC,KAAK,EAACJ,CAAC,CAAC,EAACV,CAAC,CAAC0B,QAAQ,CAACZ,GAAG,CAAC,KAAK,EAAC,MAAM,CAAC,EAACd,CAAC,CAAC0B,QAAQ,CAACZ,GAAG,CAAC,kBAAkB,EAAC,OAAO,CAAC,EAACH,CAAC,CAACgB,IAAI,CAACb,GAAG,CAACZ,CAAC,yFAAyF,CAAC,CAAC0B,IAAI,CAACd,GAAG,CAACZ,CAAC;AACpiC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,CAAC;AAAA;AAAC,MAAMc,CAAC,GAAChB,CAAC,CAAC,CAAC;AAAC,SAAOW,CAAC,IAAIkB,gCAAgC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}