{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport e from \"../../../../core/Error.js\";\nimport { handlesGroup as t } from \"../../../../core/handleUtils.js\";\nimport has from \"../../../../core/has.js\";\nimport { nextTick as s } from \"../../../../core/nextTick.js\";\nimport { throwIfNotAbortError as i, createResolver as r, ignoreAbortErrors as o } from \"../../../../core/promiseUtils.js\";\nimport n from \"../../../../core/RandomLCG.js\";\nimport { watch as u } from \"../../../../core/reactiveUtils.js\";\nimport { pt2px as a } from \"../../../../core/screenUtils.js\";\nimport { ignoreConnectionErrors as d } from \"../../../../core/workers/utils.js\";\nimport c from \"../../../../layers/support/TileInfo.js\";\nimport p from \"../../tiling/TileInfoView.js\";\nimport \"../../tiling/TileKey.js\";\nimport \"../../tiling/TileQueue.js\";\nimport \"../../tiling/TileStrategy.js\";\nimport { tileSize as h } from \"../../engine/webgl/definitions.js\";\nimport { PipelineConnectionHandlers as l } from \"./PipelineConnectionHandlers.js\";\nimport g from \"./Processor.js\";\nimport { FeatureSource as _ } from \"./sources/FeatureSource.js\";\nimport { FeatureTileSubscription as b } from \"./sources/FeatureTileSubscription.js\";\nimport { Tile as f } from \"./support/Tile.js\";\nclass m {\n  constructor(e) {\n    this.inner = e, this.resolver = r();\n  }\n}\nclass y {\n  constructor() {\n    this._aggregateAdapter = {\n      getFeatureObjectIds: e => this._processor.getFeatureObjectIdsForAggregate(e)\n    }, this._subscriptions = new Map(), this._cachedObjectIds = new Set(), this._updateRequested = !1, this._didSourceRefresh = !1, this._updateSubscriptionRequests = [], this._updateHighlightRequests = [];\n  }\n  destroy() {\n    this._subscriptions.clear(), this._processor?.destroy(), this._source?.destroy(), this._handles?.remove(), this._updateOverridesRequest = null, this._tileInfoView = null;\n  }\n  onAttach(e) {\n    has(\"esri-2d-update-debug\") && console.debug(\"Pipeline.onAttach\");\n    const s = this._connection,\n      i = c.fromJSON(e.tileInfoJSON);\n    this._tileInfoView = new p(i), this._source = new _(e.service, this._aggregateAdapter, this._subscriptions, s, this._cachedObjectIds), this._processor = new g(s, this._source), this._handles = t([this._source.store.events.on(\"changed\", () => this._requestUpdate()), this._source.store.events.on(\"refresh\", () => this._requestRefresh()), u(() => this._source.updateTracking.updating, () => {\n      this._requestUpdate(), o(this._connection.layerView.setUpdating({\n        source: this._source.updateTracking.updating,\n        pipeline: !0\n      }));\n    })]);\n  }\n  onDetach() {\n    has(\"esri-2d-update-debug\") && console.debug(\"Pipeline.onDetach\"), this.destroy();\n  }\n  set remoteClient(e) {\n    this._connection = new l(e);\n  }\n  get features() {\n    const t = this._source?.queryEngine;\n    if (!t) throw new e(\"no-queryEngine\", \"No query engine defined\");\n    return t;\n  }\n  get aggregates() {\n    const t = this._processor?.aggregateQueryEngine;\n    if (!t) throw new e(\"no-queryEngine\", \"No aggregate query engine defined\");\n    return t;\n  }\n  get processor() {\n    return this._processor;\n  }\n  get streamMessenger() {\n    return this._source.streamMessenger;\n  }\n  getDisplayFeatures(e) {\n    return this._processor.getDisplayFeatures(e);\n  }\n  getDisplayIds(e) {\n    return this._processor.getDisplayIds(e);\n  }\n  getObjectIdsFromGlobalIds(e) {\n    return this._source.getObjectIdsFromGlobalIds(e);\n  }\n  async updateSchema(e, t) {\n    return has(\"esri-2d-update-debug\") && this._updateSchemaRequest && console.error(\"InternalError: Schema already updating\"), this._updateSchemaRequest = new m({\n      schema: e,\n      version: t\n    }), this._requestUpdate(), this._updateSchemaRequest.resolver.promise;\n  }\n  updateSubscriptions(e) {\n    const t = new m(e);\n    return this._updateSubscriptionRequests.push(t), this._requestUpdate(), t.resolver.promise;\n  }\n  updateHighlight(e) {\n    const t = new m(e);\n    return this._updateHighlightRequests.push(t), this._requestUpdate(), t.resolver.promise;\n  }\n  async addParquetFile(e) {\n    return this._source.addParquetFile(e);\n  }\n  async onOverride(t) {\n    if (null != this._updateOverridesRequest) throw new e(\"InternalError - Already processing an edit\");\n    this._updateOverridesRequest = new m(t);\n    const s = this._updateOverridesRequest.resolver.promise;\n    return this._requestUpdate(), s;\n  }\n  queryStatistics() {\n    return this._source.statistics.toJSON();\n  }\n  async queryVisibleFeatures(e, t) {\n    return this.features.executeQuery(e, t);\n  }\n  async queryHeatmapStatistics(e) {\n    const t = Math.round(a(e.radius));\n    let s = Number.POSITIVE_INFINITY,\n      i = Number.NEGATIVE_INFINITY;\n    const r = \"string\" == typeof e.fieldOffset,\n      o = e.fieldOffset ?? 0,\n      n = Array.from(this._subscriptions.values()),\n      u = this._source.chunks(),\n      d = t ** 2,\n      c = 3 / (Math.PI * d),\n      p = 2 * t,\n      l = Math.ceil(h / p);\n    for (const a of n) {\n      const t = a.tile,\n        n = new Float64Array(l * l);\n      for (const s of u) {\n        const i = s.getTileReader(t);\n        if (!i) continue;\n        const u = i.getCursor();\n        for (; u.next();) {\n          let t = 1;\n          if (null != e.field) {\n            const s = u.readAttribute(e.field);\n            t = r ? -1 * +s : +s + o;\n          }\n          const s = u.readXForDisplay() / p,\n            i = u.readYForDisplay() / p,\n            a = Math.floor(s),\n            h = Math.floor(i);\n          if (a < 0 || h < 0 || a >= l || h >= l) continue;\n          const g = ((.5 + a - s) * p) ** 2 + ((.5 + h - i) * p) ** 2;\n          if (g > d) continue;\n          const _ = t * (c * (1 - g / d) ** 2);\n          n[h + a * l] += _;\n        }\n      }\n      for (let e = 0; e < n.length; e++) s = Math.min(s, n[e]), i = Math.max(i, n[e]);\n    }\n    return {\n      max: i,\n      min: s\n    };\n  }\n  async getSampleFeatures(e) {\n    const t = this._source.chunks();\n    if (t.reduce((e, t) => e + t.size(), 0) <= e.minFeatureCount) {\n      if (!this._source.updateTracking.updating) {\n        const e = [];\n        return this._source.store.forEachUnsafe(t => e.push(t.readLegacyFeatureWorldSpace())), e;\n      }\n      return null;\n    }\n    const s = new Set(),\n      i = [],\n      r = t.map(e => e.reader.getCursor()),\n      o = new n(),\n      u = 3 * e.sampleSize;\n    for (let n = 0; n < u && i.length < e.sampleSize; n++) {\n      const e = r[o.getIntRange(0, t.length - 1)];\n      if (0 === e.getSize()) continue;\n      const n = o.getIntRange(0, e.getSize() - 1);\n      e.setIndex(n);\n      const u = e.getObjectId();\n      s.has(u) || (s.add(u), i.push(e.readLegacyFeatureWorldSpace()));\n    }\n    return i.length >= e.sampleSize ? i : null;\n  }\n  _requestUpdate() {\n    this._updateRequested || (this._updateRequested = !0, s(() => this._scheduleNextUpdate()));\n  }\n  _requestRefresh() {\n    this._didSourceRefresh = !0, this._requestUpdate();\n  }\n  _scheduleNextUpdate() {\n    this._updateRequested && (this._ongoingUpdate || (this._ongoingUpdate = d(this._doUpdate()).finally(() => {\n      this._ongoingUpdate = null, this._scheduleNextUpdate();\n    }), this._updateRequested = !1));\n  }\n  _subscribe(e) {\n    const t = e.tileId;\n    if (this._subscriptions.has(t)) return;\n    has(\"esri-2d-update-debug\") && console.debug(`Tile[${t}] Pipeline.subscribe`);\n    const s = new f(this._tileInfoView, t),\n      i = new b(s, e.version);\n    this._subscriptions.set(t, i), this._source.onSubscribe(i), this._processor.onSubscribe(i);\n  }\n  _unsubscribe(e) {\n    const t = this._subscriptions.get(e);\n    t && (has(\"esri-2d-update-debug\") && console.debug(`Tile[${e}] Pipeline.unsubscribe`), t.abort(), this._source.onUnsubscribe(t), this._processor.onUnsubscribe(t), this._subscriptions.delete(t.key.id));\n  }\n  async _doUpdate() {\n    if (has(\"esri-2d-update-debug\") && console.debug(\"Pipeline._doUpdateStart\"), await this._connection.layerView.setUpdating({\n      source: this._source.updateTracking.updating,\n      pipeline: !0\n    }), this._updateSubscriptionRequests.length) {\n      const e = this._updateSubscriptionRequests;\n      this._updateSubscriptionRequests = [];\n      for (const t of e) this._doUpdateSubscriptions(t.inner), t.resolver.resolve();\n    }\n    if (this._updateHighlightRequests.length) {\n      const e = this._updateHighlightRequests,\n        t = new Set(),\n        s = new Set();\n      for (const i of e) for (const {\n        objectId: e,\n        highlightFlags: r\n      } of i.inner.highlights) r ? (t.add(e), s.delete(e)) : (s.add(e), t.delete(e));\n      this._source.prepareCacheUpdate(t, s);\n    }\n    const e = this._updateSchemaRequest;\n    this._updateSchemaRequest = null;\n    let t = !1;\n    if (null != e) {\n      const {\n        schema: s,\n        version: i\n      } = e.inner;\n      t = await this._doUpdateSchema(s, i);\n    }\n    this._didSourceRefresh && (t = !0, this._didSourceRefresh = !1), t && (this._processor.invalidate(), await this._connection.container.updateRenderState(this._processor.version));\n    const s = this._updateOverridesRequest;\n    if (this._updateOverridesRequest = null, null != s) {\n      has(\"esri-2d-update-debug\") && console.debug(\"Pipeline.applyOverride\", s.inner), null != s.inner.historicMoment && this._source.unsafeSetQueryHistoricMoment(s.inner.historicMoment);\n      const e = await this._source.normalizeOverrides(s.inner);\n      this._source.applyOverride(e), has(\"esri-2d-update-debug\") && console.debug(\"Pipeline.endOverride\", s.inner);\n    }\n    if (await this._source.applyCacheUpdate(), this._updateHighlightRequests.length) {\n      const e = this._updateHighlightRequests;\n      this._updateHighlightRequests = [];\n      for (const t of e) this._processor.updateHighlight(t.inner), t.resolver.resolve();\n    }\n    const r = this._source.cleanup();\n    this._processor.removeChunks(r);\n    try {\n      const e = this._source.takeOverrideUpdate();\n      if (null != e && this._subscriptions.size) {\n        has(\"esri-2d-update-debug\") && console.debug(\"Pipeline.applyOverrideChangesStart\"), await this._connection.container.lockForOverrides();\n        try {\n          await this._processor.applyOverrideUpdate(e);\n        } catch (o) {\n          has(\"esri-2d-update-debug\") && console.debug(\"InternalError\", o);\n        }\n        await this._connection.container.unlockForOverrides(), has(\"esri-2d-update-debug\") && console.debug(\"Pipeline.applyOverrideChangesEnd\");\n      }\n      this._subscriptions.size && (has(\"esri-2d-update-debug\") && console.debug(\"Pipeline.updateChunksStart\"), await this._processor.updateChunks(), has(\"esri-2d-update-debug\") && console.debug(\"Pipeline.updateChunksEnd\"));\n    } catch (o) {\n      i(o);\n    }\n    null != s && s.resolver.resolve(), null != e && e.resolver.resolve(), null == e && t && (await this._connection.container.trySwapRenderState()), this._updateRequested ? (has(\"esri-2d-update-debug\") && console.debug(\"Pipeline._doUpdateEnd [updateRequested=true]\"), await this._connection.layerView.setUpdating({\n      source: this._source.updateTracking.updating,\n      pipeline: !0\n    })) : (has(\"esri-2d-update-debug\") && console.debug(\"Pipeline._doUpdateEnd [updateRequested=false, After flush]\"), await this._connection.layerView.setUpdating({\n      source: this._source.updateTracking.updating,\n      pipeline: this._updateRequested\n    }));\n  }\n  async _doUpdateSchema(e, t) {\n    has(\"esri-2d-update-debug\") && console.debug(`Version[${t}] Pipeline.updateStart`, {\n      schema: e\n    });\n    const s = {\n        tileInfo: this._tileInfoView?.tileInfo\n      },\n      i = await this._source.update(e, t),\n      r = Array.from(this._subscriptions.values()),\n      o = this._processor.update(e, t, s, i, r);\n    return has(\"esri-2d-update-debug\") && console.debug(`Version[${t}] Pipeline.updateEnd`), o;\n  }\n  _doUpdateSubscriptions(e) {\n    has(\"esri-2d-update-debug\") && console.debug(\"Pipeline.updateSubscriptions\", e);\n    for (const t of e.subscribe) this._subscribe(t);\n    for (const t of e.unsubscribe) this._unsubscribe(t);\n  }\n}\nexport { y as default };","map":{"version":3,"names":["e","handlesGroup","t","has","nextTick","s","throwIfNotAbortError","i","createResolver","r","ignoreAbortErrors","o","n","watch","u","pt2px","a","ignoreConnectionErrors","d","c","p","tileSize","h","PipelineConnectionHandlers","l","g","FeatureSource","_","FeatureTileSubscription","b","Tile","f","m","constructor","inner","resolver","y","_aggregateAdapter","getFeatureObjectIds","_processor","getFeatureObjectIdsForAggregate","_subscriptions","Map","_cachedObjectIds","Set","_updateRequested","_didSourceRefresh","_updateSubscriptionRequests","_updateHighlightRequests","destroy","clear","_source","_handles","remove","_updateOverridesRequest","_tileInfoView","onAttach","console","debug","_connection","fromJSON","tileInfoJSON","service","store","events","on","_requestUpdate","_requestRefresh","updateTracking","updating","layerView","setUpdating","source","pipeline","onDetach","remoteClient","features","queryEngine","aggregates","aggregateQueryEngine","processor","streamMessenger","getDisplayFeatures","getDisplayIds","getObjectIdsFromGlobalIds","updateSchema","_updateSchemaRequest","error","schema","version","promise","updateSubscriptions","push","updateHighlight","addParquetFile","onOverride","queryStatistics","statistics","toJSON","queryVisibleFeatures","executeQuery","queryHeatmapStatistics","Math","round","radius","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","fieldOffset","Array","from","values","chunks","PI","ceil","tile","Float64Array","getTileReader","getCursor","next","field","readAttribute","readXForDisplay","readYForDisplay","floor","length","min","max","getSampleFeatures","reduce","size","minFeatureCount","forEachUnsafe","readLegacyFeatureWorldSpace","map","reader","sampleSize","getIntRange","getSize","setIndex","getObjectId","add","_scheduleNextUpdate","_ongoingUpdate","_doUpdate","finally","_subscribe","tileId","set","onSubscribe","_unsubscribe","get","abort","onUnsubscribe","delete","key","id","_doUpdateSubscriptions","resolve","objectId","highlightFlags","highlights","prepareCacheUpdate","_doUpdateSchema","invalidate","container","updateRenderState","historicMoment","unsafeSetQueryHistoricMoment","normalizeOverrides","applyOverride","applyCacheUpdate","cleanup","removeChunks","takeOverrideUpdate","lockForOverrides","applyOverrideUpdate","unlockForOverrides","updateChunks","trySwapRenderState","tileInfo","update","subscribe","unsubscribe","default"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/2d/layers/features/FeaturePipelineWorker.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport e from\"../../../../core/Error.js\";import{handlesGroup as t}from\"../../../../core/handleUtils.js\";import has from\"../../../../core/has.js\";import{nextTick as s}from\"../../../../core/nextTick.js\";import{throwIfNotAbortError as i,createResolver as r,ignoreAbortErrors as o}from\"../../../../core/promiseUtils.js\";import n from\"../../../../core/RandomLCG.js\";import{watch as u}from\"../../../../core/reactiveUtils.js\";import{pt2px as a}from\"../../../../core/screenUtils.js\";import{ignoreConnectionErrors as d}from\"../../../../core/workers/utils.js\";import c from\"../../../../layers/support/TileInfo.js\";import p from\"../../tiling/TileInfoView.js\";import\"../../tiling/TileKey.js\";import\"../../tiling/TileQueue.js\";import\"../../tiling/TileStrategy.js\";import{tileSize as h}from\"../../engine/webgl/definitions.js\";import{PipelineConnectionHandlers as l}from\"./PipelineConnectionHandlers.js\";import g from\"./Processor.js\";import{FeatureSource as _}from\"./sources/FeatureSource.js\";import{FeatureTileSubscription as b}from\"./sources/FeatureTileSubscription.js\";import{Tile as f}from\"./support/Tile.js\";class m{constructor(e){this.inner=e,this.resolver=r()}}class y{constructor(){this._aggregateAdapter={getFeatureObjectIds:e=>this._processor.getFeatureObjectIdsForAggregate(e)},this._subscriptions=new Map,this._cachedObjectIds=new Set,this._updateRequested=!1,this._didSourceRefresh=!1,this._updateSubscriptionRequests=[],this._updateHighlightRequests=[]}destroy(){this._subscriptions.clear(),this._processor?.destroy(),this._source?.destroy(),this._handles?.remove(),this._updateOverridesRequest=null,this._tileInfoView=null}onAttach(e){has(\"esri-2d-update-debug\")&&console.debug(\"Pipeline.onAttach\");const s=this._connection,i=c.fromJSON(e.tileInfoJSON);this._tileInfoView=new p(i),this._source=new _(e.service,this._aggregateAdapter,this._subscriptions,s,this._cachedObjectIds),this._processor=new g(s,this._source),this._handles=t([this._source.store.events.on(\"changed\",(()=>this._requestUpdate())),this._source.store.events.on(\"refresh\",(()=>this._requestRefresh())),u((()=>this._source.updateTracking.updating),(()=>{this._requestUpdate(),o(this._connection.layerView.setUpdating({source:this._source.updateTracking.updating,pipeline:!0}))}))])}onDetach(){has(\"esri-2d-update-debug\")&&console.debug(\"Pipeline.onDetach\"),this.destroy()}set remoteClient(e){this._connection=new l(e)}get features(){const t=this._source?.queryEngine;if(!t)throw new e(\"no-queryEngine\",\"No query engine defined\");return t}get aggregates(){const t=this._processor?.aggregateQueryEngine;if(!t)throw new e(\"no-queryEngine\",\"No aggregate query engine defined\");return t}get processor(){return this._processor}get streamMessenger(){return this._source.streamMessenger}getDisplayFeatures(e){return this._processor.getDisplayFeatures(e)}getDisplayIds(e){return this._processor.getDisplayIds(e)}getObjectIdsFromGlobalIds(e){return this._source.getObjectIdsFromGlobalIds(e)}async updateSchema(e,t){return has(\"esri-2d-update-debug\")&&this._updateSchemaRequest&&console.error(\"InternalError: Schema already updating\"),this._updateSchemaRequest=new m({schema:e,version:t}),this._requestUpdate(),this._updateSchemaRequest.resolver.promise}updateSubscriptions(e){const t=new m(e);return this._updateSubscriptionRequests.push(t),this._requestUpdate(),t.resolver.promise}updateHighlight(e){const t=new m(e);return this._updateHighlightRequests.push(t),this._requestUpdate(),t.resolver.promise}async addParquetFile(e){return this._source.addParquetFile(e)}async onOverride(t){if(null!=this._updateOverridesRequest)throw new e(\"InternalError - Already processing an edit\");this._updateOverridesRequest=new m(t);const s=this._updateOverridesRequest.resolver.promise;return this._requestUpdate(),s}queryStatistics(){return this._source.statistics.toJSON()}async queryVisibleFeatures(e,t){return this.features.executeQuery(e,t)}async queryHeatmapStatistics(e){const t=Math.round(a(e.radius));let s=Number.POSITIVE_INFINITY,i=Number.NEGATIVE_INFINITY;const r=\"string\"==typeof e.fieldOffset,o=e.fieldOffset??0,n=Array.from(this._subscriptions.values()),u=this._source.chunks(),d=t**2,c=3/(Math.PI*d),p=2*t,l=Math.ceil(h/p);for(const a of n){const t=a.tile,n=new Float64Array(l*l);for(const s of u){const i=s.getTileReader(t);if(!i)continue;const u=i.getCursor();for(;u.next();){let t=1;if(null!=e.field){const s=u.readAttribute(e.field);t=r?-1*+s:+s+o}const s=u.readXForDisplay()/p,i=u.readYForDisplay()/p,a=Math.floor(s),h=Math.floor(i);if(a<0||h<0||a>=l||h>=l)continue;const g=((.5+a-s)*p)**2+((.5+h-i)*p)**2;if(g>d)continue;const _=t*(c*(1-g/d)**2);n[h+a*l]+=_}}for(let e=0;e<n.length;e++)s=Math.min(s,n[e]),i=Math.max(i,n[e])}return{max:i,min:s}}async getSampleFeatures(e){const t=this._source.chunks();if(t.reduce(((e,t)=>e+t.size()),0)<=e.minFeatureCount){if(!this._source.updateTracking.updating){const e=[];return this._source.store.forEachUnsafe((t=>e.push(t.readLegacyFeatureWorldSpace()))),e}return null}const s=new Set,i=[],r=t.map((e=>e.reader.getCursor())),o=new n,u=3*e.sampleSize;for(let n=0;n<u&&i.length<e.sampleSize;n++){const e=r[o.getIntRange(0,t.length-1)];if(0===e.getSize())continue;const n=o.getIntRange(0,e.getSize()-1);e.setIndex(n);const u=e.getObjectId();s.has(u)||(s.add(u),i.push(e.readLegacyFeatureWorldSpace()))}return i.length>=e.sampleSize?i:null}_requestUpdate(){this._updateRequested||(this._updateRequested=!0,s((()=>this._scheduleNextUpdate())))}_requestRefresh(){this._didSourceRefresh=!0,this._requestUpdate()}_scheduleNextUpdate(){this._updateRequested&&(this._ongoingUpdate||(this._ongoingUpdate=d(this._doUpdate()).finally((()=>{this._ongoingUpdate=null,this._scheduleNextUpdate()})),this._updateRequested=!1))}_subscribe(e){const t=e.tileId;if(this._subscriptions.has(t))return;has(\"esri-2d-update-debug\")&&console.debug(`Tile[${t}] Pipeline.subscribe`);const s=new f(this._tileInfoView,t),i=new b(s,e.version);this._subscriptions.set(t,i),this._source.onSubscribe(i),this._processor.onSubscribe(i)}_unsubscribe(e){const t=this._subscriptions.get(e);t&&(has(\"esri-2d-update-debug\")&&console.debug(`Tile[${e}] Pipeline.unsubscribe`),t.abort(),this._source.onUnsubscribe(t),this._processor.onUnsubscribe(t),this._subscriptions.delete(t.key.id))}async _doUpdate(){if(has(\"esri-2d-update-debug\")&&console.debug(\"Pipeline._doUpdateStart\"),await this._connection.layerView.setUpdating({source:this._source.updateTracking.updating,pipeline:!0}),this._updateSubscriptionRequests.length){const e=this._updateSubscriptionRequests;this._updateSubscriptionRequests=[];for(const t of e)this._doUpdateSubscriptions(t.inner),t.resolver.resolve()}if(this._updateHighlightRequests.length){const e=this._updateHighlightRequests,t=new Set,s=new Set;for(const i of e)for(const{objectId:e,highlightFlags:r}of i.inner.highlights)r?(t.add(e),s.delete(e)):(s.add(e),t.delete(e));this._source.prepareCacheUpdate(t,s)}const e=this._updateSchemaRequest;this._updateSchemaRequest=null;let t=!1;if(null!=e){const{schema:s,version:i}=e.inner;t=await this._doUpdateSchema(s,i)}this._didSourceRefresh&&(t=!0,this._didSourceRefresh=!1),t&&(this._processor.invalidate(),await this._connection.container.updateRenderState(this._processor.version));const s=this._updateOverridesRequest;if(this._updateOverridesRequest=null,null!=s){has(\"esri-2d-update-debug\")&&console.debug(\"Pipeline.applyOverride\",s.inner),null!=s.inner.historicMoment&&this._source.unsafeSetQueryHistoricMoment(s.inner.historicMoment);const e=await this._source.normalizeOverrides(s.inner);this._source.applyOverride(e),has(\"esri-2d-update-debug\")&&console.debug(\"Pipeline.endOverride\",s.inner)}if(await this._source.applyCacheUpdate(),this._updateHighlightRequests.length){const e=this._updateHighlightRequests;this._updateHighlightRequests=[];for(const t of e)this._processor.updateHighlight(t.inner),t.resolver.resolve()}const r=this._source.cleanup();this._processor.removeChunks(r);try{const e=this._source.takeOverrideUpdate();if(null!=e&&this._subscriptions.size){has(\"esri-2d-update-debug\")&&console.debug(\"Pipeline.applyOverrideChangesStart\"),await this._connection.container.lockForOverrides();try{await this._processor.applyOverrideUpdate(e)}catch(o){has(\"esri-2d-update-debug\")&&console.debug(\"InternalError\",o)}await this._connection.container.unlockForOverrides(),has(\"esri-2d-update-debug\")&&console.debug(\"Pipeline.applyOverrideChangesEnd\")}this._subscriptions.size&&(has(\"esri-2d-update-debug\")&&console.debug(\"Pipeline.updateChunksStart\"),await this._processor.updateChunks(),has(\"esri-2d-update-debug\")&&console.debug(\"Pipeline.updateChunksEnd\"))}catch(o){i(o)}null!=s&&s.resolver.resolve(),null!=e&&e.resolver.resolve(),null==e&&t&&await this._connection.container.trySwapRenderState(),this._updateRequested?(has(\"esri-2d-update-debug\")&&console.debug(\"Pipeline._doUpdateEnd [updateRequested=true]\"),await this._connection.layerView.setUpdating({source:this._source.updateTracking.updating,pipeline:!0})):(has(\"esri-2d-update-debug\")&&console.debug(\"Pipeline._doUpdateEnd [updateRequested=false, After flush]\"),await this._connection.layerView.setUpdating({source:this._source.updateTracking.updating,pipeline:this._updateRequested}))}async _doUpdateSchema(e,t){has(\"esri-2d-update-debug\")&&console.debug(`Version[${t}] Pipeline.updateStart`,{schema:e});const s={tileInfo:this._tileInfoView?.tileInfo},i=await this._source.update(e,t),r=Array.from(this._subscriptions.values()),o=this._processor.update(e,t,s,i,r);return has(\"esri-2d-update-debug\")&&console.debug(`Version[${t}] Pipeline.updateEnd`),o}_doUpdateSubscriptions(e){has(\"esri-2d-update-debug\")&&console.debug(\"Pipeline.updateSubscriptions\",e);for(const t of e.subscribe)this._subscribe(t);for(const t of e.unsubscribe)this._unsubscribe(t)}}export{y as default};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAOA,CAAC,MAAK,2BAA2B;AAAC,SAAOC,YAAY,IAAIC,CAAC,QAAK,iCAAiC;AAAC,OAAOC,GAAG,MAAK,yBAAyB;AAAC,SAAOC,QAAQ,IAAIC,CAAC,QAAK,8BAA8B;AAAC,SAAOC,oBAAoB,IAAIC,CAAC,EAACC,cAAc,IAAIC,CAAC,EAACC,iBAAiB,IAAIC,CAAC,QAAK,kCAAkC;AAAC,OAAOC,CAAC,MAAK,+BAA+B;AAAC,SAAOC,KAAK,IAAIC,CAAC,QAAK,mCAAmC;AAAC,SAAOC,KAAK,IAAIC,CAAC,QAAK,iCAAiC;AAAC,SAAOC,sBAAsB,IAAIC,CAAC,QAAK,mCAAmC;AAAC,OAAOC,CAAC,MAAK,wCAAwC;AAAC,OAAOC,CAAC,MAAK,8BAA8B;AAAC,OAAM,yBAAyB;AAAC,OAAM,2BAA2B;AAAC,OAAM,8BAA8B;AAAC,SAAOC,QAAQ,IAAIC,CAAC,QAAK,mCAAmC;AAAC,SAAOC,0BAA0B,IAAIC,CAAC,QAAK,iCAAiC;AAAC,OAAOC,CAAC,MAAK,gBAAgB;AAAC,SAAOC,aAAa,IAAIC,CAAC,QAAK,4BAA4B;AAAC,SAAOC,uBAAuB,IAAIC,CAAC,QAAK,sCAAsC;AAAC,SAAOC,IAAI,IAAIC,CAAC,QAAK,mBAAmB;AAAC,MAAMC,CAAC;EAACC,WAAWA,CAACjC,CAAC,EAAC;IAAC,IAAI,CAACkC,KAAK,GAAClC,CAAC,EAAC,IAAI,CAACmC,QAAQ,GAAC1B,CAAC,CAAC,CAAC;EAAA;AAAC;AAAC,MAAM2B,CAAC;EAACH,WAAWA,CAAA,EAAE;IAAC,IAAI,CAACI,iBAAiB,GAAC;MAACC,mBAAmB,EAACtC,CAAC,IAAE,IAAI,CAACuC,UAAU,CAACC,+BAA+B,CAACxC,CAAC;IAAC,CAAC,EAAC,IAAI,CAACyC,cAAc,GAAC,IAAIC,GAAG,CAAD,CAAC,EAAC,IAAI,CAACC,gBAAgB,GAAC,IAAIC,GAAG,CAAD,CAAC,EAAC,IAAI,CAACC,gBAAgB,GAAC,CAAC,CAAC,EAAC,IAAI,CAACC,iBAAiB,GAAC,CAAC,CAAC,EAAC,IAAI,CAACC,2BAA2B,GAAC,EAAE,EAAC,IAAI,CAACC,wBAAwB,GAAC,EAAE;EAAA;EAACC,OAAOA,CAAA,EAAE;IAAC,IAAI,CAACR,cAAc,CAACS,KAAK,CAAC,CAAC,EAAC,IAAI,CAACX,UAAU,EAAEU,OAAO,CAAC,CAAC,EAAC,IAAI,CAACE,OAAO,EAAEF,OAAO,CAAC,CAAC,EAAC,IAAI,CAACG,QAAQ,EAAEC,MAAM,CAAC,CAAC,EAAC,IAAI,CAACC,uBAAuB,GAAC,IAAI,EAAC,IAAI,CAACC,aAAa,GAAC,IAAI;EAAA;EAACC,QAAQA,CAACxD,CAAC,EAAC;IAACG,GAAG,CAAC,sBAAsB,CAAC,IAAEsD,OAAO,CAACC,KAAK,CAAC,mBAAmB,CAAC;IAAC,MAAMrD,CAAC,GAAC,IAAI,CAACsD,WAAW;MAACpD,CAAC,GAACY,CAAC,CAACyC,QAAQ,CAAC5D,CAAC,CAAC6D,YAAY,CAAC;IAAC,IAAI,CAACN,aAAa,GAAC,IAAInC,CAAC,CAACb,CAAC,CAAC,EAAC,IAAI,CAAC4C,OAAO,GAAC,IAAIxB,CAAC,CAAC3B,CAAC,CAAC8D,OAAO,EAAC,IAAI,CAACzB,iBAAiB,EAAC,IAAI,CAACI,cAAc,EAACpC,CAAC,EAAC,IAAI,CAACsC,gBAAgB,CAAC,EAAC,IAAI,CAACJ,UAAU,GAAC,IAAId,CAAC,CAACpB,CAAC,EAAC,IAAI,CAAC8C,OAAO,CAAC,EAAC,IAAI,CAACC,QAAQ,GAAClD,CAAC,CAAC,CAAC,IAAI,CAACiD,OAAO,CAACY,KAAK,CAACC,MAAM,CAACC,EAAE,CAAC,SAAS,EAAE,MAAI,IAAI,CAACC,cAAc,CAAC,CAAE,CAAC,EAAC,IAAI,CAACf,OAAO,CAACY,KAAK,CAACC,MAAM,CAACC,EAAE,CAAC,SAAS,EAAE,MAAI,IAAI,CAACE,eAAe,CAAC,CAAE,CAAC,EAACrD,CAAC,CAAE,MAAI,IAAI,CAACqC,OAAO,CAACiB,cAAc,CAACC,QAAQ,EAAG,MAAI;MAAC,IAAI,CAACH,cAAc,CAAC,CAAC,EAACvD,CAAC,CAAC,IAAI,CAACgD,WAAW,CAACW,SAAS,CAACC,WAAW,CAAC;QAACC,MAAM,EAAC,IAAI,CAACrB,OAAO,CAACiB,cAAc,CAACC,QAAQ;QAACI,QAAQ,EAAC,CAAC;MAAC,CAAC,CAAC,CAAC;IAAA,CAAE,CAAC,CAAC,CAAC;EAAA;EAACC,QAAQA,CAAA,EAAE;IAACvE,GAAG,CAAC,sBAAsB,CAAC,IAAEsD,OAAO,CAACC,KAAK,CAAC,mBAAmB,CAAC,EAAC,IAAI,CAACT,OAAO,CAAC,CAAC;EAAA;EAAC,IAAI0B,YAAYA,CAAC3E,CAAC,EAAC;IAAC,IAAI,CAAC2D,WAAW,GAAC,IAAInC,CAAC,CAACxB,CAAC,CAAC;EAAA;EAAC,IAAI4E,QAAQA,CAAA,EAAE;IAAC,MAAM1E,CAAC,GAAC,IAAI,CAACiD,OAAO,EAAE0B,WAAW;IAAC,IAAG,CAAC3E,CAAC,EAAC,MAAM,IAAIF,CAAC,CAAC,gBAAgB,EAAC,yBAAyB,CAAC;IAAC,OAAOE,CAAC;EAAA;EAAC,IAAI4E,UAAUA,CAAA,EAAE;IAAC,MAAM5E,CAAC,GAAC,IAAI,CAACqC,UAAU,EAAEwC,oBAAoB;IAAC,IAAG,CAAC7E,CAAC,EAAC,MAAM,IAAIF,CAAC,CAAC,gBAAgB,EAAC,mCAAmC,CAAC;IAAC,OAAOE,CAAC;EAAA;EAAC,IAAI8E,SAASA,CAAA,EAAE;IAAC,OAAO,IAAI,CAACzC,UAAU;EAAA;EAAC,IAAI0C,eAAeA,CAAA,EAAE;IAAC,OAAO,IAAI,CAAC9B,OAAO,CAAC8B,eAAe;EAAA;EAACC,kBAAkBA,CAAClF,CAAC,EAAC;IAAC,OAAO,IAAI,CAACuC,UAAU,CAAC2C,kBAAkB,CAAClF,CAAC,CAAC;EAAA;EAACmF,aAAaA,CAACnF,CAAC,EAAC;IAAC,OAAO,IAAI,CAACuC,UAAU,CAAC4C,aAAa,CAACnF,CAAC,CAAC;EAAA;EAACoF,yBAAyBA,CAACpF,CAAC,EAAC;IAAC,OAAO,IAAI,CAACmD,OAAO,CAACiC,yBAAyB,CAACpF,CAAC,CAAC;EAAA;EAAC,MAAMqF,YAAYA,CAACrF,CAAC,EAACE,CAAC,EAAC;IAAC,OAAOC,GAAG,CAAC,sBAAsB,CAAC,IAAE,IAAI,CAACmF,oBAAoB,IAAE7B,OAAO,CAAC8B,KAAK,CAAC,wCAAwC,CAAC,EAAC,IAAI,CAACD,oBAAoB,GAAC,IAAItD,CAAC,CAAC;MAACwD,MAAM,EAACxF,CAAC;MAACyF,OAAO,EAACvF;IAAC,CAAC,CAAC,EAAC,IAAI,CAACgE,cAAc,CAAC,CAAC,EAAC,IAAI,CAACoB,oBAAoB,CAACnD,QAAQ,CAACuD,OAAO;EAAA;EAACC,mBAAmBA,CAAC3F,CAAC,EAAC;IAAC,MAAME,CAAC,GAAC,IAAI8B,CAAC,CAAChC,CAAC,CAAC;IAAC,OAAO,IAAI,CAAC+C,2BAA2B,CAAC6C,IAAI,CAAC1F,CAAC,CAAC,EAAC,IAAI,CAACgE,cAAc,CAAC,CAAC,EAAChE,CAAC,CAACiC,QAAQ,CAACuD,OAAO;EAAA;EAACG,eAAeA,CAAC7F,CAAC,EAAC;IAAC,MAAME,CAAC,GAAC,IAAI8B,CAAC,CAAChC,CAAC,CAAC;IAAC,OAAO,IAAI,CAACgD,wBAAwB,CAAC4C,IAAI,CAAC1F,CAAC,CAAC,EAAC,IAAI,CAACgE,cAAc,CAAC,CAAC,EAAChE,CAAC,CAACiC,QAAQ,CAACuD,OAAO;EAAA;EAAC,MAAMI,cAAcA,CAAC9F,CAAC,EAAC;IAAC,OAAO,IAAI,CAACmD,OAAO,CAAC2C,cAAc,CAAC9F,CAAC,CAAC;EAAA;EAAC,MAAM+F,UAAUA,CAAC7F,CAAC,EAAC;IAAC,IAAG,IAAI,IAAE,IAAI,CAACoD,uBAAuB,EAAC,MAAM,IAAItD,CAAC,CAAC,4CAA4C,CAAC;IAAC,IAAI,CAACsD,uBAAuB,GAAC,IAAItB,CAAC,CAAC9B,CAAC,CAAC;IAAC,MAAMG,CAAC,GAAC,IAAI,CAACiD,uBAAuB,CAACnB,QAAQ,CAACuD,OAAO;IAAC,OAAO,IAAI,CAACxB,cAAc,CAAC,CAAC,EAAC7D,CAAC;EAAA;EAAC2F,eAAeA,CAAA,EAAE;IAAC,OAAO,IAAI,CAAC7C,OAAO,CAAC8C,UAAU,CAACC,MAAM,CAAC,CAAC;EAAA;EAAC,MAAMC,oBAAoBA,CAACnG,CAAC,EAACE,CAAC,EAAC;IAAC,OAAO,IAAI,CAAC0E,QAAQ,CAACwB,YAAY,CAACpG,CAAC,EAACE,CAAC,CAAC;EAAA;EAAC,MAAMmG,sBAAsBA,CAACrG,CAAC,EAAC;IAAC,MAAME,CAAC,GAACoG,IAAI,CAACC,KAAK,CAACvF,CAAC,CAAChB,CAAC,CAACwG,MAAM,CAAC,CAAC;IAAC,IAAInG,CAAC,GAACoG,MAAM,CAACC,iBAAiB;MAACnG,CAAC,GAACkG,MAAM,CAACE,iBAAiB;IAAC,MAAMlG,CAAC,GAAC,QAAQ,IAAE,OAAOT,CAAC,CAAC4G,WAAW;MAACjG,CAAC,GAACX,CAAC,CAAC4G,WAAW,IAAE,CAAC;MAAChG,CAAC,GAACiG,KAAK,CAACC,IAAI,CAAC,IAAI,CAACrE,cAAc,CAACsE,MAAM,CAAC,CAAC,CAAC;MAACjG,CAAC,GAAC,IAAI,CAACqC,OAAO,CAAC6D,MAAM,CAAC,CAAC;MAAC9F,CAAC,GAAChB,CAAC,IAAE,CAAC;MAACiB,CAAC,GAAC,CAAC,IAAEmF,IAAI,CAACW,EAAE,GAAC/F,CAAC,CAAC;MAACE,CAAC,GAAC,CAAC,GAAClB,CAAC;MAACsB,CAAC,GAAC8E,IAAI,CAACY,IAAI,CAAC5F,CAAC,GAACF,CAAC,CAAC;IAAC,KAAI,MAAMJ,CAAC,IAAIJ,CAAC,EAAC;MAAC,MAAMV,CAAC,GAACc,CAAC,CAACmG,IAAI;QAACvG,CAAC,GAAC,IAAIwG,YAAY,CAAC5F,CAAC,GAACA,CAAC,CAAC;MAAC,KAAI,MAAMnB,CAAC,IAAIS,CAAC,EAAC;QAAC,MAAMP,CAAC,GAACF,CAAC,CAACgH,aAAa,CAACnH,CAAC,CAAC;QAAC,IAAG,CAACK,CAAC,EAAC;QAAS,MAAMO,CAAC,GAACP,CAAC,CAAC+G,SAAS,CAAC,CAAC;QAAC,OAAKxG,CAAC,CAACyG,IAAI,CAAC,CAAC,GAAE;UAAC,IAAIrH,CAAC,GAAC,CAAC;UAAC,IAAG,IAAI,IAAEF,CAAC,CAACwH,KAAK,EAAC;YAAC,MAAMnH,CAAC,GAACS,CAAC,CAAC2G,aAAa,CAACzH,CAAC,CAACwH,KAAK,CAAC;YAACtH,CAAC,GAACO,CAAC,GAAC,CAAC,CAAC,GAAC,CAACJ,CAAC,GAAC,CAACA,CAAC,GAACM,CAAC;UAAA;UAAC,MAAMN,CAAC,GAACS,CAAC,CAAC4G,eAAe,CAAC,CAAC,GAACtG,CAAC;YAACb,CAAC,GAACO,CAAC,CAAC6G,eAAe,CAAC,CAAC,GAACvG,CAAC;YAACJ,CAAC,GAACsF,IAAI,CAACsB,KAAK,CAACvH,CAAC,CAAC;YAACiB,CAAC,GAACgF,IAAI,CAACsB,KAAK,CAACrH,CAAC,CAAC;UAAC,IAAGS,CAAC,GAAC,CAAC,IAAEM,CAAC,GAAC,CAAC,IAAEN,CAAC,IAAEQ,CAAC,IAAEF,CAAC,IAAEE,CAAC,EAAC;UAAS,MAAMC,CAAC,GAAC,CAAC,CAAC,EAAE,GAACT,CAAC,GAACX,CAAC,IAAEe,CAAC,KAAG,CAAC,GAAC,CAAC,CAAC,EAAE,GAACE,CAAC,GAACf,CAAC,IAAEa,CAAC,KAAG,CAAC;UAAC,IAAGK,CAAC,GAACP,CAAC,EAAC;UAAS,MAAMS,CAAC,GAACzB,CAAC,IAAEiB,CAAC,GAAC,CAAC,CAAC,GAACM,CAAC,GAACP,CAAC,KAAG,CAAC,CAAC;UAACN,CAAC,CAACU,CAAC,GAACN,CAAC,GAACQ,CAAC,CAAC,IAAEG,CAAC;QAAA;MAAC;MAAC,KAAI,IAAI3B,CAAC,GAAC,CAAC,EAACA,CAAC,GAACY,CAAC,CAACiH,MAAM,EAAC7H,CAAC,EAAE,EAACK,CAAC,GAACiG,IAAI,CAACwB,GAAG,CAACzH,CAAC,EAACO,CAAC,CAACZ,CAAC,CAAC,CAAC,EAACO,CAAC,GAAC+F,IAAI,CAACyB,GAAG,CAACxH,CAAC,EAACK,CAAC,CAACZ,CAAC,CAAC,CAAC;IAAA;IAAC,OAAM;MAAC+H,GAAG,EAACxH,CAAC;MAACuH,GAAG,EAACzH;IAAC,CAAC;EAAA;EAAC,MAAM2H,iBAAiBA,CAAChI,CAAC,EAAC;IAAC,MAAME,CAAC,GAAC,IAAI,CAACiD,OAAO,CAAC6D,MAAM,CAAC,CAAC;IAAC,IAAG9G,CAAC,CAAC+H,MAAM,CAAE,CAACjI,CAAC,EAACE,CAAC,KAAGF,CAAC,GAACE,CAAC,CAACgI,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAElI,CAAC,CAACmI,eAAe,EAAC;MAAC,IAAG,CAAC,IAAI,CAAChF,OAAO,CAACiB,cAAc,CAACC,QAAQ,EAAC;QAAC,MAAMrE,CAAC,GAAC,EAAE;QAAC,OAAO,IAAI,CAACmD,OAAO,CAACY,KAAK,CAACqE,aAAa,CAAElI,CAAC,IAAEF,CAAC,CAAC4F,IAAI,CAAC1F,CAAC,CAACmI,2BAA2B,CAAC,CAAC,CAAE,CAAC,EAACrI,CAAC;MAAA;MAAC,OAAO,IAAI;IAAA;IAAC,MAAMK,CAAC,GAAC,IAAIuC,GAAG,CAAD,CAAC;MAACrC,CAAC,GAAC,EAAE;MAACE,CAAC,GAACP,CAAC,CAACoI,GAAG,CAAEtI,CAAC,IAAEA,CAAC,CAACuI,MAAM,CAACjB,SAAS,CAAC,CAAE,CAAC;MAAC3G,CAAC,GAAC,IAAIC,CAAC,CAAD,CAAC;MAACE,CAAC,GAAC,CAAC,GAACd,CAAC,CAACwI,UAAU;IAAC,KAAI,IAAI5H,CAAC,GAAC,CAAC,EAACA,CAAC,GAACE,CAAC,IAAEP,CAAC,CAACsH,MAAM,GAAC7H,CAAC,CAACwI,UAAU,EAAC5H,CAAC,EAAE,EAAC;MAAC,MAAMZ,CAAC,GAACS,CAAC,CAACE,CAAC,CAAC8H,WAAW,CAAC,CAAC,EAACvI,CAAC,CAAC2H,MAAM,GAAC,CAAC,CAAC,CAAC;MAAC,IAAG,CAAC,KAAG7H,CAAC,CAAC0I,OAAO,CAAC,CAAC,EAAC;MAAS,MAAM9H,CAAC,GAACD,CAAC,CAAC8H,WAAW,CAAC,CAAC,EAACzI,CAAC,CAAC0I,OAAO,CAAC,CAAC,GAAC,CAAC,CAAC;MAAC1I,CAAC,CAAC2I,QAAQ,CAAC/H,CAAC,CAAC;MAAC,MAAME,CAAC,GAACd,CAAC,CAAC4I,WAAW,CAAC,CAAC;MAACvI,CAAC,CAACF,GAAG,CAACW,CAAC,CAAC,KAAGT,CAAC,CAACwI,GAAG,CAAC/H,CAAC,CAAC,EAACP,CAAC,CAACqF,IAAI,CAAC5F,CAAC,CAACqI,2BAA2B,CAAC,CAAC,CAAC,CAAC;IAAA;IAAC,OAAO9H,CAAC,CAACsH,MAAM,IAAE7H,CAAC,CAACwI,UAAU,GAACjI,CAAC,GAAC,IAAI;EAAA;EAAC2D,cAAcA,CAAA,EAAE;IAAC,IAAI,CAACrB,gBAAgB,KAAG,IAAI,CAACA,gBAAgB,GAAC,CAAC,CAAC,EAACxC,CAAC,CAAE,MAAI,IAAI,CAACyI,mBAAmB,CAAC,CAAE,CAAC,CAAC;EAAA;EAAC3E,eAAeA,CAAA,EAAE;IAAC,IAAI,CAACrB,iBAAiB,GAAC,CAAC,CAAC,EAAC,IAAI,CAACoB,cAAc,CAAC,CAAC;EAAA;EAAC4E,mBAAmBA,CAAA,EAAE;IAAC,IAAI,CAACjG,gBAAgB,KAAG,IAAI,CAACkG,cAAc,KAAG,IAAI,CAACA,cAAc,GAAC7H,CAAC,CAAC,IAAI,CAAC8H,SAAS,CAAC,CAAC,CAAC,CAACC,OAAO,CAAE,MAAI;MAAC,IAAI,CAACF,cAAc,GAAC,IAAI,EAAC,IAAI,CAACD,mBAAmB,CAAC,CAAC;IAAA,CAAE,CAAC,EAAC,IAAI,CAACjG,gBAAgB,GAAC,CAAC,CAAC,CAAC,CAAC;EAAA;EAACqG,UAAUA,CAAClJ,CAAC,EAAC;IAAC,MAAME,CAAC,GAACF,CAAC,CAACmJ,MAAM;IAAC,IAAG,IAAI,CAAC1G,cAAc,CAACtC,GAAG,CAACD,CAAC,CAAC,EAAC;IAAOC,GAAG,CAAC,sBAAsB,CAAC,IAAEsD,OAAO,CAACC,KAAK,CAAC,QAAQxD,CAAC,sBAAsB,CAAC;IAAC,MAAMG,CAAC,GAAC,IAAI0B,CAAC,CAAC,IAAI,CAACwB,aAAa,EAACrD,CAAC,CAAC;MAACK,CAAC,GAAC,IAAIsB,CAAC,CAACxB,CAAC,EAACL,CAAC,CAACyF,OAAO,CAAC;IAAC,IAAI,CAAChD,cAAc,CAAC2G,GAAG,CAAClJ,CAAC,EAACK,CAAC,CAAC,EAAC,IAAI,CAAC4C,OAAO,CAACkG,WAAW,CAAC9I,CAAC,CAAC,EAAC,IAAI,CAACgC,UAAU,CAAC8G,WAAW,CAAC9I,CAAC,CAAC;EAAA;EAAC+I,YAAYA,CAACtJ,CAAC,EAAC;IAAC,MAAME,CAAC,GAAC,IAAI,CAACuC,cAAc,CAAC8G,GAAG,CAACvJ,CAAC,CAAC;IAACE,CAAC,KAAGC,GAAG,CAAC,sBAAsB,CAAC,IAAEsD,OAAO,CAACC,KAAK,CAAC,QAAQ1D,CAAC,wBAAwB,CAAC,EAACE,CAAC,CAACsJ,KAAK,CAAC,CAAC,EAAC,IAAI,CAACrG,OAAO,CAACsG,aAAa,CAACvJ,CAAC,CAAC,EAAC,IAAI,CAACqC,UAAU,CAACkH,aAAa,CAACvJ,CAAC,CAAC,EAAC,IAAI,CAACuC,cAAc,CAACiH,MAAM,CAACxJ,CAAC,CAACyJ,GAAG,CAACC,EAAE,CAAC,CAAC;EAAA;EAAC,MAAMZ,SAASA,CAAA,EAAE;IAAC,IAAG7I,GAAG,CAAC,sBAAsB,CAAC,IAAEsD,OAAO,CAACC,KAAK,CAAC,yBAAyB,CAAC,EAAC,MAAM,IAAI,CAACC,WAAW,CAACW,SAAS,CAACC,WAAW,CAAC;MAACC,MAAM,EAAC,IAAI,CAACrB,OAAO,CAACiB,cAAc,CAACC,QAAQ;MAACI,QAAQ,EAAC,CAAC;IAAC,CAAC,CAAC,EAAC,IAAI,CAAC1B,2BAA2B,CAAC8E,MAAM,EAAC;MAAC,MAAM7H,CAAC,GAAC,IAAI,CAAC+C,2BAA2B;MAAC,IAAI,CAACA,2BAA2B,GAAC,EAAE;MAAC,KAAI,MAAM7C,CAAC,IAAIF,CAAC,EAAC,IAAI,CAAC6J,sBAAsB,CAAC3J,CAAC,CAACgC,KAAK,CAAC,EAAChC,CAAC,CAACiC,QAAQ,CAAC2H,OAAO,CAAC,CAAC;IAAA;IAAC,IAAG,IAAI,CAAC9G,wBAAwB,CAAC6E,MAAM,EAAC;MAAC,MAAM7H,CAAC,GAAC,IAAI,CAACgD,wBAAwB;QAAC9C,CAAC,GAAC,IAAI0C,GAAG,CAAD,CAAC;QAACvC,CAAC,GAAC,IAAIuC,GAAG,CAAD,CAAC;MAAC,KAAI,MAAMrC,CAAC,IAAIP,CAAC,EAAC,KAAI,MAAK;QAAC+J,QAAQ,EAAC/J,CAAC;QAACgK,cAAc,EAACvJ;MAAC,CAAC,IAAGF,CAAC,CAAC2B,KAAK,CAAC+H,UAAU,EAACxJ,CAAC,IAAEP,CAAC,CAAC2I,GAAG,CAAC7I,CAAC,CAAC,EAACK,CAAC,CAACqJ,MAAM,CAAC1J,CAAC,CAAC,KAAGK,CAAC,CAACwI,GAAG,CAAC7I,CAAC,CAAC,EAACE,CAAC,CAACwJ,MAAM,CAAC1J,CAAC,CAAC,CAAC;MAAC,IAAI,CAACmD,OAAO,CAAC+G,kBAAkB,CAAChK,CAAC,EAACG,CAAC,CAAC;IAAA;IAAC,MAAML,CAAC,GAAC,IAAI,CAACsF,oBAAoB;IAAC,IAAI,CAACA,oBAAoB,GAAC,IAAI;IAAC,IAAIpF,CAAC,GAAC,CAAC,CAAC;IAAC,IAAG,IAAI,IAAEF,CAAC,EAAC;MAAC,MAAK;QAACwF,MAAM,EAACnF,CAAC;QAACoF,OAAO,EAAClF;MAAC,CAAC,GAACP,CAAC,CAACkC,KAAK;MAAChC,CAAC,GAAC,MAAM,IAAI,CAACiK,eAAe,CAAC9J,CAAC,EAACE,CAAC,CAAC;IAAA;IAAC,IAAI,CAACuC,iBAAiB,KAAG5C,CAAC,GAAC,CAAC,CAAC,EAAC,IAAI,CAAC4C,iBAAiB,GAAC,CAAC,CAAC,CAAC,EAAC5C,CAAC,KAAG,IAAI,CAACqC,UAAU,CAAC6H,UAAU,CAAC,CAAC,EAAC,MAAM,IAAI,CAACzG,WAAW,CAAC0G,SAAS,CAACC,iBAAiB,CAAC,IAAI,CAAC/H,UAAU,CAACkD,OAAO,CAAC,CAAC;IAAC,MAAMpF,CAAC,GAAC,IAAI,CAACiD,uBAAuB;IAAC,IAAG,IAAI,CAACA,uBAAuB,GAAC,IAAI,EAAC,IAAI,IAAEjD,CAAC,EAAC;MAACF,GAAG,CAAC,sBAAsB,CAAC,IAAEsD,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAACrD,CAAC,CAAC6B,KAAK,CAAC,EAAC,IAAI,IAAE7B,CAAC,CAAC6B,KAAK,CAACqI,cAAc,IAAE,IAAI,CAACpH,OAAO,CAACqH,4BAA4B,CAACnK,CAAC,CAAC6B,KAAK,CAACqI,cAAc,CAAC;MAAC,MAAMvK,CAAC,GAAC,MAAM,IAAI,CAACmD,OAAO,CAACsH,kBAAkB,CAACpK,CAAC,CAAC6B,KAAK,CAAC;MAAC,IAAI,CAACiB,OAAO,CAACuH,aAAa,CAAC1K,CAAC,CAAC,EAACG,GAAG,CAAC,sBAAsB,CAAC,IAAEsD,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAACrD,CAAC,CAAC6B,KAAK,CAAC;IAAA;IAAC,IAAG,MAAM,IAAI,CAACiB,OAAO,CAACwH,gBAAgB,CAAC,CAAC,EAAC,IAAI,CAAC3H,wBAAwB,CAAC6E,MAAM,EAAC;MAAC,MAAM7H,CAAC,GAAC,IAAI,CAACgD,wBAAwB;MAAC,IAAI,CAACA,wBAAwB,GAAC,EAAE;MAAC,KAAI,MAAM9C,CAAC,IAAIF,CAAC,EAAC,IAAI,CAACuC,UAAU,CAACsD,eAAe,CAAC3F,CAAC,CAACgC,KAAK,CAAC,EAAChC,CAAC,CAACiC,QAAQ,CAAC2H,OAAO,CAAC,CAAC;IAAA;IAAC,MAAMrJ,CAAC,GAAC,IAAI,CAAC0C,OAAO,CAACyH,OAAO,CAAC,CAAC;IAAC,IAAI,CAACrI,UAAU,CAACsI,YAAY,CAACpK,CAAC,CAAC;IAAC,IAAG;MAAC,MAAMT,CAAC,GAAC,IAAI,CAACmD,OAAO,CAAC2H,kBAAkB,CAAC,CAAC;MAAC,IAAG,IAAI,IAAE9K,CAAC,IAAE,IAAI,CAACyC,cAAc,CAACyF,IAAI,EAAC;QAAC/H,GAAG,CAAC,sBAAsB,CAAC,IAAEsD,OAAO,CAACC,KAAK,CAAC,oCAAoC,CAAC,EAAC,MAAM,IAAI,CAACC,WAAW,CAAC0G,SAAS,CAACU,gBAAgB,CAAC,CAAC;QAAC,IAAG;UAAC,MAAM,IAAI,CAACxI,UAAU,CAACyI,mBAAmB,CAAChL,CAAC,CAAC;QAAA,CAAC,QAAMW,CAAC,EAAC;UAACR,GAAG,CAAC,sBAAsB,CAAC,IAAEsD,OAAO,CAACC,KAAK,CAAC,eAAe,EAAC/C,CAAC,CAAC;QAAA;QAAC,MAAM,IAAI,CAACgD,WAAW,CAAC0G,SAAS,CAACY,kBAAkB,CAAC,CAAC,EAAC9K,GAAG,CAAC,sBAAsB,CAAC,IAAEsD,OAAO,CAACC,KAAK,CAAC,kCAAkC,CAAC;MAAA;MAAC,IAAI,CAACjB,cAAc,CAACyF,IAAI,KAAG/H,GAAG,CAAC,sBAAsB,CAAC,IAAEsD,OAAO,CAACC,KAAK,CAAC,4BAA4B,CAAC,EAAC,MAAM,IAAI,CAACnB,UAAU,CAAC2I,YAAY,CAAC,CAAC,EAAC/K,GAAG,CAAC,sBAAsB,CAAC,IAAEsD,OAAO,CAACC,KAAK,CAAC,0BAA0B,CAAC,CAAC;IAAA,CAAC,QAAM/C,CAAC,EAAC;MAACJ,CAAC,CAACI,CAAC,CAAC;IAAA;IAAC,IAAI,IAAEN,CAAC,IAAEA,CAAC,CAAC8B,QAAQ,CAAC2H,OAAO,CAAC,CAAC,EAAC,IAAI,IAAE9J,CAAC,IAAEA,CAAC,CAACmC,QAAQ,CAAC2H,OAAO,CAAC,CAAC,EAAC,IAAI,IAAE9J,CAAC,IAAEE,CAAC,KAAE,MAAM,IAAI,CAACyD,WAAW,CAAC0G,SAAS,CAACc,kBAAkB,CAAC,CAAC,GAAC,IAAI,CAACtI,gBAAgB,IAAE1C,GAAG,CAAC,sBAAsB,CAAC,IAAEsD,OAAO,CAACC,KAAK,CAAC,8CAA8C,CAAC,EAAC,MAAM,IAAI,CAACC,WAAW,CAACW,SAAS,CAACC,WAAW,CAAC;MAACC,MAAM,EAAC,IAAI,CAACrB,OAAO,CAACiB,cAAc,CAACC,QAAQ;MAACI,QAAQ,EAAC,CAAC;IAAC,CAAC,CAAC,KAAGtE,GAAG,CAAC,sBAAsB,CAAC,IAAEsD,OAAO,CAACC,KAAK,CAAC,4DAA4D,CAAC,EAAC,MAAM,IAAI,CAACC,WAAW,CAACW,SAAS,CAACC,WAAW,CAAC;MAACC,MAAM,EAAC,IAAI,CAACrB,OAAO,CAACiB,cAAc,CAACC,QAAQ;MAACI,QAAQ,EAAC,IAAI,CAAC5B;IAAgB,CAAC,CAAC,CAAC;EAAA;EAAC,MAAMsH,eAAeA,CAACnK,CAAC,EAACE,CAAC,EAAC;IAACC,GAAG,CAAC,sBAAsB,CAAC,IAAEsD,OAAO,CAACC,KAAK,CAAC,WAAWxD,CAAC,wBAAwB,EAAC;MAACsF,MAAM,EAACxF;IAAC,CAAC,CAAC;IAAC,MAAMK,CAAC,GAAC;QAAC+K,QAAQ,EAAC,IAAI,CAAC7H,aAAa,EAAE6H;MAAQ,CAAC;MAAC7K,CAAC,GAAC,MAAM,IAAI,CAAC4C,OAAO,CAACkI,MAAM,CAACrL,CAAC,EAACE,CAAC,CAAC;MAACO,CAAC,GAACoG,KAAK,CAACC,IAAI,CAAC,IAAI,CAACrE,cAAc,CAACsE,MAAM,CAAC,CAAC,CAAC;MAACpG,CAAC,GAAC,IAAI,CAAC4B,UAAU,CAAC8I,MAAM,CAACrL,CAAC,EAACE,CAAC,EAACG,CAAC,EAACE,CAAC,EAACE,CAAC,CAAC;IAAC,OAAON,GAAG,CAAC,sBAAsB,CAAC,IAAEsD,OAAO,CAACC,KAAK,CAAC,WAAWxD,CAAC,sBAAsB,CAAC,EAACS,CAAC;EAAA;EAACkJ,sBAAsBA,CAAC7J,CAAC,EAAC;IAACG,GAAG,CAAC,sBAAsB,CAAC,IAAEsD,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAC1D,CAAC,CAAC;IAAC,KAAI,MAAME,CAAC,IAAIF,CAAC,CAACsL,SAAS,EAAC,IAAI,CAACpC,UAAU,CAAChJ,CAAC,CAAC;IAAC,KAAI,MAAMA,CAAC,IAAIF,CAAC,CAACuL,WAAW,EAAC,IAAI,CAACjC,YAAY,CAACpJ,CAAC,CAAC;EAAA;AAAC;AAAC,SAAOkC,CAAC,IAAIoJ,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}