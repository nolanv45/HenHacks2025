{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { ScreenSpacePass as e } from \"../views/3d/webgl-engine/core/shaderLibrary/ScreenSpacePass.glsl.js\";\nimport { glsl as t } from \"../views/3d/webgl-engine/core/shaderModules/glsl.js\";\nimport { Texture2DDrawUniform as i } from \"../views/3d/webgl-engine/core/shaderModules/Texture2DDrawUniform.js\";\nimport { NoParameters as r } from \"../views/webgl/NoParameters.js\";\nimport { ShaderBuilder as l } from \"../views/webgl/ShaderBuilder.js\";\nclass u extends r {}\nfunction o() {\n  const r = new l(),\n    {\n      outputs: u,\n      fragment: o\n    } = r;\n  return r.include(e), o.uniforms.add(new i(\"textureInput\", e => e.input)), o.constants.add(\"outlineWidth\", \"int\", Math.ceil(n)), o.constants.add(\"cellSize\", \"int\", c), u.add(\"fragGrid\", \"vec2\"), o.main.add(t`ivec2 inputTextureSize = textureSize(textureInput, 0);\nivec2 cellBottomLeftCornerInput = ivec2(floor(gl_FragCoord.xy) * vec2(cellSize));\nivec2 coordMid =  cellBottomLeftCornerInput + ivec2(cellSize >> 1);\nuvec2 centreTexel = uvec2( texelFetch(textureInput, coordMid, 0).rg * 255.0) & uvec2(0x55u);\nfloat marginSquare = float(outlineWidth*outlineWidth);\nuvec2 outputValue = centreTexel & uvec2(0x55u);\nfor(int y = -outlineWidth; y <= cellSize + outlineWidth; y+=2) {\nint dy = y < 0 ? -y : y > cellSize ? y-cellSize : 0;\nint xMargin = dy > 0 ? int(ceil(sqrt(marginSquare - float(dy*dy)))) : outlineWidth;\nfor(int x = -xMargin; x <= cellSize + xMargin; x+=2) {\nivec2 coord = cellBottomLeftCornerInput + ivec2(x, y);\nuvec2[4] texels = uvec2[4] (\nuvec2(texelFetch(textureInput,coord+ivec2(0,0),0).rg * 255.0) & uvec2(0x55u),\nuvec2(texelFetch(textureInput,coord+ivec2(1,0),0).rg * 255.0) & uvec2(0x55u),\nuvec2(texelFetch(textureInput,coord+ivec2(0,1),0).rg * 255.0) & uvec2(0x55u),\nuvec2(texelFetch(textureInput,coord+ivec2(1,1),0).rg * 255.0) & uvec2(0x55u)\n);\nif (texels[0] == texels[1] && texels[1] == texels[2] && texels[2] == texels[3] && texels[3] ==  centreTexel) {\ncontinue;\n}\nfor (int i=0; i<4; ++i){\noutputValue |= ((texels[i] ^ centreTexel) << 1);\noutputValue |= texels[i];\n}\n}\n}\nfragGrid = vec2(outputValue) / 255.0;`), r;\n}\nconst c = 32,\n  n = 9,\n  a = .4,\n  s = Object.freeze(Object.defineProperty({\n    __proto__: null,\n    HighlightDownsampleDrawParameters: u,\n    blurSize: a,\n    build: o,\n    gridCellPixelSize: c,\n    outlineSize: n\n  }, Symbol.toStringTag, {\n    value: \"Module\"\n  }));\nexport { u as H, s as a, a as b, o as c, c as g, n as o };","map":{"version":3,"names":["ScreenSpacePass","e","glsl","t","Texture2DDrawUniform","i","NoParameters","r","ShaderBuilder","l","u","o","outputs","fragment","include","uniforms","add","input","constants","Math","ceil","n","c","main","a","s","Object","freeze","defineProperty","__proto__","HighlightDownsampleDrawParameters","blurSize","build","gridCellPixelSize","outlineSize","Symbol","toStringTag","value","H","b","g"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/chunks/HighlightDownsample.glsl.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{ScreenSpacePass as e}from\"../views/3d/webgl-engine/core/shaderLibrary/ScreenSpacePass.glsl.js\";import{glsl as t}from\"../views/3d/webgl-engine/core/shaderModules/glsl.js\";import{Texture2DDrawUniform as i}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DDrawUniform.js\";import{NoParameters as r}from\"../views/webgl/NoParameters.js\";import{ShaderBuilder as l}from\"../views/webgl/ShaderBuilder.js\";class u extends r{}function o(){const r=new l,{outputs:u,fragment:o}=r;return r.include(e),o.uniforms.add(new i(\"textureInput\",(e=>e.input))),o.constants.add(\"outlineWidth\",\"int\",Math.ceil(n)),o.constants.add(\"cellSize\",\"int\",c),u.add(\"fragGrid\",\"vec2\"),o.main.add(t`ivec2 inputTextureSize = textureSize(textureInput, 0);\nivec2 cellBottomLeftCornerInput = ivec2(floor(gl_FragCoord.xy) * vec2(cellSize));\nivec2 coordMid =  cellBottomLeftCornerInput + ivec2(cellSize >> 1);\nuvec2 centreTexel = uvec2( texelFetch(textureInput, coordMid, 0).rg * 255.0) & uvec2(0x55u);\nfloat marginSquare = float(outlineWidth*outlineWidth);\nuvec2 outputValue = centreTexel & uvec2(0x55u);\nfor(int y = -outlineWidth; y <= cellSize + outlineWidth; y+=2) {\nint dy = y < 0 ? -y : y > cellSize ? y-cellSize : 0;\nint xMargin = dy > 0 ? int(ceil(sqrt(marginSquare - float(dy*dy)))) : outlineWidth;\nfor(int x = -xMargin; x <= cellSize + xMargin; x+=2) {\nivec2 coord = cellBottomLeftCornerInput + ivec2(x, y);\nuvec2[4] texels = uvec2[4] (\nuvec2(texelFetch(textureInput,coord+ivec2(0,0),0).rg * 255.0) & uvec2(0x55u),\nuvec2(texelFetch(textureInput,coord+ivec2(1,0),0).rg * 255.0) & uvec2(0x55u),\nuvec2(texelFetch(textureInput,coord+ivec2(0,1),0).rg * 255.0) & uvec2(0x55u),\nuvec2(texelFetch(textureInput,coord+ivec2(1,1),0).rg * 255.0) & uvec2(0x55u)\n);\nif (texels[0] == texels[1] && texels[1] == texels[2] && texels[2] == texels[3] && texels[3] ==  centreTexel) {\ncontinue;\n}\nfor (int i=0; i<4; ++i){\noutputValue |= ((texels[i] ^ centreTexel) << 1);\noutputValue |= texels[i];\n}\n}\n}\nfragGrid = vec2(outputValue) / 255.0;`),r}const c=32,n=9,a=.4,s=Object.freeze(Object.defineProperty({__proto__:null,HighlightDownsampleDrawParameters:u,blurSize:a,build:o,gridCellPixelSize:c,outlineSize:n},Symbol.toStringTag,{value:\"Module\"}));export{u as H,s as a,a as b,o as c,c as g,n as o};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,eAAe,IAAIC,CAAC,QAAK,qEAAqE;AAAC,SAAOC,IAAI,IAAIC,CAAC,QAAK,qDAAqD;AAAC,SAAOC,oBAAoB,IAAIC,CAAC,QAAK,qEAAqE;AAAC,SAAOC,YAAY,IAAIC,CAAC,QAAK,gCAAgC;AAAC,SAAOC,aAAa,IAAIC,CAAC,QAAK,iCAAiC;AAAC,MAAMC,CAAC,SAASH,CAAC;AAAE,SAASI,CAACA,CAAA,EAAE;EAAC,MAAMJ,CAAC,GAAC,IAAIE,CAAC,CAAD,CAAC;IAAC;MAACG,OAAO,EAACF,CAAC;MAACG,QAAQ,EAACF;IAAC,CAAC,GAACJ,CAAC;EAAC,OAAOA,CAAC,CAACO,OAAO,CAACb,CAAC,CAAC,EAACU,CAAC,CAACI,QAAQ,CAACC,GAAG,CAAC,IAAIX,CAAC,CAAC,cAAc,EAAEJ,CAAC,IAAEA,CAAC,CAACgB,KAAM,CAAC,CAAC,EAACN,CAAC,CAACO,SAAS,CAACF,GAAG,CAAC,cAAc,EAAC,KAAK,EAACG,IAAI,CAACC,IAAI,CAACC,CAAC,CAAC,CAAC,EAACV,CAAC,CAACO,SAAS,CAACF,GAAG,CAAC,UAAU,EAAC,KAAK,EAACM,CAAC,CAAC,EAACZ,CAAC,CAACM,GAAG,CAAC,UAAU,EAAC,MAAM,CAAC,EAACL,CAAC,CAACY,IAAI,CAACP,GAAG,CAACb,CAAC;AACpqB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,CAAC,EAACI,CAAC;AAAA;AAAC,MAAMe,CAAC,GAAC,EAAE;EAACD,CAAC,GAAC,CAAC;EAACG,CAAC,GAAC,EAAE;EAACC,CAAC,GAACC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACE,cAAc,CAAC;IAACC,SAAS,EAAC,IAAI;IAACC,iCAAiC,EAACpB,CAAC;IAACqB,QAAQ,EAACP,CAAC;IAACQ,KAAK,EAACrB,CAAC;IAACsB,iBAAiB,EAACX,CAAC;IAACY,WAAW,EAACb;EAAC,CAAC,EAACc,MAAM,CAACC,WAAW,EAAC;IAACC,KAAK,EAAC;EAAQ,CAAC,CAAC,CAAC;AAAC,SAAO3B,CAAC,IAAI4B,CAAC,EAACb,CAAC,IAAID,CAAC,EAACA,CAAC,IAAIe,CAAC,EAAC5B,CAAC,IAAIW,CAAC,EAACA,CAAC,IAAIkB,CAAC,EAACnB,CAAC,IAAIV,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}