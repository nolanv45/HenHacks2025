{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { getProjectionDefines as r } from \"./utils.js\";\nimport { setTextures as t, setUniforms as e, getColormapUniforms as o } from \"../../../../webgl/rasterUtils.js\";\nconst s = {\n  vsPath: \"raster/common\",\n  fsPath: \"raster/lut\",\n  attributes: new Map([[\"a_position\", 0], [\"a_texcoord\", 1]])\n};\nfunction a(t, e, o) {\n  const a = o ? [] : r(e.transformGrid);\n  return {\n    defines: a,\n    program: t.painter.materialManager.getProgram(s, a)\n  };\n}\nfunction n(r, s, a, n, m = !1) {\n  const {\n    names: i,\n    textures: c\n  } = a.getTextures({\n    useProcessedTexture: m\n  });\n  t(r.context, s, i, c), e(s, n, a.commonUniforms), s.setUniformMatrix3fv(\"u_dvsMat3\", a.transforms.displayViewScreenMat3);\n  const {\n      colormap: f,\n      colormapOffset: u\n    } = a.symbolizerParameters,\n    l = o(f, u);\n  e(s, n, l);\n}\nconst m = {\n  createProgram: a,\n  bindTextureAndUniforms: n\n};\nexport { m as default };","map":{"version":3,"names":["getProjectionDefines","r","setTextures","t","setUniforms","e","getColormapUniforms","o","s","vsPath","fsPath","attributes","Map","a","transformGrid","defines","program","painter","materialManager","getProgram","n","m","names","i","textures","c","getTextures","useProcessedTexture","context","commonUniforms","setUniformMatrix3fv","transforms","displayViewScreenMat3","colormap","f","colormapOffset","u","symbolizerParameters","l","createProgram","bindTextureAndUniforms","default"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/2d/engine/imagery/colorizer/lut.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{getProjectionDefines as r}from\"./utils.js\";import{setTextures as t,setUniforms as e,getColormapUniforms as o}from\"../../../../webgl/rasterUtils.js\";const s={vsPath:\"raster/common\",fsPath:\"raster/lut\",attributes:new Map([[\"a_position\",0],[\"a_texcoord\",1]])};function a(t,e,o){const a=o?[]:r(e.transformGrid);return{defines:a,program:t.painter.materialManager.getProgram(s,a)}}function n(r,s,a,n,m=!1){const{names:i,textures:c}=a.getTextures({useProcessedTexture:m});t(r.context,s,i,c),e(s,n,a.commonUniforms),s.setUniformMatrix3fv(\"u_dvsMat3\",a.transforms.displayViewScreenMat3);const{colormap:f,colormapOffset:u}=a.symbolizerParameters,l=o(f,u);e(s,n,l)}const m={createProgram:a,bindTextureAndUniforms:n};export{m as default};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,oBAAoB,IAAIC,CAAC,QAAK,YAAY;AAAC,SAAOC,WAAW,IAAIC,CAAC,EAACC,WAAW,IAAIC,CAAC,EAACC,mBAAmB,IAAIC,CAAC,QAAK,kCAAkC;AAAC,MAAMC,CAAC,GAAC;EAACC,MAAM,EAAC,eAAe;EAACC,MAAM,EAAC,YAAY;EAACC,UAAU,EAAC,IAAIC,GAAG,CAAC,CAAC,CAAC,YAAY,EAAC,CAAC,CAAC,EAAC,CAAC,YAAY,EAAC,CAAC,CAAC,CAAC;AAAC,CAAC;AAAC,SAASC,CAACA,CAACV,CAAC,EAACE,CAAC,EAACE,CAAC,EAAC;EAAC,MAAMM,CAAC,GAACN,CAAC,GAAC,EAAE,GAACN,CAAC,CAACI,CAAC,CAACS,aAAa,CAAC;EAAC,OAAM;IAACC,OAAO,EAACF,CAAC;IAACG,OAAO,EAACb,CAAC,CAACc,OAAO,CAACC,eAAe,CAACC,UAAU,CAACX,CAAC,EAACK,CAAC;EAAC,CAAC;AAAA;AAAC,SAASO,CAACA,CAACnB,CAAC,EAACO,CAAC,EAACK,CAAC,EAACO,CAAC,EAACC,CAAC,GAAC,CAAC,CAAC,EAAC;EAAC,MAAK;IAACC,KAAK,EAACC,CAAC;IAACC,QAAQ,EAACC;EAAC,CAAC,GAACZ,CAAC,CAACa,WAAW,CAAC;IAACC,mBAAmB,EAACN;EAAC,CAAC,CAAC;EAAClB,CAAC,CAACF,CAAC,CAAC2B,OAAO,EAACpB,CAAC,EAACe,CAAC,EAACE,CAAC,CAAC,EAACpB,CAAC,CAACG,CAAC,EAACY,CAAC,EAACP,CAAC,CAACgB,cAAc,CAAC,EAACrB,CAAC,CAACsB,mBAAmB,CAAC,WAAW,EAACjB,CAAC,CAACkB,UAAU,CAACC,qBAAqB,CAAC;EAAC,MAAK;MAACC,QAAQ,EAACC,CAAC;MAACC,cAAc,EAACC;IAAC,CAAC,GAACvB,CAAC,CAACwB,oBAAoB;IAACC,CAAC,GAAC/B,CAAC,CAAC2B,CAAC,EAACE,CAAC,CAAC;EAAC/B,CAAC,CAACG,CAAC,EAACY,CAAC,EAACkB,CAAC,CAAC;AAAA;AAAC,MAAMjB,CAAC,GAAC;EAACkB,aAAa,EAAC1B,CAAC;EAAC2B,sBAAsB,EAACpB;AAAC,CAAC;AAAC,SAAOC,CAAC,IAAIoB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}