{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../chunks/tslib.es6.js\";\nimport t from \"../../core/JSONSupport.js\";\nimport r from \"../../core/Logger.js\";\nimport { property as s } from \"../../core/accessorSupport/decorators/property.js\";\nimport \"../../core/has.js\";\nimport \"../../core/RandomLCG.js\";\nimport { subclass as a } from \"../../core/accessorSupport/decorators/subclass.js\";\nimport o from \"../../layers/support/RasterInfo.js\";\nimport { colorize as n, remapColor as i, lookupPixels as l, createColormapLUT as u, isValidPixelBlock as c } from \"../../layers/support/rasterFunctions/pixelUtils.js\";\nimport { stretch as p, getStretchCutoff as d, createStretchLUT as h, computeGammaValues as m, createHistogramEqualizationLUT as f } from \"../../layers/support/rasterFunctions/stretchUtils.js\";\nimport { hillshade as y, tintHillshade as b, calculateHillshadeParams as g } from \"../../layers/support/rasterFunctions/surfaceUtils.js\";\nimport { convertColorRampToColormap as S, createHsvMap as k } from \"./colorRampUtils.js\";\nimport { isUVRendererSupported as x, isColormapSupportedByWebGL as I, isColormapRendererSupported as R, isShadedReliefRendererSupported as C } from \"./rasterRendererChecks.js\";\nlet L = class extends t {\n  constructor(e) {\n    super(e);\n  }\n  bind() {\n    const {\n      rendererJSON: e\n    } = this;\n    if (!e) return {\n      success: !1\n    };\n    let t;\n    switch (this.lookup = {\n      rendererJSON: {}\n    }, e.type) {\n      case \"uniqueValue\":\n        t = this._updateUVRenderer(e);\n        break;\n      case \"rasterColormap\":\n        t = this._updateColormapRenderer(e);\n        break;\n      case \"rasterStretch\":\n        t = this._updateStretchRenderer(e);\n        break;\n      case \"classBreaks\":\n        t = this._updateClassBreaksRenderer(e);\n        break;\n      case \"rasterShadedRelief\":\n        t = this._updateShadedReliefRenderer(e);\n        break;\n      case \"vectorField\":\n        t = this._updateVectorFieldRenderer();\n        break;\n      case \"flowRenderer\":\n        t = this._updateFlowRenderer();\n    }\n    return t;\n  }\n  symbolize(e) {\n    let t = e?.pixelBlock;\n    if (!v(t)) return t;\n    if (e.simpleStretchParams && \"rasterStretch\" === this.rendererJSON.type) return this.simpleStretch(t, e.simpleStretchParams);\n    try {\n      let r;\n      switch (t.pixels.length > 3 && (t = t.extractBands(e.bandIds ?? [0, 1, 2])), this.rendererJSON.type) {\n        case \"uniqueValue\":\n        case \"rasterColormap\":\n          r = this._symbolizeColormap(t);\n          break;\n        case \"classBreaks\":\n          r = this._symbolizeClassBreaks(t);\n          break;\n        case \"rasterStretch\":\n          r = this._symbolizeStretch(t, e.bandIds);\n          break;\n        case \"rasterShadedRelief\":\n          {\n            const s = e.extent,\n              a = s.spatialReference.isGeographic,\n              o = {\n                x: (s.xmax - s.xmin) / t.width,\n                y: (s.ymax - s.ymin) / t.height\n              };\n            r = this._symbolizeShadedRelief(t, {\n              isGCS: a,\n              resolution: o\n            });\n            break;\n          }\n      }\n      return r;\n    } catch (s) {\n      return r.getLogger(this).error(\"symbolize\", s.message), t;\n    }\n  }\n  simpleStretch(e, t) {\n    if (!v(e)) return e;\n    try {\n      return e.pixels.length > 3 && (e = e.extractBands([0, 1, 2])), p(e, {\n        ...t,\n        isRenderer: !0\n      });\n    } catch (s) {\n      return r.getLogger(this).error(\"symbolize\", s.message), e;\n    }\n  }\n  generateWebGLParameters(e) {\n    if ([\"uniqueValue\", \"rasterColormap\", \"classBreaks\"].includes(this.rendererJSON.type)) {\n      const {\n        indexedColormap: e,\n        offset: t\n      } = this.lookup.colormapLut || {};\n      return {\n        colormap: e,\n        colormapOffset: t,\n        isClassBreaks: \"classBreaks\" === this.rendererJSON.type,\n        type: \"lut\"\n      };\n    }\n    const {\n        pixelBlock: t,\n        isGCS: r,\n        resolution: s,\n        bandIds: a\n      } = e,\n      {\n        rendererJSON: o\n      } = this;\n    return \"rasterStretch\" === o.type ? this._generateStretchWebGLParams(t, o, a) : \"rasterShadedRelief\" === o.type ? this._generateShadedReliefWebGLParams(o, r, s ?? void 0) : \"vectorField\" === o.type ? this._generateVectorFieldWebGLParams(o) : null;\n  }\n  _isLUTChanged(e) {\n    if (!this.lookup || !this.lookup.rendererJSON) return !0;\n    if (\"colorRamp\" in this.rendererJSON) {\n      const t = this.rendererJSON.colorRamp;\n      return e ? JSON.stringify(t) !== JSON.stringify(this.lookup.rendererJSON.colorRamp) : (this.rendererJSON, this.lookup.rendererJSON, JSON.stringify(this.rendererJSON) !== JSON.stringify(this.lookup.rendererJSON));\n    }\n    return JSON.stringify(this.rendererJSON) !== JSON.stringify(this.lookup.rendererJSON);\n  }\n  _symbolizeColormap(e) {\n    if (this._isLUTChanged()) {\n      if (!this.bind().success) return e;\n    }\n    return n(e, this.lookup.colormapLut);\n  }\n  _symbolizeClassBreaks(e) {\n    const {\n      canUseIndexedLUT: t\n    } = this._analyzeClassBreaks(this.rendererJSON);\n    if (this._isLUTChanged()) {\n      if (!this.bind().success) return e;\n    }\n    return t ? n(e, this.lookup.colormapLut) : i(e, this.lookup.remapLut ?? []);\n  }\n  _symbolizeStretch(e, t) {\n    const {\n        rasterInfo: r\n      } = this,\n      {\n        pixelType: s,\n        bandCount: a\n      } = r,\n      o = this.rendererJSON,\n      i = [\"u8\", \"u16\", \"s8\", \"s16\"].includes(s);\n    let u, c;\n    const {\n        dra: m\n      } = o,\n      {\n        gamma: f\n      } = this.lookup;\n    if (\"histogramEqualization\" === o.stretchType) {\n      const s = m ? null : this.lookup?.histogramLut,\n        a = d(o, {\n          rasterInfo: r,\n          pixelBlock: e,\n          bandIds: t,\n          returnHistogramLut: !s\n        }),\n        n = p(e, {\n          ...a,\n          gamma: f,\n          isRenderer: !0\n        });\n      c = l(n, {\n        lut: m ? a.histogramLut : s,\n        offset: 0\n      });\n    } else if (i) {\n      if (m) {\n        const a = d(o, {\n          rasterInfo: r,\n          pixelBlock: e,\n          bandIds: t\n        });\n        u = h({\n          pixelType: s,\n          ...a,\n          gamma: f,\n          rounding: \"floor\"\n        });\n      } else if (this._isLUTChanged()) {\n        if (!this.bind().success) return e;\n        u = this.lookup ? this.lookup.stretchLut : null;\n      } else u = this.lookup ? this.lookup.stretchLut : null;\n      if (!u) return e;\n      a > 1 && null != t && t.length === e?.pixels.length && u?.lut.length === a && (u = {\n        lut: t.map(e => u.lut[e]),\n        offset: u.offset\n      }), c = l(e, u);\n    } else {\n      const s = d(o, {\n        rasterInfo: r,\n        pixelBlock: e,\n        bandIds: t\n      });\n      c = p(e, {\n        ...s,\n        gamma: f,\n        isRenderer: !0\n      });\n    }\n    if (o.colorRamp) {\n      if (this._isLUTChanged(!0)) {\n        if (!this.bind().success) return e;\n      }\n      c = n(c, this.lookup?.colormapLut);\n    }\n    return c;\n  }\n  _symbolizeShadedRelief(e, t) {\n    const r = this.rendererJSON,\n      s = {\n        ...r,\n        ...t\n      },\n      a = y(e, s);\n    if (!r.colorRamp) return a;\n    let o;\n    if (this._isLUTChanged(!0)) {\n      if (!this.bind().success) return a;\n      o = this.lookup ? this.lookup.hsvMap : null;\n    } else o = this.lookup ? this.lookup.hsvMap : null;\n    if (!o) return a;\n    const n = this.rasterInfo.statistics?.[0] ?? {\n      min: 0,\n      max: 8e3\n    };\n    return b(a, e, o, n), a;\n  }\n  _isVectorFieldData() {\n    const {\n      bandCount: e,\n      dataType: t\n    } = this.rasterInfo;\n    return 2 === e && (\"vector-magdir\" === t || \"vector-uv\" === t);\n  }\n  _updateVectorFieldRenderer() {\n    return this._isVectorFieldData() ? {\n      success: !0\n    } : {\n      success: !1,\n      error: `Unsupported data type \"${this.rasterInfo.dataType}\"; VectorFieldRenderer only supports \"vector-magdir\" and \"vector-uv\".`\n    };\n  }\n  _updateFlowRenderer() {\n    return this._isVectorFieldData() ? {\n      success: !0\n    } : {\n      success: !1,\n      error: `Unsupported data type \"${this.rasterInfo.dataType}\"; FlowRenderer only supports \"vector-magdir\" and \"vector-uv\".`\n    };\n  }\n  _updateUVRenderer(e) {\n    const {\n        bandCount: t,\n        attributeTable: r,\n        pixelType: s\n      } = this.rasterInfo,\n      a = e.field1;\n    if (!a) return {\n      success: !1,\n      error: \"Unsupported renderer; missing UniqueValueRenderer.field.\"\n    };\n    const o = e.defaultSymbol,\n      n = 1 === t && [\"u8\", \"s8\"].includes(s);\n    if (!x(this.rasterInfo, a) && !n) return {\n      success: !1,\n      error: \"Unsupported data; UniqueValueRenderer is only supported on single band data with a valid raster attribute table.\"\n    };\n    const i = [];\n    if (null != r) {\n      const t = r.fields.find(e => \"value\" === e.name.toLowerCase());\n      if (!t) return {\n        success: !1,\n        error: \"Unsupported data; the data's raster attribute table does not have a value field.\"\n      };\n      r.features.forEach(r => {\n        const s = e.uniqueValueInfos?.find(e => String(e.value) === String(r.attributes[a])),\n          n = s?.symbol?.color;\n        n ? i.push([r.attributes[t.name]].concat(n)) : o && i.push([r.attributes[t.name]].concat(o.color));\n      });\n    } else {\n      if (\"value\" !== a.toLowerCase()) return {\n        success: !1,\n        error: 'Unsupported renderer; UniqueValueRenderer.field must be \"Value\" when raster attribute table is not available.'\n      };\n      e.uniqueValueInfos?.forEach(e => {\n        const t = e?.symbol?.color;\n        t ? i.push([parseInt(\"\" + e.value, 10)].concat(t)) : o && i.push([parseInt(\"\" + e.value, 10)].concat(o?.color));\n      });\n    }\n    if (0 === i.length) return {\n      success: !1,\n      error: \"Invalid UniqueValueRenderer. Cannot find matching records in the raster attribute table.\"\n    };\n    const l = u({\n      colormap: i\n    });\n    return this.lookup = {\n      rendererJSON: e,\n      colormapLut: l\n    }, this.canRenderInWebGL = I(l?.indexedColormap), {\n      success: !0\n    };\n  }\n  _updateColormapRenderer(e) {\n    if (!R(this.rasterInfo)) return {\n      success: !1,\n      error: \"Unsupported data; the data source does not have a colormap.\"\n    };\n    const t = e.colormapInfos.map(e => [e.value].concat(e.color)).sort((e, t) => e[0] - t[0]);\n    if (!t || 0 === t.length) return {\n      success: !1,\n      error: \"Unsupported renderer; ColormapRenderer must have meaningful colormapInfos.\"\n    };\n    const r = u({\n      colormap: t\n    });\n    return this.lookup = {\n      rendererJSON: e,\n      colormapLut: r\n    }, this.canRenderInWebGL = I(r?.indexedColormap), {\n      success: !0\n    };\n  }\n  _updateShadedReliefRenderer(e) {\n    if (!C(this.rasterInfo)) return {\n      success: !1,\n      error: `Unsupported data type \"${this.rasterInfo.dataType}\"; ShadedReliefRenderer only supports \"elevation\", or single band float/s16 data.`\n    };\n    if (e.colorRamp) {\n      const t = S(e.colorRamp, {\n          interpolateAlpha: !0\n        }),\n        r = u({\n          colormap: t\n        }),\n        s = k(r.indexedColormap);\n      this.lookup = {\n        rendererJSON: e,\n        colormapLut: r,\n        hsvMap: s\n      };\n    } else this.lookup = null;\n    return this.canRenderInWebGL = !0, {\n      success: !0\n    };\n  }\n  _analyzeClassBreaks(e) {\n    const {\n        attributeTable: t,\n        pixelType: r\n      } = this.rasterInfo,\n      s = null != t ? t.fields.find(e => \"value\" === e.name.toLowerCase()) : null,\n      a = null != t ? t.fields.find(t => t.name.toLowerCase() === e.field.toLowerCase()) : null,\n      o = null != s && null !== a;\n    return {\n      canUseIndexedLUT: [\"u8\", \"u16\", \"s8\", \"s16\"].includes(r) || o,\n      tableValueField: s,\n      tableBreakField: a\n    };\n  }\n  _updateClassBreaksRenderer(e) {\n    const {\n        attributeTable: t\n      } = this.rasterInfo,\n      {\n        canUseIndexedLUT: r,\n        tableValueField: s,\n        tableBreakField: a\n      } = this._analyzeClassBreaks(e),\n      o = e.classBreakInfos;\n    if (!o?.length) return {\n      success: !1,\n      error: \"Unsupported renderer; missing or invalid ClassBreaksRenderer.classBreakInfos.\"\n    };\n    const n = o.sort((e, t) => e.classMaxValue - t.classMaxValue),\n      i = n[n.length - 1];\n    let l = e.minValue;\n    if (!r) {\n      const t = [];\n      for (let e = 0; e < n.length; e++) t.push({\n        value: n[e].classMinValue ?? l,\n        mappedColor: n[e].symbol.color\n      }), l = n[e].classMaxValue;\n      return t.push({\n        value: i.classMaxValue,\n        mappedColor: i.symbol.color\n      }), this.lookup = {\n        rendererJSON: e,\n        remapLut: t\n      }, this.canRenderInWebGL = !1, {\n        success: !0\n      };\n    }\n    const c = [];\n    if (null != t && null != s && null !== a && s !== a) {\n      const r = s.name,\n        o = a.name,\n        i = n[n.length - 1],\n        {\n          classMaxValue: u\n        } = i;\n      l = e.minValue;\n      for (const e of t.features) {\n        const t = e.attributes[r],\n          s = e.attributes[o],\n          a = s === u ? i : s < l ? null : n.find(_ref => {\n            let {\n              classMaxValue: e\n            } = _ref;\n            return e > s;\n          });\n        a && c.push([t].concat(a.symbol.color));\n      }\n    } else {\n      l = Math.floor(e.minValue);\n      for (let e = 0; e < n.length; e++) {\n        const t = n[e];\n        for (let e = l; e < t.classMaxValue; e++) c.push([e].concat(t.symbol.color));\n        l = Math.ceil(t.classMaxValue);\n      }\n      i.classMaxValue === l && c.push([i.classMaxValue].concat(i.symbol.color));\n    }\n    const p = u({\n      colormap: c,\n      fillUnspecified: !1\n    });\n    return this.lookup = {\n      rendererJSON: e,\n      colormapLut: p\n    }, this.canRenderInWebGL = I(p?.indexedColormap), {\n      success: !0\n    };\n  }\n  _updateStretchRenderer(e) {\n    let {\n      stretchType: t,\n      dra: r\n    } = e;\n    if (!(\"none\" === t || e.statistics?.length || V(this.rasterInfo.statistics) || r)) return {\n      success: !1,\n      error: \"Unsupported renderer; StretchRenderer.statistics is required when dynamic range adjustment is not used.\"\n    };\n    const s = e.histograms || this.rasterInfo.histograms;\n    !O(e.stretchType) || s?.length || r || (t = \"minMax\");\n    const {\n      computeGamma: a,\n      useGamma: o,\n      colorRamp: n\n    } = e;\n    let {\n      gamma: i\n    } = e;\n    if (o && a && !i?.length) {\n      const t = e.statistics?.length ? e.statistics : this.rasterInfo.statistics;\n      i = m(this.rasterInfo.pixelType, t);\n    }\n    const l = this.rasterInfo.pixelType,\n      c = !r && [\"u8\", \"u16\", \"s8\", \"s16\"].includes(l);\n    if (\"histogramEqualization\" === t) {\n      const t = s.map(e => f(e));\n      this.lookup = {\n        rendererJSON: e,\n        histogramLut: t\n      };\n    } else if (c) {\n      const t = d(e, {\n          rasterInfo: this.rasterInfo\n        }),\n        r = h({\n          pixelType: l,\n          ...t,\n          gamma: o ? i : null,\n          rounding: \"floor\"\n        });\n      this.lookup = {\n        rendererJSON: e,\n        stretchLut: r\n      };\n    }\n    if (n && !T(n)) {\n      const t = S(n, {\n        interpolateAlpha: !0\n      });\n      this.lookup || (this.lookup = {\n        rendererJSON: e\n      }), this.lookup.colormapLut = u({\n        colormap: t\n      }), this.lookup.rendererJSON = e;\n    }\n    return this.lookup.gamma = o && i?.length ? i : null, this.canRenderInWebGL = !0, {\n      success: !0\n    };\n  }\n  _generateStretchWebGLParams(e, t, r) {\n    let s = null,\n      a = null;\n    const o = this.lookup?.colormapLut;\n    t.colorRamp && o && (s = o.indexedColormap, a = o.offset), \"histogramEqualization\" === t.stretchType && (t = {\n      ...t,\n      stretchType: \"minMax\"\n    });\n    const {\n        gamma: n\n      } = this.lookup,\n      i = !(!t.useGamma || !n?.some(e => 1 !== e)),\n      {\n        minCutOff: l,\n        maxCutOff: u,\n        minOutput: c,\n        maxOutput: p\n      } = d(t, {\n        rasterInfo: this.rasterInfo,\n        pixelBlock: e,\n        bandIds: r\n      });\n    let h = 0;\n    null != e && (h = e.getPlaneCount(), 2 === h && ((e = e.clone()).statistics = [e.statistics[0]], e.pixels = [e.pixels[0]]));\n    const {\n        bandCount: m\n      } = this.rasterInfo,\n      f = Math.min(3, r?.length || h || m, m),\n      y = s || i ? 1 : 255,\n      b = new Float32Array(f);\n    if (i && n) for (let d = 0; d < f; d++) n[d] > 1 ? n[d] > 2 ? b[d] = 6.5 + (n[d] - 2) ** 2.5 : b[d] = 6.5 + 100 * (2 - n[d]) ** 4 : b[d] = 1;\n    1 === l.length && (l[2] = l[1] = l[0]), 1 === u.length && (u[2] = u[1] = u[0]);\n    const g = i && n ? [n[0], n[1] ?? n[0], n[2] ?? n[0]] : [1, 1, 1],\n      S = i ? [b[0], b[1] ?? b[0], b[2] ?? b[0]] : [1, 1, 1],\n      k = u.map((e, t) => u[t] === l[t] ? 0 : (p - c) / (u[t] - l[t]) / y);\n    return {\n      bandCount: f,\n      minOutput: c / y,\n      maxOutput: p / y,\n      minCutOff: l,\n      maxCutOff: u,\n      factor: k,\n      useGamma: i,\n      gamma: g,\n      gammaCorrection: S,\n      colormap: s,\n      colormapOffset: a,\n      stretchType: t.stretchType,\n      type: \"stretch\"\n    };\n  }\n  _generateShadedReliefWebGLParams(e) {\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;\n    let r = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      x: 0,\n      y: 0\n    };\n    let s = null,\n      a = null;\n    const o = this.lookup?.colormapLut;\n    e.colorRamp && o && (s = o.indexedColormap, a = o.offset);\n    const n = {\n        ...e,\n        isGCS: t,\n        resolution: r\n      },\n      i = g(n),\n      l = this.rasterInfo.statistics?.[0];\n    return {\n      ...i,\n      minValue: l?.min ?? 0,\n      maxValue: l?.max ?? 8e3,\n      hillshadeType: \"traditional\" === e.hillshadeType ? 0 : 1,\n      type: \"hillshade\",\n      colormap: s,\n      colormapOffset: a\n    };\n  }\n  _generateVectorFieldWebGLParams(e) {\n    const {\n      style: t,\n      inputUnit: r,\n      outputUnit: s,\n      visualVariables: a,\n      symbolTileSize: o,\n      flowRepresentation: n\n    } = e;\n    let i;\n    const l = this.rasterInfo.statistics?.[0].min ?? 0,\n      u = this.rasterInfo.statistics?.[0].max ?? 50,\n      c = a?.find(e => \"sizeInfo\" === e.type) ?? {\n        type: \"sizeInfo\",\n        field: \"Magnitude\",\n        maxDataValue: u,\n        maxSize: .8 * o,\n        minDataValue: l,\n        minSize: .2 * o\n      },\n      p = c.minDataValue ?? l,\n      d = c.maxDataValue ?? u,\n      h = null != c.maxSize && null != c.minSize ? [c.minSize / o, c.maxSize / o] : [.2, .8];\n    if (\"wind_speed\" === t) {\n      const e = (h[0] + h[1]) / 2;\n      h[0] = h[1] = e;\n    }\n    const m = null != p && null != d ? [p, d] : null;\n    if (\"classified_arrow\" === t) if (null != p && null != d && null != c) {\n      i = [];\n      const e = (c.maxDataValue - c.minDataValue) / 5;\n      for (let t = 0; t < 6; t++) i.push(c.minDataValue + e * t);\n    } else i = [0, 1e-6, 3.5, 7, 10.5, 14];\n    const f = \"flow_to\" === n === (\"ocean_current_kn\" === t || \"ocean_current_m\" === t) ? 0 : Math.PI,\n      y = a?.find(e => \"rotationInfo\" === e.type);\n    return {\n      breakValues: i,\n      dataRange: m,\n      inputUnit: r,\n      outputUnit: s,\n      symbolTileSize: o,\n      symbolPercentRange: h,\n      style: t || \"single_arrow\",\n      rotation: f,\n      rotationType: this.rasterInfo.storageInfo?.tileInfo && \"vector-uv\" === this.rasterInfo.dataType ? \"geographic\" : y?.rotationType || e.rotationType,\n      type: \"vectorField\"\n    };\n  }\n};\ne([s({\n  json: {\n    write: !0\n  }\n})], L.prototype, \"rendererJSON\", void 0), e([s({\n  type: o,\n  json: {\n    write: !0\n  }\n})], L.prototype, \"rasterInfo\", void 0), e([s({\n  json: {\n    write: !0\n  }\n})], L.prototype, \"lookup\", void 0), e([s()], L.prototype, \"canRenderInWebGL\", void 0), L = e([a(\"esri.renderers.support.RasterSymbolizer\")], L);\nconst _ = L;\nfunction O(e) {\n  return \"percentClip\" === e || \"histogramEqualization\" === e;\n}\nfunction V(e) {\n  return null != e && e.length > 0 && null != e[0].min && null != e[0].max;\n}\nfunction v(e) {\n  return c(e) && 0 !== e.validPixelCount;\n}\nfunction T(e) {\n  return \"algorithmic\" === e.type && [\"0,0,0,255\", \"0,0,0\"].includes(e.fromColor.join(\",\")) && [\"255,255,255,255\", \"255,255,255\"].includes(e.toColor.join(\",\"));\n}\nexport { _ as default };","map":{"version":3,"names":["_","e","t","r","property","s","subclass","a","o","colorize","n","remapColor","i","lookupPixels","l","createColormapLUT","u","isValidPixelBlock","c","stretch","p","getStretchCutoff","d","createStretchLUT","h","computeGammaValues","m","createHistogramEqualizationLUT","f","hillshade","y","tintHillshade","b","calculateHillshadeParams","g","convertColorRampToColormap","S","createHsvMap","k","isUVRendererSupported","x","isColormapSupportedByWebGL","I","isColormapRendererSupported","R","isShadedReliefRendererSupported","C","L","constructor","bind","rendererJSON","success","lookup","type","_updateUVRenderer","_updateColormapRenderer","_updateStretchRenderer","_updateClassBreaksRenderer","_updateShadedReliefRenderer","_updateVectorFieldRenderer","_updateFlowRenderer","symbolize","pixelBlock","v","simpleStretchParams","simpleStretch","pixels","length","extractBands","bandIds","_symbolizeColormap","_symbolizeClassBreaks","_symbolizeStretch","extent","spatialReference","isGeographic","xmax","xmin","width","ymax","ymin","height","_symbolizeShadedRelief","isGCS","resolution","getLogger","error","message","isRenderer","generateWebGLParameters","includes","indexedColormap","offset","colormapLut","colormap","colormapOffset","isClassBreaks","_generateStretchWebGLParams","_generateShadedReliefWebGLParams","_generateVectorFieldWebGLParams","_isLUTChanged","colorRamp","JSON","stringify","canUseIndexedLUT","_analyzeClassBreaks","remapLut","rasterInfo","pixelType","bandCount","dra","gamma","stretchType","histogramLut","returnHistogramLut","lut","rounding","stretchLut","map","hsvMap","statistics","min","max","_isVectorFieldData","dataType","attributeTable","field1","defaultSymbol","fields","find","name","toLowerCase","features","forEach","uniqueValueInfos","String","value","attributes","symbol","color","push","concat","parseInt","canRenderInWebGL","colormapInfos","sort","interpolateAlpha","field","tableValueField","tableBreakField","classBreakInfos","classMaxValue","minValue","classMinValue","mappedColor","_ref","Math","floor","ceil","fillUnspecified","V","histograms","O","computeGamma","useGamma","T","some","minCutOff","maxCutOff","minOutput","maxOutput","getPlaneCount","clone","Float32Array","factor","gammaCorrection","arguments","undefined","maxValue","hillshadeType","style","inputUnit","outputUnit","visualVariables","symbolTileSize","flowRepresentation","maxDataValue","maxSize","minDataValue","minSize","PI","breakValues","dataRange","symbolPercentRange","rotation","rotationType","storageInfo","tileInfo","json","write","prototype","validPixelCount","fromColor","join","toColor","default"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/renderers/support/RasterSymbolizer.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../chunks/tslib.es6.js\";import t from\"../../core/JSONSupport.js\";import r from\"../../core/Logger.js\";import{property as s}from\"../../core/accessorSupport/decorators/property.js\";import\"../../core/has.js\";import\"../../core/RandomLCG.js\";import{subclass as a}from\"../../core/accessorSupport/decorators/subclass.js\";import o from\"../../layers/support/RasterInfo.js\";import{colorize as n,remapColor as i,lookupPixels as l,createColormapLUT as u,isValidPixelBlock as c}from\"../../layers/support/rasterFunctions/pixelUtils.js\";import{stretch as p,getStretchCutoff as d,createStretchLUT as h,computeGammaValues as m,createHistogramEqualizationLUT as f}from\"../../layers/support/rasterFunctions/stretchUtils.js\";import{hillshade as y,tintHillshade as b,calculateHillshadeParams as g}from\"../../layers/support/rasterFunctions/surfaceUtils.js\";import{convertColorRampToColormap as S,createHsvMap as k}from\"./colorRampUtils.js\";import{isUVRendererSupported as x,isColormapSupportedByWebGL as I,isColormapRendererSupported as R,isShadedReliefRendererSupported as C}from\"./rasterRendererChecks.js\";let L=class extends t{constructor(e){super(e)}bind(){const{rendererJSON:e}=this;if(!e)return{success:!1};let t;switch(this.lookup={rendererJSON:{}},e.type){case\"uniqueValue\":t=this._updateUVRenderer(e);break;case\"rasterColormap\":t=this._updateColormapRenderer(e);break;case\"rasterStretch\":t=this._updateStretchRenderer(e);break;case\"classBreaks\":t=this._updateClassBreaksRenderer(e);break;case\"rasterShadedRelief\":t=this._updateShadedReliefRenderer(e);break;case\"vectorField\":t=this._updateVectorFieldRenderer();break;case\"flowRenderer\":t=this._updateFlowRenderer()}return t}symbolize(e){let t=e?.pixelBlock;if(!v(t))return t;if(e.simpleStretchParams&&\"rasterStretch\"===this.rendererJSON.type)return this.simpleStretch(t,e.simpleStretchParams);try{let r;switch(t.pixels.length>3&&(t=t.extractBands(e.bandIds??[0,1,2])),this.rendererJSON.type){case\"uniqueValue\":case\"rasterColormap\":r=this._symbolizeColormap(t);break;case\"classBreaks\":r=this._symbolizeClassBreaks(t);break;case\"rasterStretch\":r=this._symbolizeStretch(t,e.bandIds);break;case\"rasterShadedRelief\":{const s=e.extent,a=s.spatialReference.isGeographic,o={x:(s.xmax-s.xmin)/t.width,y:(s.ymax-s.ymin)/t.height};r=this._symbolizeShadedRelief(t,{isGCS:a,resolution:o});break}}return r}catch(s){return r.getLogger(this).error(\"symbolize\",s.message),t}}simpleStretch(e,t){if(!v(e))return e;try{return e.pixels.length>3&&(e=e.extractBands([0,1,2])),p(e,{...t,isRenderer:!0})}catch(s){return r.getLogger(this).error(\"symbolize\",s.message),e}}generateWebGLParameters(e){if([\"uniqueValue\",\"rasterColormap\",\"classBreaks\"].includes(this.rendererJSON.type)){const{indexedColormap:e,offset:t}=this.lookup.colormapLut||{};return{colormap:e,colormapOffset:t,isClassBreaks:\"classBreaks\"===this.rendererJSON.type,type:\"lut\"}}const{pixelBlock:t,isGCS:r,resolution:s,bandIds:a}=e,{rendererJSON:o}=this;return\"rasterStretch\"===o.type?this._generateStretchWebGLParams(t,o,a):\"rasterShadedRelief\"===o.type?this._generateShadedReliefWebGLParams(o,r,s??void 0):\"vectorField\"===o.type?this._generateVectorFieldWebGLParams(o):null}_isLUTChanged(e){if(!this.lookup||!this.lookup.rendererJSON)return!0;if(\"colorRamp\"in this.rendererJSON){const t=this.rendererJSON.colorRamp;return e?JSON.stringify(t)!==JSON.stringify(this.lookup.rendererJSON.colorRamp):(this.rendererJSON,this.lookup.rendererJSON,JSON.stringify(this.rendererJSON)!==JSON.stringify(this.lookup.rendererJSON))}return JSON.stringify(this.rendererJSON)!==JSON.stringify(this.lookup.rendererJSON)}_symbolizeColormap(e){if(this._isLUTChanged()){if(!this.bind().success)return e}return n(e,this.lookup.colormapLut)}_symbolizeClassBreaks(e){const{canUseIndexedLUT:t}=this._analyzeClassBreaks(this.rendererJSON);if(this._isLUTChanged()){if(!this.bind().success)return e}return t?n(e,this.lookup.colormapLut):i(e,this.lookup.remapLut??[])}_symbolizeStretch(e,t){const{rasterInfo:r}=this,{pixelType:s,bandCount:a}=r,o=this.rendererJSON,i=[\"u8\",\"u16\",\"s8\",\"s16\"].includes(s);let u,c;const{dra:m}=o,{gamma:f}=this.lookup;if(\"histogramEqualization\"===o.stretchType){const s=m?null:this.lookup?.histogramLut,a=d(o,{rasterInfo:r,pixelBlock:e,bandIds:t,returnHistogramLut:!s}),n=p(e,{...a,gamma:f,isRenderer:!0});c=l(n,{lut:m?a.histogramLut:s,offset:0})}else if(i){if(m){const a=d(o,{rasterInfo:r,pixelBlock:e,bandIds:t});u=h({pixelType:s,...a,gamma:f,rounding:\"floor\"})}else if(this._isLUTChanged()){if(!this.bind().success)return e;u=this.lookup?this.lookup.stretchLut:null}else u=this.lookup?this.lookup.stretchLut:null;if(!u)return e;a>1&&null!=t&&t.length===e?.pixels.length&&u?.lut.length===a&&(u={lut:t.map((e=>u.lut[e])),offset:u.offset}),c=l(e,u)}else{const s=d(o,{rasterInfo:r,pixelBlock:e,bandIds:t});c=p(e,{...s,gamma:f,isRenderer:!0})}if(o.colorRamp){if(this._isLUTChanged(!0)){if(!this.bind().success)return e}c=n(c,this.lookup?.colormapLut)}return c}_symbolizeShadedRelief(e,t){const r=this.rendererJSON,s={...r,...t},a=y(e,s);if(!r.colorRamp)return a;let o;if(this._isLUTChanged(!0)){if(!this.bind().success)return a;o=this.lookup?this.lookup.hsvMap:null}else o=this.lookup?this.lookup.hsvMap:null;if(!o)return a;const n=this.rasterInfo.statistics?.[0]??{min:0,max:8e3};return b(a,e,o,n),a}_isVectorFieldData(){const{bandCount:e,dataType:t}=this.rasterInfo;return 2===e&&(\"vector-magdir\"===t||\"vector-uv\"===t)}_updateVectorFieldRenderer(){return this._isVectorFieldData()?{success:!0}:{success:!1,error:`Unsupported data type \"${this.rasterInfo.dataType}\"; VectorFieldRenderer only supports \"vector-magdir\" and \"vector-uv\".`}}_updateFlowRenderer(){return this._isVectorFieldData()?{success:!0}:{success:!1,error:`Unsupported data type \"${this.rasterInfo.dataType}\"; FlowRenderer only supports \"vector-magdir\" and \"vector-uv\".`}}_updateUVRenderer(e){const{bandCount:t,attributeTable:r,pixelType:s}=this.rasterInfo,a=e.field1;if(!a)return{success:!1,error:\"Unsupported renderer; missing UniqueValueRenderer.field.\"};const o=e.defaultSymbol,n=1===t&&[\"u8\",\"s8\"].includes(s);if(!x(this.rasterInfo,a)&&!n)return{success:!1,error:\"Unsupported data; UniqueValueRenderer is only supported on single band data with a valid raster attribute table.\"};const i=[];if(null!=r){const t=r.fields.find((e=>\"value\"===e.name.toLowerCase()));if(!t)return{success:!1,error:\"Unsupported data; the data's raster attribute table does not have a value field.\"};r.features.forEach((r=>{const s=e.uniqueValueInfos?.find((e=>String(e.value)===String(r.attributes[a]))),n=s?.symbol?.color;n?i.push([r.attributes[t.name]].concat(n)):o&&i.push([r.attributes[t.name]].concat(o.color))}))}else{if(\"value\"!==a.toLowerCase())return{success:!1,error:'Unsupported renderer; UniqueValueRenderer.field must be \"Value\" when raster attribute table is not available.'};e.uniqueValueInfos?.forEach((e=>{const t=e?.symbol?.color;t?i.push([parseInt(\"\"+e.value,10)].concat(t)):o&&i.push([parseInt(\"\"+e.value,10)].concat(o?.color))}))}if(0===i.length)return{success:!1,error:\"Invalid UniqueValueRenderer. Cannot find matching records in the raster attribute table.\"};const l=u({colormap:i});return this.lookup={rendererJSON:e,colormapLut:l},this.canRenderInWebGL=I(l?.indexedColormap),{success:!0}}_updateColormapRenderer(e){if(!R(this.rasterInfo))return{success:!1,error:\"Unsupported data; the data source does not have a colormap.\"};const t=e.colormapInfos.map((e=>[e.value].concat(e.color))).sort(((e,t)=>e[0]-t[0]));if(!t||0===t.length)return{success:!1,error:\"Unsupported renderer; ColormapRenderer must have meaningful colormapInfos.\"};const r=u({colormap:t});return this.lookup={rendererJSON:e,colormapLut:r},this.canRenderInWebGL=I(r?.indexedColormap),{success:!0}}_updateShadedReliefRenderer(e){if(!C(this.rasterInfo))return{success:!1,error:`Unsupported data type \"${this.rasterInfo.dataType}\"; ShadedReliefRenderer only supports \"elevation\", or single band float/s16 data.`};if(e.colorRamp){const t=S(e.colorRamp,{interpolateAlpha:!0}),r=u({colormap:t}),s=k(r.indexedColormap);this.lookup={rendererJSON:e,colormapLut:r,hsvMap:s}}else this.lookup=null;return this.canRenderInWebGL=!0,{success:!0}}_analyzeClassBreaks(e){const{attributeTable:t,pixelType:r}=this.rasterInfo,s=null!=t?t.fields.find((e=>\"value\"===e.name.toLowerCase())):null,a=null!=t?t.fields.find((t=>t.name.toLowerCase()===e.field.toLowerCase())):null,o=null!=s&&null!==a;return{canUseIndexedLUT:[\"u8\",\"u16\",\"s8\",\"s16\"].includes(r)||o,tableValueField:s,tableBreakField:a}}_updateClassBreaksRenderer(e){const{attributeTable:t}=this.rasterInfo,{canUseIndexedLUT:r,tableValueField:s,tableBreakField:a}=this._analyzeClassBreaks(e),o=e.classBreakInfos;if(!o?.length)return{success:!1,error:\"Unsupported renderer; missing or invalid ClassBreaksRenderer.classBreakInfos.\"};const n=o.sort(((e,t)=>e.classMaxValue-t.classMaxValue)),i=n[n.length-1];let l=e.minValue;if(!r){const t=[];for(let e=0;e<n.length;e++)t.push({value:n[e].classMinValue??l,mappedColor:n[e].symbol.color}),l=n[e].classMaxValue;return t.push({value:i.classMaxValue,mappedColor:i.symbol.color}),this.lookup={rendererJSON:e,remapLut:t},this.canRenderInWebGL=!1,{success:!0}}const c=[];if(null!=t&&null!=s&&null!==a&&s!==a){const r=s.name,o=a.name,i=n[n.length-1],{classMaxValue:u}=i;l=e.minValue;for(const e of t.features){const t=e.attributes[r],s=e.attributes[o],a=s===u?i:s<l?null:n.find((({classMaxValue:e})=>e>s));a&&c.push([t].concat(a.symbol.color))}}else{l=Math.floor(e.minValue);for(let e=0;e<n.length;e++){const t=n[e];for(let e=l;e<t.classMaxValue;e++)c.push([e].concat(t.symbol.color));l=Math.ceil(t.classMaxValue)}i.classMaxValue===l&&c.push([i.classMaxValue].concat(i.symbol.color))}const p=u({colormap:c,fillUnspecified:!1});return this.lookup={rendererJSON:e,colormapLut:p},this.canRenderInWebGL=I(p?.indexedColormap),{success:!0}}_updateStretchRenderer(e){let{stretchType:t,dra:r}=e;if(!(\"none\"===t||e.statistics?.length||V(this.rasterInfo.statistics)||r))return{success:!1,error:\"Unsupported renderer; StretchRenderer.statistics is required when dynamic range adjustment is not used.\"};const s=e.histograms||this.rasterInfo.histograms;!O(e.stretchType)||s?.length||r||(t=\"minMax\");const{computeGamma:a,useGamma:o,colorRamp:n}=e;let{gamma:i}=e;if(o&&a&&!i?.length){const t=e.statistics?.length?e.statistics:this.rasterInfo.statistics;i=m(this.rasterInfo.pixelType,t)}const l=this.rasterInfo.pixelType,c=!r&&[\"u8\",\"u16\",\"s8\",\"s16\"].includes(l);if(\"histogramEqualization\"===t){const t=s.map((e=>f(e)));this.lookup={rendererJSON:e,histogramLut:t}}else if(c){const t=d(e,{rasterInfo:this.rasterInfo}),r=h({pixelType:l,...t,gamma:o?i:null,rounding:\"floor\"});this.lookup={rendererJSON:e,stretchLut:r}}if(n&&!T(n)){const t=S(n,{interpolateAlpha:!0});this.lookup||(this.lookup={rendererJSON:e}),this.lookup.colormapLut=u({colormap:t}),this.lookup.rendererJSON=e}return this.lookup.gamma=o&&i?.length?i:null,this.canRenderInWebGL=!0,{success:!0}}_generateStretchWebGLParams(e,t,r){let s=null,a=null;const o=this.lookup?.colormapLut;t.colorRamp&&o&&(s=o.indexedColormap,a=o.offset),\"histogramEqualization\"===t.stretchType&&(t={...t,stretchType:\"minMax\"});const{gamma:n}=this.lookup,i=!(!t.useGamma||!n?.some((e=>1!==e))),{minCutOff:l,maxCutOff:u,minOutput:c,maxOutput:p}=d(t,{rasterInfo:this.rasterInfo,pixelBlock:e,bandIds:r});let h=0;null!=e&&(h=e.getPlaneCount(),2===h&&((e=e.clone()).statistics=[e.statistics[0]],e.pixels=[e.pixels[0]]));const{bandCount:m}=this.rasterInfo,f=Math.min(3,r?.length||h||m,m),y=s||i?1:255,b=new Float32Array(f);if(i&&n)for(let d=0;d<f;d++)n[d]>1?n[d]>2?b[d]=6.5+(n[d]-2)**2.5:b[d]=6.5+100*(2-n[d])**4:b[d]=1;1===l.length&&(l[2]=l[1]=l[0]),1===u.length&&(u[2]=u[1]=u[0]);const g=i&&n?[n[0],n[1]??n[0],n[2]??n[0]]:[1,1,1],S=i?[b[0],b[1]??b[0],b[2]??b[0]]:[1,1,1],k=u.map(((e,t)=>u[t]===l[t]?0:(p-c)/(u[t]-l[t])/y));return{bandCount:f,minOutput:c/y,maxOutput:p/y,minCutOff:l,maxCutOff:u,factor:k,useGamma:i,gamma:g,gammaCorrection:S,colormap:s,colormapOffset:a,stretchType:t.stretchType,type:\"stretch\"}}_generateShadedReliefWebGLParams(e,t=!1,r={x:0,y:0}){let s=null,a=null;const o=this.lookup?.colormapLut;e.colorRamp&&o&&(s=o.indexedColormap,a=o.offset);const n={...e,isGCS:t,resolution:r},i=g(n),l=this.rasterInfo.statistics?.[0];return{...i,minValue:l?.min??0,maxValue:l?.max??8e3,hillshadeType:\"traditional\"===e.hillshadeType?0:1,type:\"hillshade\",colormap:s,colormapOffset:a}}_generateVectorFieldWebGLParams(e){const{style:t,inputUnit:r,outputUnit:s,visualVariables:a,symbolTileSize:o,flowRepresentation:n}=e;let i;const l=this.rasterInfo.statistics?.[0].min??0,u=this.rasterInfo.statistics?.[0].max??50,c=a?.find((e=>\"sizeInfo\"===e.type))??{type:\"sizeInfo\",field:\"Magnitude\",maxDataValue:u,maxSize:.8*o,minDataValue:l,minSize:.2*o},p=c.minDataValue??l,d=c.maxDataValue??u,h=null!=c.maxSize&&null!=c.minSize?[c.minSize/o,c.maxSize/o]:[.2,.8];if(\"wind_speed\"===t){const e=(h[0]+h[1])/2;h[0]=h[1]=e}const m=null!=p&&null!=d?[p,d]:null;if(\"classified_arrow\"===t)if(null!=p&&null!=d&&null!=c){i=[];const e=(c.maxDataValue-c.minDataValue)/5;for(let t=0;t<6;t++)i.push(c.minDataValue+e*t)}else i=[0,1e-6,3.5,7,10.5,14];const f=\"flow_to\"===n===(\"ocean_current_kn\"===t||\"ocean_current_m\"===t)?0:Math.PI,y=a?.find((e=>\"rotationInfo\"===e.type));return{breakValues:i,dataRange:m,inputUnit:r,outputUnit:s,symbolTileSize:o,symbolPercentRange:h,style:t||\"single_arrow\",rotation:f,rotationType:this.rasterInfo.storageInfo?.tileInfo&&\"vector-uv\"===this.rasterInfo.dataType?\"geographic\":y?.rotationType||e.rotationType,type:\"vectorField\"}}};e([s({json:{write:!0}})],L.prototype,\"rendererJSON\",void 0),e([s({type:o,json:{write:!0}})],L.prototype,\"rasterInfo\",void 0),e([s({json:{write:!0}})],L.prototype,\"lookup\",void 0),e([s()],L.prototype,\"canRenderInWebGL\",void 0),L=e([a(\"esri.renderers.support.RasterSymbolizer\")],L);const _=L;function O(e){return\"percentClip\"===e||\"histogramEqualization\"===e}function V(e){return null!=e&&e.length>0&&null!=e[0].min&&null!=e[0].max}function v(e){return c(e)&&0!==e.validPixelCount}function T(e){return\"algorithmic\"===e.type&&[\"0,0,0,255\",\"0,0,0\"].includes(e.fromColor.join(\",\"))&&[\"255,255,255,255\",\"255,255,255\"].includes(e.toColor.join(\",\"))}export{_ as default};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}