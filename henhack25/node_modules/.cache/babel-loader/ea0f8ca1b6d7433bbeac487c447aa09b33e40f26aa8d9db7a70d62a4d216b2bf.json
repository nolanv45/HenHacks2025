{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport t from \"../util/Writer.js\";\nconst e = 6,\n  i = 4;\nclass r {\n  constructor(r, s, n = 0) {\n    const c = e * n * Uint32Array.BYTES_PER_ELEMENT,\n      h = i * n * s.stride,\n      u = s.stride / 4,\n      _ = s.attributes.find(t => \"pos\" === t.name || \"position\" === t.name);\n    if (!_) throw new Error(\"InternalError: Unable to find position attribute\");\n    this.layout = {\n      ...s,\n      position: _\n    }, this._indices = new t(Uint32Array, c), this._vertices = new t(Uint32Array, h), this._metrics = new t(Uint32Array, 0), this._metricCountOffset = this._metrics.push(0), this._strideInt = u, this._instanceId = r;\n  }\n  serialize(t) {\n    const e = this._indices.buffer(),\n      i = this._vertices.buffer(),\n      r = this._metrics.length ? this._metrics.buffer() : null;\n    return t.push(e, i), {\n      instanceId: this._instanceId,\n      layout: this.layout,\n      indices: e,\n      vertices: i,\n      metrics: r\n    };\n  }\n  get strideInt() {\n    return this._strideInt;\n  }\n  get vertexCount() {\n    return this._vertices.length / this._strideInt;\n  }\n  get indexCount() {\n    return this._indices.length;\n  }\n  get indexWriter() {\n    return this._indices;\n  }\n  get vertexWriter() {\n    return this._vertices;\n  }\n  get metricWriter() {\n    return this._metrics;\n  }\n  vertexEnsureSize(t) {\n    this._vertices.ensureSize(t);\n  }\n  indexEnsureSize(t) {\n    this._indices.ensureSize(t);\n  }\n  writeIndex(t) {\n    this._indices.push(t);\n  }\n  writeVertex(t) {\n    this._vertices.push(t);\n  }\n  writeVertexRegion(t) {\n    this._vertices.writeRegion(t);\n  }\n  writeVertexF32(t) {\n    this._vertices.writeF32(t);\n  }\n  writeMetric(t) {\n    this._metrics.incr(this._metricCountOffset), t.serialize(this._metrics);\n  }\n}\nexport { r as VertexDataWriter };","map":{"version":3,"names":["t","e","i","r","constructor","s","n","c","Uint32Array","BYTES_PER_ELEMENT","h","stride","u","_","attributes","find","name","Error","layout","position","_indices","_vertices","_metrics","_metricCountOffset","push","_strideInt","_instanceId","serialize","buffer","length","instanceId","indices","vertices","metrics","strideInt","vertexCount","indexCount","indexWriter","vertexWriter","metricWriter","vertexEnsureSize","ensureSize","indexEnsureSize","writeIndex","writeVertex","writeVertexRegion","writeRegion","writeVertexF32","writeF32","writeMetric","incr","VertexDataWriter"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/2d/engine/webgl/mesh/VertexDataWriter.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport t from\"../util/Writer.js\";const e=6,i=4;class r{constructor(r,s,n=0){const c=e*n*Uint32Array.BYTES_PER_ELEMENT,h=i*n*s.stride,u=s.stride/4,_=s.attributes.find((t=>\"pos\"===t.name||\"position\"===t.name));if(!_)throw new Error(\"InternalError: Unable to find position attribute\");this.layout={...s,position:_},this._indices=new t(Uint32Array,c),this._vertices=new t(Uint32Array,h),this._metrics=new t(Uint32Array,0),this._metricCountOffset=this._metrics.push(0),this._strideInt=u,this._instanceId=r}serialize(t){const e=this._indices.buffer(),i=this._vertices.buffer(),r=this._metrics.length?this._metrics.buffer():null;return t.push(e,i),{instanceId:this._instanceId,layout:this.layout,indices:e,vertices:i,metrics:r}}get strideInt(){return this._strideInt}get vertexCount(){return this._vertices.length/this._strideInt}get indexCount(){return this._indices.length}get indexWriter(){return this._indices}get vertexWriter(){return this._vertices}get metricWriter(){return this._metrics}vertexEnsureSize(t){this._vertices.ensureSize(t)}indexEnsureSize(t){this._indices.ensureSize(t)}writeIndex(t){this._indices.push(t)}writeVertex(t){this._vertices.push(t)}writeVertexRegion(t){this._vertices.writeRegion(t)}writeVertexF32(t){this._vertices.writeF32(t)}writeMetric(t){this._metrics.incr(this._metricCountOffset),t.serialize(this._metrics)}}export{r as VertexDataWriter};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}