{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport e from \"../../request.js\";\nimport r from \"../../core/Error.js\";\nimport { isAbortError as s } from \"../../core/promiseUtils.js\";\nimport { isSupportedVersion as t, parseCapabilities as o } from \"../support/rasterDatasets/wcsCapabilitiesParser.js\";\nimport { parseCoverages as a } from \"../support/rasterDatasets/wcsCoverageParser.js\";\nasync function i(a, i) {\n  const {\n      version: n,\n      customParameters: c,\n      signal: p\n    } = i ?? {},\n    l = n?.startsWith(\"1.0\") ? \"version\" : \"acceptVersions\",\n    m = {\n      service: \"WCS\",\n      request: \"GetCapabilities\",\n      [l]: n,\n      ...c\n    };\n  try {\n    let {\n      data: r\n    } = await e(a, {\n      query: m,\n      responseType: \"xml\",\n      signal: p\n    });\n    return i?.version || t(r) || (m[l] = \"2.0.1\", {\n      data: r\n    } = await e(a, {\n      query: m,\n      responseType: \"xml\",\n      signal: p\n    })), o(r);\n  } catch (u) {\n    if (!s(u)) throw new r(\"wcslayer:open\", \"wcs capabilities is not valid or supported\");\n    throw u;\n  }\n}\nasync function n(t, o) {\n  const {\n      coverageIds: i,\n      version: n,\n      customParameters: c,\n      signal: p\n    } = o,\n    l = n.slice(0, 3),\n    m = \"1.0\" === l ? \"coverage\" : \"1.1\" === l ? \"identifiers\" : \"coverageId\",\n    u = {\n      service: \"WCS\",\n      request: \"DescribeCoverage\",\n      version: n,\n      [m]: i.join(\",\"),\n      ...c\n    };\n  try {\n    const {\n      data: r\n    } = await e(t, {\n      query: u,\n      responseType: \"xml\",\n      signal: p\n    });\n    return a(r, n);\n  } catch (v) {\n    if (!s(v)) throw new r(\"wcslayer:open\", \"wcs coverage description is not valid or supported\");\n    throw v;\n  }\n}\nexport { n as describeCoverage, i as getCapabilities };","map":{"version":3,"names":["e","r","isAbortError","s","isSupportedVersion","t","parseCapabilities","o","parseCoverages","a","i","version","n","customParameters","c","signal","p","l","startsWith","m","service","request","data","query","responseType","u","coverageIds","slice","join","v","describeCoverage","getCapabilities"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/layers/ogc/wcsUtils.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport e from\"../../request.js\";import r from\"../../core/Error.js\";import{isAbortError as s}from\"../../core/promiseUtils.js\";import{isSupportedVersion as t,parseCapabilities as o}from\"../support/rasterDatasets/wcsCapabilitiesParser.js\";import{parseCoverages as a}from\"../support/rasterDatasets/wcsCoverageParser.js\";async function i(a,i){const{version:n,customParameters:c,signal:p}=i??{},l=n?.startsWith(\"1.0\")?\"version\":\"acceptVersions\",m={service:\"WCS\",request:\"GetCapabilities\",[l]:n,...c};try{let{data:r}=await e(a,{query:m,responseType:\"xml\",signal:p});return i?.version||t(r)||(m[l]=\"2.0.1\",({data:r}=await e(a,{query:m,responseType:\"xml\",signal:p}))),o(r)}catch(u){if(!s(u))throw new r(\"wcslayer:open\",\"wcs capabilities is not valid or supported\");throw u}}async function n(t,o){const{coverageIds:i,version:n,customParameters:c,signal:p}=o,l=n.slice(0,3),m=\"1.0\"===l?\"coverage\":\"1.1\"===l?\"identifiers\":\"coverageId\",u={service:\"WCS\",request:\"DescribeCoverage\",version:n,[m]:i.join(\",\"),...c};try{const{data:r}=await e(t,{query:u,responseType:\"xml\",signal:p});return a(r,n)}catch(v){if(!s(v))throw new r(\"wcslayer:open\",\"wcs coverage description is not valid or supported\");throw v}}export{n as describeCoverage,i as getCapabilities};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAOA,CAAC,MAAK,kBAAkB;AAAC,OAAOC,CAAC,MAAK,qBAAqB;AAAC,SAAOC,YAAY,IAAIC,CAAC,QAAK,4BAA4B;AAAC,SAAOC,kBAAkB,IAAIC,CAAC,EAACC,iBAAiB,IAAIC,CAAC,QAAK,oDAAoD;AAAC,SAAOC,cAAc,IAAIC,CAAC,QAAK,gDAAgD;AAAC,eAAeC,CAACA,CAACD,CAAC,EAACC,CAAC,EAAC;EAAC,MAAK;MAACC,OAAO,EAACC,CAAC;MAACC,gBAAgB,EAACC,CAAC;MAACC,MAAM,EAACC;IAAC,CAAC,GAACN,CAAC,IAAE,CAAC,CAAC;IAACO,CAAC,GAACL,CAAC,EAAEM,UAAU,CAAC,KAAK,CAAC,GAAC,SAAS,GAAC,gBAAgB;IAACC,CAAC,GAAC;MAACC,OAAO,EAAC,KAAK;MAACC,OAAO,EAAC,iBAAiB;MAAC,CAACJ,CAAC,GAAEL,CAAC;MAAC,GAAGE;IAAC,CAAC;EAAC,IAAG;IAAC,IAAG;MAACQ,IAAI,EAACrB;IAAC,CAAC,GAAC,MAAMD,CAAC,CAACS,CAAC,EAAC;MAACc,KAAK,EAACJ,CAAC;MAACK,YAAY,EAAC,KAAK;MAACT,MAAM,EAACC;IAAC,CAAC,CAAC;IAAC,OAAON,CAAC,EAAEC,OAAO,IAAEN,CAAC,CAACJ,CAAC,CAAC,KAAGkB,CAAC,CAACF,CAAC,CAAC,GAAC,OAAO,EAAE;MAACK,IAAI,EAACrB;IAAC,CAAC,GAAC,MAAMD,CAAC,CAACS,CAAC,EAAC;MAACc,KAAK,EAACJ,CAAC;MAACK,YAAY,EAAC,KAAK;MAACT,MAAM,EAACC;IAAC,CAAC,CAAE,CAAC,EAACT,CAAC,CAACN,CAAC,CAAC;EAAA,CAAC,QAAMwB,CAAC,EAAC;IAAC,IAAG,CAACtB,CAAC,CAACsB,CAAC,CAAC,EAAC,MAAM,IAAIxB,CAAC,CAAC,eAAe,EAAC,4CAA4C,CAAC;IAAC,MAAMwB,CAAC;EAAA;AAAC;AAAC,eAAeb,CAACA,CAACP,CAAC,EAACE,CAAC,EAAC;EAAC,MAAK;MAACmB,WAAW,EAAChB,CAAC;MAACC,OAAO,EAACC,CAAC;MAACC,gBAAgB,EAACC,CAAC;MAACC,MAAM,EAACC;IAAC,CAAC,GAACT,CAAC;IAACU,CAAC,GAACL,CAAC,CAACe,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC;IAACR,CAAC,GAAC,KAAK,KAAGF,CAAC,GAAC,UAAU,GAAC,KAAK,KAAGA,CAAC,GAAC,aAAa,GAAC,YAAY;IAACQ,CAAC,GAAC;MAACL,OAAO,EAAC,KAAK;MAACC,OAAO,EAAC,kBAAkB;MAACV,OAAO,EAACC,CAAC;MAAC,CAACO,CAAC,GAAET,CAAC,CAACkB,IAAI,CAAC,GAAG,CAAC;MAAC,GAAGd;IAAC,CAAC;EAAC,IAAG;IAAC,MAAK;MAACQ,IAAI,EAACrB;IAAC,CAAC,GAAC,MAAMD,CAAC,CAACK,CAAC,EAAC;MAACkB,KAAK,EAACE,CAAC;MAACD,YAAY,EAAC,KAAK;MAACT,MAAM,EAACC;IAAC,CAAC,CAAC;IAAC,OAAOP,CAAC,CAACR,CAAC,EAACW,CAAC,CAAC;EAAA,CAAC,QAAMiB,CAAC,EAAC;IAAC,IAAG,CAAC1B,CAAC,CAAC0B,CAAC,CAAC,EAAC,MAAM,IAAI5B,CAAC,CAAC,eAAe,EAAC,oDAAoD,CAAC;IAAC,MAAM4B,CAAC;EAAA;AAAC;AAAC,SAAOjB,CAAC,IAAIkB,gBAAgB,EAACpB,CAAC,IAAIqB,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}