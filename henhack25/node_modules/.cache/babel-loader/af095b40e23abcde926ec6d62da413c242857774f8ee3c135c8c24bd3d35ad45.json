{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { maxElevationOffset as o } from \"../../../collections/Component/Material/shader/ComponentData.glsl.js\";\nimport { NormalAttribute as e } from \"../../../core/shaderLibrary/attributes/NormalAttribute.glsl.js\";\nimport { DoublePrecision as r } from \"../../../core/shaderLibrary/util/DoublePrecision.glsl.js\";\nimport { RgbaFloatEncoding as t } from \"../../../core/shaderLibrary/util/RgbaFloatEncoding.glsl.js\";\nimport { Float3DrawUniform as a } from \"../../../core/shaderModules/Float3DrawUniform.js\";\nimport { Float3PassUniform as l } from \"../../../core/shaderModules/Float3PassUniform.js\";\nimport { glsl as n } from \"../../../core/shaderModules/glsl.js\";\nimport { Matrix3DrawUniform as d } from \"../../../core/shaderModules/Matrix3DrawUniform.js\";\nimport { Matrix3PassUniform as m } from \"../../../core/shaderModules/Matrix3PassUniform.js\";\nimport { Matrix4BindUniform as i } from \"../../../core/shaderModules/Matrix4BindUniform.js\";\nimport { Texture2DDrawUniform as s } from \"../../../core/shaderModules/Texture2DDrawUniform.js\";\nimport { VertexAttribute as c } from \"../../../lib/VertexAttribute.js\";\nfunction f(f, v) {\n  const u = f.vertex;\n  u.include(t), f.include(e, v);\n  const {\n    silhouette: x,\n    legacy: p,\n    spherical: w\n  } = v;\n  u.uniforms.add(new s(\"componentDataTex\", o => o.componentDataTexture)), f.attributes.add(c.COMPONENTINDEX, \"float\");\n  const M = 0,\n    F = 1,\n    T = 2,\n    h = 3,\n    P = 8,\n    V = 128;\n  u.constants.add(\"lineWidthFractionFactor\", \"float\", 8), u.constants.add(\"extensionLengthOffset\", \"float\", 128), u.code.add(n`\n    vec2 _componentTextureCoords(float componentIndex, float fieldOffset) {\n      float fieldIndex = ${n.float(h)}  * componentIndex + fieldOffset;\n      float texSize = float(textureSize(componentDataTex, 0).x);\n      float colIndex = mod(fieldIndex, texSize);\n      float rowIndex = floor(fieldIndex / texSize);\n\n      return vec2(colIndex, rowIndex) + 0.5;\n    }\n\n    struct ComponentData {\n      vec4 color;\n      vec3 normal;\n      vec3 normal2;\n      float lineWidth;\n      float extensionLength;\n      float type;\n      float verticalOffset;\n    };\n\n    ComponentData readComponentData() {\n      vec2 colorIndex = _componentTextureCoords(componentIndex, ${n.float(M)});\n      vec2 otherIndex = _componentTextureCoords(componentIndex, ${n.float(F)});\n      vec2 verticalOffsetIndex = _componentTextureCoords(float(componentIndex), ${n.float(T)} );\n      vec3 normal = normalModel();\n      vec3 normal2 = ${x ? n`decompressNormal(normal2Compressed)` : n`normal`};\n\n      vec4 colorValue = texelFetch(componentDataTex, ivec2(colorIndex), 0);\n      vec4 otherValue = texelFetch(componentDataTex, ivec2(otherIndex), 0);\n      float verticalOffset = uninterpolatedRGBAToFloat(texelFetch(componentDataTex, ivec2(verticalOffsetIndex), 0)) * ${n.float(o)};\n\n      return ComponentData(\n        vec4(colorValue.rgb, colorValue.a * otherValue.w), // otherValue.w stores separate opacity\n        normal, normal2,\n        otherValue.x * (255.0 / ${n.float(P)} ),\n        otherValue.y * 255.0 - ${n.float(V)},\n        -(otherValue.z * 255.0) + 0.5, // SOLID (=0/255) needs to be > 0.0, SKETCHY (=1/255) needs to be <= 0;\n        verticalOffset\n      );\n    }\n  `), p ? u.code.add(n`vec3 _modelToWorldNormal(vec3 normal) {\nreturn (model * vec4(normal, 0.0)).xyz;\n}\nvec3 _modelToViewNormal(vec3 normal) {\nreturn (localView * model * vec4(normal, 0.0)).xyz;\n}`) : (u.uniforms.add(new d(\"transformNormalGlobalFromModel\", o => o.transformNormalGlobalFromModel)), u.code.add(n`vec3 _modelToWorldNormal(vec3 normal) {\nreturn transformNormalGlobalFromModel * normal;\n}`)), x ? (f.attributes.add(c.NORMAL2COMPRESSED, \"vec2\"), u.code.add(n`vec3 worldNormal(ComponentData data) {\nreturn _modelToWorldNormal(normalize(data.normal + data.normal2));\n}`)) : u.code.add(n`vec3 worldNormal(ComponentData data) {\nreturn _modelToWorldNormal(data.normal);\n}`), p ? u.code.add(n`void worldAndViewFromModelPosition(vec3 modelPos, float verticalOffset, out vec3 worldPos, out vec3 viewPos) {\nworldPos = (model * vec4(modelPos, 1.0)).xyz;\nviewPos = (localView * vec4(worldPos, 1.0)).xyz;\n}`) : (u.include(r, v), u.uniforms.add(new m(\"transformViewFromCameraRelativeRS\", o => o.transformViewFromCameraRelativeRS), new d(\"transformWorldFromModelRS\", o => o.transformWorldFromModelRS), new a(\"transformWorldFromModelTL\", o => o.transformWorldFromModelTL), new a(\"transformWorldFromModelTH\", o => o.transformWorldFromModelTH), new l(\"transformWorldFromViewTL\", o => o.transformWorldFromViewTL), new l(\"transformWorldFromViewTH\", o => o.transformWorldFromViewTH)), u.code.add(n`\n      void worldAndViewFromModelPosition(vec3 modelPos, float verticalOffset, out vec3 worldPos, out vec3 viewPos) {\n        vec3 rotatedModelPosition = transformWorldFromModelRS * modelPos;\n\n        vec3 transformCameraRelativeFromModel = dpAdd(\n          transformWorldFromModelTL,\n          transformWorldFromModelTH,\n          -transformWorldFromViewTL,\n          -transformWorldFromViewTH\n        );\n\n        worldPos = transformCameraRelativeFromModel + rotatedModelPosition;\n\n        if (verticalOffset != 0.0) {\n          vec3 vUp = ${w ? \"normalize(transformWorldFromModelTL + rotatedModelPosition);\" : \"vec3(0.0, 0.0, 1.0);\"}\n          worldPos += verticalOffset * vUp;\n        }\n\n        viewPos = transformViewFromCameraRelativeRS * worldPos;\n      }\n    `)), u.uniforms.add(new i(\"transformProjFromView\", o => o.camera.projectionMatrix)).code.add(n`vec4 projFromViewPosition(vec3 position) {\nreturn transformProjFromView * vec4(position, 1.0);\n}`), u.code.add(n`float calculateExtensionLength(float extensionLength, float lineLength) {\nreturn extensionLength / (log2(max(1.0, 256.0 / lineLength)) * 0.2 + 1.0);\n}`);\n}\nfunction v(o) {\n  return o === u.Sketch || o === u.Mixed;\n}\nvar u, x;\n!function (o) {\n  o[o.Solid = 0] = \"Solid\", o[o.Sketch = 1] = \"Sketch\", o[o.Mixed = 2] = \"Mixed\", o[o.COUNT = 3] = \"COUNT\";\n}(u || (u = {})), function (o) {\n  o[o.REGULAR = 0] = \"REGULAR\", o[o.SILHOUETTE = 1] = \"SILHOUETTE\";\n}(x || (x = {}));\nexport { x as EdgeSilhouette, u as EdgeType, f as EdgeUtil, v as usesSketchLogic };","map":{"version":3,"names":["maxElevationOffset","o","NormalAttribute","e","DoublePrecision","r","RgbaFloatEncoding","t","Float3DrawUniform","a","Float3PassUniform","l","glsl","n","Matrix3DrawUniform","d","Matrix3PassUniform","m","Matrix4BindUniform","i","Texture2DDrawUniform","s","VertexAttribute","c","f","v","u","vertex","include","silhouette","x","legacy","p","spherical","w","uniforms","add","componentDataTexture","attributes","COMPONENTINDEX","M","F","T","h","P","V","constants","code","float","transformNormalGlobalFromModel","NORMAL2COMPRESSED","transformViewFromCameraRelativeRS","transformWorldFromModelRS","transformWorldFromModelTL","transformWorldFromModelTH","transformWorldFromViewTL","transformWorldFromViewTH","camera","projectionMatrix","Sketch","Mixed","Solid","COUNT","REGULAR","SILHOUETTE","EdgeSilhouette","EdgeType","EdgeUtil","usesSketchLogic"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/3d/webgl-engine/shaders/sources/edgeRenderer/EdgeUtil.glsl.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{maxElevationOffset as o}from\"../../../collections/Component/Material/shader/ComponentData.glsl.js\";import{NormalAttribute as e}from\"../../../core/shaderLibrary/attributes/NormalAttribute.glsl.js\";import{DoublePrecision as r}from\"../../../core/shaderLibrary/util/DoublePrecision.glsl.js\";import{RgbaFloatEncoding as t}from\"../../../core/shaderLibrary/util/RgbaFloatEncoding.glsl.js\";import{Float3DrawUniform as a}from\"../../../core/shaderModules/Float3DrawUniform.js\";import{Float3PassUniform as l}from\"../../../core/shaderModules/Float3PassUniform.js\";import{glsl as n}from\"../../../core/shaderModules/glsl.js\";import{Matrix3DrawUniform as d}from\"../../../core/shaderModules/Matrix3DrawUniform.js\";import{Matrix3PassUniform as m}from\"../../../core/shaderModules/Matrix3PassUniform.js\";import{Matrix4BindUniform as i}from\"../../../core/shaderModules/Matrix4BindUniform.js\";import{Texture2DDrawUniform as s}from\"../../../core/shaderModules/Texture2DDrawUniform.js\";import{VertexAttribute as c}from\"../../../lib/VertexAttribute.js\";function f(f,v){const u=f.vertex;u.include(t),f.include(e,v);const{silhouette:x,legacy:p,spherical:w}=v;u.uniforms.add(new s(\"componentDataTex\",(o=>o.componentDataTexture))),f.attributes.add(c.COMPONENTINDEX,\"float\");const M=0,F=1,T=2,h=3,P=8,V=128;u.constants.add(\"lineWidthFractionFactor\",\"float\",8),u.constants.add(\"extensionLengthOffset\",\"float\",128),u.code.add(n`\n    vec2 _componentTextureCoords(float componentIndex, float fieldOffset) {\n      float fieldIndex = ${n.float(h)}  * componentIndex + fieldOffset;\n      float texSize = float(textureSize(componentDataTex, 0).x);\n      float colIndex = mod(fieldIndex, texSize);\n      float rowIndex = floor(fieldIndex / texSize);\n\n      return vec2(colIndex, rowIndex) + 0.5;\n    }\n\n    struct ComponentData {\n      vec4 color;\n      vec3 normal;\n      vec3 normal2;\n      float lineWidth;\n      float extensionLength;\n      float type;\n      float verticalOffset;\n    };\n\n    ComponentData readComponentData() {\n      vec2 colorIndex = _componentTextureCoords(componentIndex, ${n.float(M)});\n      vec2 otherIndex = _componentTextureCoords(componentIndex, ${n.float(F)});\n      vec2 verticalOffsetIndex = _componentTextureCoords(float(componentIndex), ${n.float(T)} );\n      vec3 normal = normalModel();\n      vec3 normal2 = ${x?n`decompressNormal(normal2Compressed)`:n`normal`};\n\n      vec4 colorValue = texelFetch(componentDataTex, ivec2(colorIndex), 0);\n      vec4 otherValue = texelFetch(componentDataTex, ivec2(otherIndex), 0);\n      float verticalOffset = uninterpolatedRGBAToFloat(texelFetch(componentDataTex, ivec2(verticalOffsetIndex), 0)) * ${n.float(o)};\n\n      return ComponentData(\n        vec4(colorValue.rgb, colorValue.a * otherValue.w), // otherValue.w stores separate opacity\n        normal, normal2,\n        otherValue.x * (255.0 / ${n.float(P)} ),\n        otherValue.y * 255.0 - ${n.float(V)},\n        -(otherValue.z * 255.0) + 0.5, // SOLID (=0/255) needs to be > 0.0, SKETCHY (=1/255) needs to be <= 0;\n        verticalOffset\n      );\n    }\n  `),p?u.code.add(n`vec3 _modelToWorldNormal(vec3 normal) {\nreturn (model * vec4(normal, 0.0)).xyz;\n}\nvec3 _modelToViewNormal(vec3 normal) {\nreturn (localView * model * vec4(normal, 0.0)).xyz;\n}`):(u.uniforms.add(new d(\"transformNormalGlobalFromModel\",(o=>o.transformNormalGlobalFromModel))),u.code.add(n`vec3 _modelToWorldNormal(vec3 normal) {\nreturn transformNormalGlobalFromModel * normal;\n}`)),x?(f.attributes.add(c.NORMAL2COMPRESSED,\"vec2\"),u.code.add(n`vec3 worldNormal(ComponentData data) {\nreturn _modelToWorldNormal(normalize(data.normal + data.normal2));\n}`)):u.code.add(n`vec3 worldNormal(ComponentData data) {\nreturn _modelToWorldNormal(data.normal);\n}`),p?u.code.add(n`void worldAndViewFromModelPosition(vec3 modelPos, float verticalOffset, out vec3 worldPos, out vec3 viewPos) {\nworldPos = (model * vec4(modelPos, 1.0)).xyz;\nviewPos = (localView * vec4(worldPos, 1.0)).xyz;\n}`):(u.include(r,v),u.uniforms.add(new m(\"transformViewFromCameraRelativeRS\",(o=>o.transformViewFromCameraRelativeRS)),new d(\"transformWorldFromModelRS\",(o=>o.transformWorldFromModelRS)),new a(\"transformWorldFromModelTL\",(o=>o.transformWorldFromModelTL)),new a(\"transformWorldFromModelTH\",(o=>o.transformWorldFromModelTH)),new l(\"transformWorldFromViewTL\",(o=>o.transformWorldFromViewTL)),new l(\"transformWorldFromViewTH\",(o=>o.transformWorldFromViewTH))),u.code.add(n`\n      void worldAndViewFromModelPosition(vec3 modelPos, float verticalOffset, out vec3 worldPos, out vec3 viewPos) {\n        vec3 rotatedModelPosition = transformWorldFromModelRS * modelPos;\n\n        vec3 transformCameraRelativeFromModel = dpAdd(\n          transformWorldFromModelTL,\n          transformWorldFromModelTH,\n          -transformWorldFromViewTL,\n          -transformWorldFromViewTH\n        );\n\n        worldPos = transformCameraRelativeFromModel + rotatedModelPosition;\n\n        if (verticalOffset != 0.0) {\n          vec3 vUp = ${w?\"normalize(transformWorldFromModelTL + rotatedModelPosition);\":\"vec3(0.0, 0.0, 1.0);\"}\n          worldPos += verticalOffset * vUp;\n        }\n\n        viewPos = transformViewFromCameraRelativeRS * worldPos;\n      }\n    `)),u.uniforms.add(new i(\"transformProjFromView\",(o=>o.camera.projectionMatrix))).code.add(n`vec4 projFromViewPosition(vec3 position) {\nreturn transformProjFromView * vec4(position, 1.0);\n}`),u.code.add(n`float calculateExtensionLength(float extensionLength, float lineLength) {\nreturn extensionLength / (log2(max(1.0, 256.0 / lineLength)) * 0.2 + 1.0);\n}`)}function v(o){return o===u.Sketch||o===u.Mixed}var u,x;!function(o){o[o.Solid=0]=\"Solid\",o[o.Sketch=1]=\"Sketch\",o[o.Mixed=2]=\"Mixed\",o[o.COUNT=3]=\"COUNT\"}(u||(u={})),function(o){o[o.REGULAR=0]=\"REGULAR\",o[o.SILHOUETTE=1]=\"SILHOUETTE\"}(x||(x={}));export{x as EdgeSilhouette,u as EdgeType,f as EdgeUtil,v as usesSketchLogic};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}