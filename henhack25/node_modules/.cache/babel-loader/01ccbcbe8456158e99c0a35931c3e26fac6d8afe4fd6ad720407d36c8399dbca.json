{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nconst t = 512;\nvar i, s;\n!function (t) {\n  t[t.Unknown = 0] = \"Unknown\", t[t.Point = 1] = \"Point\", t[t.LineString = 2] = \"LineString\", t[t.Polygon = 3] = \"Polygon\";\n}(i || (i = {}));\nclass h {\n  constructor(t, i) {\n    this.x = t, this.y = i;\n  }\n  clone() {\n    return new h(this.x, this.y);\n  }\n  equals(t, i) {\n    return t === this.x && i === this.y;\n  }\n  isEqual(t) {\n    return t.x === this.x && t.y === this.y;\n  }\n  setCoords(t, i) {\n    return this.x = t, this.y = i, this;\n  }\n  normalize() {\n    const t = this.x,\n      i = this.y,\n      s = Math.sqrt(t * t + i * i);\n    return this.x /= s, this.y /= s, this;\n  }\n  rightPerpendicular() {\n    const t = this.x;\n    return this.x = this.y, this.y = -t, this;\n  }\n  leftPerpendicular() {\n    const t = this.x;\n    return this.x = -this.y, this.y = t, this;\n  }\n  move(t, i) {\n    return this.x += t, this.y += i, this;\n  }\n  assign(t) {\n    return this.x = t.x, this.y = t.y, this;\n  }\n  assignAdd(t, i) {\n    return this.x = t.x + i.x, this.y = t.y + i.y, this;\n  }\n  assignSub(t, i) {\n    return this.x = t.x - i.x, this.y = t.y - i.y, this;\n  }\n  rotate(t, i) {\n    const s = this.x,\n      h = this.y;\n    return this.x = s * t - h * i, this.y = s * i + h * t, this;\n  }\n  scale(t) {\n    return this.x *= t, this.y *= t, this;\n  }\n  length() {\n    const t = this.x,\n      i = this.y;\n    return Math.sqrt(t * t + i * i);\n  }\n  sub(t) {\n    return this.x -= t.x, this.y -= t.y, this;\n  }\n  add(t) {\n    return this.x += t.x, this.y += t.y, this;\n  }\n  static distance(t, i) {\n    const s = i.x - t.x,\n      h = i.y - t.y;\n    return Math.sqrt(s * s + h * h);\n  }\n  static add(t, i) {\n    return new h(t.x + i.x, t.y + i.y);\n  }\n  static sub(t, i) {\n    return new h(t.x - i.x, t.y - i.y);\n  }\n}\nclass n {\n  constructor(t, i, s) {\n    this.ratio = t, this.x = i, this.y = s;\n  }\n}\nclass e {\n  constructor(i, s, h, n = 8, e = 8) {\n    this._lines = [], this._starts = [], this.validateTessellation = !0, this._pixelRatio = n, this._pixelMargin = e, this._tileSize = t * n, this._dz = i, this._yPos = s, this._xPos = h;\n  }\n  setPixelMargin(t) {\n    t !== this._pixelMargin && (this._pixelMargin = t, this.setExtent(this._extent));\n  }\n  setExtent(t) {\n    this._extent = t, this._finalRatio = this._tileSize / t * (1 << this._dz);\n    let i = this._pixelRatio * this._pixelMargin;\n    i /= this._finalRatio;\n    const s = t >> this._dz;\n    i > s && (i = s), this._margin = i, this._xmin = s * this._xPos - i, this._ymin = s * this._yPos - i, this._xmax = this._xmin + s + 2 * i, this._ymax = this._ymin + s + 2 * i;\n  }\n  reset(t) {\n    this._type = t, this._lines = [], this._starts = [], this._line = null, this._start = 0;\n  }\n  moveTo(t, i) {\n    this._pushLine(), this._prevIsIn = this._isIn(t, i), this._moveTo(t, i, this._prevIsIn), this._prevPt = new h(t, i), this._firstPt = new h(t, i), this._dist = 0;\n  }\n  lineTo(t, i) {\n    const s = this._isIn(t, i),\n      e = new h(t, i),\n      _ = h.distance(this._prevPt, e);\n    let x, l, y, a, r, o, u, m;\n    if (s) this._prevIsIn ? this._lineTo(t, i, !0) : (x = this._prevPt, l = e, y = this._intersect(l, x), this._start = this._dist + _ * (1 - this._r), this._lineTo(y.x, y.y, !0), this._lineTo(l.x, l.y, !0));else if (this._prevIsIn) l = this._prevPt, x = e, y = this._intersect(l, x), this._lineTo(y.x, y.y, !0), this._lineTo(x.x, x.y, !1);else {\n      const t = this._prevPt,\n        i = e;\n      if (t.x <= this._xmin && i.x <= this._xmin || t.x >= this._xmax && i.x >= this._xmax || t.y <= this._ymin && i.y <= this._ymin || t.y >= this._ymax && i.y >= this._ymax) this._lineTo(i.x, i.y, !1);else {\n        const s = [];\n        if ((t.x < this._xmin && i.x > this._xmin || t.x > this._xmin && i.x < this._xmin) && (a = (this._xmin - t.x) / (i.x - t.x), m = t.y + a * (i.y - t.y), m <= this._ymin ? o = !1 : m >= this._ymax ? o = !0 : s.push(new n(a, this._xmin, m))), (t.x < this._xmax && i.x > this._xmax || t.x > this._xmax && i.x < this._xmax) && (a = (this._xmax - t.x) / (i.x - t.x), m = t.y + a * (i.y - t.y), m <= this._ymin ? o = !1 : m >= this._ymax ? o = !0 : s.push(new n(a, this._xmax, m))), (t.y < this._ymin && i.y > this._ymin || t.y > this._ymin && i.y < this._ymin) && (a = (this._ymin - t.y) / (i.y - t.y), u = t.x + a * (i.x - t.x), u <= this._xmin ? r = !1 : u >= this._xmax ? r = !0 : s.push(new n(a, u, this._ymin))), (t.y < this._ymax && i.y > this._ymax || t.y > this._ymax && i.y < this._ymax) && (a = (this._ymax - t.y) / (i.y - t.y), u = t.x + a * (i.x - t.x), u <= this._xmin ? r = !1 : u >= this._xmax ? r = !0 : s.push(new n(a, u, this._ymax))), 0 === s.length) r ? o ? this._lineTo(this._xmax, this._ymax, !0) : this._lineTo(this._xmax, this._ymin, !0) : o ? this._lineTo(this._xmin, this._ymax, !0) : this._lineTo(this._xmin, this._ymin, !0);else if (s.length > 1 && s[0].ratio > s[1].ratio) this._start = this._dist + _ * s[1].ratio, this._lineTo(s[1].x, s[1].y, !0), this._lineTo(s[0].x, s[0].y, !0);else {\n          this._start = this._dist + _ * s[0].ratio;\n          for (let t = 0; t < s.length; t++) this._lineTo(s[t].x, s[t].y, !0);\n        }\n        this._lineTo(i.x, i.y, !1);\n      }\n    }\n    this._dist += _, this._prevIsIn = s, this._prevPt = e;\n  }\n  close() {\n    if (this._line.length > 2) {\n      const t = this._firstPt,\n        i = this._prevPt;\n      t.x === i.x && t.y === i.y || this.lineTo(t.x, t.y);\n      const s = this._line;\n      let h = s.length;\n      for (; h >= 4 && (s[0].x === s[1].x && s[0].x === s[h - 2].x || s[0].y === s[1].y && s[0].y === s[h - 2].y);) s.pop(), s[0].x = s[h - 2].x, s[0].y = s[h - 2].y, --h;\n    }\n  }\n  result(t = !0) {\n    return this._pushLine(), 0 === this._lines.length ? null : (this._type === i.Polygon && t && x.simplify(this._tileSize, this._margin * this._finalRatio, this._lines), this._lines);\n  }\n  resultWithStarts() {\n    if (this._type !== i.LineString) throw new Error(\"Only valid for lines\");\n    this._pushLine();\n    const t = this._lines,\n      s = t.length;\n    if (0 === s) return null;\n    const h = [];\n    for (let i = 0; i < s; i++) h.push({\n      line: t[i],\n      start: this._starts[i] || 0\n    });\n    return h;\n  }\n  _isIn(t, i) {\n    return t >= this._xmin && t <= this._xmax && i >= this._ymin && i <= this._ymax;\n  }\n  _intersect(t, i) {\n    let s, n, e;\n    if (i.x >= this._xmin && i.x <= this._xmax) n = i.y <= this._ymin ? this._ymin : this._ymax, e = (n - t.y) / (i.y - t.y), s = t.x + e * (i.x - t.x);else if (i.y >= this._ymin && i.y <= this._ymax) s = i.x <= this._xmin ? this._xmin : this._xmax, e = (s - t.x) / (i.x - t.x), n = t.y + e * (i.y - t.y);else {\n      n = i.y <= this._ymin ? this._ymin : this._ymax, s = i.x <= this._xmin ? this._xmin : this._xmax;\n      const h = (s - t.x) / (i.x - t.x),\n        _ = (n - t.y) / (i.y - t.y);\n      h < _ ? (e = h, n = t.y + h * (i.y - t.y)) : (e = _, s = t.x + _ * (i.x - t.x));\n    }\n    return this._r = e, new h(s, n);\n  }\n  _pushLine() {\n    this._line && (this._type === i.Point ? this._line.length > 0 && (this._lines.push(this._line), this._starts.push(this._start)) : this._type === i.LineString ? this._line.length > 1 && (this._lines.push(this._line), this._starts.push(this._start)) : this._type === i.Polygon && this._line.length > 3 && (this._lines.push(this._line), this._starts.push(this._start))), this._line = [], this._start = 0;\n  }\n  _moveTo(t, s, n) {\n    this._type !== i.Polygon ? n && (t = Math.round((t - (this._xmin + this._margin)) * this._finalRatio), s = Math.round((s - (this._ymin + this._margin)) * this._finalRatio), this._line.push(new h(t, s))) : (n || (t < this._xmin && (t = this._xmin), t > this._xmax && (t = this._xmax), s < this._ymin && (s = this._ymin), s > this._ymax && (s = this._ymax)), t = Math.round((t - (this._xmin + this._margin)) * this._finalRatio), s = Math.round((s - (this._ymin + this._margin)) * this._finalRatio), this._line.push(new h(t, s)), this._isH = !1, this._isV = !1);\n  }\n  _lineTo(t, s, n) {\n    let e, _;\n    if (this._type !== i.Polygon) {\n      if (n) {\n        if (t = Math.round((t - (this._xmin + this._margin)) * this._finalRatio), s = Math.round((s - (this._ymin + this._margin)) * this._finalRatio), this._line.length > 0 && (e = this._line[this._line.length - 1], e.equals(t, s))) return;\n        this._line.push(new h(t, s));\n      } else this._line && this._line.length > 0 && this._pushLine();\n    } else if (n || (t < this._xmin && (t = this._xmin), t > this._xmax && (t = this._xmax), s < this._ymin && (s = this._ymin), s > this._ymax && (s = this._ymax)), t = Math.round((t - (this._xmin + this._margin)) * this._finalRatio), s = Math.round((s - (this._ymin + this._margin)) * this._finalRatio), this._line && this._line.length > 0) {\n      e = this._line[this._line.length - 1];\n      const i = e.x === t,\n        n = e.y === s;\n      if (i && n) return;\n      this._isH && i || this._isV && n ? (e.x = t, e.y = s, _ = this._line[this._line.length - 2], _.x === t && _.y === s ? (this._line.pop(), this._line.length <= 1 ? (this._isH = !1, this._isV = !1) : (_ = this._line[this._line.length - 2], this._isH = _.x === t, this._isV = _.y === s)) : (this._isH = _.x === t, this._isV = _.y === s)) : (this._line.push(new h(t, s)), this._isH = i, this._isV = n);\n    } else this._line.push(new h(t, s));\n  }\n}\nclass _ {\n  setExtent(t) {\n    this._ratio = 4096 === t ? 1 : 4096 / t;\n  }\n  get validateTessellation() {\n    return this._ratio < 1;\n  }\n  reset(t) {\n    this._lines = [], this._line = null;\n  }\n  moveTo(t, i) {\n    this._line && this._lines.push(this._line), this._line = [];\n    const s = this._ratio;\n    this._line.push(new h(t * s, i * s));\n  }\n  lineTo(t, i) {\n    const s = this._ratio;\n    this._line.push(new h(t * s, i * s));\n  }\n  close() {\n    const t = this._line;\n    t && !t[0].isEqual(t[t.length - 1]) && t.push(t[0]);\n  }\n  result() {\n    return this._line && this._lines.push(this._line), 0 === this._lines.length ? null : this._lines;\n  }\n}\n!function (t) {\n  t[t.sideLeft = 0] = \"sideLeft\", t[t.sideRight = 1] = \"sideRight\", t[t.sideTop = 2] = \"sideTop\", t[t.sideBottom = 3] = \"sideBottom\";\n}(s || (s = {}));\nclass x {\n  static simplify(t, i, h) {\n    if (!h) return;\n    const n = -i,\n      e = t + i,\n      _ = -i,\n      l = t + i,\n      y = [],\n      a = [],\n      r = h.length;\n    for (let x = 0; x < r; ++x) {\n      const t = h[x];\n      if (!t || t.length < 2) continue;\n      let i,\n        r = t[0];\n      const o = t.length;\n      for (let h = 1; h < o; ++h) i = t[h], r.x === i.x && (r.x <= n && (r.y > i.y ? (y.push(x), y.push(h), y.push(s.sideLeft), y.push(-1)) : (a.push(x), a.push(h), a.push(s.sideLeft), a.push(-1))), r.x >= e && (r.y < i.y ? (y.push(x), y.push(h), y.push(s.sideRight), y.push(-1)) : (a.push(x), a.push(h), a.push(s.sideRight), a.push(-1)))), r.y === i.y && (r.y <= _ && (r.x < i.x ? (y.push(x), y.push(h), y.push(s.sideTop), y.push(-1)) : (a.push(x), a.push(h), a.push(s.sideTop), a.push(-1))), r.y >= l && (r.x > i.x ? (y.push(x), y.push(h), y.push(s.sideBottom), y.push(-1)) : (a.push(x), a.push(h), a.push(s.sideBottom), a.push(-1)))), r = i;\n    }\n    if (0 === y.length || 0 === a.length) return;\n    x.fillParent(h, a, y), x.fillParent(h, y, a);\n    const o = [];\n    x.calcDeltas(o, a, y), x.calcDeltas(o, y, a), x.addDeltas(o, h);\n  }\n  static fillParent(t, i, h) {\n    const n = h.length,\n      e = i.length;\n    for (let _ = 0; _ < e; _ += 4) {\n      const e = i[_],\n        x = i[_ + 1],\n        y = i[_ + 2],\n        a = t[e][x - 1],\n        r = t[e][x];\n      let o = 8092,\n        u = -1;\n      for (let i = 0; i < n; i += 4) {\n        if (h[i + 2] !== y) continue;\n        const n = h[i],\n          e = h[i + 1],\n          _ = t[n][e - 1],\n          x = t[n][e];\n        switch (y) {\n          case s.sideLeft:\n          case s.sideRight:\n            if (l(a.y, _.y, x.y) && l(r.y, _.y, x.y)) {\n              const t = Math.abs(x.y - _.y);\n              t < o && (o = t, u = i);\n            }\n            break;\n          case s.sideTop:\n          case s.sideBottom:\n            if (l(a.x, _.x, x.x) && l(r.x, _.x, x.x)) {\n              const t = Math.abs(x.x - _.x);\n              t < o && (o = t, u = i);\n            }\n        }\n      }\n      i[_ + 3] = u;\n    }\n  }\n  static calcDeltas(t, i, s) {\n    const h = i.length;\n    for (let n = 0; n < h; n += 4) {\n      const h = [],\n        e = x.calcDelta(n, i, s, h);\n      t.push(i[n]), t.push(i[n + 1]), t.push(i[n + 2]), t.push(e);\n    }\n  }\n  static calcDelta(t, i, s, h) {\n    const n = i[t + 3];\n    if (-1 === n) return 0;\n    const e = h.length;\n    return e > 1 && h[e - 2] === n ? 0 : (h.push(n), x.calcDelta(n, s, i, h) + 1);\n  }\n  static addDeltas(t, i) {\n    const h = t.length;\n    let n = 0;\n    for (let s = 0; s < h; s += 4) {\n      const i = t[s + 3];\n      i > n && (n = i);\n    }\n    for (let e = 0; e < h; e += 4) {\n      const h = i[t[e]],\n        _ = t[e + 1],\n        x = n - t[e + 3];\n      switch (t[e + 2]) {\n        case s.sideLeft:\n          h[_ - 1].x -= x, h[_].x -= x, 1 === _ && (h[h.length - 1].x -= x), _ === h.length - 1 && (h[0].x -= x);\n          break;\n        case s.sideRight:\n          h[_ - 1].x += x, h[_].x += x, 1 === _ && (h[h.length - 1].x += x), _ === h.length - 1 && (h[0].x += x);\n          break;\n        case s.sideTop:\n          h[_ - 1].y -= x, h[_].y -= x, 1 === _ && (h[h.length - 1].y -= x), _ === h.length - 1 && (h[0].y -= x);\n          break;\n        case s.sideBottom:\n          h[_ - 1].y += x, h[_].y += x, 1 === _ && (h[h.length - 1].y += x), _ === h.length - 1 && (h[0].y += x);\n      }\n    }\n  }\n}\nconst l = (t, i, s) => t >= i && t <= s || t >= s && t <= i;\nexport { i as GeometryType, h as Point, _ as SimpleBuilder, e as TileClipper };","map":{"version":3,"names":["t","i","s","Unknown","Point","LineString","Polygon","h","constructor","x","y","clone","equals","isEqual","setCoords","normalize","Math","sqrt","rightPerpendicular","leftPerpendicular","move","assign","assignAdd","assignSub","rotate","scale","length","sub","add","distance","n","ratio","e","_lines","_starts","validateTessellation","_pixelRatio","_pixelMargin","_tileSize","_dz","_yPos","_xPos","setPixelMargin","setExtent","_extent","_finalRatio","_margin","_xmin","_ymin","_xmax","_ymax","reset","_type","_line","_start","moveTo","_pushLine","_prevIsIn","_isIn","_moveTo","_prevPt","_firstPt","_dist","lineTo","_","l","a","r","o","u","m","_lineTo","_intersect","_r","push","close","pop","result","simplify","resultWithStarts","Error","line","start","round","_isH","_isV","_ratio","sideLeft","sideRight","sideTop","sideBottom","fillParent","calcDeltas","addDeltas","abs","calcDelta","GeometryType","SimpleBuilder","TileClipper"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/geometry/support/TileClipper.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nconst t=512;var i,s;!function(t){t[t.Unknown=0]=\"Unknown\",t[t.Point=1]=\"Point\",t[t.LineString=2]=\"LineString\",t[t.Polygon=3]=\"Polygon\"}(i||(i={}));class h{constructor(t,i){this.x=t,this.y=i}clone(){return new h(this.x,this.y)}equals(t,i){return t===this.x&&i===this.y}isEqual(t){return t.x===this.x&&t.y===this.y}setCoords(t,i){return this.x=t,this.y=i,this}normalize(){const t=this.x,i=this.y,s=Math.sqrt(t*t+i*i);return this.x/=s,this.y/=s,this}rightPerpendicular(){const t=this.x;return this.x=this.y,this.y=-t,this}leftPerpendicular(){const t=this.x;return this.x=-this.y,this.y=t,this}move(t,i){return this.x+=t,this.y+=i,this}assign(t){return this.x=t.x,this.y=t.y,this}assignAdd(t,i){return this.x=t.x+i.x,this.y=t.y+i.y,this}assignSub(t,i){return this.x=t.x-i.x,this.y=t.y-i.y,this}rotate(t,i){const s=this.x,h=this.y;return this.x=s*t-h*i,this.y=s*i+h*t,this}scale(t){return this.x*=t,this.y*=t,this}length(){const t=this.x,i=this.y;return Math.sqrt(t*t+i*i)}sub(t){return this.x-=t.x,this.y-=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}static distance(t,i){const s=i.x-t.x,h=i.y-t.y;return Math.sqrt(s*s+h*h)}static add(t,i){return new h(t.x+i.x,t.y+i.y)}static sub(t,i){return new h(t.x-i.x,t.y-i.y)}}class n{constructor(t,i,s){this.ratio=t,this.x=i,this.y=s}}class e{constructor(i,s,h,n=8,e=8){this._lines=[],this._starts=[],this.validateTessellation=!0,this._pixelRatio=n,this._pixelMargin=e,this._tileSize=t*n,this._dz=i,this._yPos=s,this._xPos=h}setPixelMargin(t){t!==this._pixelMargin&&(this._pixelMargin=t,this.setExtent(this._extent))}setExtent(t){this._extent=t,this._finalRatio=this._tileSize/t*(1<<this._dz);let i=this._pixelRatio*this._pixelMargin;i/=this._finalRatio;const s=t>>this._dz;i>s&&(i=s),this._margin=i,this._xmin=s*this._xPos-i,this._ymin=s*this._yPos-i,this._xmax=this._xmin+s+2*i,this._ymax=this._ymin+s+2*i}reset(t){this._type=t,this._lines=[],this._starts=[],this._line=null,this._start=0}moveTo(t,i){this._pushLine(),this._prevIsIn=this._isIn(t,i),this._moveTo(t,i,this._prevIsIn),this._prevPt=new h(t,i),this._firstPt=new h(t,i),this._dist=0}lineTo(t,i){const s=this._isIn(t,i),e=new h(t,i),_=h.distance(this._prevPt,e);let x,l,y,a,r,o,u,m;if(s)this._prevIsIn?this._lineTo(t,i,!0):(x=this._prevPt,l=e,y=this._intersect(l,x),this._start=this._dist+_*(1-this._r),this._lineTo(y.x,y.y,!0),this._lineTo(l.x,l.y,!0));else if(this._prevIsIn)l=this._prevPt,x=e,y=this._intersect(l,x),this._lineTo(y.x,y.y,!0),this._lineTo(x.x,x.y,!1);else{const t=this._prevPt,i=e;if(t.x<=this._xmin&&i.x<=this._xmin||t.x>=this._xmax&&i.x>=this._xmax||t.y<=this._ymin&&i.y<=this._ymin||t.y>=this._ymax&&i.y>=this._ymax)this._lineTo(i.x,i.y,!1);else{const s=[];if((t.x<this._xmin&&i.x>this._xmin||t.x>this._xmin&&i.x<this._xmin)&&(a=(this._xmin-t.x)/(i.x-t.x),m=t.y+a*(i.y-t.y),m<=this._ymin?o=!1:m>=this._ymax?o=!0:s.push(new n(a,this._xmin,m))),(t.x<this._xmax&&i.x>this._xmax||t.x>this._xmax&&i.x<this._xmax)&&(a=(this._xmax-t.x)/(i.x-t.x),m=t.y+a*(i.y-t.y),m<=this._ymin?o=!1:m>=this._ymax?o=!0:s.push(new n(a,this._xmax,m))),(t.y<this._ymin&&i.y>this._ymin||t.y>this._ymin&&i.y<this._ymin)&&(a=(this._ymin-t.y)/(i.y-t.y),u=t.x+a*(i.x-t.x),u<=this._xmin?r=!1:u>=this._xmax?r=!0:s.push(new n(a,u,this._ymin))),(t.y<this._ymax&&i.y>this._ymax||t.y>this._ymax&&i.y<this._ymax)&&(a=(this._ymax-t.y)/(i.y-t.y),u=t.x+a*(i.x-t.x),u<=this._xmin?r=!1:u>=this._xmax?r=!0:s.push(new n(a,u,this._ymax))),0===s.length)r?o?this._lineTo(this._xmax,this._ymax,!0):this._lineTo(this._xmax,this._ymin,!0):o?this._lineTo(this._xmin,this._ymax,!0):this._lineTo(this._xmin,this._ymin,!0);else if(s.length>1&&s[0].ratio>s[1].ratio)this._start=this._dist+_*s[1].ratio,this._lineTo(s[1].x,s[1].y,!0),this._lineTo(s[0].x,s[0].y,!0);else{this._start=this._dist+_*s[0].ratio;for(let t=0;t<s.length;t++)this._lineTo(s[t].x,s[t].y,!0)}this._lineTo(i.x,i.y,!1)}}this._dist+=_,this._prevIsIn=s,this._prevPt=e}close(){if(this._line.length>2){const t=this._firstPt,i=this._prevPt;t.x===i.x&&t.y===i.y||this.lineTo(t.x,t.y);const s=this._line;let h=s.length;for(;h>=4&&(s[0].x===s[1].x&&s[0].x===s[h-2].x||s[0].y===s[1].y&&s[0].y===s[h-2].y);)s.pop(),s[0].x=s[h-2].x,s[0].y=s[h-2].y,--h}}result(t=!0){return this._pushLine(),0===this._lines.length?null:(this._type===i.Polygon&&t&&x.simplify(this._tileSize,this._margin*this._finalRatio,this._lines),this._lines)}resultWithStarts(){if(this._type!==i.LineString)throw new Error(\"Only valid for lines\");this._pushLine();const t=this._lines,s=t.length;if(0===s)return null;const h=[];for(let i=0;i<s;i++)h.push({line:t[i],start:this._starts[i]||0});return h}_isIn(t,i){return t>=this._xmin&&t<=this._xmax&&i>=this._ymin&&i<=this._ymax}_intersect(t,i){let s,n,e;if(i.x>=this._xmin&&i.x<=this._xmax)n=i.y<=this._ymin?this._ymin:this._ymax,e=(n-t.y)/(i.y-t.y),s=t.x+e*(i.x-t.x);else if(i.y>=this._ymin&&i.y<=this._ymax)s=i.x<=this._xmin?this._xmin:this._xmax,e=(s-t.x)/(i.x-t.x),n=t.y+e*(i.y-t.y);else{n=i.y<=this._ymin?this._ymin:this._ymax,s=i.x<=this._xmin?this._xmin:this._xmax;const h=(s-t.x)/(i.x-t.x),_=(n-t.y)/(i.y-t.y);h<_?(e=h,n=t.y+h*(i.y-t.y)):(e=_,s=t.x+_*(i.x-t.x))}return this._r=e,new h(s,n)}_pushLine(){this._line&&(this._type===i.Point?this._line.length>0&&(this._lines.push(this._line),this._starts.push(this._start)):this._type===i.LineString?this._line.length>1&&(this._lines.push(this._line),this._starts.push(this._start)):this._type===i.Polygon&&this._line.length>3&&(this._lines.push(this._line),this._starts.push(this._start))),this._line=[],this._start=0}_moveTo(t,s,n){this._type!==i.Polygon?n&&(t=Math.round((t-(this._xmin+this._margin))*this._finalRatio),s=Math.round((s-(this._ymin+this._margin))*this._finalRatio),this._line.push(new h(t,s))):(n||(t<this._xmin&&(t=this._xmin),t>this._xmax&&(t=this._xmax),s<this._ymin&&(s=this._ymin),s>this._ymax&&(s=this._ymax)),t=Math.round((t-(this._xmin+this._margin))*this._finalRatio),s=Math.round((s-(this._ymin+this._margin))*this._finalRatio),this._line.push(new h(t,s)),this._isH=!1,this._isV=!1)}_lineTo(t,s,n){let e,_;if(this._type!==i.Polygon)if(n){if(t=Math.round((t-(this._xmin+this._margin))*this._finalRatio),s=Math.round((s-(this._ymin+this._margin))*this._finalRatio),this._line.length>0&&(e=this._line[this._line.length-1],e.equals(t,s)))return;this._line.push(new h(t,s))}else this._line&&this._line.length>0&&this._pushLine();else if(n||(t<this._xmin&&(t=this._xmin),t>this._xmax&&(t=this._xmax),s<this._ymin&&(s=this._ymin),s>this._ymax&&(s=this._ymax)),t=Math.round((t-(this._xmin+this._margin))*this._finalRatio),s=Math.round((s-(this._ymin+this._margin))*this._finalRatio),this._line&&this._line.length>0){e=this._line[this._line.length-1];const i=e.x===t,n=e.y===s;if(i&&n)return;this._isH&&i||this._isV&&n?(e.x=t,e.y=s,_=this._line[this._line.length-2],_.x===t&&_.y===s?(this._line.pop(),this._line.length<=1?(this._isH=!1,this._isV=!1):(_=this._line[this._line.length-2],this._isH=_.x===t,this._isV=_.y===s)):(this._isH=_.x===t,this._isV=_.y===s)):(this._line.push(new h(t,s)),this._isH=i,this._isV=n)}else this._line.push(new h(t,s))}}class _{setExtent(t){this._ratio=4096===t?1:4096/t}get validateTessellation(){return this._ratio<1}reset(t){this._lines=[],this._line=null}moveTo(t,i){this._line&&this._lines.push(this._line),this._line=[];const s=this._ratio;this._line.push(new h(t*s,i*s))}lineTo(t,i){const s=this._ratio;this._line.push(new h(t*s,i*s))}close(){const t=this._line;t&&!t[0].isEqual(t[t.length-1])&&t.push(t[0])}result(){return this._line&&this._lines.push(this._line),0===this._lines.length?null:this._lines}}!function(t){t[t.sideLeft=0]=\"sideLeft\",t[t.sideRight=1]=\"sideRight\",t[t.sideTop=2]=\"sideTop\",t[t.sideBottom=3]=\"sideBottom\"}(s||(s={}));class x{static simplify(t,i,h){if(!h)return;const n=-i,e=t+i,_=-i,l=t+i,y=[],a=[],r=h.length;for(let x=0;x<r;++x){const t=h[x];if(!t||t.length<2)continue;let i,r=t[0];const o=t.length;for(let h=1;h<o;++h)i=t[h],r.x===i.x&&(r.x<=n&&(r.y>i.y?(y.push(x),y.push(h),y.push(s.sideLeft),y.push(-1)):(a.push(x),a.push(h),a.push(s.sideLeft),a.push(-1))),r.x>=e&&(r.y<i.y?(y.push(x),y.push(h),y.push(s.sideRight),y.push(-1)):(a.push(x),a.push(h),a.push(s.sideRight),a.push(-1)))),r.y===i.y&&(r.y<=_&&(r.x<i.x?(y.push(x),y.push(h),y.push(s.sideTop),y.push(-1)):(a.push(x),a.push(h),a.push(s.sideTop),a.push(-1))),r.y>=l&&(r.x>i.x?(y.push(x),y.push(h),y.push(s.sideBottom),y.push(-1)):(a.push(x),a.push(h),a.push(s.sideBottom),a.push(-1)))),r=i}if(0===y.length||0===a.length)return;x.fillParent(h,a,y),x.fillParent(h,y,a);const o=[];x.calcDeltas(o,a,y),x.calcDeltas(o,y,a),x.addDeltas(o,h)}static fillParent(t,i,h){const n=h.length,e=i.length;for(let _=0;_<e;_+=4){const e=i[_],x=i[_+1],y=i[_+2],a=t[e][x-1],r=t[e][x];let o=8092,u=-1;for(let i=0;i<n;i+=4){if(h[i+2]!==y)continue;const n=h[i],e=h[i+1],_=t[n][e-1],x=t[n][e];switch(y){case s.sideLeft:case s.sideRight:if(l(a.y,_.y,x.y)&&l(r.y,_.y,x.y)){const t=Math.abs(x.y-_.y);t<o&&(o=t,u=i)}break;case s.sideTop:case s.sideBottom:if(l(a.x,_.x,x.x)&&l(r.x,_.x,x.x)){const t=Math.abs(x.x-_.x);t<o&&(o=t,u=i)}}}i[_+3]=u}}static calcDeltas(t,i,s){const h=i.length;for(let n=0;n<h;n+=4){const h=[],e=x.calcDelta(n,i,s,h);t.push(i[n]),t.push(i[n+1]),t.push(i[n+2]),t.push(e)}}static calcDelta(t,i,s,h){const n=i[t+3];if(-1===n)return 0;const e=h.length;return e>1&&h[e-2]===n?0:(h.push(n),x.calcDelta(n,s,i,h)+1)}static addDeltas(t,i){const h=t.length;let n=0;for(let s=0;s<h;s+=4){const i=t[s+3];i>n&&(n=i)}for(let e=0;e<h;e+=4){const h=i[t[e]],_=t[e+1],x=n-t[e+3];switch(t[e+2]){case s.sideLeft:h[_-1].x-=x,h[_].x-=x,1===_&&(h[h.length-1].x-=x),_===h.length-1&&(h[0].x-=x);break;case s.sideRight:h[_-1].x+=x,h[_].x+=x,1===_&&(h[h.length-1].x+=x),_===h.length-1&&(h[0].x+=x);break;case s.sideTop:h[_-1].y-=x,h[_].y-=x,1===_&&(h[h.length-1].y-=x),_===h.length-1&&(h[0].y-=x);break;case s.sideBottom:h[_-1].y+=x,h[_].y+=x,1===_&&(h[h.length-1].y+=x),_===h.length-1&&(h[0].y+=x)}}}}const l=(t,i,s)=>t>=i&&t<=s||t>=s&&t<=i;export{i as GeometryType,h as Point,_ as SimpleBuilder,e as TileClipper};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}