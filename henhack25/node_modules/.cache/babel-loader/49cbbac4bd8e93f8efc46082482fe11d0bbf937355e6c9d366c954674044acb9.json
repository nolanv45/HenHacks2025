{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { getMetersPerUnit as t, supportsUnit as e } from \"../../../../symbols/support/unitConversionUtils.js\";\nimport { execute as n, clone as s, setContextFeature as i, createFeature as r } from \"./featureExpressionInfoUtils.js\";\nclass o {\n  constructor() {\n    this._meterUnitOffset = 0, this._renderUnitOffset = 0, this._unit = \"meters\", this._metersPerElevationInfoUnit = 1, this._featureExpressionInfoContext = null, this.centerPointInElevationSR = null, this.mode = null;\n  }\n  get featureExpressionInfoContext() {\n    return this._featureExpressionInfoContext;\n  }\n  get meterUnitOffset() {\n    return this._meterUnitOffset;\n  }\n  get unit() {\n    return this._unit;\n  }\n  set unit(e) {\n    this._unit = e, this._metersPerElevationInfoUnit = t(e);\n  }\n  get requiresSampledElevationInfo() {\n    return \"absolute-height\" !== this.mode;\n  }\n  reset() {\n    this.mode = null, this._meterUnitOffset = 0, this._renderUnitOffset = 0, this._featureExpressionInfoContext = null, this.unit = \"meters\";\n  }\n  set offsetMeters(t) {\n    this._meterUnitOffset = t, this._renderUnitOffset = 0;\n  }\n  set offsetElevationInfoUnits(t) {\n    this._meterUnitOffset = t * this._metersPerElevationInfoUnit, this._renderUnitOffset = 0;\n  }\n  addOffsetRenderUnits(t) {\n    this._renderUnitOffset += t;\n  }\n  geometryZWithOffset(t, e) {\n    const n = this.calculateOffsetRenderUnits(e);\n    return null != this.featureExpressionInfoContext ? n : t + n;\n  }\n  calculateOffsetRenderUnits(t) {\n    let e = this._meterUnitOffset;\n    const s = this.featureExpressionInfoContext;\n    return null != s && (e += n(s) * this._metersPerElevationInfoUnit), e / t.unitInMeters + this._renderUnitOffset;\n  }\n  setFromElevationInfo(t) {\n    this.mode = t.mode, this.unit = e(t.unit) ? t.unit : \"meters\", this.offsetElevationInfoUnits = t.offset ?? 0;\n  }\n  updateFeatureExpressionInfoContext(t, e, n) {\n    if (null == t) return void (this._featureExpressionInfoContext = null);\n    const o = t?.arcade;\n    o && null != e && null != n ? (this._featureExpressionInfoContext = s(t), i(this._featureExpressionInfoContext, r(o.modules, e, n))) : this._featureExpressionInfoContext = t;\n  }\n  static fromElevationInfo(t) {\n    const e = new o();\n    return null != t && e.setFromElevationInfo(t), e;\n  }\n}\nexport { o as ElevationContext };","map":{"version":3,"names":["getMetersPerUnit","t","supportsUnit","e","execute","n","clone","s","setContextFeature","i","createFeature","r","o","constructor","_meterUnitOffset","_renderUnitOffset","_unit","_metersPerElevationInfoUnit","_featureExpressionInfoContext","centerPointInElevationSR","mode","featureExpressionInfoContext","meterUnitOffset","unit","requiresSampledElevationInfo","reset","offsetMeters","offsetElevationInfoUnits","addOffsetRenderUnits","geometryZWithOffset","calculateOffsetRenderUnits","unitInMeters","setFromElevationInfo","offset","updateFeatureExpressionInfoContext","arcade","modules","fromElevationInfo","ElevationContext"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/3d/layers/graphics/ElevationContext.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{getMetersPerUnit as t,supportsUnit as e}from\"../../../../symbols/support/unitConversionUtils.js\";import{execute as n,clone as s,setContextFeature as i,createFeature as r}from\"./featureExpressionInfoUtils.js\";class o{constructor(){this._meterUnitOffset=0,this._renderUnitOffset=0,this._unit=\"meters\",this._metersPerElevationInfoUnit=1,this._featureExpressionInfoContext=null,this.centerPointInElevationSR=null,this.mode=null}get featureExpressionInfoContext(){return this._featureExpressionInfoContext}get meterUnitOffset(){return this._meterUnitOffset}get unit(){return this._unit}set unit(e){this._unit=e,this._metersPerElevationInfoUnit=t(e)}get requiresSampledElevationInfo(){return\"absolute-height\"!==this.mode}reset(){this.mode=null,this._meterUnitOffset=0,this._renderUnitOffset=0,this._featureExpressionInfoContext=null,this.unit=\"meters\"}set offsetMeters(t){this._meterUnitOffset=t,this._renderUnitOffset=0}set offsetElevationInfoUnits(t){this._meterUnitOffset=t*this._metersPerElevationInfoUnit,this._renderUnitOffset=0}addOffsetRenderUnits(t){this._renderUnitOffset+=t}geometryZWithOffset(t,e){const n=this.calculateOffsetRenderUnits(e);return null!=this.featureExpressionInfoContext?n:t+n}calculateOffsetRenderUnits(t){let e=this._meterUnitOffset;const s=this.featureExpressionInfoContext;return null!=s&&(e+=n(s)*this._metersPerElevationInfoUnit),e/t.unitInMeters+this._renderUnitOffset}setFromElevationInfo(t){this.mode=t.mode,this.unit=e(t.unit)?t.unit:\"meters\",this.offsetElevationInfoUnits=t.offset??0}updateFeatureExpressionInfoContext(t,e,n){if(null==t)return void(this._featureExpressionInfoContext=null);const o=t?.arcade;o&&null!=e&&null!=n?(this._featureExpressionInfoContext=s(t),i(this._featureExpressionInfoContext,r(o.modules,e,n))):this._featureExpressionInfoContext=t}static fromElevationInfo(t){const e=new o;return null!=t&&e.setFromElevationInfo(t),e}}export{o as ElevationContext};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}