{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { fromValues as t, create as h } from \"../../../../../core/libs/gl-matrix-2/factories/vec2f32.js\";\nclass i {\n  constructor(i, e, s, r) {\n    this.transformedX = 0, this.transformedY = 0, this.center = t(i, e), this.centerT = h(), this.halfWidth = s / 2, this.halfHeight = r / 2, this.width = s, this.height = r;\n  }\n  get x() {\n    return this.center[0];\n  }\n  get y() {\n    return this.center[1];\n  }\n  get blX() {\n    return this.center[0] + this.halfWidth;\n  }\n  get blY() {\n    return this.center[1] + this.halfHeight;\n  }\n  get trX() {\n    return this.center[0] - this.halfWidth;\n  }\n  get trY() {\n    return this.center[1] - this.halfHeight;\n  }\n  get xmin() {\n    return this.x - this.halfWidth;\n  }\n  get xmax() {\n    return this.x + this.halfWidth;\n  }\n  get ymin() {\n    return this.y - this.halfHeight;\n  }\n  get ymax() {\n    return this.y + this.halfHeight;\n  }\n  set x(t) {\n    this.center[0] = t;\n  }\n  set y(t) {\n    this.center[1] = t;\n  }\n  clone() {\n    return new i(this.x, this.y, this.width, this.height);\n  }\n  serialize(t) {\n    return t.writeF32(this.center[0]), t.writeF32(this.center[1]), t.push(this.width), t.push(this.height), t;\n  }\n  findCollisionDelta(t) {\n    let h = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 4;\n    const i = Math.abs(t.centerT[0] - this.centerT[0]),\n      e = Math.abs(t.centerT[1] - this.centerT[1]),\n      s = (t.halfWidth + this.halfWidth + h) / i,\n      r = (t.halfHeight + this.halfHeight + h) / e,\n      n = Math.min(s, r);\n    return Math.log2(n);\n  }\n  extend(t) {\n    const h = Math.min(this.xmin, t.xmin),\n      i = Math.min(this.ymin, t.ymin),\n      e = Math.max(this.xmax, t.xmax) - h,\n      s = Math.max(this.ymax, t.ymax) - i,\n      r = h + e / 2,\n      n = i + s / 2;\n    this.width = e, this.height = s, this.halfWidth = e / 2, this.halfHeight = s / 2, this.x = r, this.y = n;\n  }\n  static deserialize(t) {\n    const h = t.readF32(),\n      e = t.readF32(),\n      s = t.readInt32(),\n      r = t.readInt32();\n    return new i(h, e, s, r);\n  }\n}\nexport { i as default };","map":{"version":3,"names":["fromValues","t","create","h","i","constructor","e","s","r","transformedX","transformedY","center","centerT","halfWidth","halfHeight","width","height","x","y","blX","blY","trX","trY","xmin","xmax","ymin","ymax","clone","serialize","writeF32","push","findCollisionDelta","arguments","length","undefined","Math","abs","n","min","log2","extend","max","deserialize","readF32","readInt32","default"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/2d/engine/webgl/collisions/BoundingBox.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{fromValues as t,create as h}from\"../../../../../core/libs/gl-matrix-2/factories/vec2f32.js\";class i{constructor(i,e,s,r){this.transformedX=0,this.transformedY=0,this.center=t(i,e),this.centerT=h(),this.halfWidth=s/2,this.halfHeight=r/2,this.width=s,this.height=r}get x(){return this.center[0]}get y(){return this.center[1]}get blX(){return this.center[0]+this.halfWidth}get blY(){return this.center[1]+this.halfHeight}get trX(){return this.center[0]-this.halfWidth}get trY(){return this.center[1]-this.halfHeight}get xmin(){return this.x-this.halfWidth}get xmax(){return this.x+this.halfWidth}get ymin(){return this.y-this.halfHeight}get ymax(){return this.y+this.halfHeight}set x(t){this.center[0]=t}set y(t){this.center[1]=t}clone(){return new i(this.x,this.y,this.width,this.height)}serialize(t){return t.writeF32(this.center[0]),t.writeF32(this.center[1]),t.push(this.width),t.push(this.height),t}findCollisionDelta(t,h=4){const i=Math.abs(t.centerT[0]-this.centerT[0]),e=Math.abs(t.centerT[1]-this.centerT[1]),s=(t.halfWidth+this.halfWidth+h)/i,r=(t.halfHeight+this.halfHeight+h)/e,n=Math.min(s,r);return Math.log2(n)}extend(t){const h=Math.min(this.xmin,t.xmin),i=Math.min(this.ymin,t.ymin),e=Math.max(this.xmax,t.xmax)-h,s=Math.max(this.ymax,t.ymax)-i,r=h+e/2,n=i+s/2;this.width=e,this.height=s,this.halfWidth=e/2,this.halfHeight=s/2,this.x=r,this.y=n}static deserialize(t){const h=t.readF32(),e=t.readF32(),s=t.readInt32(),r=t.readInt32();return new i(h,e,s,r)}}export{i as default};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}