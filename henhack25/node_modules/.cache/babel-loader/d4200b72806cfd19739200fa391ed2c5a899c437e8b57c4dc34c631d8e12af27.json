{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { deg2rad as e } from \"../core/mathUtils.js\";\nimport { set as i } from \"../core/libs/gl-matrix-2/math/vec2.js\";\nimport { create as t } from \"../core/libs/gl-matrix-2/factories/vec2f64.js\";\nimport { d as n, n as a, l as o, j as r, t as l, c as s, e as c, g as d } from \"./vec32.js\";\nimport { create as f } from \"../core/libs/gl-matrix-2/factories/vec3f64.js\";\nimport { t as p } from \"./vec42.js\";\nimport { create as g } from \"../core/libs/gl-matrix-2/factories/vec4f64.js\";\nimport { pointAt as h } from \"../geometry/support/lineSegment.js\";\nimport { create as m, fromPositionAndNormal as u } from \"../geometry/support/plane.js\";\nimport { a as w, c as x } from \"./sphere.js\";\nimport { Laserline as v } from \"../views/3d/webgl-engine/core/shaderLibrary/Laserline.glsl.js\";\nimport { ScreenSpacePass as P } from \"../views/3d/webgl-engine/core/shaderLibrary/ScreenSpacePass.glsl.js\";\nimport { Float2PassUniform as b } from \"../views/3d/webgl-engine/core/shaderModules/Float2PassUniform.js\";\nimport { Float3BindUniform as D } from \"../views/3d/webgl-engine/core/shaderModules/Float3BindUniform.js\";\nimport { Float3PassUniform as M } from \"../views/3d/webgl-engine/core/shaderModules/Float3PassUniform.js\";\nimport { Float4PassUniform as S } from \"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";\nimport { FloatBindUniform as C } from \"../views/3d/webgl-engine/core/shaderModules/FloatBindUniform.js\";\nimport { FloatPassUniform as L } from \"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";\nimport { glsl as j } from \"../views/3d/webgl-engine/core/shaderModules/glsl.js\";\nimport { ShaderBuilder as A } from \"../views/webgl/ShaderBuilder.js\";\nconst V = e(6);\nfunction y(e) {\n  const i = new A();\n  i.include(P), i.include(v, e);\n  const t = i.fragment;\n  if (e.lineVerticalPlaneEnabled || e.heightManifoldEnabled) if (t.uniforms.add(new L(\"maxPixelDistance\", (i, t) => e.heightManifoldEnabled ? 2 * t.camera.computeScreenPixelSizeAt(i.heightManifoldTarget) : 2 * t.camera.computeScreenPixelSizeAt(i.lineVerticalPlaneSegment.origin))), t.code.add(j`float planeDistancePixels(vec4 plane, vec3 pos) {\nfloat dist = dot(plane.xyz, pos) + plane.w;\nfloat width = fwidth(dist);\ndist /= min(width, maxPixelDistance);\nreturn abs(dist);\n}`), e.spherical) {\n    const e = (e, i, t) => l(e, i.heightManifoldTarget, t.camera.viewMatrix),\n      i = (e, i) => l(e, [0, 0, 0], i.camera.viewMatrix);\n    t.uniforms.add(new S(\"heightManifoldOrigin\", (t, r) => (e(F, t, r), i(H, r), n(H, H, F), a(G, H), G[3] = o(H), G)), new D(\"globalOrigin\", e => i(F, e)), new L(\"cosSphericalAngleThreshold\", (e, i) => 1 - Math.max(2, r(i.camera.eye, e.heightManifoldTarget) * i.camera.perRenderPixelRatio) / o(e.heightManifoldTarget))), t.code.add(j`float globeDistancePixels(float posInGlobalOriginLength) {\nfloat dist = abs(posInGlobalOriginLength - heightManifoldOrigin.w);\nfloat width = fwidth(dist);\ndist /= min(width, maxPixelDistance);\nreturn abs(dist);\n}\nfloat heightManifoldDistancePixels(vec4 heightPlane, vec3 pos) {\nvec3 posInGlobalOriginNorm = normalize(globalOrigin - pos);\nfloat cosAngle = dot(posInGlobalOriginNorm, heightManifoldOrigin.xyz);\nvec3 posInGlobalOrigin = globalOrigin - pos;\nfloat posInGlobalOriginLength = length(posInGlobalOrigin);\nfloat sphericalDistance = globeDistancePixels(posInGlobalOriginLength);\nfloat planarDistance = planeDistancePixels(heightPlane, pos);\nreturn cosAngle < cosSphericalAngleThreshold ? sphericalDistance : planarDistance;\n}`);\n  } else t.code.add(j`float heightManifoldDistancePixels(vec4 heightPlane, vec3 pos) {\nreturn planeDistancePixels(heightPlane, pos);\n}`);\n  if (e.pointDistanceEnabled && (t.uniforms.add(new L(\"maxPixelDistance\", (e, i) => 2 * i.camera.computeScreenPixelSizeAt(e.pointDistanceTarget))), t.code.add(j`float sphereDistancePixels(vec4 sphere, vec3 pos) {\nfloat dist = distance(sphere.xyz, pos) - sphere.w;\nfloat width = fwidth(dist);\ndist /= min(width, maxPixelDistance);\nreturn abs(dist);\n}`)), e.intersectsLineEnabled && t.uniforms.add(new C(\"perScreenPixelRatio\", e => e.camera.perScreenPixelRatio)).code.add(j`float lineDistancePixels(vec3 start, vec3 dir, float radius, vec3 pos) {\nfloat dist = length(cross(dir, pos - start)) / (length(pos) * perScreenPixelRatio);\nreturn abs(dist) - radius;\n}`), (e.lineVerticalPlaneEnabled || e.intersectsLineEnabled) && t.code.add(j`bool pointIsWithinLine(vec3 pos, vec3 start, vec3 end) {\nvec3 dir = end - start;\nfloat t2 = dot(dir, pos - start);\nfloat l2 = dot(dir, dir);\nreturn t2 >= 0.0 && t2 <= l2;\n}`), t.main.add(j`vec3 pos;\nvec3 normal;\nfloat angleCutoffAdjust;\nfloat depthDiscontinuityAlpha;\nif (!laserlineReconstructFromDepth(pos, normal, angleCutoffAdjust, depthDiscontinuityAlpha)) {\nfragColor = vec4(0.0);\nreturn;\n}\nvec4 color = vec4(0.0);`), e.heightManifoldEnabled) {\n    t.uniforms.add(new b(\"angleCutoff\", e => O(e)), new S(\"heightPlane\", (e, i) => R(e.heightManifoldTarget, e.renderCoordsHelper.worldUpAtPosition(e.heightManifoldTarget, F), i.camera.viewMatrix)));\n    const i = e.spherical ? j`normalize(globalOrigin - pos)` : j`heightPlane.xyz`;\n    t.main.add(j`\n      vec2 angleCutoffAdjusted = angleCutoff - angleCutoffAdjust;\n      // Fade out laserlines on flat surfaces\n      float heightManifoldAlpha = 1.0 - smoothstep(angleCutoffAdjusted.x, angleCutoffAdjusted.y, abs(dot(normal, ${i})));\n      vec4 heightManifoldColor = laserlineProfile(heightManifoldDistancePixels(heightPlane, pos));\n      color = max(color, heightManifoldColor * heightManifoldAlpha);`);\n  }\n  return e.pointDistanceEnabled && (t.uniforms.add(new b(\"angleCutoff\", e => O(e)), new S(\"pointDistanceSphere\", (e, i) => E(e, i))), t.main.add(j`float pointDistanceSphereDistance = sphereDistancePixels(pointDistanceSphere, pos);\nvec4 pointDistanceSphereColor = laserlineProfile(pointDistanceSphereDistance);\nfloat pointDistanceSphereAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, abs(dot(normal, normalize(pos - pointDistanceSphere.xyz))));\ncolor = max(color, pointDistanceSphereColor * pointDistanceSphereAlpha);`)), e.lineVerticalPlaneEnabled && (t.uniforms.add(new b(\"angleCutoff\", e => O(e)), new S(\"lineVerticalPlane\", (e, i) => z(e, i)), new M(\"lineVerticalStart\", (e, i) => I(e, i)), new M(\"lineVerticalEnd\", (e, i) => T(e, i))), t.main.add(j`if (pointIsWithinLine(pos, lineVerticalStart, lineVerticalEnd)) {\nfloat lineVerticalDistance = planeDistancePixels(lineVerticalPlane, pos);\nvec4 lineVerticalColor = laserlineProfile(lineVerticalDistance);\nfloat lineVerticalAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, abs(dot(normal, lineVerticalPlane.xyz)));\ncolor = max(color, lineVerticalColor * lineVerticalAlpha);\n}`)), e.intersectsLineEnabled && (t.uniforms.add(new b(\"angleCutoff\", e => O(e)), new M(\"intersectsLineStart\", (e, i) => l(F, e.lineStartWorld, i.camera.viewMatrix)), new M(\"intersectsLineEnd\", (e, i) => l(F, e.lineEndWorld, i.camera.viewMatrix)), new M(\"intersectsLineDirection\", (e, i) => (s(G, e.intersectsLineSegment.vector), G[3] = 0, a(F, p(G, G, i.camera.viewMatrix)))), new L(\"intersectsLineRadius\", e => e.intersectsLineRadius)), t.main.add(j`if (pointIsWithinLine(pos, intersectsLineStart, intersectsLineEnd)) {\nfloat intersectsLineDistance = lineDistancePixels(intersectsLineStart, intersectsLineDirection, intersectsLineRadius, pos);\nvec4 intersectsLineColor = laserlineProfile(intersectsLineDistance);\nfloat intersectsLineAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, 1.0 - abs(dot(normal, intersectsLineDirection)));\ncolor = max(color, intersectsLineColor * intersectsLineAlpha);\n}`)), t.main.add(j`fragColor = laserlineOutput(color * depthDiscontinuityAlpha);`), i;\n}\nfunction O(t) {\n  return i(U, Math.cos(t.angleCutoff), Math.cos(Math.max(0, t.angleCutoff - e(2))));\n}\nfunction E(e, i) {\n  return l(w(N), e.pointDistanceOrigin, i.camera.viewMatrix), N[3] = r(e.pointDistanceOrigin, e.pointDistanceTarget), N;\n}\nfunction z(e, i) {\n  const t = h(e.lineVerticalPlaneSegment, .5, F),\n    n = e.renderCoordsHelper.worldUpAtPosition(t, W),\n    o = a(H, e.lineVerticalPlaneSegment.vector),\n    r = c(F, n, o);\n  return a(r, r), R(e.lineVerticalPlaneSegment.origin, r, i.camera.viewMatrix);\n}\nfunction I(e, i) {\n  const t = s(F, e.lineVerticalPlaneSegment.origin);\n  return e.renderCoordsHelper.setAltitude(t, 0), l(t, t, i.camera.viewMatrix);\n}\nfunction T(e, i) {\n  const t = d(F, e.lineVerticalPlaneSegment.origin, e.lineVerticalPlaneSegment.vector);\n  return e.renderCoordsHelper.setAltitude(t, 0), l(t, t, i.camera.viewMatrix);\n}\nfunction R(e, i, t) {\n  return l(_, e, t), s(G, i), G[3] = 0, p(G, G, t), u(_, G, B);\n}\nconst U = t(),\n  F = f(),\n  G = g(),\n  W = f(),\n  H = f(),\n  _ = f(),\n  B = m(),\n  N = x(),\n  $ = Object.freeze(Object.defineProperty({\n    __proto__: null,\n    build: y,\n    defaultAngleCutoff: V\n  }, Symbol.toStringTag, {\n    value: \"Module\"\n  }));\nexport { $ as L, y as b, V as d };","map":{"version":3,"names":["deg2rad","e","set","i","create","t","d","n","a","l","o","j","r","c","s","g","f","p","pointAt","h","m","fromPositionAndNormal","u","w","x","Laserline","v","ScreenSpacePass","P","Float2PassUniform","b","Float3BindUniform","D","Float3PassUniform","M","Float4PassUniform","S","FloatBindUniform","C","FloatPassUniform","L","glsl","ShaderBuilder","A","V","y","include","fragment","lineVerticalPlaneEnabled","heightManifoldEnabled","uniforms","add","camera","computeScreenPixelSizeAt","heightManifoldTarget","lineVerticalPlaneSegment","origin","code","spherical","viewMatrix","F","H","G","Math","max","eye","perRenderPixelRatio","pointDistanceEnabled","pointDistanceTarget","intersectsLineEnabled","perScreenPixelRatio","main","O","R","renderCoordsHelper","worldUpAtPosition","E","z","I","T","lineStartWorld","lineEndWorld","intersectsLineSegment","vector","intersectsLineRadius","U","cos","angleCutoff","N","pointDistanceOrigin","W","setAltitude","_","B","$","Object","freeze","defineProperty","__proto__","build","defaultAngleCutoff","Symbol","toStringTag","value"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/chunks/Laserlines.glsl.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{deg2rad as e}from\"../core/mathUtils.js\";import{set as i}from\"../core/libs/gl-matrix-2/math/vec2.js\";import{create as t}from\"../core/libs/gl-matrix-2/factories/vec2f64.js\";import{d as n,n as a,l as o,j as r,t as l,c as s,e as c,g as d}from\"./vec32.js\";import{create as f}from\"../core/libs/gl-matrix-2/factories/vec3f64.js\";import{t as p}from\"./vec42.js\";import{create as g}from\"../core/libs/gl-matrix-2/factories/vec4f64.js\";import{pointAt as h}from\"../geometry/support/lineSegment.js\";import{create as m,fromPositionAndNormal as u}from\"../geometry/support/plane.js\";import{a as w,c as x}from\"./sphere.js\";import{Laserline as v}from\"../views/3d/webgl-engine/core/shaderLibrary/Laserline.glsl.js\";import{ScreenSpacePass as P}from\"../views/3d/webgl-engine/core/shaderLibrary/ScreenSpacePass.glsl.js\";import{Float2PassUniform as b}from\"../views/3d/webgl-engine/core/shaderModules/Float2PassUniform.js\";import{Float3BindUniform as D}from\"../views/3d/webgl-engine/core/shaderModules/Float3BindUniform.js\";import{Float3PassUniform as M}from\"../views/3d/webgl-engine/core/shaderModules/Float3PassUniform.js\";import{Float4PassUniform as S}from\"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";import{FloatBindUniform as C}from\"../views/3d/webgl-engine/core/shaderModules/FloatBindUniform.js\";import{FloatPassUniform as L}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{glsl as j}from\"../views/3d/webgl-engine/core/shaderModules/glsl.js\";import{ShaderBuilder as A}from\"../views/webgl/ShaderBuilder.js\";const V=e(6);function y(e){const i=new A;i.include(P),i.include(v,e);const t=i.fragment;if(e.lineVerticalPlaneEnabled||e.heightManifoldEnabled)if(t.uniforms.add(new L(\"maxPixelDistance\",((i,t)=>e.heightManifoldEnabled?2*t.camera.computeScreenPixelSizeAt(i.heightManifoldTarget):2*t.camera.computeScreenPixelSizeAt(i.lineVerticalPlaneSegment.origin)))),t.code.add(j`float planeDistancePixels(vec4 plane, vec3 pos) {\nfloat dist = dot(plane.xyz, pos) + plane.w;\nfloat width = fwidth(dist);\ndist /= min(width, maxPixelDistance);\nreturn abs(dist);\n}`),e.spherical){const e=(e,i,t)=>l(e,i.heightManifoldTarget,t.camera.viewMatrix),i=(e,i)=>l(e,[0,0,0],i.camera.viewMatrix);t.uniforms.add(new S(\"heightManifoldOrigin\",((t,r)=>(e(F,t,r),i(H,r),n(H,H,F),a(G,H),G[3]=o(H),G))),new D(\"globalOrigin\",(e=>i(F,e))),new L(\"cosSphericalAngleThreshold\",((e,i)=>1-Math.max(2,r(i.camera.eye,e.heightManifoldTarget)*i.camera.perRenderPixelRatio)/o(e.heightManifoldTarget)))),t.code.add(j`float globeDistancePixels(float posInGlobalOriginLength) {\nfloat dist = abs(posInGlobalOriginLength - heightManifoldOrigin.w);\nfloat width = fwidth(dist);\ndist /= min(width, maxPixelDistance);\nreturn abs(dist);\n}\nfloat heightManifoldDistancePixels(vec4 heightPlane, vec3 pos) {\nvec3 posInGlobalOriginNorm = normalize(globalOrigin - pos);\nfloat cosAngle = dot(posInGlobalOriginNorm, heightManifoldOrigin.xyz);\nvec3 posInGlobalOrigin = globalOrigin - pos;\nfloat posInGlobalOriginLength = length(posInGlobalOrigin);\nfloat sphericalDistance = globeDistancePixels(posInGlobalOriginLength);\nfloat planarDistance = planeDistancePixels(heightPlane, pos);\nreturn cosAngle < cosSphericalAngleThreshold ? sphericalDistance : planarDistance;\n}`)}else t.code.add(j`float heightManifoldDistancePixels(vec4 heightPlane, vec3 pos) {\nreturn planeDistancePixels(heightPlane, pos);\n}`);if(e.pointDistanceEnabled&&(t.uniforms.add(new L(\"maxPixelDistance\",((e,i)=>2*i.camera.computeScreenPixelSizeAt(e.pointDistanceTarget)))),t.code.add(j`float sphereDistancePixels(vec4 sphere, vec3 pos) {\nfloat dist = distance(sphere.xyz, pos) - sphere.w;\nfloat width = fwidth(dist);\ndist /= min(width, maxPixelDistance);\nreturn abs(dist);\n}`)),e.intersectsLineEnabled&&t.uniforms.add(new C(\"perScreenPixelRatio\",(e=>e.camera.perScreenPixelRatio))).code.add(j`float lineDistancePixels(vec3 start, vec3 dir, float radius, vec3 pos) {\nfloat dist = length(cross(dir, pos - start)) / (length(pos) * perScreenPixelRatio);\nreturn abs(dist) - radius;\n}`),(e.lineVerticalPlaneEnabled||e.intersectsLineEnabled)&&t.code.add(j`bool pointIsWithinLine(vec3 pos, vec3 start, vec3 end) {\nvec3 dir = end - start;\nfloat t2 = dot(dir, pos - start);\nfloat l2 = dot(dir, dir);\nreturn t2 >= 0.0 && t2 <= l2;\n}`),t.main.add(j`vec3 pos;\nvec3 normal;\nfloat angleCutoffAdjust;\nfloat depthDiscontinuityAlpha;\nif (!laserlineReconstructFromDepth(pos, normal, angleCutoffAdjust, depthDiscontinuityAlpha)) {\nfragColor = vec4(0.0);\nreturn;\n}\nvec4 color = vec4(0.0);`),e.heightManifoldEnabled){t.uniforms.add(new b(\"angleCutoff\",(e=>O(e))),new S(\"heightPlane\",((e,i)=>R(e.heightManifoldTarget,e.renderCoordsHelper.worldUpAtPosition(e.heightManifoldTarget,F),i.camera.viewMatrix))));const i=e.spherical?j`normalize(globalOrigin - pos)`:j`heightPlane.xyz`;t.main.add(j`\n      vec2 angleCutoffAdjusted = angleCutoff - angleCutoffAdjust;\n      // Fade out laserlines on flat surfaces\n      float heightManifoldAlpha = 1.0 - smoothstep(angleCutoffAdjusted.x, angleCutoffAdjusted.y, abs(dot(normal, ${i})));\n      vec4 heightManifoldColor = laserlineProfile(heightManifoldDistancePixels(heightPlane, pos));\n      color = max(color, heightManifoldColor * heightManifoldAlpha);`)}return e.pointDistanceEnabled&&(t.uniforms.add(new b(\"angleCutoff\",(e=>O(e))),new S(\"pointDistanceSphere\",((e,i)=>E(e,i)))),t.main.add(j`float pointDistanceSphereDistance = sphereDistancePixels(pointDistanceSphere, pos);\nvec4 pointDistanceSphereColor = laserlineProfile(pointDistanceSphereDistance);\nfloat pointDistanceSphereAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, abs(dot(normal, normalize(pos - pointDistanceSphere.xyz))));\ncolor = max(color, pointDistanceSphereColor * pointDistanceSphereAlpha);`)),e.lineVerticalPlaneEnabled&&(t.uniforms.add(new b(\"angleCutoff\",(e=>O(e))),new S(\"lineVerticalPlane\",((e,i)=>z(e,i))),new M(\"lineVerticalStart\",((e,i)=>I(e,i))),new M(\"lineVerticalEnd\",((e,i)=>T(e,i)))),t.main.add(j`if (pointIsWithinLine(pos, lineVerticalStart, lineVerticalEnd)) {\nfloat lineVerticalDistance = planeDistancePixels(lineVerticalPlane, pos);\nvec4 lineVerticalColor = laserlineProfile(lineVerticalDistance);\nfloat lineVerticalAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, abs(dot(normal, lineVerticalPlane.xyz)));\ncolor = max(color, lineVerticalColor * lineVerticalAlpha);\n}`)),e.intersectsLineEnabled&&(t.uniforms.add(new b(\"angleCutoff\",(e=>O(e))),new M(\"intersectsLineStart\",((e,i)=>l(F,e.lineStartWorld,i.camera.viewMatrix))),new M(\"intersectsLineEnd\",((e,i)=>l(F,e.lineEndWorld,i.camera.viewMatrix))),new M(\"intersectsLineDirection\",((e,i)=>(s(G,e.intersectsLineSegment.vector),G[3]=0,a(F,p(G,G,i.camera.viewMatrix))))),new L(\"intersectsLineRadius\",(e=>e.intersectsLineRadius))),t.main.add(j`if (pointIsWithinLine(pos, intersectsLineStart, intersectsLineEnd)) {\nfloat intersectsLineDistance = lineDistancePixels(intersectsLineStart, intersectsLineDirection, intersectsLineRadius, pos);\nvec4 intersectsLineColor = laserlineProfile(intersectsLineDistance);\nfloat intersectsLineAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, 1.0 - abs(dot(normal, intersectsLineDirection)));\ncolor = max(color, intersectsLineColor * intersectsLineAlpha);\n}`)),t.main.add(j`fragColor = laserlineOutput(color * depthDiscontinuityAlpha);`),i}function O(t){return i(U,Math.cos(t.angleCutoff),Math.cos(Math.max(0,t.angleCutoff-e(2))))}function E(e,i){return l(w(N),e.pointDistanceOrigin,i.camera.viewMatrix),N[3]=r(e.pointDistanceOrigin,e.pointDistanceTarget),N}function z(e,i){const t=h(e.lineVerticalPlaneSegment,.5,F),n=e.renderCoordsHelper.worldUpAtPosition(t,W),o=a(H,e.lineVerticalPlaneSegment.vector),r=c(F,n,o);return a(r,r),R(e.lineVerticalPlaneSegment.origin,r,i.camera.viewMatrix)}function I(e,i){const t=s(F,e.lineVerticalPlaneSegment.origin);return e.renderCoordsHelper.setAltitude(t,0),l(t,t,i.camera.viewMatrix)}function T(e,i){const t=d(F,e.lineVerticalPlaneSegment.origin,e.lineVerticalPlaneSegment.vector);return e.renderCoordsHelper.setAltitude(t,0),l(t,t,i.camera.viewMatrix)}function R(e,i,t){return l(_,e,t),s(G,i),G[3]=0,p(G,G,t),u(_,G,B)}const U=t(),F=f(),G=g(),W=f(),H=f(),_=f(),B=m(),N=x(),$=Object.freeze(Object.defineProperty({__proto__:null,build:y,defaultAngleCutoff:V},Symbol.toStringTag,{value:\"Module\"}));export{$ as L,y as b,V as d};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}