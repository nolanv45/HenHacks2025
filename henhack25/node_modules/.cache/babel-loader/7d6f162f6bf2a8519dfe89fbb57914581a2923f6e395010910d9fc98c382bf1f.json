{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../chunks/tslib.es6.js\";\nimport r from \"../request.js\";\nimport t from \"../core/JSONSupport.js\";\nimport o from \"../core/Loadable.js\";\nimport { property as s } from \"../core/accessorSupport/decorators/property.js\";\nimport \"../core/has.js\";\nimport \"../core/Logger.js\";\nimport \"../core/RandomLCG.js\";\nimport { subclass as u } from \"../core/accessorSupport/decorators/subclass.js\";\nimport { isSubtypeSublayer as a, isFeatureLayer as n } from \"../layers/support/layerUtils.js\";\nimport { RuleType as i } from \"./support/typeUtils.js\";\nlet d = class extends t.JSONSupportMixin(o) {\n  constructor(e) {\n    super(e), this.rulesCategorized = {\n      attachment: [],\n      containment: [],\n      connectivity: []\n    }, this.request = r;\n  }\n  initialize() {}\n  async load(e) {\n    const r = this.rulesLayer.load(e).then(() => this._initializeRulesTable());\n    return this.addResolvingPromise(r), this;\n  }\n  getFeaturesCanAssociateWithClause(e, r, t) {\n    return this._getWhereClauseForCompatibleFeatures(e, r, t);\n  }\n  getFeaturesCanAssociateWith(e, r, t) {\n    return null == this._getFeatureSourceLayerId(e) ? [] : r.filter(r => this.canAssociateFeatures(e, r, t));\n  }\n  canAssociateFeatures(e, r, t) {\n    const [o, s] = this._getFeatureAssetCodes(e),\n      u = this._getFeatureSourceLayerId(e),\n      [a, n] = this._getFeatureAssetCodes(r),\n      i = this._getFeatureSourceLayerId(r);\n    return null != u && null != i && t.some(e => {\n      const {\n        type: r,\n        direction: t\n      } = e;\n      return this._getRulesForAssociationType(r).some(e => {\n        const d = this._getRuleFieldValuesForAssociation(e, r, t);\n        return d?.some(e => u === e?.ruleLayerIdForSource && o === e?.ruleAssetGroupCodeForSource && s === e?.ruleAssetTypeCodeForSource && i === e?.ruleLayerIdForTarget && a === e?.ruleAssetGroupCodeForTarget && n === e?.ruleAssetTypeCodeForTarget);\n      });\n    });\n  }\n  getLayersCanAssociateWith(e, r, t) {\n    return null == this._getFeatureSourceLayerId(e) ? [] : r.filter(r => this.canAssociateFeatureToLayer(e, r, t));\n  }\n  canAssociateFeatureToLayer(e, r, t) {\n    const o = a(r) ? r.parent : r;\n    if (!o) return !1;\n    const s = o.layerId,\n      u = a(r) ? r.subtypeCode : null,\n      [n, i] = this._getFeatureAssetCodes(e),\n      d = this._getFeatureSourceLayerId(e);\n    return null != d && t.some(e => {\n      const {\n        type: r,\n        direction: t\n      } = e;\n      return this._getRulesForAssociationType(r).some(e => {\n        const o = this._getRuleFieldValuesForAssociation(e, r, t);\n        return o?.some(e => d === e?.ruleLayerIdForSource && n === e?.ruleAssetGroupCodeForSource && i === e?.ruleAssetTypeCodeForSource && s === e?.ruleLayerIdForTarget && (null == u || u === e?.ruleAssetGroupCodeForTarget));\n      });\n    });\n  }\n  getFeatureSQL(e, r) {\n    const t = e.layerId.toString(),\n      o = e.fieldsIndex?.normalizeFieldName(\"assetGroup\"),\n      s = e.fieldsIndex?.normalizeFieldName(\"assetType\"),\n      u = o ? r.attributes[o] : null,\n      a = s ? r.attributes[s] : null,\n      n = this.rulesHash[t];\n    if (n) {\n      const e = n.assetGroupHash[u];\n      if (e) {\n        return e.assetTypeHash[a] || null;\n      }\n    }\n    return null;\n  }\n  async _initializeRulesTable() {\n    const e = {};\n    let r;\n    !function (e) {\n      e[e.from = 0] = \"from\", e[e.to = 1] = \"to\", e[e.via = 2] = \"via\";\n    }(r || (r = {}));\n    const t = [{\n      networkSourceId: \"fromNetworkSource\",\n      assetGroupId: \"fromAssetGroup\",\n      assetTypeId: \"fromAssetType\"\n    }, {\n      networkSourceId: \"toNetworkSource\",\n      assetGroupId: \"toAssetGroup\",\n      assetTypeId: \"toAssetType\"\n    }, {\n      networkSourceId: \"viaNetworkSource\",\n      assetGroupId: \"viaAssetGroup\",\n      assetTypeId: \"viaAssetType\"\n    }];\n    this.rulesCategorized = {\n      attachment: [],\n      containment: [],\n      connectivity: []\n    };\n    for (const o of this.rules) {\n      if (o.ruleType === i.RTAttachment) {\n        this.rulesCategorized.attachment.push(o);\n        continue;\n      }\n      if (o.ruleType === i.RTContainment) {\n        this.rulesCategorized.containment.push(o);\n        continue;\n      }\n      if (o.ruleType === i.RTJunctionJunctionConnectivity) {\n        this.rulesCategorized.connectivity.push(o);\n        continue;\n      }\n      this.rulesCategorized.connectivity.push(o);\n      let s = [[r.from, r.to], [r.to, r.from]];\n      o.ruleType === i.RTEdgeJunctionEdgeConnectivity && (s = [[r.from, r.via], [r.via, r.from], [r.to, r.via], [r.via, r.to]]);\n      for (const u of s) {\n        const s = u.shift(),\n          a = u.shift();\n        let n = !1;\n        switch (o.ruleType) {\n          case i.RTEdgeJunctionEdgeConnectivity:\n            n = s === r.from || s === r.to;\n            break;\n          case i.RTJunctionEdgeConnectivity:\n            n = s === r.to;\n        }\n        const d = t[s],\n          c = o[d.networkSourceId]?.layerId.toString() ?? \"\",\n          l = o[d.assetGroupId]?.assetGroupCode?.toString(),\n          p = o[d.assetTypeId],\n          y = p?.assetTypeCode?.toString(),\n          T = t[a],\n          C = o[T.networkSourceId]?.layerId.toString() ?? \"\",\n          A = o[T.assetGroupId]?.assetGroupCode?.toString(),\n          F = o[T.assetTypeId],\n          g = F?.assetTypeCode?.toString(),\n          m = e[c] ?? {\n            assetGroupHash: {}\n          };\n        if (!(l && y && A && g)) continue;\n        const S = m.assetGroupHash[l] ?? {\n            assetTypeHash: {}\n          },\n          f = S.assetTypeHash[y] ?? {};\n        if (f[C] = f[C] ?? {}, n) {\n          f[c] = f[c] ?? {};\n          const e = `(assetgroup = ${l} AND assettype = ${y})`;\n          \"esriNECPEndVertex\" === F?.connectivityPolicy ? f[c].endVertex = f[c]?.endVertex ? `${f[c].endVertex}` : `${e}` : f[c].anyVertex = f[c].anyVertex ? `${f[c].anyVertex}` : `${e}`;\n        }\n        const G = `(assetgroup = ${A} AND assettype = ${g})`;\n        \"esriNECPEndVertex\" === F?.connectivityPolicy ? f[C].endVertex = f[C]?.endVertex ? `${f[C].endVertex} OR ${G}` : `${G}` : f[C].anyVertex = f[C]?.anyVertex ? `${f[C].anyVertex} OR ${G}` : `${G}`, S.assetTypeHash[y] = f, m.assetGroupHash[l] = S, e[c] = m;\n      }\n    }\n    this._set(\"rulesHash\", e);\n  }\n  _getRuleFieldValuesForAssociation(e, r, t = \"from\") {\n    switch (r) {\n      case \"attachment\":\n      case \"containment\":\n        return \"from\" === t ? [{\n          ruleLayerIdForSource: e.fromNetworkSource?.layerId,\n          ruleAssetGroupCodeForSource: e.fromAssetGroup?.assetGroupCode,\n          ruleAssetTypeCodeForSource: e.fromAssetType?.assetTypeCode,\n          ruleLayerIdForTarget: e.toNetworkSource?.layerId,\n          ruleAssetGroupCodeForTarget: e.toAssetGroup?.assetGroupCode,\n          ruleAssetTypeCodeForTarget: e.toAssetType?.assetTypeCode\n        }] : [{\n          ruleLayerIdForSource: e.toNetworkSource?.layerId,\n          ruleAssetGroupCodeForSource: e.toAssetGroup?.assetGroupCode,\n          ruleAssetTypeCodeForSource: e.toAssetType?.assetTypeCode,\n          ruleLayerIdForTarget: e.fromNetworkSource?.layerId,\n          ruleAssetGroupCodeForTarget: e.fromAssetGroup?.assetGroupCode,\n          ruleAssetTypeCodeForTarget: e.fromAssetType?.assetTypeCode\n        }];\n      case \"connectivity\":\n      case \"junction-junction-connectivity\":\n        return [{\n          ruleLayerIdForSource: e.fromNetworkSource?.layerId,\n          ruleAssetGroupCodeForSource: e.fromAssetGroup?.assetGroupCode,\n          ruleAssetTypeCodeForSource: e.fromAssetType?.assetTypeCode,\n          ruleLayerIdForTarget: e.toNetworkSource?.layerId,\n          ruleAssetGroupCodeForTarget: e.toAssetGroup?.assetGroupCode,\n          ruleAssetTypeCodeForTarget: e.toAssetType?.assetTypeCode\n        }, {\n          ruleLayerIdForSource: e.toNetworkSource?.layerId,\n          ruleAssetGroupCodeForSource: e.toAssetGroup?.assetGroupCode,\n          ruleAssetTypeCodeForSource: e.toAssetType?.assetTypeCode,\n          ruleLayerIdForTarget: e.fromNetworkSource?.layerId,\n          ruleAssetGroupCodeForTarget: e.fromAssetGroup?.assetGroupCode,\n          ruleAssetTypeCodeForTarget: e.fromAssetType?.assetTypeCode\n        }];\n      case \"junction-edge-from-connectivity\":\n      case \"junction-edge-midspan-connectivity\":\n      case \"junction-edge-to-connectivity\":\n        return e.ruleType === i.RTEdgeJunctionEdgeConnectivity ? [{\n          ruleLayerIdForSource: e.fromNetworkSource?.layerId,\n          ruleAssetGroupCodeForSource: e.fromAssetGroup?.assetGroupCode,\n          ruleAssetTypeCodeForSource: e.fromAssetType?.assetTypeCode,\n          ruleLayerIdForTarget: e.viaNetworkSource?.layerId,\n          ruleAssetGroupCodeForTarget: e.viaAssetGroup?.assetGroupCode,\n          ruleAssetTypeCodeForTarget: e.viaAssetType?.assetTypeCode\n        }, {\n          ruleLayerIdForSource: e.viaNetworkSource?.layerId,\n          ruleAssetGroupCodeForSource: e.viaAssetGroup?.assetGroupCode,\n          ruleAssetTypeCodeForSource: e.viaAssetType?.assetTypeCode,\n          ruleLayerIdForTarget: e.fromNetworkSource?.layerId,\n          ruleAssetGroupCodeForTarget: e.fromAssetGroup?.assetGroupCode,\n          ruleAssetTypeCodeForTarget: e.fromAssetType?.assetTypeCode\n        }, {\n          ruleLayerIdForSource: e.toNetworkSource?.layerId,\n          ruleAssetGroupCodeForSource: e.toAssetGroup?.assetGroupCode,\n          ruleAssetTypeCodeForSource: e.toAssetType?.assetTypeCode,\n          ruleLayerIdForTarget: e.viaNetworkSource?.layerId,\n          ruleAssetGroupCodeForTarget: e.viaAssetGroup?.assetGroupCode,\n          ruleAssetTypeCodeForTarget: e.viaAssetType?.assetTypeCode\n        }, {\n          ruleLayerIdForSource: e.viaNetworkSource?.layerId,\n          ruleAssetGroupCodeForSource: e.viaAssetGroup?.assetGroupCode,\n          ruleAssetTypeCodeForSource: e.viaAssetType?.assetTypeCode,\n          ruleLayerIdForTarget: e.toNetworkSource?.layerId,\n          ruleAssetGroupCodeForTarget: e.toAssetGroup?.assetGroupCode,\n          ruleAssetTypeCodeForTarget: e.toAssetType?.assetTypeCode\n        }] : [{\n          ruleLayerIdForSource: e.fromNetworkSource?.layerId,\n          ruleAssetGroupCodeForSource: e.fromAssetGroup?.assetGroupCode,\n          ruleAssetTypeCodeForSource: e.fromAssetType?.assetTypeCode,\n          ruleLayerIdForTarget: e.toNetworkSource?.layerId,\n          ruleAssetGroupCodeForTarget: e.toAssetGroup?.assetGroupCode,\n          ruleAssetTypeCodeForTarget: e.toAssetType?.assetTypeCode\n        }, {\n          ruleLayerIdForSource: e.toNetworkSource?.layerId,\n          ruleAssetGroupCodeForSource: e.toAssetGroup?.assetGroupCode,\n          ruleAssetTypeCodeForSource: e.toAssetType?.assetTypeCode,\n          ruleLayerIdForTarget: e.fromNetworkSource?.layerId,\n          ruleAssetGroupCodeForTarget: e.fromAssetGroup?.assetGroupCode,\n          ruleAssetTypeCodeForTarget: e.fromAssetType?.assetTypeCode\n        }];\n      default:\n        return [];\n    }\n  }\n  _getWhereClauseForCompatibleFeatures(e, r, t) {\n    const o = new Map(),\n      [s, u] = this._getAssetFieldNames(e.sourceLayer),\n      [n, i] = this._getFeatureAssetCodes(e),\n      d = this._getFeatureSourceLayerId(e),\n      c = a(r) ? r.parent : r,\n      l = a(r) ? r.subtypeCode : null;\n    t.forEach(e => {\n      const {\n        type: r,\n        direction: t\n      } = e;\n      this._getRulesForAssociationType(r).forEach(e => {\n        this._getRuleFieldValuesForAssociation(e, r, t).forEach(e => {\n          if (null != e.ruleAssetGroupCodeForTarget && null != e.ruleAssetTypeCodeForTarget && d === e?.ruleLayerIdForSource && n === e?.ruleAssetGroupCodeForSource && i === e?.ruleAssetTypeCodeForSource && c.layerId === e?.ruleLayerIdForTarget && (null == l || l === e?.ruleAssetGroupCodeForTarget)) {\n            const r = o.get(e.ruleAssetGroupCodeForTarget) ?? new Set();\n            r.add(e.ruleAssetTypeCodeForTarget), o.set(e.ruleAssetGroupCodeForTarget, r);\n          }\n        });\n      });\n    });\n    let p = [];\n    return this._mergeAssetCodes(o).forEach((e, r) => p.push(`${s} IN (${r}) AND ${u} IN (${Array.from(e).sort().join(\", \")})`)), p.length > 1 && (p = p.map(e => `(${e})`)), p.join(\" OR \");\n  }\n  _getRulesForAssociationType(e) {\n    const {\n      rulesCategorized: r\n    } = this;\n    switch (e) {\n      case \"attachment\":\n        return r.attachment;\n      case \"containment\":\n        return r.containment;\n      case \"connectivity\":\n      case \"junction-junction-connectivity\":\n        return r.connectivity.filter(e => e.ruleType === i.RTJunctionJunctionConnectivity);\n      case \"junction-edge-from-connectivity\":\n      case \"junction-edge-midspan-connectivity\":\n      case \"junction-edge-to-connectivity\":\n        return r.connectivity.filter(e => e.ruleType === i.RTJunctionEdgeConnectivity || e.ruleType === i.RTEdgeJunctionEdgeConnectivity);\n      default:\n        return [];\n    }\n  }\n  _getFeatureSourceLayerId(e) {\n    const {\n      sourceLayer: r\n    } = e;\n    let t;\n    return n(r) ? t = r.layerId : a(r) && (t = r.parent?.layerId), t ?? null;\n  }\n  _getAssetFieldNames(e) {\n    if (!e || !(\"fieldsIndex\" in e)) return [null, null];\n    return [e.fieldsIndex.normalizeFieldName(\"assetGroup\") ?? null, e.fieldsIndex.normalizeFieldName(\"assetType\") ?? null];\n  }\n  _getFeatureAssetCodes(e) {\n    const [r, t] = this._getAssetFieldNames(e.sourceLayer);\n    return [r ? e.attributes[r] : null, t ? e.attributes[t] : null];\n  }\n  _areSetsEqual(e, r) {\n    if (e.size !== r.size) return !1;\n    for (const t of e) if (!r.has(t)) return !1;\n    return !0;\n  }\n  _mergeAssetCodes(e) {\n    const r = new Map(),\n      t = new Set();\n    for (const [o, s] of e) {\n      const u = new Set([o]);\n      for (const [r, n] of e) o !== r && !t.has(r) && this._areSetsEqual(s, n) && (u.add(r), t.add(r));\n      const a = Array.from(u).sort().join(\", \");\n      r.set(a, s);\n    }\n    return r;\n  }\n};\ne([s({\n  constructOnly: !0\n})], d.prototype, \"rulesLayer\", void 0), e([s({\n  constructOnly: !0\n})], d.prototype, \"rules\", void 0), e([s({\n  readOnly: !0\n})], d.prototype, \"rulesHash\", void 0), e([s()], d.prototype, \"rulesCategorized\", void 0), e([s({\n  constructOnly: !0\n})], d.prototype, \"request\", void 0), d = e([u(\"esri.networks.RulesTable\")], d);\nconst c = d;\nexport { c as default };","map":{"version":3,"names":["_","e","r","t","o","property","s","subclass","u","isSubtypeSublayer","a","isFeatureLayer","n","RuleType","i","d","JSONSupportMixin","constructor","rulesCategorized","attachment","containment","connectivity","request","initialize","load","rulesLayer","then","_initializeRulesTable","addResolvingPromise","getFeaturesCanAssociateWithClause","_getWhereClauseForCompatibleFeatures","getFeaturesCanAssociateWith","_getFeatureSourceLayerId","filter","canAssociateFeatures","_getFeatureAssetCodes","some","type","direction","_getRulesForAssociationType","_getRuleFieldValuesForAssociation","ruleLayerIdForSource","ruleAssetGroupCodeForSource","ruleAssetTypeCodeForSource","ruleLayerIdForTarget","ruleAssetGroupCodeForTarget","ruleAssetTypeCodeForTarget","getLayersCanAssociateWith","canAssociateFeatureToLayer","parent","layerId","subtypeCode","getFeatureSQL","toString","fieldsIndex","normalizeFieldName","attributes","rulesHash","assetGroupHash","assetTypeHash","from","to","via","networkSourceId","assetGroupId","assetTypeId","rules","ruleType","RTAttachment","push","RTContainment","RTJunctionJunctionConnectivity","RTEdgeJunctionEdgeConnectivity","shift","RTJunctionEdgeConnectivity","c","l","assetGroupCode","p","y","assetTypeCode","T","C","A","F","g","m","S","f","connectivityPolicy","endVertex","anyVertex","G","_set","fromNetworkSource","fromAssetGroup","fromAssetType","toNetworkSource","toAssetGroup","toAssetType","viaNetworkSource","viaAssetGroup","viaAssetType","Map","_getAssetFieldNames","sourceLayer","forEach","get","Set","add","set","_mergeAssetCodes","Array","sort","join","length","map","_areSetsEqual","size","has","constructOnly","prototype","readOnly","default"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/networks/RulesTable.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../chunks/tslib.es6.js\";import r from\"../request.js\";import t from\"../core/JSONSupport.js\";import o from\"../core/Loadable.js\";import{property as s}from\"../core/accessorSupport/decorators/property.js\";import\"../core/has.js\";import\"../core/Logger.js\";import\"../core/RandomLCG.js\";import{subclass as u}from\"../core/accessorSupport/decorators/subclass.js\";import{isSubtypeSublayer as a,isFeatureLayer as n}from\"../layers/support/layerUtils.js\";import{RuleType as i}from\"./support/typeUtils.js\";let d=class extends(t.JSONSupportMixin(o)){constructor(e){super(e),this.rulesCategorized={attachment:[],containment:[],connectivity:[]},this.request=r}initialize(){}async load(e){const r=this.rulesLayer.load(e).then((()=>this._initializeRulesTable()));return this.addResolvingPromise(r),this}getFeaturesCanAssociateWithClause(e,r,t){return this._getWhereClauseForCompatibleFeatures(e,r,t)}getFeaturesCanAssociateWith(e,r,t){return null==this._getFeatureSourceLayerId(e)?[]:r.filter((r=>this.canAssociateFeatures(e,r,t)))}canAssociateFeatures(e,r,t){const[o,s]=this._getFeatureAssetCodes(e),u=this._getFeatureSourceLayerId(e),[a,n]=this._getFeatureAssetCodes(r),i=this._getFeatureSourceLayerId(r);return null!=u&&null!=i&&t.some((e=>{const{type:r,direction:t}=e;return this._getRulesForAssociationType(r).some((e=>{const d=this._getRuleFieldValuesForAssociation(e,r,t);return d?.some((e=>u===e?.ruleLayerIdForSource&&o===e?.ruleAssetGroupCodeForSource&&s===e?.ruleAssetTypeCodeForSource&&i===e?.ruleLayerIdForTarget&&a===e?.ruleAssetGroupCodeForTarget&&n===e?.ruleAssetTypeCodeForTarget))}))}))}getLayersCanAssociateWith(e,r,t){return null==this._getFeatureSourceLayerId(e)?[]:r.filter((r=>this.canAssociateFeatureToLayer(e,r,t)))}canAssociateFeatureToLayer(e,r,t){const o=a(r)?r.parent:r;if(!o)return!1;const s=o.layerId,u=a(r)?r.subtypeCode:null,[n,i]=this._getFeatureAssetCodes(e),d=this._getFeatureSourceLayerId(e);return null!=d&&t.some((e=>{const{type:r,direction:t}=e;return this._getRulesForAssociationType(r).some((e=>{const o=this._getRuleFieldValuesForAssociation(e,r,t);return o?.some((e=>d===e?.ruleLayerIdForSource&&n===e?.ruleAssetGroupCodeForSource&&i===e?.ruleAssetTypeCodeForSource&&s===e?.ruleLayerIdForTarget&&(null==u||u===e?.ruleAssetGroupCodeForTarget)))}))}))}getFeatureSQL(e,r){const t=e.layerId.toString(),o=e.fieldsIndex?.normalizeFieldName(\"assetGroup\"),s=e.fieldsIndex?.normalizeFieldName(\"assetType\"),u=o?r.attributes[o]:null,a=s?r.attributes[s]:null,n=this.rulesHash[t];if(n){const e=n.assetGroupHash[u];if(e){return e.assetTypeHash[a]||null}}return null}async _initializeRulesTable(){const e={};let r;!function(e){e[e.from=0]=\"from\",e[e.to=1]=\"to\",e[e.via=2]=\"via\"}(r||(r={}));const t=[{networkSourceId:\"fromNetworkSource\",assetGroupId:\"fromAssetGroup\",assetTypeId:\"fromAssetType\"},{networkSourceId:\"toNetworkSource\",assetGroupId:\"toAssetGroup\",assetTypeId:\"toAssetType\"},{networkSourceId:\"viaNetworkSource\",assetGroupId:\"viaAssetGroup\",assetTypeId:\"viaAssetType\"}];this.rulesCategorized={attachment:[],containment:[],connectivity:[]};for(const o of this.rules){if(o.ruleType===i.RTAttachment){this.rulesCategorized.attachment.push(o);continue}if(o.ruleType===i.RTContainment){this.rulesCategorized.containment.push(o);continue}if(o.ruleType===i.RTJunctionJunctionConnectivity){this.rulesCategorized.connectivity.push(o);continue}this.rulesCategorized.connectivity.push(o);let s=[[r.from,r.to],[r.to,r.from]];o.ruleType===i.RTEdgeJunctionEdgeConnectivity&&(s=[[r.from,r.via],[r.via,r.from],[r.to,r.via],[r.via,r.to]]);for(const u of s){const s=u.shift(),a=u.shift();let n=!1;switch(o.ruleType){case i.RTEdgeJunctionEdgeConnectivity:n=s===r.from||s===r.to;break;case i.RTJunctionEdgeConnectivity:n=s===r.to}const d=t[s],c=o[d.networkSourceId]?.layerId.toString()??\"\",l=o[d.assetGroupId]?.assetGroupCode?.toString(),p=o[d.assetTypeId],y=p?.assetTypeCode?.toString(),T=t[a],C=o[T.networkSourceId]?.layerId.toString()??\"\",A=o[T.assetGroupId]?.assetGroupCode?.toString(),F=o[T.assetTypeId],g=F?.assetTypeCode?.toString(),m=e[c]??{assetGroupHash:{}};if(!(l&&y&&A&&g))continue;const S=m.assetGroupHash[l]??{assetTypeHash:{}},f=S.assetTypeHash[y]??{};if(f[C]=f[C]??{},n){f[c]=f[c]??{};const e=`(assetgroup = ${l} AND assettype = ${y})`;\"esriNECPEndVertex\"===F?.connectivityPolicy?f[c].endVertex=f[c]?.endVertex?`${f[c].endVertex}`:`${e}`:f[c].anyVertex=f[c].anyVertex?`${f[c].anyVertex}`:`${e}`}const G=`(assetgroup = ${A} AND assettype = ${g})`;\"esriNECPEndVertex\"===F?.connectivityPolicy?f[C].endVertex=f[C]?.endVertex?`${f[C].endVertex} OR ${G}`:`${G}`:f[C].anyVertex=f[C]?.anyVertex?`${f[C].anyVertex} OR ${G}`:`${G}`,S.assetTypeHash[y]=f,m.assetGroupHash[l]=S,e[c]=m}}this._set(\"rulesHash\",e)}_getRuleFieldValuesForAssociation(e,r,t=\"from\"){switch(r){case\"attachment\":case\"containment\":return\"from\"===t?[{ruleLayerIdForSource:e.fromNetworkSource?.layerId,ruleAssetGroupCodeForSource:e.fromAssetGroup?.assetGroupCode,ruleAssetTypeCodeForSource:e.fromAssetType?.assetTypeCode,ruleLayerIdForTarget:e.toNetworkSource?.layerId,ruleAssetGroupCodeForTarget:e.toAssetGroup?.assetGroupCode,ruleAssetTypeCodeForTarget:e.toAssetType?.assetTypeCode}]:[{ruleLayerIdForSource:e.toNetworkSource?.layerId,ruleAssetGroupCodeForSource:e.toAssetGroup?.assetGroupCode,ruleAssetTypeCodeForSource:e.toAssetType?.assetTypeCode,ruleLayerIdForTarget:e.fromNetworkSource?.layerId,ruleAssetGroupCodeForTarget:e.fromAssetGroup?.assetGroupCode,ruleAssetTypeCodeForTarget:e.fromAssetType?.assetTypeCode}];case\"connectivity\":case\"junction-junction-connectivity\":return[{ruleLayerIdForSource:e.fromNetworkSource?.layerId,ruleAssetGroupCodeForSource:e.fromAssetGroup?.assetGroupCode,ruleAssetTypeCodeForSource:e.fromAssetType?.assetTypeCode,ruleLayerIdForTarget:e.toNetworkSource?.layerId,ruleAssetGroupCodeForTarget:e.toAssetGroup?.assetGroupCode,ruleAssetTypeCodeForTarget:e.toAssetType?.assetTypeCode},{ruleLayerIdForSource:e.toNetworkSource?.layerId,ruleAssetGroupCodeForSource:e.toAssetGroup?.assetGroupCode,ruleAssetTypeCodeForSource:e.toAssetType?.assetTypeCode,ruleLayerIdForTarget:e.fromNetworkSource?.layerId,ruleAssetGroupCodeForTarget:e.fromAssetGroup?.assetGroupCode,ruleAssetTypeCodeForTarget:e.fromAssetType?.assetTypeCode}];case\"junction-edge-from-connectivity\":case\"junction-edge-midspan-connectivity\":case\"junction-edge-to-connectivity\":return e.ruleType===i.RTEdgeJunctionEdgeConnectivity?[{ruleLayerIdForSource:e.fromNetworkSource?.layerId,ruleAssetGroupCodeForSource:e.fromAssetGroup?.assetGroupCode,ruleAssetTypeCodeForSource:e.fromAssetType?.assetTypeCode,ruleLayerIdForTarget:e.viaNetworkSource?.layerId,ruleAssetGroupCodeForTarget:e.viaAssetGroup?.assetGroupCode,ruleAssetTypeCodeForTarget:e.viaAssetType?.assetTypeCode},{ruleLayerIdForSource:e.viaNetworkSource?.layerId,ruleAssetGroupCodeForSource:e.viaAssetGroup?.assetGroupCode,ruleAssetTypeCodeForSource:e.viaAssetType?.assetTypeCode,ruleLayerIdForTarget:e.fromNetworkSource?.layerId,ruleAssetGroupCodeForTarget:e.fromAssetGroup?.assetGroupCode,ruleAssetTypeCodeForTarget:e.fromAssetType?.assetTypeCode},{ruleLayerIdForSource:e.toNetworkSource?.layerId,ruleAssetGroupCodeForSource:e.toAssetGroup?.assetGroupCode,ruleAssetTypeCodeForSource:e.toAssetType?.assetTypeCode,ruleLayerIdForTarget:e.viaNetworkSource?.layerId,ruleAssetGroupCodeForTarget:e.viaAssetGroup?.assetGroupCode,ruleAssetTypeCodeForTarget:e.viaAssetType?.assetTypeCode},{ruleLayerIdForSource:e.viaNetworkSource?.layerId,ruleAssetGroupCodeForSource:e.viaAssetGroup?.assetGroupCode,ruleAssetTypeCodeForSource:e.viaAssetType?.assetTypeCode,ruleLayerIdForTarget:e.toNetworkSource?.layerId,ruleAssetGroupCodeForTarget:e.toAssetGroup?.assetGroupCode,ruleAssetTypeCodeForTarget:e.toAssetType?.assetTypeCode}]:[{ruleLayerIdForSource:e.fromNetworkSource?.layerId,ruleAssetGroupCodeForSource:e.fromAssetGroup?.assetGroupCode,ruleAssetTypeCodeForSource:e.fromAssetType?.assetTypeCode,ruleLayerIdForTarget:e.toNetworkSource?.layerId,ruleAssetGroupCodeForTarget:e.toAssetGroup?.assetGroupCode,ruleAssetTypeCodeForTarget:e.toAssetType?.assetTypeCode},{ruleLayerIdForSource:e.toNetworkSource?.layerId,ruleAssetGroupCodeForSource:e.toAssetGroup?.assetGroupCode,ruleAssetTypeCodeForSource:e.toAssetType?.assetTypeCode,ruleLayerIdForTarget:e.fromNetworkSource?.layerId,ruleAssetGroupCodeForTarget:e.fromAssetGroup?.assetGroupCode,ruleAssetTypeCodeForTarget:e.fromAssetType?.assetTypeCode}];default:return[]}}_getWhereClauseForCompatibleFeatures(e,r,t){const o=new Map,[s,u]=this._getAssetFieldNames(e.sourceLayer),[n,i]=this._getFeatureAssetCodes(e),d=this._getFeatureSourceLayerId(e),c=a(r)?r.parent:r,l=a(r)?r.subtypeCode:null;t.forEach((e=>{const{type:r,direction:t}=e;this._getRulesForAssociationType(r).forEach((e=>{this._getRuleFieldValuesForAssociation(e,r,t).forEach((e=>{if(null!=e.ruleAssetGroupCodeForTarget&&null!=e.ruleAssetTypeCodeForTarget&&d===e?.ruleLayerIdForSource&&n===e?.ruleAssetGroupCodeForSource&&i===e?.ruleAssetTypeCodeForSource&&c.layerId===e?.ruleLayerIdForTarget&&(null==l||l===e?.ruleAssetGroupCodeForTarget)){const r=o.get(e.ruleAssetGroupCodeForTarget)??new Set;r.add(e.ruleAssetTypeCodeForTarget),o.set(e.ruleAssetGroupCodeForTarget,r)}}))}))}));let p=[];return this._mergeAssetCodes(o).forEach(((e,r)=>p.push(`${s} IN (${r}) AND ${u} IN (${Array.from(e).sort().join(\", \")})`))),p.length>1&&(p=p.map((e=>`(${e})`))),p.join(\" OR \")}_getRulesForAssociationType(e){const{rulesCategorized:r}=this;switch(e){case\"attachment\":return r.attachment;case\"containment\":return r.containment;case\"connectivity\":case\"junction-junction-connectivity\":return r.connectivity.filter((e=>e.ruleType===i.RTJunctionJunctionConnectivity));case\"junction-edge-from-connectivity\":case\"junction-edge-midspan-connectivity\":case\"junction-edge-to-connectivity\":return r.connectivity.filter((e=>e.ruleType===i.RTJunctionEdgeConnectivity||e.ruleType===i.RTEdgeJunctionEdgeConnectivity));default:return[]}}_getFeatureSourceLayerId(e){const{sourceLayer:r}=e;let t;return n(r)?t=r.layerId:a(r)&&(t=r.parent?.layerId),t??null}_getAssetFieldNames(e){if(!e||!(\"fieldsIndex\"in e))return[null,null];return[e.fieldsIndex.normalizeFieldName(\"assetGroup\")??null,e.fieldsIndex.normalizeFieldName(\"assetType\")??null]}_getFeatureAssetCodes(e){const[r,t]=this._getAssetFieldNames(e.sourceLayer);return[r?e.attributes[r]:null,t?e.attributes[t]:null]}_areSetsEqual(e,r){if(e.size!==r.size)return!1;for(const t of e)if(!r.has(t))return!1;return!0}_mergeAssetCodes(e){const r=new Map,t=new Set;for(const[o,s]of e){const u=new Set([o]);for(const[r,n]of e)o!==r&&!t.has(r)&&this._areSetsEqual(s,n)&&(u.add(r),t.add(r));const a=Array.from(u).sort().join(\", \");r.set(a,s)}return r}};e([s({constructOnly:!0})],d.prototype,\"rulesLayer\",void 0),e([s({constructOnly:!0})],d.prototype,\"rules\",void 0),e([s({readOnly:!0})],d.prototype,\"rulesHash\",void 0),e([s()],d.prototype,\"rulesCategorized\",void 0),e([s({constructOnly:!0})],d.prototype,\"request\",void 0),d=e([u(\"esri.networks.RulesTable\")],d);const c=d;export{c as default};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}