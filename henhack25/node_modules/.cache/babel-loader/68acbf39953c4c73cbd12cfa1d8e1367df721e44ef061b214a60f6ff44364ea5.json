{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nclass t {\n  constructor(t, e, s, r, i, h, n) {\n    this.instanceId = t, this.textureKey = e, this.indexStart = s, this.indexCount = r, this.vertexStart = i, this.vertexCount = h, this.overlaps = n;\n  }\n  updateBaseOffsets(t) {\n    this.vertexStart += t.vertexFrom, this.indexStart += t.indexFrom;\n  }\n  clone() {\n    return new t(this.instanceId, this.textureKey, this.indexStart, this.indexCount, this.vertexStart, this.vertexCount, this.overlaps);\n  }\n  static write(t, e, s, r, i, h, n, a) {\n    t.push(e), t.push(s), t.push(r), t.push(i), t.push(h), t.push(n), t.push(a);\n  }\n  serialize(t) {\n    return t.push(this.instanceId), t.push(this.textureKey), t.push(this.indexStart), t.push(this.indexCount), t.push(this.vertexStart), t.push(this.vertexCount), t.push(this.overlaps), t;\n  }\n  static deserialize(e) {\n    const s = e.readInt32(),\n      r = e.readInt32(),\n      i = e.readInt32(),\n      h = e.readInt32(),\n      n = e.readInt32(),\n      a = e.readInt32(),\n      u = e.readInt32();\n    return new t(s, r, i, h, n, a, u);\n  }\n}\nt.byteSizeHint = 7 * Uint32Array.BYTES_PER_ELEMENT;\nexport { t as default };","map":{"version":3,"names":["t","constructor","e","s","r","i","h","n","instanceId","textureKey","indexStart","indexCount","vertexStart","vertexCount","overlaps","updateBaseOffsets","vertexFrom","indexFrom","clone","write","a","push","serialize","deserialize","readInt32","u","byteSizeHint","Uint32Array","BYTES_PER_ELEMENT","default"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/2d/engine/webgl/DisplayRecord.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nclass t{constructor(t,e,s,r,i,h,n){this.instanceId=t,this.textureKey=e,this.indexStart=s,this.indexCount=r,this.vertexStart=i,this.vertexCount=h,this.overlaps=n}updateBaseOffsets(t){this.vertexStart+=t.vertexFrom,this.indexStart+=t.indexFrom}clone(){return new t(this.instanceId,this.textureKey,this.indexStart,this.indexCount,this.vertexStart,this.vertexCount,this.overlaps)}static write(t,e,s,r,i,h,n,a){t.push(e),t.push(s),t.push(r),t.push(i),t.push(h),t.push(n),t.push(a)}serialize(t){return t.push(this.instanceId),t.push(this.textureKey),t.push(this.indexStart),t.push(this.indexCount),t.push(this.vertexStart),t.push(this.vertexCount),t.push(this.overlaps),t}static deserialize(e){const s=e.readInt32(),r=e.readInt32(),i=e.readInt32(),h=e.readInt32(),n=e.readInt32(),a=e.readInt32(),u=e.readInt32();return new t(s,r,i,h,n,a,u)}}t.byteSizeHint=7*Uint32Array.BYTES_PER_ELEMENT;export{t as default};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,MAAMA,CAAC;EAACC,WAAWA,CAACD,CAAC,EAACE,CAAC,EAACC,CAAC,EAACC,CAAC,EAACC,CAAC,EAACC,CAAC,EAACC,CAAC,EAAC;IAAC,IAAI,CAACC,UAAU,GAACR,CAAC,EAAC,IAAI,CAACS,UAAU,GAACP,CAAC,EAAC,IAAI,CAACQ,UAAU,GAACP,CAAC,EAAC,IAAI,CAACQ,UAAU,GAACP,CAAC,EAAC,IAAI,CAACQ,WAAW,GAACP,CAAC,EAAC,IAAI,CAACQ,WAAW,GAACP,CAAC,EAAC,IAAI,CAACQ,QAAQ,GAACP,CAAC;EAAA;EAACQ,iBAAiBA,CAACf,CAAC,EAAC;IAAC,IAAI,CAACY,WAAW,IAAEZ,CAAC,CAACgB,UAAU,EAAC,IAAI,CAACN,UAAU,IAAEV,CAAC,CAACiB,SAAS;EAAA;EAACC,KAAKA,CAAA,EAAE;IAAC,OAAO,IAAIlB,CAAC,CAAC,IAAI,CAACQ,UAAU,EAAC,IAAI,CAACC,UAAU,EAAC,IAAI,CAACC,UAAU,EAAC,IAAI,CAACC,UAAU,EAAC,IAAI,CAACC,WAAW,EAAC,IAAI,CAACC,WAAW,EAAC,IAAI,CAACC,QAAQ,CAAC;EAAA;EAAC,OAAOK,KAAKA,CAACnB,CAAC,EAACE,CAAC,EAACC,CAAC,EAACC,CAAC,EAACC,CAAC,EAACC,CAAC,EAACC,CAAC,EAACa,CAAC,EAAC;IAACpB,CAAC,CAACqB,IAAI,CAACnB,CAAC,CAAC,EAACF,CAAC,CAACqB,IAAI,CAAClB,CAAC,CAAC,EAACH,CAAC,CAACqB,IAAI,CAACjB,CAAC,CAAC,EAACJ,CAAC,CAACqB,IAAI,CAAChB,CAAC,CAAC,EAACL,CAAC,CAACqB,IAAI,CAACf,CAAC,CAAC,EAACN,CAAC,CAACqB,IAAI,CAACd,CAAC,CAAC,EAACP,CAAC,CAACqB,IAAI,CAACD,CAAC,CAAC;EAAA;EAACE,SAASA,CAACtB,CAAC,EAAC;IAAC,OAAOA,CAAC,CAACqB,IAAI,CAAC,IAAI,CAACb,UAAU,CAAC,EAACR,CAAC,CAACqB,IAAI,CAAC,IAAI,CAACZ,UAAU,CAAC,EAACT,CAAC,CAACqB,IAAI,CAAC,IAAI,CAACX,UAAU,CAAC,EAACV,CAAC,CAACqB,IAAI,CAAC,IAAI,CAACV,UAAU,CAAC,EAACX,CAAC,CAACqB,IAAI,CAAC,IAAI,CAACT,WAAW,CAAC,EAACZ,CAAC,CAACqB,IAAI,CAAC,IAAI,CAACR,WAAW,CAAC,EAACb,CAAC,CAACqB,IAAI,CAAC,IAAI,CAACP,QAAQ,CAAC,EAACd,CAAC;EAAA;EAAC,OAAOuB,WAAWA,CAACrB,CAAC,EAAC;IAAC,MAAMC,CAAC,GAACD,CAAC,CAACsB,SAAS,CAAC,CAAC;MAACpB,CAAC,GAACF,CAAC,CAACsB,SAAS,CAAC,CAAC;MAACnB,CAAC,GAACH,CAAC,CAACsB,SAAS,CAAC,CAAC;MAAClB,CAAC,GAACJ,CAAC,CAACsB,SAAS,CAAC,CAAC;MAACjB,CAAC,GAACL,CAAC,CAACsB,SAAS,CAAC,CAAC;MAACJ,CAAC,GAAClB,CAAC,CAACsB,SAAS,CAAC,CAAC;MAACC,CAAC,GAACvB,CAAC,CAACsB,SAAS,CAAC,CAAC;IAAC,OAAO,IAAIxB,CAAC,CAACG,CAAC,EAACC,CAAC,EAACC,CAAC,EAACC,CAAC,EAACC,CAAC,EAACa,CAAC,EAACK,CAAC,CAAC;EAAA;AAAC;AAACzB,CAAC,CAAC0B,YAAY,GAAC,CAAC,GAACC,WAAW,CAACC,iBAAiB;AAAC,SAAO5B,CAAC,IAAI6B,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}