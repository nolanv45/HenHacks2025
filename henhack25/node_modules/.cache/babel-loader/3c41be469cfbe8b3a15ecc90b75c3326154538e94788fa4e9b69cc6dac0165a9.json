{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport has from \"../../core/has.js\";\nimport e from \"../../core/Logger.js\";\nimport i from \"./Field.js\";\nimport t from \"./FieldsIndex.js\";\nimport { fixFields as r } from \"./fieldUtils.js\";\nfunction s() {\n  return {\n    fields: {\n      type: [i],\n      value: null,\n      set: function (i) {\n        if (i && has(\"big-integer-warning-enabled\")) {\n          const t = i.filter(e => \"big-integer\" === e.type || \"oid\" === e.type && (e.length || 0) >= 8);\n          if (t.length) {\n            const i = t.map(e => `'${e.name}'`).join(\", \");\n            e.getLogger(this).warn(\"#fields\", `Layer (title: '${this.title ?? \"no title\"}', id: '${this.id ?? \"no id\"}') references big-integer field(s): ${i}, support for which is experimental. Only integers less than ${Number.MAX_SAFE_INTEGER} (Number.MAX_SAFE_INTEGER) are supported.`);\n          }\n        }\n        this._set(\"fields\", i);\n      }\n    },\n    fieldsIndex: {\n      readOnly: !0,\n      get() {\n        return t.fromLayer(this);\n      }\n    },\n    outFields: {\n      type: [String],\n      json: {\n        read: !1\n      },\n      set: function (e) {\n        this._userOutFields = e, this.notifyChange(\"outFields\");\n      },\n      get: function () {\n        const i = this._userOutFields;\n        if (!i?.length) return null;\n        if (i.includes(\"*\")) return [\"*\"];\n        if (!this.fields) return i;\n        for (const t of i) {\n          const r = this.fieldsIndex?.has(t);\n          r || e.getLogger(\"esri.layers.support.fieldProperties\").error(\"field-attributes-layer:invalid-field\", `Invalid field ${t} found in outFields`, {\n            layer: this,\n            outFields: i\n          });\n        }\n        return r(this.fieldsIndex, i);\n      }\n    }\n  };\n}\nexport { s as defineFieldProperties };","map":{"version":3,"names":["has","e","i","t","fixFields","r","s","fields","type","value","set","filter","length","map","name","join","getLogger","warn","title","id","Number","MAX_SAFE_INTEGER","_set","fieldsIndex","readOnly","get","fromLayer","outFields","String","json","read","_userOutFields","notifyChange","includes","error","layer","defineFieldProperties"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/layers/support/fieldProperties.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport has from\"../../core/has.js\";import e from\"../../core/Logger.js\";import i from\"./Field.js\";import t from\"./FieldsIndex.js\";import{fixFields as r}from\"./fieldUtils.js\";function s(){return{fields:{type:[i],value:null,set:function(i){if(i&&has(\"big-integer-warning-enabled\")){const t=i.filter((e=>\"big-integer\"===e.type||\"oid\"===e.type&&(e.length||0)>=8));if(t.length){const i=t.map((e=>`'${e.name}'`)).join(\", \");e.getLogger(this).warn(\"#fields\",`Layer (title: '${this.title??\"no title\"}', id: '${this.id??\"no id\"}') references big-integer field(s): ${i}, support for which is experimental. Only integers less than ${Number.MAX_SAFE_INTEGER} (Number.MAX_SAFE_INTEGER) are supported.`)}}this._set(\"fields\",i)}},fieldsIndex:{readOnly:!0,get(){return t.fromLayer(this)}},outFields:{type:[String],json:{read:!1},set:function(e){this._userOutFields=e,this.notifyChange(\"outFields\")},get:function(){const i=this._userOutFields;if(!i?.length)return null;if(i.includes(\"*\"))return[\"*\"];if(!this.fields)return i;for(const t of i){const r=this.fieldsIndex?.has(t);r||e.getLogger(\"esri.layers.support.fieldProperties\").error(\"field-attributes-layer:invalid-field\",`Invalid field ${t} found in outFields`,{layer:this,outFields:i})}return r(this.fieldsIndex,i)}}}}export{s as defineFieldProperties};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAOA,GAAG,MAAK,mBAAmB;AAAC,OAAOC,CAAC,MAAK,sBAAsB;AAAC,OAAOC,CAAC,MAAK,YAAY;AAAC,OAAOC,CAAC,MAAK,kBAAkB;AAAC,SAAOC,SAAS,IAAIC,CAAC,QAAK,iBAAiB;AAAC,SAASC,CAACA,CAAA,EAAE;EAAC,OAAM;IAACC,MAAM,EAAC;MAACC,IAAI,EAAC,CAACN,CAAC,CAAC;MAACO,KAAK,EAAC,IAAI;MAACC,GAAG,EAAC,SAAAA,CAASR,CAAC,EAAC;QAAC,IAAGA,CAAC,IAAEF,GAAG,CAAC,6BAA6B,CAAC,EAAC;UAAC,MAAMG,CAAC,GAACD,CAAC,CAACS,MAAM,CAAEV,CAAC,IAAE,aAAa,KAAGA,CAAC,CAACO,IAAI,IAAE,KAAK,KAAGP,CAAC,CAACO,IAAI,IAAE,CAACP,CAAC,CAACW,MAAM,IAAE,CAAC,KAAG,CAAE,CAAC;UAAC,IAAGT,CAAC,CAACS,MAAM,EAAC;YAAC,MAAMV,CAAC,GAACC,CAAC,CAACU,GAAG,CAAEZ,CAAC,IAAE,IAAIA,CAAC,CAACa,IAAI,GAAI,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;YAACd,CAAC,CAACe,SAAS,CAAC,IAAI,CAAC,CAACC,IAAI,CAAC,SAAS,EAAC,kBAAkB,IAAI,CAACC,KAAK,IAAE,UAAU,WAAW,IAAI,CAACC,EAAE,IAAE,OAAO,uCAAuCjB,CAAC,gEAAgEkB,MAAM,CAACC,gBAAgB,2CAA2C,CAAC;UAAA;QAAC;QAAC,IAAI,CAACC,IAAI,CAAC,QAAQ,EAACpB,CAAC,CAAC;MAAA;IAAC,CAAC;IAACqB,WAAW,EAAC;MAACC,QAAQ,EAAC,CAAC,CAAC;MAACC,GAAGA,CAAA,EAAE;QAAC,OAAOtB,CAAC,CAACuB,SAAS,CAAC,IAAI,CAAC;MAAA;IAAC,CAAC;IAACC,SAAS,EAAC;MAACnB,IAAI,EAAC,CAACoB,MAAM,CAAC;MAACC,IAAI,EAAC;QAACC,IAAI,EAAC,CAAC;MAAC,CAAC;MAACpB,GAAG,EAAC,SAAAA,CAAST,CAAC,EAAC;QAAC,IAAI,CAAC8B,cAAc,GAAC9B,CAAC,EAAC,IAAI,CAAC+B,YAAY,CAAC,WAAW,CAAC;MAAA,CAAC;MAACP,GAAG,EAAC,SAAAA,CAAA,EAAU;QAAC,MAAMvB,CAAC,GAAC,IAAI,CAAC6B,cAAc;QAAC,IAAG,CAAC7B,CAAC,EAAEU,MAAM,EAAC,OAAO,IAAI;QAAC,IAAGV,CAAC,CAAC+B,QAAQ,CAAC,GAAG,CAAC,EAAC,OAAM,CAAC,GAAG,CAAC;QAAC,IAAG,CAAC,IAAI,CAAC1B,MAAM,EAAC,OAAOL,CAAC;QAAC,KAAI,MAAMC,CAAC,IAAID,CAAC,EAAC;UAAC,MAAMG,CAAC,GAAC,IAAI,CAACkB,WAAW,EAAEvB,GAAG,CAACG,CAAC,CAAC;UAACE,CAAC,IAAEJ,CAAC,CAACe,SAAS,CAAC,qCAAqC,CAAC,CAACkB,KAAK,CAAC,sCAAsC,EAAC,iBAAiB/B,CAAC,qBAAqB,EAAC;YAACgC,KAAK,EAAC,IAAI;YAACR,SAAS,EAACzB;UAAC,CAAC,CAAC;QAAA;QAAC,OAAOG,CAAC,CAAC,IAAI,CAACkB,WAAW,EAACrB,CAAC,CAAC;MAAA;IAAC;EAAC,CAAC;AAAA;AAAC,SAAOI,CAAC,IAAI8B,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}