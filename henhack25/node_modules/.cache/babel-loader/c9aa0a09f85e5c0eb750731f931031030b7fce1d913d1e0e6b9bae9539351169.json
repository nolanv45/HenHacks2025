{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { create as e } from \"../../../../../../core/libs/gl-matrix-2/factories/vec4f64.js\";\nimport { hasArea as o, width as r, height as t } from \"../../../../../../geometry/support/aaBoundingRect.js\";\nimport { OverlayIndex as a } from \"../../../../terrain/interfaces.js\";\nimport { OverlayContent as l } from \"../../../../terrain/OverlayContent.js\";\nimport { RenderPassIdentifier as i } from \"../../renderPasses/RenderPassIdentifier.js\";\nimport { isColorOrColorEmission as n, ShaderOutput as v } from \"../ShaderOutput.js\";\nimport { addMainLightDirection as d, addMainLightIntensity as s } from \"../shading/MainLighting.glsl.js\";\nimport { PBRMode as c } from \"../shading/PhysicallyBasedRenderingParameters.glsl.js\";\nimport { Water as x } from \"../shading/Water.glsl.js\";\nimport { Float4DrawUniform as u } from \"../../shaderModules/Float4DrawUniform.js\";\nimport { FloatPassUniform as y } from \"../../shaderModules/FloatPassUniform.js\";\nimport { glsl as m } from \"../../shaderModules/glsl.js\";\nimport { Texture2DPassUniform as p } from \"../../shaderModules/Texture2DPassUniform.js\";\nimport { Uniform as f } from \"../../../../../webgl/Uniform.js\";\nvar C;\nfunction g(e, o) {\n  const {\n    vertex: r,\n    fragment: t\n  } = e;\n  r.uniforms.add(new u(\"overlayTexOffset\", (e, o) => b(e, o)), new u(\"overlayTexScale\", (e, o) => V(e, o))), t.constants.add(\"overlayOpacity\", \"float\", 1), t.uniforms.add(new p(\"ovColorTex\", (e, o) => T(e, o))), h(e, o);\n}\nfunction O(e, o) {\n  const {\n    vertex: r,\n    fragment: t\n  } = e;\n  r.uniforms.add(new w(\"overlayTexOffset\"), new w(\"overlayTexScale\")), t.uniforms.add(new y(\"overlayOpacity\", e => e.overlayOpacity), new p(\"ovColorTex\", (e, o) => o.overlay?.getTexture(e.overlayContent))), h(e, o);\n}\nfunction h(e, o) {\n  const r = o.pbrMode === c.Water || o.pbrMode === c.WaterOnIntegratedMesh || o.pbrMode === c.TerrainWithWater;\n  r && e.include(x, o);\n  const {\n    vertex: t,\n    fragment: a\n  } = e;\n  e.varyings.add(\"vtcOverlay\", \"vec4\"), t.code.add(m`void setOverlayVTC(in vec2 uv) {\nvtcOverlay = vec4(uv, uv) * overlayTexScale + overlayTexOffset;\n}`), a.code.add(m`bool isValid(vec2 uv, vec2 dxdy) {\nreturn (uv.x >= 0.0 + dxdy.x) && (uv.x <= 1.0 - dxdy.x) && (uv.y >= 0.0 + dxdy.y) && (uv.y <= 1.0 - dxdy.y);\n}\nvec4 getOverlayColor(sampler2D ov0Tex, vec4 texCoords) {\nvec4 color0 = texture(ov0Tex, vec2(texCoords.x * 0.5, texCoords.y));\nvec4 color1 = texture(ov0Tex, vec2(texCoords.z * 0.5 + 0.5, texCoords.w));\nbool isValid0 = isValid(texCoords.xy, fwidth(texCoords.xy));\nbool isValid1 = isValid(texCoords.zw, vec2(0.0, 0.0));\nreturn mix(color1 * float(isValid1), color0, float(isValid0));\n}`), a.code.add(m`vec4 getCombinedOverlayColor() {\nreturn overlayOpacity * getOverlayColor(ovColorTex, vtcOverlay);\n}`), a.code.add(m`vec4 getOverlayColorTexel() {\nvec4 texCoords = vtcOverlay;\nvec2 texDim =  vec2(textureSize(ovColorTex, 0));\nvec4 color0 = texelFetch(ovColorTex, ivec2(vec2(texCoords.x * 0.5, texCoords.y) * texDim), 0);\nvec4 color1 = texelFetch(ovColorTex, ivec2(vec2(texCoords.z * 0.5 + 0.5, texCoords.w) * texDim), 0);\nbool isValid0 = isValid(texCoords.xy, fwidth(texCoords.xy));\nbool isValid1 = isValid(texCoords.zw, vec2(0.0, 0.0));\nreturn mix(color1 * float(isValid1), color0, float(isValid0));\n}`), a.code.add(m`vec2 getAllOverlayHighlightValuesEncoded() {\nvec4 texCoords = vtcOverlay;\nvec2 uvInner = texCoords.xy;\nvec2 uvOuter = texCoords.zw;\nbool isValidInner = isValid(uvInner, fwidth(uvInner));\nbool isValidOuter = isValid(uvOuter, vec2(0.0, 0.0));\nvec2 texelCoordInner = uvInner * vec2(0.5, 1.0);\nvec2 texelCoordOuter = uvOuter * vec2(0.5, 1.0) + vec2(0.5,0.0);\nvec2 texDim =  vec2(textureSize(ovColorTex, 0));\nvec2 texelValueInner = texelFetch(ovColorTex, ivec2(texelCoordInner * texDim), 0).rg;\nvec2 texelValueOuter = texelFetch(ovColorTex, ivec2(texelCoordOuter * texDim), 0).rg;\nreturn\nisValidInner ? texelValueInner :\nisValidOuter ? texelValueOuter :\nvec2(0.0);\n}`), r && (d(a), s(a), a.code.add(m`vec4 getOverlayWaterColor(vec4 maskInput, vec4 colorInput, vec3 vposEyeDir,\nfloat shadow, vec3 localUp, mat3 tbn, vec3 position, vec3 positionWorld) {\nvec3 n = normalize(tbn *  (2.0 * maskInput.rgb - vec3(1.0)));\nvec3 v = vposEyeDir;\nvec3 final = getSeaColor(n, v, mainLightDirection, colorInput.rgb, mainLightIntensity, localUp, 1.0 - shadow, maskInput.w, position, positionWorld);\nreturn vec4(final, colorInput.w);\n}`));\n}\nfunction T(e, o) {\n  return e.identifier === i.Material && n(e.output) ? o.overlay?.getTexture(l.ColorNoRasterImage) : e.identifier === i.Material && e.output === v.ObjectAndLayerIdColor ? o.overlay?.getTexture(l.ObjectAndLayerIdColor) : e.identifier === i.Highlight ? o.overlay?.getTexture(l.Highlight) : null;\n}\nfunction b(e, l) {\n  const i = l.overlay?.overlays[a.INNER]?.extent;\n  o(i) && (I[0] = e.toMapSpace[0] / r(i) - i[0] / r(i), I[1] = e.toMapSpace[1] / t(i) - i[1] / t(i));\n  const n = l.overlay?.overlays[a.OUTER]?.extent;\n  return o(n) && (I[2] = e.toMapSpace[0] / r(n) - n[0] / r(n), I[3] = e.toMapSpace[1] / t(n) - n[1] / t(n)), I;\n}\nfunction V(e, l) {\n  const i = l.overlay?.overlays[a.INNER]?.extent;\n  o(i) && (I[0] = e.toMapSpace[2] / r(i), I[1] = e.toMapSpace[3] / t(i));\n  const n = l.overlay?.overlays[a.OUTER]?.extent;\n  return o(n) && (I[2] = e.toMapSpace[2] / r(n), I[3] = e.toMapSpace[3] / t(n)), I;\n}\n!function (e) {\n  e[e.Disabled = 0] = \"Disabled\", e[e.Enabled = 1] = \"Enabled\", e[e.EnabledWithWater = 2] = \"EnabledWithWater\", e[e.COUNT = 3] = \"COUNT\";\n}(C || (C = {}));\nconst I = e();\nclass w extends f {\n  constructor(e) {\n    super(e, \"vec4\");\n  }\n}\nexport { g as OverlayIM, C as OverlayMode, O as OverlayTerrain, T as getIMColorTexture };","map":{"version":3,"names":["create","e","hasArea","o","width","r","height","t","OverlayIndex","a","OverlayContent","l","RenderPassIdentifier","i","isColorOrColorEmission","n","ShaderOutput","v","addMainLightDirection","d","addMainLightIntensity","s","PBRMode","c","Water","x","Float4DrawUniform","u","FloatPassUniform","y","glsl","m","Texture2DPassUniform","p","Uniform","f","C","g","vertex","fragment","uniforms","add","b","V","constants","T","h","O","w","overlayOpacity","overlay","getTexture","overlayContent","pbrMode","WaterOnIntegratedMesh","TerrainWithWater","include","varyings","code","identifier","Material","output","ColorNoRasterImage","ObjectAndLayerIdColor","Highlight","overlays","INNER","extent","I","toMapSpace","OUTER","Disabled","Enabled","EnabledWithWater","COUNT","constructor","OverlayIM","OverlayMode","OverlayTerrain","getIMColorTexture"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/terrain/Overlay.glsl.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{create as e}from\"../../../../../../core/libs/gl-matrix-2/factories/vec4f64.js\";import{hasArea as o,width as r,height as t}from\"../../../../../../geometry/support/aaBoundingRect.js\";import{OverlayIndex as a}from\"../../../../terrain/interfaces.js\";import{OverlayContent as l}from\"../../../../terrain/OverlayContent.js\";import{RenderPassIdentifier as i}from\"../../renderPasses/RenderPassIdentifier.js\";import{isColorOrColorEmission as n,ShaderOutput as v}from\"../ShaderOutput.js\";import{addMainLightDirection as d,addMainLightIntensity as s}from\"../shading/MainLighting.glsl.js\";import{PBRMode as c}from\"../shading/PhysicallyBasedRenderingParameters.glsl.js\";import{Water as x}from\"../shading/Water.glsl.js\";import{Float4DrawUniform as u}from\"../../shaderModules/Float4DrawUniform.js\";import{FloatPassUniform as y}from\"../../shaderModules/FloatPassUniform.js\";import{glsl as m}from\"../../shaderModules/glsl.js\";import{Texture2DPassUniform as p}from\"../../shaderModules/Texture2DPassUniform.js\";import{Uniform as f}from\"../../../../../webgl/Uniform.js\";var C;function g(e,o){const{vertex:r,fragment:t}=e;r.uniforms.add(new u(\"overlayTexOffset\",((e,o)=>b(e,o))),new u(\"overlayTexScale\",((e,o)=>V(e,o)))),t.constants.add(\"overlayOpacity\",\"float\",1),t.uniforms.add(new p(\"ovColorTex\",((e,o)=>T(e,o)))),h(e,o)}function O(e,o){const{vertex:r,fragment:t}=e;r.uniforms.add(new w(\"overlayTexOffset\"),new w(\"overlayTexScale\")),t.uniforms.add(new y(\"overlayOpacity\",(e=>e.overlayOpacity)),new p(\"ovColorTex\",((e,o)=>o.overlay?.getTexture(e.overlayContent)))),h(e,o)}function h(e,o){const r=o.pbrMode===c.Water||o.pbrMode===c.WaterOnIntegratedMesh||o.pbrMode===c.TerrainWithWater;r&&e.include(x,o);const{vertex:t,fragment:a}=e;e.varyings.add(\"vtcOverlay\",\"vec4\"),t.code.add(m`void setOverlayVTC(in vec2 uv) {\nvtcOverlay = vec4(uv, uv) * overlayTexScale + overlayTexOffset;\n}`),a.code.add(m`bool isValid(vec2 uv, vec2 dxdy) {\nreturn (uv.x >= 0.0 + dxdy.x) && (uv.x <= 1.0 - dxdy.x) && (uv.y >= 0.0 + dxdy.y) && (uv.y <= 1.0 - dxdy.y);\n}\nvec4 getOverlayColor(sampler2D ov0Tex, vec4 texCoords) {\nvec4 color0 = texture(ov0Tex, vec2(texCoords.x * 0.5, texCoords.y));\nvec4 color1 = texture(ov0Tex, vec2(texCoords.z * 0.5 + 0.5, texCoords.w));\nbool isValid0 = isValid(texCoords.xy, fwidth(texCoords.xy));\nbool isValid1 = isValid(texCoords.zw, vec2(0.0, 0.0));\nreturn mix(color1 * float(isValid1), color0, float(isValid0));\n}`),a.code.add(m`vec4 getCombinedOverlayColor() {\nreturn overlayOpacity * getOverlayColor(ovColorTex, vtcOverlay);\n}`),a.code.add(m`vec4 getOverlayColorTexel() {\nvec4 texCoords = vtcOverlay;\nvec2 texDim =  vec2(textureSize(ovColorTex, 0));\nvec4 color0 = texelFetch(ovColorTex, ivec2(vec2(texCoords.x * 0.5, texCoords.y) * texDim), 0);\nvec4 color1 = texelFetch(ovColorTex, ivec2(vec2(texCoords.z * 0.5 + 0.5, texCoords.w) * texDim), 0);\nbool isValid0 = isValid(texCoords.xy, fwidth(texCoords.xy));\nbool isValid1 = isValid(texCoords.zw, vec2(0.0, 0.0));\nreturn mix(color1 * float(isValid1), color0, float(isValid0));\n}`),a.code.add(m`vec2 getAllOverlayHighlightValuesEncoded() {\nvec4 texCoords = vtcOverlay;\nvec2 uvInner = texCoords.xy;\nvec2 uvOuter = texCoords.zw;\nbool isValidInner = isValid(uvInner, fwidth(uvInner));\nbool isValidOuter = isValid(uvOuter, vec2(0.0, 0.0));\nvec2 texelCoordInner = uvInner * vec2(0.5, 1.0);\nvec2 texelCoordOuter = uvOuter * vec2(0.5, 1.0) + vec2(0.5,0.0);\nvec2 texDim =  vec2(textureSize(ovColorTex, 0));\nvec2 texelValueInner = texelFetch(ovColorTex, ivec2(texelCoordInner * texDim), 0).rg;\nvec2 texelValueOuter = texelFetch(ovColorTex, ivec2(texelCoordOuter * texDim), 0).rg;\nreturn\nisValidInner ? texelValueInner :\nisValidOuter ? texelValueOuter :\nvec2(0.0);\n}`),r&&(d(a),s(a),a.code.add(m`vec4 getOverlayWaterColor(vec4 maskInput, vec4 colorInput, vec3 vposEyeDir,\nfloat shadow, vec3 localUp, mat3 tbn, vec3 position, vec3 positionWorld) {\nvec3 n = normalize(tbn *  (2.0 * maskInput.rgb - vec3(1.0)));\nvec3 v = vposEyeDir;\nvec3 final = getSeaColor(n, v, mainLightDirection, colorInput.rgb, mainLightIntensity, localUp, 1.0 - shadow, maskInput.w, position, positionWorld);\nreturn vec4(final, colorInput.w);\n}`))}function T(e,o){return e.identifier===i.Material&&n(e.output)?o.overlay?.getTexture(l.ColorNoRasterImage):e.identifier===i.Material&&e.output===v.ObjectAndLayerIdColor?o.overlay?.getTexture(l.ObjectAndLayerIdColor):e.identifier===i.Highlight?o.overlay?.getTexture(l.Highlight):null}function b(e,l){const i=l.overlay?.overlays[a.INNER]?.extent;o(i)&&(I[0]=e.toMapSpace[0]/r(i)-i[0]/r(i),I[1]=e.toMapSpace[1]/t(i)-i[1]/t(i));const n=l.overlay?.overlays[a.OUTER]?.extent;return o(n)&&(I[2]=e.toMapSpace[0]/r(n)-n[0]/r(n),I[3]=e.toMapSpace[1]/t(n)-n[1]/t(n)),I}function V(e,l){const i=l.overlay?.overlays[a.INNER]?.extent;o(i)&&(I[0]=e.toMapSpace[2]/r(i),I[1]=e.toMapSpace[3]/t(i));const n=l.overlay?.overlays[a.OUTER]?.extent;return o(n)&&(I[2]=e.toMapSpace[2]/r(n),I[3]=e.toMapSpace[3]/t(n)),I}!function(e){e[e.Disabled=0]=\"Disabled\",e[e.Enabled=1]=\"Enabled\",e[e.EnabledWithWater=2]=\"EnabledWithWater\",e[e.COUNT=3]=\"COUNT\"}(C||(C={}));const I=e();class w extends f{constructor(e){super(e,\"vec4\")}}export{g as OverlayIM,C as OverlayMode,O as OverlayTerrain,T as getIMColorTexture};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}