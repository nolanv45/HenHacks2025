{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { pt2px as t } from \"../../../../../../../core/screenUtils.js\";\nimport { GeometryCursor as e } from \"../../../../../../../geometry/GeometryCursor.js\";\nimport { minMaxZoomPrecisionFactor as s, thinLineHalfWidthThreshold as i } from \"../../../definitions.js\";\nimport { LineTessellation as r } from \"../../../TurboLine.js\";\nimport { clipLinesMarshall as o } from \"../../../mesh/templates/templateUtils.js\";\nimport { getMinMaxZoom as n, processColorInput as a, packRounded as c, processLineCapInput as h, processLineJoinInput as l } from \"../fill/meshWriterUtils.js\";\nimport { MeshWriter as m } from \"../mesh/MeshWriter.js\";\nimport { getLineClippingMargin as u } from \"../mesh/utils.js\";\nimport { DataType as p } from \"../../../../../../webgl/enums.js\";\nclass d {\n  constructor() {\n    this.extrusionOffsetX = 0, this.extrusionOffsetY = 0, this.normalX = 0, this.normalY = 0, this.directionX = 0, this.directionY = 0, this.distance = 0, this.pathLength = 0;\n  }\n}\nconst f = {\n  createComputedParams: t => t,\n  optionalAttributes: {\n    zoomRange: {\n      type: p.SHORT,\n      count: 2,\n      packPrecisionFactor: s,\n      pack: (_ref, _ref2) => {\n        let {\n          scaleInfo: t\n        } = _ref;\n        let {\n          tileInfo: e\n        } = _ref2;\n        return n(t, e);\n      }\n    }\n  },\n  attributes: {\n    id: {\n      type: p.UNSIGNED_BYTE,\n      count: 3,\n      pack: \"id\"\n    },\n    pos: {\n      type: p.SHORT,\n      count: 2,\n      pack: \"position\",\n      packPrecisionFactor: 10\n    },\n    bitset: {\n      type: p.UNSIGNED_BYTE,\n      count: 1\n    },\n    color: {\n      type: p.UNSIGNED_BYTE,\n      count: 4,\n      normalized: !0,\n      pack: _ref3 => {\n        let {\n          color: t\n        } = _ref3;\n        return a(t);\n      }\n    },\n    offset: {\n      type: p.BYTE,\n      count: 2,\n      packPrecisionFactor: 16,\n      packTessellation: _ref4 => {\n        let {\n          extrusionOffsetX: t,\n          extrusionOffsetY: e\n        } = _ref4;\n        return [c(t, 16), c(e, 16)];\n      }\n    },\n    normal: {\n      type: p.BYTE,\n      count: 2,\n      packPrecisionFactor: 16,\n      packTessellation: _ref5 => {\n        let {\n          normalX: t,\n          normalY: e\n        } = _ref5;\n        return [c(t, 16), c(e, 16)];\n      }\n    },\n    halfWidth: {\n      type: p.HALF_FLOAT,\n      count: 1,\n      pack: _ref6 => {\n        let {\n          width: e\n        } = _ref6;\n        return t(.5 * e);\n      }\n    },\n    referenceHalfWidth: {\n      type: p.HALF_FLOAT,\n      count: 1,\n      pack: _ref7 => {\n        let {\n          referenceWidth: e\n        } = _ref7;\n        return t(.5 * e);\n      }\n    }\n  }\n};\nclass _ {\n  constructor() {\n    this.id = 0, this.bitset = 0, this.indexCount = 0, this.vertexCount = 0, this.vertexFrom = 0, this.vertexBounds = 0, this.pathLength = 0;\n  }\n}\nconst x = 65535;\nclass T extends m {\n  constructor(t, e, s, i) {\n    super(t, e, s, i), this.vertexSpec = f, this._currentWrite = new _(), this._tessellationOptions = {\n      halfWidth: 0,\n      pixelCoordRatio: 1,\n      offset: 0,\n      wrapDistance: x,\n      textured: !1\n    }, this._tessParams = new d(), this._initializeTessellator();\n  }\n  writeLineVertices(t, e, s) {\n    const i = this._getLines(e);\n    null != i && this._writeVertices(t, s, i);\n  }\n  _initializeTessellator() {\n    this._lineTessellator = new r(this._writeTesselatedVertex.bind(this), this._writeTriangle.bind(this), !0);\n  }\n  _write(t, s, i) {\n    const r = i ?? e.fromFeatureSetReaderCIM(s);\n    r && this._writeGeometry(t, s, r);\n  }\n  _writeGeometry(t, e, s, i) {\n    t.recordStart(this.instanceId, this.attributeLayout, i), this.writeLineVertices(t, s, e), t.recordEnd();\n  }\n  _getLines(t) {\n    return o(t, u(this.evaluatedMeshParams));\n  }\n  _writeVertices(e, s, r) {\n    const {\n        _currentWrite: o,\n        _tessellationOptions: n,\n        evaluatedMeshParams: a\n      } = this,\n      {\n        width: c,\n        capType: m,\n        joinType: u,\n        miterLimit: p,\n        hasSizeVV: d\n      } = a,\n      f = t(.5 * c);\n    n.halfWidth = f, n.capType = h(m), n.joinType = l(u), n.miterLimit = p;\n    const _ = !d;\n    o.out = e, o.id = s.getDisplayId(), o.vertexCount = 0, o.indexCount = 0, o.vertexFrom = e.vertexCount(), o.vertexBounds = _ && f < i ? 0 : 1;\n    for (const {\n      line: t,\n      start: i,\n      pathLength: h\n    } of r) n.initialDistance = i % x, o.pathLength = h, this._lineTessellator.tessellate(t, n, _);\n  }\n  _writeTesselatedVertex(t, e, s, i, r, o, n, a, c, h, l) {\n    const {\n      out: m,\n      id: u,\n      vertexBounds: p,\n      pathLength: d\n    } = this._currentWrite;\n    return this.hasEffects && m.recordBounds(t, e, p, p), this._tessParams.extrusionOffsetX = n, this._tessParams.extrusionOffsetY = a, this._tessParams.normalX = c, this._tessParams.normalY = h, this._tessParams.directionX = r, this._tessParams.directionY = o, this._tessParams.distance = l, this._tessParams.pathLength = d, this._writeVertex(m, u, t, e, this._tessParams), this._currentWrite.vertexFrom + this._currentWrite.vertexCount++;\n  }\n  _writeTriangle(t, e, s) {\n    const {\n      out: i\n    } = this._currentWrite;\n    i.indexEnsureSize(3), i.indexWrite(t), i.indexWrite(e), i.indexWrite(s), this._currentWrite.indexCount += 3;\n  }\n}\nexport { T as LineMeshWriter, d as LineTessellationParams, f as LineVertexSpec };","map":{"version":3,"names":["pt2px","t","GeometryCursor","e","minMaxZoomPrecisionFactor","s","thinLineHalfWidthThreshold","i","LineTessellation","r","clipLinesMarshall","o","getMinMaxZoom","n","processColorInput","a","packRounded","c","processLineCapInput","h","processLineJoinInput","l","MeshWriter","m","getLineClippingMargin","u","DataType","p","d","constructor","extrusionOffsetX","extrusionOffsetY","normalX","normalY","directionX","directionY","distance","pathLength","f","createComputedParams","optionalAttributes","zoomRange","type","SHORT","count","packPrecisionFactor","pack","_ref","_ref2","scaleInfo","tileInfo","attributes","id","UNSIGNED_BYTE","pos","bitset","color","normalized","_ref3","offset","BYTE","packTessellation","_ref4","normal","_ref5","halfWidth","HALF_FLOAT","_ref6","width","referenceHalfWidth","_ref7","referenceWidth","_","indexCount","vertexCount","vertexFrom","vertexBounds","x","T","vertexSpec","_currentWrite","_tessellationOptions","pixelCoordRatio","wrapDistance","textured","_tessParams","_initializeTessellator","writeLineVertices","_getLines","_writeVertices","_lineTessellator","_writeTesselatedVertex","bind","_writeTriangle","_write","fromFeatureSetReaderCIM","_writeGeometry","recordStart","instanceId","attributeLayout","recordEnd","evaluatedMeshParams","capType","joinType","miterLimit","hasSizeVV","out","getDisplayId","line","start","initialDistance","tessellate","hasEffects","recordBounds","_writeVertex","indexEnsureSize","indexWrite","LineMeshWriter","LineTessellationParams","LineVertexSpec"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/2d/engine/webgl/shaderGraph/techniques/line/LineMeshWriter.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{pt2px as t}from\"../../../../../../../core/screenUtils.js\";import{GeometryCursor as e}from\"../../../../../../../geometry/GeometryCursor.js\";import{minMaxZoomPrecisionFactor as s,thinLineHalfWidthThreshold as i}from\"../../../definitions.js\";import{LineTessellation as r}from\"../../../TurboLine.js\";import{clipLinesMarshall as o}from\"../../../mesh/templates/templateUtils.js\";import{getMinMaxZoom as n,processColorInput as a,packRounded as c,processLineCapInput as h,processLineJoinInput as l}from\"../fill/meshWriterUtils.js\";import{MeshWriter as m}from\"../mesh/MeshWriter.js\";import{getLineClippingMargin as u}from\"../mesh/utils.js\";import{DataType as p}from\"../../../../../../webgl/enums.js\";class d{constructor(){this.extrusionOffsetX=0,this.extrusionOffsetY=0,this.normalX=0,this.normalY=0,this.directionX=0,this.directionY=0,this.distance=0,this.pathLength=0}}const f={createComputedParams:t=>t,optionalAttributes:{zoomRange:{type:p.SHORT,count:2,packPrecisionFactor:s,pack:({scaleInfo:t},{tileInfo:e})=>n(t,e)}},attributes:{id:{type:p.UNSIGNED_BYTE,count:3,pack:\"id\"},pos:{type:p.SHORT,count:2,pack:\"position\",packPrecisionFactor:10},bitset:{type:p.UNSIGNED_BYTE,count:1},color:{type:p.UNSIGNED_BYTE,count:4,normalized:!0,pack:({color:t})=>a(t)},offset:{type:p.BYTE,count:2,packPrecisionFactor:16,packTessellation:({extrusionOffsetX:t,extrusionOffsetY:e})=>[c(t,16),c(e,16)]},normal:{type:p.BYTE,count:2,packPrecisionFactor:16,packTessellation:({normalX:t,normalY:e})=>[c(t,16),c(e,16)]},halfWidth:{type:p.HALF_FLOAT,count:1,pack:({width:e})=>t(.5*e)},referenceHalfWidth:{type:p.HALF_FLOAT,count:1,pack:({referenceWidth:e})=>t(.5*e)}}};class _{constructor(){this.id=0,this.bitset=0,this.indexCount=0,this.vertexCount=0,this.vertexFrom=0,this.vertexBounds=0,this.pathLength=0}}const x=65535;class T extends m{constructor(t,e,s,i){super(t,e,s,i),this.vertexSpec=f,this._currentWrite=new _,this._tessellationOptions={halfWidth:0,pixelCoordRatio:1,offset:0,wrapDistance:x,textured:!1},this._tessParams=new d,this._initializeTessellator()}writeLineVertices(t,e,s){const i=this._getLines(e);null!=i&&this._writeVertices(t,s,i)}_initializeTessellator(){this._lineTessellator=new r(this._writeTesselatedVertex.bind(this),this._writeTriangle.bind(this),!0)}_write(t,s,i){const r=i??e.fromFeatureSetReaderCIM(s);r&&this._writeGeometry(t,s,r)}_writeGeometry(t,e,s,i){t.recordStart(this.instanceId,this.attributeLayout,i),this.writeLineVertices(t,s,e),t.recordEnd()}_getLines(t){return o(t,u(this.evaluatedMeshParams))}_writeVertices(e,s,r){const{_currentWrite:o,_tessellationOptions:n,evaluatedMeshParams:a}=this,{width:c,capType:m,joinType:u,miterLimit:p,hasSizeVV:d}=a,f=t(.5*c);n.halfWidth=f,n.capType=h(m),n.joinType=l(u),n.miterLimit=p;const _=!d;o.out=e,o.id=s.getDisplayId(),o.vertexCount=0,o.indexCount=0,o.vertexFrom=e.vertexCount(),o.vertexBounds=_&&f<i?0:1;for(const{line:t,start:i,pathLength:h}of r)n.initialDistance=i%x,o.pathLength=h,this._lineTessellator.tessellate(t,n,_)}_writeTesselatedVertex(t,e,s,i,r,o,n,a,c,h,l){const{out:m,id:u,vertexBounds:p,pathLength:d}=this._currentWrite;return this.hasEffects&&m.recordBounds(t,e,p,p),this._tessParams.extrusionOffsetX=n,this._tessParams.extrusionOffsetY=a,this._tessParams.normalX=c,this._tessParams.normalY=h,this._tessParams.directionX=r,this._tessParams.directionY=o,this._tessParams.distance=l,this._tessParams.pathLength=d,this._writeVertex(m,u,t,e,this._tessParams),this._currentWrite.vertexFrom+this._currentWrite.vertexCount++}_writeTriangle(t,e,s){const{out:i}=this._currentWrite;i.indexEnsureSize(3),i.indexWrite(t),i.indexWrite(e),i.indexWrite(s),this._currentWrite.indexCount+=3}}export{T as LineMeshWriter,d as LineTessellationParams,f as LineVertexSpec};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}