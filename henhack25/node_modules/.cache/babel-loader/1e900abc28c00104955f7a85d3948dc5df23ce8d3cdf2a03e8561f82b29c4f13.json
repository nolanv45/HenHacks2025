{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { DecodeSymbolColor as o } from \"../../../collections/Component/Material/shader/DecodeSymbolColor.glsl.js\";\nimport { glsl as r } from \"../../shaderModules/glsl.js\";\nimport { IntegerPassUniform as e } from \"../../shaderModules/IntegerPassUniform.js\";\nimport { VertexAttribute as l } from \"../../../lib/VertexAttribute.js\";\nimport { colorMixModes as d } from \"../../../materials/internal/MaterialUtil.js\";\nfunction i(i, t) {\n  t.hasSymbolColors ? (i.include(o), i.attributes.add(l.SYMBOLCOLOR, \"vec4\"), i.varyings.add(\"colorMixMode\", \"mediump float\"), i.vertex.code.add(r`int symbolColorMixMode;\nvec4 getSymbolColor() {\nreturn decodeSymbolColor(symbolColor, symbolColorMixMode) * 0.003921568627451;\n}\nvoid forwardColorMixMode() {\ncolorMixMode = float(symbolColorMixMode) + 0.5;\n}`)) : (i.fragment.uniforms.add(new e(\"colorMixMode\", o => d[o.colorMixMode])), i.vertex.code.add(r`vec4 getSymbolColor() { return vec4(1.0); }\nvoid forwardColorMixMode() {}`));\n}\nexport { i as SymbolColor };","map":{"version":3,"names":["DecodeSymbolColor","o","glsl","r","IntegerPassUniform","e","VertexAttribute","l","colorMixModes","d","i","t","hasSymbolColors","include","attributes","add","SYMBOLCOLOR","varyings","vertex","code","fragment","uniforms","colorMixMode","SymbolColor"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/attributes/SymbolColor.glsl.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{DecodeSymbolColor as o}from\"../../../collections/Component/Material/shader/DecodeSymbolColor.glsl.js\";import{glsl as r}from\"../../shaderModules/glsl.js\";import{IntegerPassUniform as e}from\"../../shaderModules/IntegerPassUniform.js\";import{VertexAttribute as l}from\"../../../lib/VertexAttribute.js\";import{colorMixModes as d}from\"../../../materials/internal/MaterialUtil.js\";function i(i,t){t.hasSymbolColors?(i.include(o),i.attributes.add(l.SYMBOLCOLOR,\"vec4\"),i.varyings.add(\"colorMixMode\",\"mediump float\"),i.vertex.code.add(r`int symbolColorMixMode;\nvec4 getSymbolColor() {\nreturn decodeSymbolColor(symbolColor, symbolColorMixMode) * 0.003921568627451;\n}\nvoid forwardColorMixMode() {\ncolorMixMode = float(symbolColorMixMode) + 0.5;\n}`)):(i.fragment.uniforms.add(new e(\"colorMixMode\",(o=>d[o.colorMixMode]))),i.vertex.code.add(r`vec4 getSymbolColor() { return vec4(1.0); }\nvoid forwardColorMixMode() {}`))}export{i as SymbolColor};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,iBAAiB,IAAIC,CAAC,QAAK,0EAA0E;AAAC,SAAOC,IAAI,IAAIC,CAAC,QAAK,6BAA6B;AAAC,SAAOC,kBAAkB,IAAIC,CAAC,QAAK,2CAA2C;AAAC,SAAOC,eAAe,IAAIC,CAAC,QAAK,iCAAiC;AAAC,SAAOC,aAAa,IAAIC,CAAC,QAAK,6CAA6C;AAAC,SAASC,CAACA,CAACA,CAAC,EAACC,CAAC,EAAC;EAACA,CAAC,CAACC,eAAe,IAAEF,CAAC,CAACG,OAAO,CAACZ,CAAC,CAAC,EAACS,CAAC,CAACI,UAAU,CAACC,GAAG,CAACR,CAAC,CAACS,WAAW,EAAC,MAAM,CAAC,EAACN,CAAC,CAACO,QAAQ,CAACF,GAAG,CAAC,cAAc,EAAC,eAAe,CAAC,EAACL,CAAC,CAACQ,MAAM,CAACC,IAAI,CAACJ,GAAG,CAACZ,CAAC;AACthB;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,KAAGO,CAAC,CAACU,QAAQ,CAACC,QAAQ,CAACN,GAAG,CAAC,IAAIV,CAAC,CAAC,cAAc,EAAEJ,CAAC,IAAEQ,CAAC,CAACR,CAAC,CAACqB,YAAY,CAAE,CAAC,CAAC,EAACZ,CAAC,CAACQ,MAAM,CAACC,IAAI,CAACJ,GAAG,CAACZ,CAAC;AAC/F,8BAA8B,CAAC,CAAC;AAAA;AAAC,SAAOO,CAAC,IAAIa,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}