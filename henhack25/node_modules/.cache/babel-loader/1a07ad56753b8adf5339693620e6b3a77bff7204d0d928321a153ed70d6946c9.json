{"ast":null,"code":"/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global navigator, CompressionStream, DecompressionStream */\n\nimport { UNDEFINED_VALUE, UNDEFINED_TYPE } from \"./constants.js\";\nimport { StreamAdapter } from \"./streams/stream-adapter.js\";\nconst MINIMUM_CHUNK_SIZE = 64;\nlet maxWorkers = 2;\ntry {\n  if (typeof navigator != UNDEFINED_TYPE && navigator.hardwareConcurrency) {\n    maxWorkers = navigator.hardwareConcurrency;\n  }\n  // eslint-disable-next-line no-unused-vars\n} catch (_) {\n  // ignored\n}\nconst DEFAULT_CONFIGURATION = {\n  chunkSize: 512 * 1024,\n  maxWorkers,\n  terminateWorkerTimeout: 5000,\n  useWebWorkers: true,\n  useCompressionStream: true,\n  workerScripts: UNDEFINED_VALUE,\n  CompressionStreamNative: typeof CompressionStream != UNDEFINED_TYPE && CompressionStream,\n  DecompressionStreamNative: typeof DecompressionStream != UNDEFINED_TYPE && DecompressionStream\n};\nconst config = Object.assign({}, DEFAULT_CONFIGURATION);\nexport { configure, getConfiguration, getChunkSize };\nfunction getConfiguration() {\n  return config;\n}\nfunction getChunkSize(config) {\n  return Math.max(config.chunkSize, MINIMUM_CHUNK_SIZE);\n}\nfunction configure(configuration) {\n  const {\n    baseURL,\n    chunkSize,\n    maxWorkers,\n    terminateWorkerTimeout,\n    useCompressionStream,\n    useWebWorkers,\n    Deflate,\n    Inflate,\n    CompressionStream,\n    DecompressionStream,\n    workerScripts\n  } = configuration;\n  setIfDefined(\"baseURL\", baseURL);\n  setIfDefined(\"chunkSize\", chunkSize);\n  setIfDefined(\"maxWorkers\", maxWorkers);\n  setIfDefined(\"terminateWorkerTimeout\", terminateWorkerTimeout);\n  setIfDefined(\"useCompressionStream\", useCompressionStream);\n  setIfDefined(\"useWebWorkers\", useWebWorkers);\n  if (Deflate) {\n    config.CompressionStream = new StreamAdapter(Deflate);\n  }\n  if (Inflate) {\n    config.DecompressionStream = new StreamAdapter(Inflate);\n  }\n  setIfDefined(\"CompressionStream\", CompressionStream);\n  setIfDefined(\"DecompressionStream\", DecompressionStream);\n  if (workerScripts !== UNDEFINED_VALUE) {\n    const {\n      deflate,\n      inflate\n    } = workerScripts;\n    if (deflate || inflate) {\n      if (!config.workerScripts) {\n        config.workerScripts = {};\n      }\n    }\n    if (deflate) {\n      if (!Array.isArray(deflate)) {\n        throw new Error(\"workerScripts.deflate must be an array\");\n      }\n      config.workerScripts.deflate = deflate;\n    }\n    if (inflate) {\n      if (!Array.isArray(inflate)) {\n        throw new Error(\"workerScripts.inflate must be an array\");\n      }\n      config.workerScripts.inflate = inflate;\n    }\n  }\n}\nfunction setIfDefined(propertyName, propertyValue) {\n  if (propertyValue !== UNDEFINED_VALUE) {\n    config[propertyName] = propertyValue;\n  }\n}","map":{"version":3,"names":["UNDEFINED_VALUE","UNDEFINED_TYPE","StreamAdapter","MINIMUM_CHUNK_SIZE","maxWorkers","navigator","hardwareConcurrency","_","DEFAULT_CONFIGURATION","chunkSize","terminateWorkerTimeout","useWebWorkers","useCompressionStream","workerScripts","CompressionStreamNative","CompressionStream","DecompressionStreamNative","DecompressionStream","config","Object","assign","configure","getConfiguration","getChunkSize","Math","max","configuration","baseURL","Deflate","Inflate","setIfDefined","deflate","inflate","Array","isArray","Error","propertyName","propertyValue"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@zip.js/zip.js/lib/core/configuration.js"],"sourcesContent":["/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global navigator, CompressionStream, DecompressionStream */\n\nimport {\n\tUNDEFINED_VALUE,\n\tUNDEFINED_TYPE\n} from \"./constants.js\";\nimport { StreamAdapter } from \"./streams/stream-adapter.js\";\n\nconst MINIMUM_CHUNK_SIZE = 64;\nlet maxWorkers = 2;\ntry {\n\tif (typeof navigator != UNDEFINED_TYPE && navigator.hardwareConcurrency) {\n\t\tmaxWorkers = navigator.hardwareConcurrency;\n\t}\n\t// eslint-disable-next-line no-unused-vars\n} catch (_) {\n\t// ignored\n}\nconst DEFAULT_CONFIGURATION = {\n\tchunkSize: 512 * 1024,\n\tmaxWorkers,\n\tterminateWorkerTimeout: 5000,\n\tuseWebWorkers: true,\n\tuseCompressionStream: true,\n\tworkerScripts: UNDEFINED_VALUE,\n\tCompressionStreamNative: typeof CompressionStream != UNDEFINED_TYPE && CompressionStream,\n\tDecompressionStreamNative: typeof DecompressionStream != UNDEFINED_TYPE && DecompressionStream\n};\n\nconst config = Object.assign({}, DEFAULT_CONFIGURATION);\n\nexport {\n\tconfigure,\n\tgetConfiguration,\n\tgetChunkSize\n};\n\nfunction getConfiguration() {\n\treturn config;\n}\n\nfunction getChunkSize(config) {\n\treturn Math.max(config.chunkSize, MINIMUM_CHUNK_SIZE);\n}\n\nfunction configure(configuration) {\n\tconst {\n\t\tbaseURL,\n\t\tchunkSize,\n\t\tmaxWorkers,\n\t\tterminateWorkerTimeout,\n\t\tuseCompressionStream,\n\t\tuseWebWorkers,\n\t\tDeflate,\n\t\tInflate,\n\t\tCompressionStream,\n\t\tDecompressionStream,\n\t\tworkerScripts\n\t} = configuration;\n\tsetIfDefined(\"baseURL\", baseURL);\n\tsetIfDefined(\"chunkSize\", chunkSize);\n\tsetIfDefined(\"maxWorkers\", maxWorkers);\n\tsetIfDefined(\"terminateWorkerTimeout\", terminateWorkerTimeout);\n\tsetIfDefined(\"useCompressionStream\", useCompressionStream);\n\tsetIfDefined(\"useWebWorkers\", useWebWorkers);\n\tif (Deflate) {\n\t\tconfig.CompressionStream = new StreamAdapter(Deflate);\n\t}\n\tif (Inflate) {\n\t\tconfig.DecompressionStream = new StreamAdapter(Inflate);\n\t}\n\tsetIfDefined(\"CompressionStream\", CompressionStream);\n\tsetIfDefined(\"DecompressionStream\", DecompressionStream);\n\tif (workerScripts !== UNDEFINED_VALUE) {\n\t\tconst { deflate, inflate } = workerScripts;\n\t\tif (deflate || inflate) {\n\t\t\tif (!config.workerScripts) {\n\t\t\t\tconfig.workerScripts = {};\n\t\t\t}\n\t\t}\n\t\tif (deflate) {\n\t\t\tif (!Array.isArray(deflate)) {\n\t\t\t\tthrow new Error(\"workerScripts.deflate must be an array\");\n\t\t\t}\n\t\t\tconfig.workerScripts.deflate = deflate;\n\t\t}\n\t\tif (inflate) {\n\t\t\tif (!Array.isArray(inflate)) {\n\t\t\t\tthrow new Error(\"workerScripts.inflate must be an array\");\n\t\t\t}\n\t\t\tconfig.workerScripts.inflate = inflate;\n\t\t}\n\t}\n}\n\nfunction setIfDefined(propertyName, propertyValue) {\n\tif (propertyValue !== UNDEFINED_VALUE) {\n\t\tconfig[propertyName] = propertyValue;\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}