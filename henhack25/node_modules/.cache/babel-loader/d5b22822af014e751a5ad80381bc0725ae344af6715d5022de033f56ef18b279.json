{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../chunks/tslib.es6.js\";\nimport t from \"../../request.js\";\nimport r from \"../../core/Error.js\";\nimport i from \"../../core/Logger.js\";\nimport { property as s } from \"../../core/accessorSupport/decorators/property.js\";\nimport { Integer as n, ensureClass as o } from \"../../core/accessorSupport/ensureType.js\";\nimport \"../../core/has.js\";\nimport \"../../core/RandomLCG.js\";\nimport { enumeration as a } from \"../../core/accessorSupport/decorators/enumeration.js\";\nimport { reader as l } from \"../../core/accessorSupport/decorators/reader.js\";\nimport { subclass as c } from \"../../core/accessorSupport/decorators/subclass.js\";\nimport u from \"../../geometry/Point.js\";\nimport d from \"../../geometry/SpatialReference.js\";\nimport { getInfo as m } from \"../../geometry/support/spatialReferenceUtils.js\";\nimport { sanitizeUrl as h } from \"../support/arcgisLayerUrl.js\";\nimport { url as p } from \"../support/commonProperties.js\";\nimport f from \"../support/DimensionalDefinition.js\";\nimport y from \"../support/MultidimensionalSubset.js\";\nimport { interpolationKebab as b } from \"../support/rasterEnums.js\";\nimport g from \"../support/RasterFunction.js\";\nimport R from \"../support/RasterJobHandler.js\";\nimport F from \"../support/TileInfo.js\";\nimport _ from \"../support/rasterDatasets/FunctionRaster.js\";\nimport { getEffectiveMultidimensionalDefinition as I, getDefaultVariableInfo as J, isMultiSliceOrRangeDefinition as v, convertOleDateTimeToEpoch as S, getSubsetVariablesFromMdInfo as w, getDefaultMultidimensionalDefinition as x } from \"../support/rasterDatasets/multidimensionalUtils.js\";\nimport { snapToRaster as j, clip as D } from \"../support/rasterFunctions/clipUtils.js\";\nimport { create as H } from \"../support/rasterFunctions/rasterFunctionHelper.js\";\nimport { load as N, projectExtent as T, projectPolygon as O } from \"../support/rasterFunctions/rasterProjectionHelper.js\";\nimport { computeStatisticsHistograms as P } from \"../support/rasterFunctions/stretchUtils.js\";\nimport { convertVectorFieldData as z } from \"../support/rasterFunctions/vectorFieldUtils.js\";\nimport { normalizeRendererJSON as C, getVariableRasterInfo as E, getDefaultInterpolation as U, matchPresetRenderer as M, getDefaultBandCombination as k, getFunctionColorRamp as q, createDefaultRenderer as B } from \"../../renderers/support/rasterRendererHelper.js\";\nimport L from \"../../renderers/support/RasterSymbolizer.js\";\nimport { rasterRendererTypes as V, websceneRasterRendererTypes as A, read as $ } from \"../../renderers/support/rasterTypeUtils.js\";\nimport G from \"../../rest/support/ImageHistogramParameters.js\";\nimport { createFlowMesh as W } from \"../../views/2d/engine/flow/dataUtils.js\";\nconst K = K => {\n  let Q = class extends K {\n    constructor() {\n      super(...arguments), this._isConstructedFromFunctionRaster = !1, this._rasterJobHandler = {\n        instance: null,\n        refCount: 0,\n        connectionPromise: null\n      }, this.bandIds = null, this.copyright = null, this.interpolation = null, this.multidimensionalSubset = null, this.raster = null, this.serviceRasterInfo = null, this.sourceJSON = null, this.spatialReference = null, this.symbolizer = null, this._isConstructedFromFunctionRaster = \"Function\" === (arguments.length <= 0 ? undefined : arguments[0])?.raster?.datasetFormat;\n    }\n    get fullExtent() {\n      return this.serviceRasterInfo?.extent;\n    }\n    set multidimensionalDefinition(e) {\n      this._set(\"multidimensionalDefinition\", e), this.updateRenderer();\n    }\n    set rasterFunction(e) {\n      \"none\" === e?.functionName?.toLowerCase() && (e = void 0), this._set(\"rasterFunction\", e), this.updateRasterFunction();\n    }\n    set url(e) {\n      this._set(\"url\", h(e, i.getLogger(this)));\n    }\n    get renderer() {\n      if (\"imagery-tile\" !== this.type) return this.internalRenderer;\n      const {\n        activePresetRendererName: e,\n        presetRenderers: t\n      } = this;\n      if (e) {\n        const r = t?.find(_ref => {\n          let {\n            name: t\n          } = _ref;\n          return t === e;\n        });\n        return r?.renderer.clone();\n      }\n      return this.internalRenderer;\n    }\n    set renderer(e) {\n      \"imagery-tile\" === this.type && (this.activePresetRendererName = null), this.internalRenderer = e;\n    }\n    set internalRenderer(e) {\n      null == e && null == this.rasterFunction ? this._configDefaultRenderer(\"override\") : (this._set(\"internalRenderer\", e), this.updateRenderer());\n    }\n    readRenderer(e, t, r) {\n      const i = t?.layerDefinition?.drawingInfo?.renderer;\n      return $(i, r) || void 0;\n    }\n    async convertVectorFieldData(e, t) {\n      const {\n        serviceRasterInfo: r\n      } = this;\n      if (null == e || !r) return null;\n      const i = this._rasterJobHandler.instance,\n        s = r.dataType;\n      return i ? i.convertVectorFieldData({\n        pixelBlock: e,\n        dataType: s\n      }, t) : z(e, s);\n    }\n    async computeStatisticsHistograms(e, t) {\n      await this.load(t), e = o(G, e).clone();\n      const {\n        serviceRasterInfo: i\n      } = this;\n      if (null == i) throw new r(\"imagery-tile-mixin:compute-statistics-histograms\", \"serviceRasterInfo must be specified\");\n      const {\n        geometry: s\n      } = e;\n      if (null == s) throw new r(\"imagery-tile-mixin:compute-statistics-histograms\", \"geometry must be specified\");\n      let n = s;\n      const {\n        spatialReference: a\n      } = i;\n      s.spatialReference.equals(a) || (await N(), n = \"extent\" === s.type ? T(s, a) : O(s, a));\n      const l = e.pixelSize ?? new u({\n          x: i.pixelSize.x,\n          y: i.pixelSize.y,\n          spatialReference: a\n        }),\n        {\n          extent: c,\n          width: d,\n          height: m\n        } = j(i, n, l),\n        h = await this.fetchPixels(c, d, m, {\n          ...t,\n          interpolation: \"nearest\"\n        });\n      if (null == h.pixelBlock) throw new r(\"imagery-tile-mixin:compute-statistics-histograms\", \"failed to fetch pixels\");\n      const p = await D(h.pixelBlock, c, n),\n        f = this._rasterJobHandler.instance;\n      return f ? f.computeStatisticsHistograms({\n        pixelBlock: p\n      }, t) : P(p);\n    }\n    async createFlowMesh(e, t) {\n      const r = this._rasterJobHandler.instance;\n      return r ? r.createFlowMesh(e, t) : W(e.meshType, e.simulationSettings, e.flowData, null != t.signal ? t.signal : new AbortController().signal);\n    }\n    normalizeRasterFetchOptions(e) {\n      const {\n        multidimensionalInfo: t\n      } = this.serviceRasterInfo ?? {};\n      if (null == t) return e;\n      const r = I({\n        rasterInfo: this.raster.rasterInfo,\n        multidimensionalDefinition: e.multidimensionalDefinition || this.multidimensionalDefinition,\n        timeExtent: e.timeExtent ?? this.timeExtent,\n        multidimensionalSubset: this.multidimensionalSubset\n      });\n      return {\n        ...e,\n        multidimensionalDefinition: r\n      };\n    }\n    async updateRasterFunction() {\n      return this.loaded && \"imagery-tile\" === this.type && (this.rasterFunction || this._cachedRasterFunctionJson) && JSON.stringify(this.rasterFunction) !== JSON.stringify(this._cachedRasterFunctionJson) ? (this._cachedRasterFunctionJson = this.rasterFunction?.toJSON(), this._rasterFunctionUpdatePromise = this._updateRasterFunction(), this._rasterFunctionUpdatePromise) : this._rasterFunctionUpdatePromise;\n    }\n    async updateRenderer() {\n      const {\n        loaded: e,\n        symbolizer: t\n      } = this;\n      if (!e || !t || !this.renderer) return;\n      const {\n          rasterInfo: r\n        } = this.raster,\n        i = J(r, {\n          multidimensionalDefinition: this.multidimensionalDefinition,\n          multidimensionalSubset: this.multidimensionalSubset\n        }),\n        s = i?.name,\n        n = C({\n          ...this.renderer.toJSON(),\n          variableName: s\n        });\n      if (JSON.stringify(this._cachedRendererJson) === JSON.stringify(n)) return;\n      const o = this._rasterJobHandler.instance;\n      o && (t.rasterInfo = E(r, s), t.rendererJSON = n, t.bind(), await o.updateSymbolizer(t), this._cachedRendererJson = n);\n    }\n    async applyRenderer(e, t) {\n      const r = e?.pixelBlock;\n      if (!(null != r && r.pixels && r.pixels.length > 0)) return null;\n      let i;\n      await this.updateRenderer();\n      const s = this._rasterJobHandler.instance,\n        n = this.bandIds ?? [];\n      return i = s ? await s.symbolize({\n        ...e,\n        simpleStretchParams: t,\n        bandIds: n\n      }) : this.symbolizer.symbolize({\n        ...e,\n        simpleStretchParams: t,\n        bandIds: n\n      }), i;\n    }\n    getTileUrl(e, t, r) {\n      return \"RasterTileServer\" === this.raster.datasetFormat ? `${this.url}/tile/${e}/${t}/${r}` : \"\";\n    }\n    getCompatibleTileInfo(e, t) {\n      let r = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;\n      if (!this.loaded || null == t) return null;\n      if (r && e.equals(this.spatialReference)) return this.tileInfo;\n      const i = m(e);\n      return F.create({\n        size: 256,\n        spatialReference: e,\n        origin: i ? {\n          x: i.origin[0],\n          y: i.origin[1]\n        } : {\n          x: t.xmin,\n          y: t.ymax\n        }\n      });\n    }\n    getCompatibleFullExtent(e) {\n      return this.loaded ? (this._compatibleFullExtent?.spatialReference.equals(e) || (this._compatibleFullExtent = this.raster.computeExtent(e)), this._compatibleFullExtent) : null;\n    }\n    async fetchTile(e, r, i) {\n      let s = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      if (X(this), s.requestAsImageElement) {\n        const n = this.getTileUrl(e, r, i);\n        return t(n, {\n          responseType: \"image\",\n          query: {\n            ...this.refreshParameters,\n            ...this.raster.ioConfig.customFetchParameters\n          },\n          signal: s.signal\n        }).then(e => e.data);\n      }\n      const {\n        serviceRasterInfo: n\n      } = this;\n      if (null != n.multidimensionalInfo && null == (s = this.normalizeRasterFetchOptions(s)).multidimensionalDefinition) {\n        const t = s.tileInfo || n.storageInfo.tileInfo;\n        return {\n          extent: this.raster.getTileExtentFromTileInfo(e, r, i, t),\n          pixelBlock: null\n        };\n      }\n      return await this._initJobHandler(), await this.updateRasterFunction(), \"raster-shaded-relief\" === this.renderer?.type && (s = {\n        ...s,\n        buffer: {\n          cols: 1,\n          rows: 1\n        }\n      }), this.raster.fetchTile(e, r, i, s);\n    }\n    async fetchPixels(e, t, r) {\n      let i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      return null != this.serviceRasterInfo.multidimensionalInfo && null == (i = this.normalizeRasterFetchOptions(i)).multidimensionalDefinition ? {\n        extent: e,\n        pixelBlock: null\n      } : (await this._initJobHandler(), await this.updateRasterFunction(), t = Math.round(t), r = Math.round(r), this.raster.fetchPixels(e, t, r, i));\n    }\n    async identify(e) {\n      let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      await this.load();\n      const {\n        raster: i,\n        serviceRasterInfo: s\n      } = this;\n      if (null != s?.multidimensionalInfo) {\n        if (!(s.hasMultidimensionalTranspose && !!(v(t.multidimensionalDefinition) || t.transposedVariableName || t.timeExtent)) && null == (t = this.normalizeRasterFetchOptions(t)).multidimensionalDefinition) return {\n          location: e,\n          value: null\n        };\n      }\n      const n = this.multidimensionalSubset?.areaOfInterest;\n      if (n && !n.contains(e)) throw new r(\"imagery-tile-mixin:identify\", \"the request cannot be fulfilled when falling outside of the multidimensional subset\");\n      return i.identify(e, t);\n    }\n    increaseRasterJobHandlerUsage() {\n      this._rasterJobHandler.refCount++;\n    }\n    decreaseRasterJobHandlerUsage() {\n      this._rasterJobHandler.refCount--, this._rasterJobHandler.refCount <= 0 && this._shutdownJobHandler();\n    }\n    hasStandardTime() {\n      const e = this.serviceRasterInfo?.multidimensionalInfo;\n      if (null == e || \"standard-time\" !== this.serviceRasterInfo?.dataType) return !1;\n      const t = this.multidimensionalDefinition,\n        r = t?.[0]?.variableName;\n      return e.variables.some(e => e.name === r && (!t?.[0].dimensionName || e.dimensions.some(e => \"StdTime\" === e.name)));\n    }\n    getStandardTimeValue(e) {\n      return new Date(S(e)).toISOString();\n    }\n    getMultidimensionalSubsetVariables(e) {\n      const t = e ?? this.serviceRasterInfo?.multidimensionalInfo;\n      return w(this.multidimensionalSubset, t);\n    }\n    _configDefaultSettings() {\n      this._configDefaultInterpolation(), this.multidimensionalDefinition || (this.multidimensionalDefinition = x(this.raster.rasterInfo, {\n        multidimensionalSubset: this.multidimensionalSubset\n      })), this.rasterFunction && \"Function\" === this.raster.datasetFormat && (this._cachedRasterFunctionJson = this.rasterFunction.toJSON()), this._configDefaultRenderer();\n    }\n    _initJobHandler() {\n      if (null != this._rasterJobHandler.connectionPromise) return this._rasterJobHandler.connectionPromise;\n      const e = new R();\n      return this._rasterJobHandler.connectionPromise = e.initialize().then(async () => {\n        X(this), this._rasterJobHandler.instance = e, this.raster.rasterJobHandler = e, \"Function\" === this.raster.datasetFormat && this.raster.syncJobHandler(), this.rasterFunction && (await this.updateRasterFunction().catch(() => {})), this.renderer && this.updateRenderer();\n      }).catch(() => {}), this._rasterJobHandler.connectionPromise;\n    }\n    _shutdownJobHandler() {\n      this._rasterJobHandler.instance && this._rasterJobHandler.instance.destroy(), this._rasterJobHandler.instance = null, this._rasterJobHandler.connectionPromise = null, this._rasterJobHandler.refCount = 0, this._cachedRendererJson = null, this.raster && (this.raster.rasterJobHandler = null);\n    }\n    _configDefaultInterpolation() {\n      if (null == this.interpolation) {\n        X(this);\n        const {\n            raster: e\n          } = this,\n          t = U(e.rasterInfo, e.tileType, this.sourceJSON?.defaultResamplingMethod);\n        this._set(\"interpolation\", t);\n      }\n    }\n    _configDefaultRenderer() {\n      let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"no\";\n      X(this);\n      const {\n          rasterInfo: t\n        } = this.raster,\n        r = J(t, {\n          multidimensionalDefinition: this.multidimensionalDefinition,\n          multidimensionalSubset: this.multidimensionalSubset\n        }),\n        s = r?.name,\n        n = M({\n          variableName: s,\n          rasterFunctionName: this.rasterFunction?.functionName,\n          presetRenderers: this.presetRenderers\n        });\n      if (!this.bandIds && t.bandCount > 1 && (this.bandIds = n?.bandIds ?? k(t)), !this.renderer || \"override\" === e) {\n        const e = q(this.raster),\n          r = n?.renderer ?? B(t, {\n            bandIds: this.bandIds,\n            variableName: s,\n            rasterFunctionColorRamp: e\n          }),\n          i = t.statistics,\n          o = i && i.length > 0 ? i[0] : null,\n          a = o?.max ?? 0,\n          l = o?.min ?? 0;\n        \"WCSServer\" === this.raster.datasetFormat && \"raster-stretch\" === r.type && (a > 1e24 || l < -1e24) && (r.dynamicRangeAdjustment = !0, r.customStatistics = null, \"none\" === r.stretchType && (r.stretchType = \"min-max\")), this.renderer = r;\n      }\n      const o = C({\n          ...this.renderer.toJSON(),\n          variableName: s\n        }),\n        a = E(t, s);\n      this.symbolizer ? (this.symbolizer.rendererJSON = o, this.symbolizer.rasterInfo = a) : this.symbolizer = new L({\n        rendererJSON: o,\n        rasterInfo: a\n      });\n      const l = this.symbolizer.bind();\n      if (l.success) {\n        if (\"auto\" === e) {\n          const {\n              colormap: e\n            } = this.raster.rasterInfo,\n            t = this.renderer;\n          if (null != e && \"raster-colormap\" === t.type) {\n            const e = B(this.raster.rasterInfo);\n            JSON.stringify(e) !== JSON.stringify(t) && this._configDefaultRenderer(\"override\");\n          } else if (\"raster-stretch\" === t.type) {\n            const e = this.bandIds?.length,\n              r = t.customStatistics?.length;\n            !t.dynamicRangeAdjustment && r && e && r !== e && this._configDefaultRenderer(\"override\");\n          }\n        }\n      } else i.getLogger(this).warn(\"imagery-tile-mixin\", l.error || \"The given renderer is not supported by the layer.\"), \"auto\" === e && this._configDefaultRenderer(\"override\");\n    }\n    async _updateRasterFunction() {\n      if (this._isConstructedFromFunctionRaster && \"Function\" === this.raster.datasetFormat) {\n        const e = this.raster.rasterFunction.toJSON();\n        return void (!this.rasterFunction && e && this._set(\"rasterFunction\", g.fromJSON(e)));\n      }\n      let e,\n        t = this.raster,\n        r = !1;\n      \"Function\" === t.datasetFormat ? (e = t.primaryRasters.rasters, t = e[0], r = !0) : e = [t];\n      const {\n        rasterFunction: i\n      } = this;\n      if (i) {\n        const r = {\n          raster: t\n        };\n        e.length > 1 && e.forEach(e => r[e.url] = e);\n        const s = H(i.functionDefinition?.toJSON() ?? i.toJSON(), r),\n          n = new _({\n            rasterFunction: s\n          });\n        n.rasterJobHandler = this._rasterJobHandler.instance, await n.open(), this.raster = n;\n      } else this.raster = t, await t.open();\n      if (this._cachedRendererJson = null, !r && !i) return;\n      const {\n          bandIds: s\n        } = this,\n        {\n          bandCount: n\n        } = this.raster.rasterInfo,\n        o = s?.length ? s.some(e => e >= n) : n >= 3;\n      s && (o || this.renderer && \"raster-stretch\" !== this.renderer.type) && this._set(\"bandIds\", null), this._configDefaultRenderer(\"auto\");\n    }\n  };\n  function X(e) {\n    if (!e.raster || !e.serviceRasterInfo) throw new r(\"imagery-tile\", \"no raster\");\n  }\n  return e([s({\n    clonable: !1\n  })], Q.prototype, \"_cachedRendererJson\", void 0), e([s({\n    clonable: !1\n  })], Q.prototype, \"_cachedRasterFunctionJson\", void 0), e([s({\n    clonable: !1\n  })], Q.prototype, \"_compatibleFullExtent\", void 0), e([s({\n    clonable: !1\n  })], Q.prototype, \"_isConstructedFromFunctionRaster\", void 0), e([s({\n    clonable: !1\n  })], Q.prototype, \"_rasterJobHandler\", void 0), e([s({\n    clonable: !1\n  })], Q.prototype, \"_rasterFunctionUpdatePromise\", void 0), e([s({\n    type: [n],\n    json: {\n      write: {\n        overridePolicy() {\n          return {\n            enabled: !this.loaded || \"Raster\" === this.raster.tileType || \"0,1,2\" !== this.bandIds?.join(\",\")\n          };\n        }\n      }\n    }\n  })], Q.prototype, \"bandIds\", void 0), e([s({\n    json: {\n      origins: {\n        service: {\n          read: {\n            source: \"copyrightText\"\n          }\n        }\n      }\n    }\n  })], Q.prototype, \"copyright\", void 0), e([s({\n    json: {\n      read: !1\n    }\n  })], Q.prototype, \"fullExtent\", null), e([s({\n    json: {\n      write: {\n        overridePolicy() {\n          return {\n            enabled: !this.loaded || \"Raster\" === this.raster.tileType || \"bilinear\" !== this.interpolation\n          };\n        }\n      }\n    }\n  }), a(b)], Q.prototype, \"interpolation\", void 0), e([s()], Q.prototype, \"ioConfig\", void 0), e([s({\n    type: [f],\n    json: {\n      write: !0\n    }\n  })], Q.prototype, \"multidimensionalDefinition\", null), e([s({\n    type: y,\n    json: {\n      write: !0\n    }\n  })], Q.prototype, \"multidimensionalSubset\", void 0), e([s()], Q.prototype, \"raster\", void 0), e([s({\n    type: g\n  })], Q.prototype, \"rasterFunction\", null), e([s()], Q.prototype, \"serviceRasterInfo\", void 0), e([s()], Q.prototype, \"sourceJSON\", void 0), e([s({\n    readOnly: !0,\n    type: d,\n    json: {\n      read: !1\n    }\n  })], Q.prototype, \"spatialReference\", void 0), e([s({\n    type: F\n  })], Q.prototype, \"tileInfo\", void 0), e([s(p)], Q.prototype, \"url\", null), e([s()], Q.prototype, \"renderer\", null), e([s({\n    types: V,\n    json: {\n      name: \"layerDefinition.drawingInfo.renderer\",\n      write: {\n        overridePolicy() {\n          const e = \"raster-stretch\" === this.renderer?.type && \"none\" === this.renderer.stretchType && !this.renderer.useGamma;\n          return {\n            enabled: !this.loaded || \"Raster\" === this.raster.tileType || !e\n          };\n        }\n      },\n      origins: {\n        \"web-scene\": {\n          types: A,\n          name: \"layerDefinition.drawingInfo.renderer\",\n          write: {\n            overridePolicy: e => ({\n              enabled: e && \"vector-field\" !== e.type && \"flow\" !== e.type\n            })\n          }\n        }\n      }\n    }\n  })], Q.prototype, \"internalRenderer\", null), e([l(\"internalRenderer\")], Q.prototype, \"readRenderer\", null), e([s({\n    clonable: !1\n  })], Q.prototype, \"symbolizer\", void 0), Q = e([c(\"esri.layers.mixins.ImageryTileMixin\")], Q), Q;\n};\nexport { K as ImageryTileMixin };","map":{"version":3,"names":["_","e","t","r","i","property","s","Integer","n","ensureClass","o","enumeration","a","reader","l","subclass","c","u","d","getInfo","m","sanitizeUrl","h","url","p","f","y","interpolationKebab","b","g","R","F","getEffectiveMultidimensionalDefinition","I","getDefaultVariableInfo","J","isMultiSliceOrRangeDefinition","v","convertOleDateTimeToEpoch","S","getSubsetVariablesFromMdInfo","w","getDefaultMultidimensionalDefinition","x","snapToRaster","j","clip","D","create","H","load","N","projectExtent","T","projectPolygon","O","computeStatisticsHistograms","P","convertVectorFieldData","z","normalizeRendererJSON","C","getVariableRasterInfo","E","getDefaultInterpolation","U","matchPresetRenderer","M","getDefaultBandCombination","k","getFunctionColorRamp","q","createDefaultRenderer","B","L","rasterRendererTypes","V","websceneRasterRendererTypes","A","read","$","G","createFlowMesh","W","K","Q","constructor","arguments","_isConstructedFromFunctionRaster","_rasterJobHandler","instance","refCount","connectionPromise","bandIds","copyright","interpolation","multidimensionalSubset","raster","serviceRasterInfo","sourceJSON","spatialReference","symbolizer","length","undefined","datasetFormat","fullExtent","extent","multidimensionalDefinition","_set","updateRenderer","rasterFunction","functionName","toLowerCase","updateRasterFunction","getLogger","renderer","type","internalRenderer","activePresetRendererName","presetRenderers","find","_ref","name","clone","_configDefaultRenderer","readRenderer","layerDefinition","drawingInfo","dataType","pixelBlock","geometry","equals","pixelSize","width","height","fetchPixels","meshType","simulationSettings","flowData","signal","AbortController","normalizeRasterFetchOptions","multidimensionalInfo","rasterInfo","timeExtent","loaded","_cachedRasterFunctionJson","JSON","stringify","toJSON","_rasterFunctionUpdatePromise","_updateRasterFunction","variableName","_cachedRendererJson","rendererJSON","bind","updateSymbolizer","applyRenderer","pixels","symbolize","simpleStretchParams","getTileUrl","getCompatibleTileInfo","tileInfo","size","origin","xmin","ymax","getCompatibleFullExtent","_compatibleFullExtent","computeExtent","fetchTile","X","requestAsImageElement","responseType","query","refreshParameters","ioConfig","customFetchParameters","then","data","storageInfo","getTileExtentFromTileInfo","_initJobHandler","buffer","cols","rows","Math","round","identify","hasMultidimensionalTranspose","transposedVariableName","location","value","areaOfInterest","contains","increaseRasterJobHandlerUsage","decreaseRasterJobHandlerUsage","_shutdownJobHandler","hasStandardTime","variables","some","dimensionName","dimensions","getStandardTimeValue","Date","toISOString","getMultidimensionalSubsetVariables","_configDefaultSettings","_configDefaultInterpolation","initialize","rasterJobHandler","syncJobHandler","catch","destroy","tileType","defaultResamplingMethod","rasterFunctionName","bandCount","rasterFunctionColorRamp","statistics","max","min","dynamicRangeAdjustment","customStatistics","stretchType","success","colormap","warn","error","fromJSON","primaryRasters","rasters","forEach","functionDefinition","open","clonable","prototype","json","write","overridePolicy","enabled","join","origins","service","source","readOnly","types","useGamma","ImageryTileMixin"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/layers/mixins/ImageryTileMixin.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../chunks/tslib.es6.js\";import t from\"../../request.js\";import r from\"../../core/Error.js\";import i from\"../../core/Logger.js\";import{property as s}from\"../../core/accessorSupport/decorators/property.js\";import{Integer as n,ensureClass as o}from\"../../core/accessorSupport/ensureType.js\";import\"../../core/has.js\";import\"../../core/RandomLCG.js\";import{enumeration as a}from\"../../core/accessorSupport/decorators/enumeration.js\";import{reader as l}from\"../../core/accessorSupport/decorators/reader.js\";import{subclass as c}from\"../../core/accessorSupport/decorators/subclass.js\";import u from\"../../geometry/Point.js\";import d from\"../../geometry/SpatialReference.js\";import{getInfo as m}from\"../../geometry/support/spatialReferenceUtils.js\";import{sanitizeUrl as h}from\"../support/arcgisLayerUrl.js\";import{url as p}from\"../support/commonProperties.js\";import f from\"../support/DimensionalDefinition.js\";import y from\"../support/MultidimensionalSubset.js\";import{interpolationKebab as b}from\"../support/rasterEnums.js\";import g from\"../support/RasterFunction.js\";import R from\"../support/RasterJobHandler.js\";import F from\"../support/TileInfo.js\";import _ from\"../support/rasterDatasets/FunctionRaster.js\";import{getEffectiveMultidimensionalDefinition as I,getDefaultVariableInfo as J,isMultiSliceOrRangeDefinition as v,convertOleDateTimeToEpoch as S,getSubsetVariablesFromMdInfo as w,getDefaultMultidimensionalDefinition as x}from\"../support/rasterDatasets/multidimensionalUtils.js\";import{snapToRaster as j,clip as D}from\"../support/rasterFunctions/clipUtils.js\";import{create as H}from\"../support/rasterFunctions/rasterFunctionHelper.js\";import{load as N,projectExtent as T,projectPolygon as O}from\"../support/rasterFunctions/rasterProjectionHelper.js\";import{computeStatisticsHistograms as P}from\"../support/rasterFunctions/stretchUtils.js\";import{convertVectorFieldData as z}from\"../support/rasterFunctions/vectorFieldUtils.js\";import{normalizeRendererJSON as C,getVariableRasterInfo as E,getDefaultInterpolation as U,matchPresetRenderer as M,getDefaultBandCombination as k,getFunctionColorRamp as q,createDefaultRenderer as B}from\"../../renderers/support/rasterRendererHelper.js\";import L from\"../../renderers/support/RasterSymbolizer.js\";import{rasterRendererTypes as V,websceneRasterRendererTypes as A,read as $}from\"../../renderers/support/rasterTypeUtils.js\";import G from\"../../rest/support/ImageHistogramParameters.js\";import{createFlowMesh as W}from\"../../views/2d/engine/flow/dataUtils.js\";const K=K=>{let Q=class extends K{constructor(...e){super(...e),this._isConstructedFromFunctionRaster=!1,this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.interpolation=null,this.multidimensionalSubset=null,this.raster=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.symbolizer=null,this._isConstructedFromFunctionRaster=\"Function\"===e[0]?.raster?.datasetFormat}get fullExtent(){return this.serviceRasterInfo?.extent}set multidimensionalDefinition(e){this._set(\"multidimensionalDefinition\",e),this.updateRenderer()}set rasterFunction(e){\"none\"===e?.functionName?.toLowerCase()&&(e=void 0),this._set(\"rasterFunction\",e),this.updateRasterFunction()}set url(e){this._set(\"url\",h(e,i.getLogger(this)))}get renderer(){if(\"imagery-tile\"!==this.type)return this.internalRenderer;const{activePresetRendererName:e,presetRenderers:t}=this;if(e){const r=t?.find((({name:t})=>t===e));return r?.renderer.clone()}return this.internalRenderer}set renderer(e){\"imagery-tile\"===this.type&&(this.activePresetRendererName=null),this.internalRenderer=e}set internalRenderer(e){null==e&&null==this.rasterFunction?this._configDefaultRenderer(\"override\"):(this._set(\"internalRenderer\",e),this.updateRenderer())}readRenderer(e,t,r){const i=t?.layerDefinition?.drawingInfo?.renderer;return $(i,r)||void 0}async convertVectorFieldData(e,t){const{serviceRasterInfo:r}=this;if(null==e||!r)return null;const i=this._rasterJobHandler.instance,s=r.dataType;return i?i.convertVectorFieldData({pixelBlock:e,dataType:s},t):z(e,s)}async computeStatisticsHistograms(e,t){await this.load(t),e=o(G,e).clone();const{serviceRasterInfo:i}=this;if(null==i)throw new r(\"imagery-tile-mixin:compute-statistics-histograms\",\"serviceRasterInfo must be specified\");const{geometry:s}=e;if(null==s)throw new r(\"imagery-tile-mixin:compute-statistics-histograms\",\"geometry must be specified\");let n=s;const{spatialReference:a}=i;s.spatialReference.equals(a)||(await N(),n=\"extent\"===s.type?T(s,a):O(s,a));const l=e.pixelSize??new u({x:i.pixelSize.x,y:i.pixelSize.y,spatialReference:a}),{extent:c,width:d,height:m}=j(i,n,l),h=await this.fetchPixels(c,d,m,{...t,interpolation:\"nearest\"});if(null==h.pixelBlock)throw new r(\"imagery-tile-mixin:compute-statistics-histograms\",\"failed to fetch pixels\");const p=await D(h.pixelBlock,c,n),f=this._rasterJobHandler.instance;return f?f.computeStatisticsHistograms({pixelBlock:p},t):P(p)}async createFlowMesh(e,t){const r=this._rasterJobHandler.instance;return r?r.createFlowMesh(e,t):W(e.meshType,e.simulationSettings,e.flowData,null!=t.signal?t.signal:(new AbortController).signal)}normalizeRasterFetchOptions(e){const{multidimensionalInfo:t}=this.serviceRasterInfo??{};if(null==t)return e;const r=I({rasterInfo:this.raster.rasterInfo,multidimensionalDefinition:e.multidimensionalDefinition||this.multidimensionalDefinition,timeExtent:e.timeExtent??this.timeExtent,multidimensionalSubset:this.multidimensionalSubset});return{...e,multidimensionalDefinition:r}}async updateRasterFunction(){return this.loaded&&\"imagery-tile\"===this.type&&(this.rasterFunction||this._cachedRasterFunctionJson)&&JSON.stringify(this.rasterFunction)!==JSON.stringify(this._cachedRasterFunctionJson)?(this._cachedRasterFunctionJson=this.rasterFunction?.toJSON(),this._rasterFunctionUpdatePromise=this._updateRasterFunction(),this._rasterFunctionUpdatePromise):this._rasterFunctionUpdatePromise}async updateRenderer(){const{loaded:e,symbolizer:t}=this;if(!e||!t||!this.renderer)return;const{rasterInfo:r}=this.raster,i=J(r,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),s=i?.name,n=C({...this.renderer.toJSON(),variableName:s});if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(n))return;const o=this._rasterJobHandler.instance;o&&(t.rasterInfo=E(r,s),t.rendererJSON=n,t.bind(),await o.updateSymbolizer(t),this._cachedRendererJson=n)}async applyRenderer(e,t){const r=e?.pixelBlock;if(!(null!=r&&r.pixels&&r.pixels.length>0))return null;let i;await this.updateRenderer();const s=this._rasterJobHandler.instance,n=this.bandIds??[];return i=s?await s.symbolize({...e,simpleStretchParams:t,bandIds:n}):this.symbolizer.symbolize({...e,simpleStretchParams:t,bandIds:n}),i}getTileUrl(e,t,r){return\"RasterTileServer\"===this.raster.datasetFormat?`${this.url}/tile/${e}/${t}/${r}`:\"\"}getCompatibleTileInfo(e,t,r=!1){if(!this.loaded||null==t)return null;if(r&&e.equals(this.spatialReference))return this.tileInfo;const i=m(e);return F.create({size:256,spatialReference:e,origin:i?{x:i.origin[0],y:i.origin[1]}:{x:t.xmin,y:t.ymax}})}getCompatibleFullExtent(e){return this.loaded?(this._compatibleFullExtent?.spatialReference.equals(e)||(this._compatibleFullExtent=this.raster.computeExtent(e)),this._compatibleFullExtent):null}async fetchTile(e,r,i,s={}){if(X(this),s.requestAsImageElement){const n=this.getTileUrl(e,r,i);return t(n,{responseType:\"image\",query:{...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:s.signal}).then((e=>e.data))}const{serviceRasterInfo:n}=this;if(null!=n.multidimensionalInfo&&null==(s=this.normalizeRasterFetchOptions(s)).multidimensionalDefinition){const t=s.tileInfo||n.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(e,r,i,t),pixelBlock:null}}return await this._initJobHandler(),await this.updateRasterFunction(),\"raster-shaded-relief\"===this.renderer?.type&&(s={...s,buffer:{cols:1,rows:1}}),this.raster.fetchTile(e,r,i,s)}async fetchPixels(e,t,r,i={}){return null!=this.serviceRasterInfo.multidimensionalInfo&&null==(i=this.normalizeRasterFetchOptions(i)).multidimensionalDefinition?{extent:e,pixelBlock:null}:(await this._initJobHandler(),await this.updateRasterFunction(),t=Math.round(t),r=Math.round(r),this.raster.fetchPixels(e,t,r,i))}async identify(e,t={}){await this.load();const{raster:i,serviceRasterInfo:s}=this;if(null!=s?.multidimensionalInfo){if(!(s.hasMultidimensionalTranspose&&!!(v(t.multidimensionalDefinition)||t.transposedVariableName||t.timeExtent))&&null==(t=this.normalizeRasterFetchOptions(t)).multidimensionalDefinition)return{location:e,value:null}}const n=this.multidimensionalSubset?.areaOfInterest;if(n&&!n.contains(e))throw new r(\"imagery-tile-mixin:identify\",\"the request cannot be fulfilled when falling outside of the multidimensional subset\");return i.identify(e,t)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){const e=this.serviceRasterInfo?.multidimensionalInfo;if(null==e||\"standard-time\"!==this.serviceRasterInfo?.dataType)return!1;const t=this.multidimensionalDefinition,r=t?.[0]?.variableName;return e.variables.some((e=>e.name===r&&(!t?.[0].dimensionName||e.dimensions.some((e=>\"StdTime\"===e.name)))))}getStandardTimeValue(e){return new Date(S(e)).toISOString()}getMultidimensionalSubsetVariables(e){const t=e??this.serviceRasterInfo?.multidimensionalInfo;return w(this.multidimensionalSubset,t)}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=x(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset})),this.rasterFunction&&\"Function\"===this.raster.datasetFormat&&(this._cachedRasterFunctionJson=this.rasterFunction.toJSON()),this._configDefaultRenderer()}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new R;return this._rasterJobHandler.connectionPromise=e.initialize().then((async()=>{X(this),this._rasterJobHandler.instance=e,this.raster.rasterJobHandler=e,\"Function\"===this.raster.datasetFormat&&this.raster.syncJobHandler(),this.rasterFunction&&await this.updateRasterFunction().catch((()=>{})),this.renderer&&this.updateRenderer()})).catch((()=>{})),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null,this.raster&&(this.raster.rasterJobHandler=null)}_configDefaultInterpolation(){if(null==this.interpolation){X(this);const{raster:e}=this,t=U(e.rasterInfo,e.tileType,this.sourceJSON?.defaultResamplingMethod);this._set(\"interpolation\",t)}}_configDefaultRenderer(e=\"no\"){X(this);const{rasterInfo:t}=this.raster,r=J(t,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),s=r?.name,n=M({variableName:s,rasterFunctionName:this.rasterFunction?.functionName,presetRenderers:this.presetRenderers});if(!this.bandIds&&t.bandCount>1&&(this.bandIds=n?.bandIds??k(t)),!this.renderer||\"override\"===e){const e=q(this.raster),r=n?.renderer??B(t,{bandIds:this.bandIds,variableName:s,rasterFunctionColorRamp:e}),i=t.statistics,o=i&&i.length>0?i[0]:null,a=o?.max??0,l=o?.min??0;\"WCSServer\"===this.raster.datasetFormat&&\"raster-stretch\"===r.type&&(a>1e24||l<-1e24)&&(r.dynamicRangeAdjustment=!0,r.customStatistics=null,\"none\"===r.stretchType&&(r.stretchType=\"min-max\")),this.renderer=r}const o=C({...this.renderer.toJSON(),variableName:s}),a=E(t,s);this.symbolizer?(this.symbolizer.rendererJSON=o,this.symbolizer.rasterInfo=a):this.symbolizer=new L({rendererJSON:o,rasterInfo:a});const l=this.symbolizer.bind();if(l.success){if(\"auto\"===e){const{colormap:e}=this.raster.rasterInfo,t=this.renderer;if(null!=e&&\"raster-colormap\"===t.type){const e=B(this.raster.rasterInfo);JSON.stringify(e)!==JSON.stringify(t)&&this._configDefaultRenderer(\"override\")}else if(\"raster-stretch\"===t.type){const e=this.bandIds?.length,r=t.customStatistics?.length;!t.dynamicRangeAdjustment&&r&&e&&r!==e&&this._configDefaultRenderer(\"override\")}}}else i.getLogger(this).warn(\"imagery-tile-mixin\",l.error||\"The given renderer is not supported by the layer.\"),\"auto\"===e&&this._configDefaultRenderer(\"override\")}async _updateRasterFunction(){if(this._isConstructedFromFunctionRaster&&\"Function\"===this.raster.datasetFormat){const e=this.raster.rasterFunction.toJSON();return void(!this.rasterFunction&&e&&this._set(\"rasterFunction\",g.fromJSON(e)))}let e,t=this.raster,r=!1;\"Function\"===t.datasetFormat?(e=t.primaryRasters.rasters,t=e[0],r=!0):e=[t];const{rasterFunction:i}=this;if(i){const r={raster:t};e.length>1&&e.forEach((e=>r[e.url]=e));const s=H(i.functionDefinition?.toJSON()??i.toJSON(),r),n=new _({rasterFunction:s});n.rasterJobHandler=this._rasterJobHandler.instance,await n.open(),this.raster=n}else this.raster=t,await t.open();if(this._cachedRendererJson=null,!r&&!i)return;const{bandIds:s}=this,{bandCount:n}=this.raster.rasterInfo,o=s?.length?s.some((e=>e>=n)):n>=3;s&&(o||this.renderer&&\"raster-stretch\"!==this.renderer.type)&&this._set(\"bandIds\",null),this._configDefaultRenderer(\"auto\")}};function X(e){if(!e.raster||!e.serviceRasterInfo)throw new r(\"imagery-tile\",\"no raster\")}return e([s({clonable:!1})],Q.prototype,\"_cachedRendererJson\",void 0),e([s({clonable:!1})],Q.prototype,\"_cachedRasterFunctionJson\",void 0),e([s({clonable:!1})],Q.prototype,\"_compatibleFullExtent\",void 0),e([s({clonable:!1})],Q.prototype,\"_isConstructedFromFunctionRaster\",void 0),e([s({clonable:!1})],Q.prototype,\"_rasterJobHandler\",void 0),e([s({clonable:!1})],Q.prototype,\"_rasterFunctionUpdatePromise\",void 0),e([s({type:[n],json:{write:{overridePolicy(){return{enabled:!this.loaded||\"Raster\"===this.raster.tileType||\"0,1,2\"!==this.bandIds?.join(\",\")}}}}})],Q.prototype,\"bandIds\",void 0),e([s({json:{origins:{service:{read:{source:\"copyrightText\"}}}}})],Q.prototype,\"copyright\",void 0),e([s({json:{read:!1}})],Q.prototype,\"fullExtent\",null),e([s({json:{write:{overridePolicy(){return{enabled:!this.loaded||\"Raster\"===this.raster.tileType||\"bilinear\"!==this.interpolation}}}}}),a(b)],Q.prototype,\"interpolation\",void 0),e([s()],Q.prototype,\"ioConfig\",void 0),e([s({type:[f],json:{write:!0}})],Q.prototype,\"multidimensionalDefinition\",null),e([s({type:y,json:{write:!0}})],Q.prototype,\"multidimensionalSubset\",void 0),e([s()],Q.prototype,\"raster\",void 0),e([s({type:g})],Q.prototype,\"rasterFunction\",null),e([s()],Q.prototype,\"serviceRasterInfo\",void 0),e([s()],Q.prototype,\"sourceJSON\",void 0),e([s({readOnly:!0,type:d,json:{read:!1}})],Q.prototype,\"spatialReference\",void 0),e([s({type:F})],Q.prototype,\"tileInfo\",void 0),e([s(p)],Q.prototype,\"url\",null),e([s()],Q.prototype,\"renderer\",null),e([s({types:V,json:{name:\"layerDefinition.drawingInfo.renderer\",write:{overridePolicy(){const e=\"raster-stretch\"===this.renderer?.type&&\"none\"===this.renderer.stretchType&&!this.renderer.useGamma;return{enabled:!this.loaded||\"Raster\"===this.raster.tileType||!e}}},origins:{\"web-scene\":{types:A,name:\"layerDefinition.drawingInfo.renderer\",write:{overridePolicy:e=>({enabled:e&&\"vector-field\"!==e.type&&\"flow\"!==e.type})}}}}})],Q.prototype,\"internalRenderer\",null),e([l(\"internalRenderer\")],Q.prototype,\"readRenderer\",null),e([s({clonable:!1})],Q.prototype,\"symbolizer\",void 0),Q=e([c(\"esri.layers.mixins.ImageryTileMixin\")],Q),Q};export{K as ImageryTileMixin};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}