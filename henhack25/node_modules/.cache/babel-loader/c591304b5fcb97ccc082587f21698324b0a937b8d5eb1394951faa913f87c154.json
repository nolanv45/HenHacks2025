{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { decodeGeohashXY as t } from \"./geohashUtils.js\";\nimport e from \"../geometry/SpatialReference.js\";\nimport { convertFromPolygon as o, quantizeOptimizedGeometry as s, convertFromPoint as r } from \"../layers/graphics/featureConversionUtils.js\";\nimport i from \"../layers/graphics/OptimizedGeometry.js\";\nimport { project as h } from \"../layers/graphics/data/projectionSupport.js\";\nimport { AAggregateCell as a } from \"../views/2d/layers/features/aggregation/AAggregateCell.js\";\nimport { AccumulatedStatistics as n } from \"../views/2d/layers/features/aggregation/AccumulatedStatistics.js\";\nclass l extends a {\n  static create(t, e, o, s) {\n    const r = n.create(t),\n      i = new Array(32);\n    for (let h = 0; h < i.length; h++) i[h] = null;\n    return new l(r, e, o, s, i);\n  }\n  constructor(t, e, o, s, r) {\n    super(t), this.xNode = e, this.yNode = o, this.depth = s, this.children = r, this._objectIds = new Set(), this._count = 0, this._xWorldTotal = 0, this._yWorldTotal = 0, this._xGeohashTotal = 0, this._yGeohashTotal = 0, this.next = null;\n  }\n  get id() {\n    return `${this.xNode}.${this.yNode}`;\n  }\n  get containedObjectIds() {\n    return this._objectIds;\n  }\n  get count() {\n    return this._count;\n  }\n  clone() {\n    const t = new l(this._statistics.clone(), this.xNode, this.yNode, this.depth, this.children);\n    return t._count = this._count, t._xWorldTotal = this._xWorldTotal, t._yWorldTotal = this._yWorldTotal, t._xGeohashTotal = this._xGeohashTotal, t._yGeohashTotal = this._yGeohashTotal, t.next = this.next, t._objectIds = new Set(this._objectIds), t;\n  }\n  insert(t, e, o, s, r, i) {\n    this._count += 1, this._xWorldTotal += e, this._yWorldTotal += o, this._xGeohashTotal += s, this._yGeohashTotal += r, this._statistics.insert(t, i), this._objectIds.add(t.getObjectId());\n  }\n  merge(t) {\n    if (0 !== t._count) {\n      this._count += t._count, this._xWorldTotal += t._xWorldTotal, this._yWorldTotal += t._yWorldTotal, this._xGeohashTotal += t._xWorldTotal, this._yGeohashTotal += t._yWorldTotal, this._statistics.merge(t._statistics);\n      for (const e of t._objectIds.values()) this._objectIds.add(e);\n    }\n  }\n  getCentroid(t) {\n    throw new Error(\"getCentroid not supported for GeohashNode\");\n  }\n  getGeometry(t, r) {\n    const a = this._getLngLatBounds(),\n      [n, l, d, c] = a,\n      _ = h({\n        rings: [[[n, l], [n, c], [d, c], [d, l], [n, l]]]\n      }, e.WGS84, t),\n      u = o(new i(), _, !1, !1);\n    if (null != r) {\n      return s(new i(), u, !1, !1, \"esriGeometryPolygon\", r, !1, !1);\n    }\n    return u;\n  }\n  getGeometricCentroid(t, o) {\n    const a = this._getLngLatBounds(),\n      [n, l, d, c] = a,\n      _ = h({\n        x: (n + d) / 2,\n        y: (l + c) / 2\n      }, e.WGS84, t),\n      u = r(new i(), _);\n    if (null != o) {\n      return s(new i(), u, !1, !1, \"esriGeometryPoint\", o, !1, !1);\n    }\n    return u;\n  }\n  getAttributes() {\n    const t = {\n      aggregateId: this.id\n    };\n    for (const e of this._statistics.values()) t[e.field.name] = e.value;\n    return t.aggregateCount = this._count, t;\n  }\n  find(t, e, o, s, r, i) {\n    if (s >= o) return this;\n    const h = 1 - s % 2,\n      a = 3 * h + 2 * (1 - h),\n      n = 2 * h + 3 * (1 - h),\n      l = 30 - r - a,\n      d = 30 - i - n,\n      c = ((t & 7 * h + 3 * (1 - h) << l) >> l) + ((e & 3 * h + 7 * (1 - h) << d) >> d) * (8 * h + 4 * (1 - h)),\n      _ = this.children[c];\n    return null == _ ? null : _.find(t, e, o, s + 1, r + a, i + n);\n  }\n  _getLngLatBounds() {\n    const e = this.depth,\n      o = Math.ceil(e / 2),\n      s = Math.floor(e / 2),\n      r = 30 - (3 * o + 2 * s),\n      i = 30 - (2 * o + 3 * s),\n      h = this.xNode << r,\n      a = this.yNode << i;\n    return t({\n      geohashX: h,\n      geohashY: a\n    }, this.depth);\n  }\n}\nexport { l as GeohashCell };","map":{"version":3,"names":["decodeGeohashXY","t","e","convertFromPolygon","o","quantizeOptimizedGeometry","s","convertFromPoint","r","i","project","h","AAggregateCell","a","AccumulatedStatistics","n","l","create","Array","length","constructor","xNode","yNode","depth","children","_objectIds","Set","_count","_xWorldTotal","_yWorldTotal","_xGeohashTotal","_yGeohashTotal","next","id","containedObjectIds","count","clone","_statistics","insert","add","getObjectId","merge","values","getCentroid","Error","getGeometry","_getLngLatBounds","d","c","_","rings","WGS84","u","getGeometricCentroid","x","y","getAttributes","aggregateId","field","name","value","aggregateCount","find","Math","ceil","floor","geohashX","geohashY","GeohashCell"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/geohash/GeohashCell.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{decodeGeohashXY as t}from\"./geohashUtils.js\";import e from\"../geometry/SpatialReference.js\";import{convertFromPolygon as o,quantizeOptimizedGeometry as s,convertFromPoint as r}from\"../layers/graphics/featureConversionUtils.js\";import i from\"../layers/graphics/OptimizedGeometry.js\";import{project as h}from\"../layers/graphics/data/projectionSupport.js\";import{AAggregateCell as a}from\"../views/2d/layers/features/aggregation/AAggregateCell.js\";import{AccumulatedStatistics as n}from\"../views/2d/layers/features/aggregation/AccumulatedStatistics.js\";class l extends a{static create(t,e,o,s){const r=n.create(t),i=new Array(32);for(let h=0;h<i.length;h++)i[h]=null;return new l(r,e,o,s,i)}constructor(t,e,o,s,r){super(t),this.xNode=e,this.yNode=o,this.depth=s,this.children=r,this._objectIds=new Set,this._count=0,this._xWorldTotal=0,this._yWorldTotal=0,this._xGeohashTotal=0,this._yGeohashTotal=0,this.next=null}get id(){return`${this.xNode}.${this.yNode}`}get containedObjectIds(){return this._objectIds}get count(){return this._count}clone(){const t=new l(this._statistics.clone(),this.xNode,this.yNode,this.depth,this.children);return t._count=this._count,t._xWorldTotal=this._xWorldTotal,t._yWorldTotal=this._yWorldTotal,t._xGeohashTotal=this._xGeohashTotal,t._yGeohashTotal=this._yGeohashTotal,t.next=this.next,t._objectIds=new Set(this._objectIds),t}insert(t,e,o,s,r,i){this._count+=1,this._xWorldTotal+=e,this._yWorldTotal+=o,this._xGeohashTotal+=s,this._yGeohashTotal+=r,this._statistics.insert(t,i),this._objectIds.add(t.getObjectId())}merge(t){if(0!==t._count){this._count+=t._count,this._xWorldTotal+=t._xWorldTotal,this._yWorldTotal+=t._yWorldTotal,this._xGeohashTotal+=t._xWorldTotal,this._yGeohashTotal+=t._yWorldTotal,this._statistics.merge(t._statistics);for(const e of t._objectIds.values())this._objectIds.add(e)}}getCentroid(t){throw new Error(\"getCentroid not supported for GeohashNode\")}getGeometry(t,r){const a=this._getLngLatBounds(),[n,l,d,c]=a,_=h({rings:[[[n,l],[n,c],[d,c],[d,l],[n,l]]]},e.WGS84,t),u=o(new i,_,!1,!1);if(null!=r){return s(new i,u,!1,!1,\"esriGeometryPolygon\",r,!1,!1)}return u}getGeometricCentroid(t,o){const a=this._getLngLatBounds(),[n,l,d,c]=a,_=h({x:(n+d)/2,y:(l+c)/2},e.WGS84,t),u=r(new i,_);if(null!=o){return s(new i,u,!1,!1,\"esriGeometryPoint\",o,!1,!1)}return u}getAttributes(){const t={aggregateId:this.id};for(const e of this._statistics.values())t[e.field.name]=e.value;return t.aggregateCount=this._count,t}find(t,e,o,s,r,i){if(s>=o)return this;const h=1-s%2,a=3*h+2*(1-h),n=2*h+3*(1-h),l=30-r-a,d=30-i-n,c=((t&7*h+3*(1-h)<<l)>>l)+((e&3*h+7*(1-h)<<d)>>d)*(8*h+4*(1-h)),_=this.children[c];return null==_?null:_.find(t,e,o,s+1,r+a,i+n)}_getLngLatBounds(){const e=this.depth,o=Math.ceil(e/2),s=Math.floor(e/2),r=30-(3*o+2*s),i=30-(2*o+3*s),h=this.xNode<<r,a=this.yNode<<i;return t({geohashX:h,geohashY:a},this.depth)}}export{l as GeohashCell};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}