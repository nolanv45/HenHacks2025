{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { pt2px as t } from \"../../../../../../../core/screenUtils.js\";\nimport { GeometryCursor as e } from \"../../../../../../../geometry/GeometryCursor.js\";\nimport { minMaxZoomPrecisionFactor as s, thinLineHalfWidthThreshold as i } from \"../../../definitions.js\";\nimport { LineTessellation as r } from \"../../../TurboLine.js\";\nimport { clipLinesMarshall as o } from \"../../../mesh/templates/templateUtils.js\";\nimport { getMinMaxZoom as n, processColorInput as a, packRounded as c, processLineCapInput as h, processLineJoinInput as l } from \"../fill/meshWriterUtils.js\";\nimport { MeshWriter as m } from \"../mesh/MeshWriter.js\";\nimport { getLineClippingMargin as u } from \"../mesh/utils.js\";\nimport { DataType as p } from \"../../../../../../webgl/enums.js\";\nclass d {\n  constructor() {\n    this.extrusionOffsetX = 0, this.extrusionOffsetY = 0, this.normalX = 0, this.normalY = 0, this.directionX = 0, this.directionY = 0, this.distance = 0, this.pathLength = 0;\n  }\n}\nconst f = {\n  createComputedParams: t => t,\n  optionalAttributes: {\n    zoomRange: {\n      type: p.SHORT,\n      count: 2,\n      packPrecisionFactor: s,\n      pack: ({\n        scaleInfo: t\n      }, {\n        tileInfo: e\n      }) => n(t, e)\n    }\n  },\n  attributes: {\n    id: {\n      type: p.UNSIGNED_BYTE,\n      count: 3,\n      pack: \"id\"\n    },\n    pos: {\n      type: p.SHORT,\n      count: 2,\n      pack: \"position\",\n      packPrecisionFactor: 10\n    },\n    bitset: {\n      type: p.UNSIGNED_BYTE,\n      count: 1\n    },\n    color: {\n      type: p.UNSIGNED_BYTE,\n      count: 4,\n      normalized: !0,\n      pack: ({\n        color: t\n      }) => a(t)\n    },\n    offset: {\n      type: p.BYTE,\n      count: 2,\n      packPrecisionFactor: 16,\n      packTessellation: ({\n        extrusionOffsetX: t,\n        extrusionOffsetY: e\n      }) => [c(t, 16), c(e, 16)]\n    },\n    normal: {\n      type: p.BYTE,\n      count: 2,\n      packPrecisionFactor: 16,\n      packTessellation: ({\n        normalX: t,\n        normalY: e\n      }) => [c(t, 16), c(e, 16)]\n    },\n    halfWidth: {\n      type: p.HALF_FLOAT,\n      count: 1,\n      pack: ({\n        width: e\n      }) => t(.5 * e)\n    },\n    referenceHalfWidth: {\n      type: p.HALF_FLOAT,\n      count: 1,\n      pack: ({\n        referenceWidth: e\n      }) => t(.5 * e)\n    }\n  }\n};\nclass _ {\n  constructor() {\n    this.id = 0, this.bitset = 0, this.indexCount = 0, this.vertexCount = 0, this.vertexFrom = 0, this.vertexBounds = 0, this.pathLength = 0;\n  }\n}\nconst x = 65535;\nclass T extends m {\n  constructor(t, e, s, i) {\n    super(t, e, s, i), this.vertexSpec = f, this._currentWrite = new _(), this._tessellationOptions = {\n      halfWidth: 0,\n      pixelCoordRatio: 1,\n      offset: 0,\n      wrapDistance: x,\n      textured: !1\n    }, this._tessParams = new d(), this._initializeTessellator();\n  }\n  writeLineVertices(t, e, s) {\n    const i = this._getLines(e);\n    null != i && this._writeVertices(t, s, i);\n  }\n  _initializeTessellator() {\n    this._lineTessellator = new r(this._writeTesselatedVertex.bind(this), this._writeTriangle.bind(this), !0);\n  }\n  _write(t, s, i) {\n    const r = i ?? e.fromFeatureSetReaderCIM(s);\n    r && this._writeGeometry(t, s, r);\n  }\n  _writeGeometry(t, e, s, i) {\n    t.recordStart(this.instanceId, this.attributeLayout, i), this.writeLineVertices(t, s, e), t.recordEnd();\n  }\n  _getLines(t) {\n    return o(t, u(this.evaluatedMeshParams));\n  }\n  _writeVertices(e, s, r) {\n    const {\n        _currentWrite: o,\n        _tessellationOptions: n,\n        evaluatedMeshParams: a\n      } = this,\n      {\n        width: c,\n        capType: m,\n        joinType: u,\n        miterLimit: p,\n        hasSizeVV: d\n      } = a,\n      f = t(.5 * c);\n    n.halfWidth = f, n.capType = h(m), n.joinType = l(u), n.miterLimit = p;\n    const _ = !d;\n    o.out = e, o.id = s.getDisplayId(), o.vertexCount = 0, o.indexCount = 0, o.vertexFrom = e.vertexCount(), o.vertexBounds = _ && f < i ? 0 : 1;\n    for (const {\n      line: t,\n      start: i,\n      pathLength: h\n    } of r) n.initialDistance = i % x, o.pathLength = h, this._lineTessellator.tessellate(t, n, _);\n  }\n  _writeTesselatedVertex(t, e, s, i, r, o, n, a, c, h, l) {\n    const {\n      out: m,\n      id: u,\n      vertexBounds: p,\n      pathLength: d\n    } = this._currentWrite;\n    return this.hasEffects && m.recordBounds(t, e, p, p), this._tessParams.extrusionOffsetX = n, this._tessParams.extrusionOffsetY = a, this._tessParams.normalX = c, this._tessParams.normalY = h, this._tessParams.directionX = r, this._tessParams.directionY = o, this._tessParams.distance = l, this._tessParams.pathLength = d, this._writeVertex(m, u, t, e, this._tessParams), this._currentWrite.vertexFrom + this._currentWrite.vertexCount++;\n  }\n  _writeTriangle(t, e, s) {\n    const {\n      out: i\n    } = this._currentWrite;\n    i.indexEnsureSize(3), i.indexWrite(t), i.indexWrite(e), i.indexWrite(s), this._currentWrite.indexCount += 3;\n  }\n}\nexport { T as LineMeshWriter, d as LineTessellationParams, f as LineVertexSpec };","map":{"version":3,"names":["pt2px","t","GeometryCursor","e","minMaxZoomPrecisionFactor","s","thinLineHalfWidthThreshold","i","LineTessellation","r","clipLinesMarshall","o","getMinMaxZoom","n","processColorInput","a","packRounded","c","processLineCapInput","h","processLineJoinInput","l","MeshWriter","m","getLineClippingMargin","u","DataType","p","d","constructor","extrusionOffsetX","extrusionOffsetY","normalX","normalY","directionX","directionY","distance","pathLength","f","createComputedParams","optionalAttributes","zoomRange","type","SHORT","count","packPrecisionFactor","pack","scaleInfo","tileInfo","attributes","id","UNSIGNED_BYTE","pos","bitset","color","normalized","offset","BYTE","packTessellation","normal","halfWidth","HALF_FLOAT","width","referenceHalfWidth","referenceWidth","_","indexCount","vertexCount","vertexFrom","vertexBounds","x","T","vertexSpec","_currentWrite","_tessellationOptions","pixelCoordRatio","wrapDistance","textured","_tessParams","_initializeTessellator","writeLineVertices","_getLines","_writeVertices","_lineTessellator","_writeTesselatedVertex","bind","_writeTriangle","_write","fromFeatureSetReaderCIM","_writeGeometry","recordStart","instanceId","attributeLayout","recordEnd","evaluatedMeshParams","capType","joinType","miterLimit","hasSizeVV","out","getDisplayId","line","start","initialDistance","tessellate","hasEffects","recordBounds","_writeVertex","indexEnsureSize","indexWrite","LineMeshWriter","LineTessellationParams","LineVertexSpec"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/2d/engine/webgl/shaderGraph/techniques/line/LineMeshWriter.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{pt2px as t}from\"../../../../../../../core/screenUtils.js\";import{GeometryCursor as e}from\"../../../../../../../geometry/GeometryCursor.js\";import{minMaxZoomPrecisionFactor as s,thinLineHalfWidthThreshold as i}from\"../../../definitions.js\";import{LineTessellation as r}from\"../../../TurboLine.js\";import{clipLinesMarshall as o}from\"../../../mesh/templates/templateUtils.js\";import{getMinMaxZoom as n,processColorInput as a,packRounded as c,processLineCapInput as h,processLineJoinInput as l}from\"../fill/meshWriterUtils.js\";import{MeshWriter as m}from\"../mesh/MeshWriter.js\";import{getLineClippingMargin as u}from\"../mesh/utils.js\";import{DataType as p}from\"../../../../../../webgl/enums.js\";class d{constructor(){this.extrusionOffsetX=0,this.extrusionOffsetY=0,this.normalX=0,this.normalY=0,this.directionX=0,this.directionY=0,this.distance=0,this.pathLength=0}}const f={createComputedParams:t=>t,optionalAttributes:{zoomRange:{type:p.SHORT,count:2,packPrecisionFactor:s,pack:({scaleInfo:t},{tileInfo:e})=>n(t,e)}},attributes:{id:{type:p.UNSIGNED_BYTE,count:3,pack:\"id\"},pos:{type:p.SHORT,count:2,pack:\"position\",packPrecisionFactor:10},bitset:{type:p.UNSIGNED_BYTE,count:1},color:{type:p.UNSIGNED_BYTE,count:4,normalized:!0,pack:({color:t})=>a(t)},offset:{type:p.BYTE,count:2,packPrecisionFactor:16,packTessellation:({extrusionOffsetX:t,extrusionOffsetY:e})=>[c(t,16),c(e,16)]},normal:{type:p.BYTE,count:2,packPrecisionFactor:16,packTessellation:({normalX:t,normalY:e})=>[c(t,16),c(e,16)]},halfWidth:{type:p.HALF_FLOAT,count:1,pack:({width:e})=>t(.5*e)},referenceHalfWidth:{type:p.HALF_FLOAT,count:1,pack:({referenceWidth:e})=>t(.5*e)}}};class _{constructor(){this.id=0,this.bitset=0,this.indexCount=0,this.vertexCount=0,this.vertexFrom=0,this.vertexBounds=0,this.pathLength=0}}const x=65535;class T extends m{constructor(t,e,s,i){super(t,e,s,i),this.vertexSpec=f,this._currentWrite=new _,this._tessellationOptions={halfWidth:0,pixelCoordRatio:1,offset:0,wrapDistance:x,textured:!1},this._tessParams=new d,this._initializeTessellator()}writeLineVertices(t,e,s){const i=this._getLines(e);null!=i&&this._writeVertices(t,s,i)}_initializeTessellator(){this._lineTessellator=new r(this._writeTesselatedVertex.bind(this),this._writeTriangle.bind(this),!0)}_write(t,s,i){const r=i??e.fromFeatureSetReaderCIM(s);r&&this._writeGeometry(t,s,r)}_writeGeometry(t,e,s,i){t.recordStart(this.instanceId,this.attributeLayout,i),this.writeLineVertices(t,s,e),t.recordEnd()}_getLines(t){return o(t,u(this.evaluatedMeshParams))}_writeVertices(e,s,r){const{_currentWrite:o,_tessellationOptions:n,evaluatedMeshParams:a}=this,{width:c,capType:m,joinType:u,miterLimit:p,hasSizeVV:d}=a,f=t(.5*c);n.halfWidth=f,n.capType=h(m),n.joinType=l(u),n.miterLimit=p;const _=!d;o.out=e,o.id=s.getDisplayId(),o.vertexCount=0,o.indexCount=0,o.vertexFrom=e.vertexCount(),o.vertexBounds=_&&f<i?0:1;for(const{line:t,start:i,pathLength:h}of r)n.initialDistance=i%x,o.pathLength=h,this._lineTessellator.tessellate(t,n,_)}_writeTesselatedVertex(t,e,s,i,r,o,n,a,c,h,l){const{out:m,id:u,vertexBounds:p,pathLength:d}=this._currentWrite;return this.hasEffects&&m.recordBounds(t,e,p,p),this._tessParams.extrusionOffsetX=n,this._tessParams.extrusionOffsetY=a,this._tessParams.normalX=c,this._tessParams.normalY=h,this._tessParams.directionX=r,this._tessParams.directionY=o,this._tessParams.distance=l,this._tessParams.pathLength=d,this._writeVertex(m,u,t,e,this._tessParams),this._currentWrite.vertexFrom+this._currentWrite.vertexCount++}_writeTriangle(t,e,s){const{out:i}=this._currentWrite;i.indexEnsureSize(3),i.indexWrite(t),i.indexWrite(e),i.indexWrite(s),this._currentWrite.indexCount+=3}}export{T as LineMeshWriter,d as LineTessellationParams,f as LineVertexSpec};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}