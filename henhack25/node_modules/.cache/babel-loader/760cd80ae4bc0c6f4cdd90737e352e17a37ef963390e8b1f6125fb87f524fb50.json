{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { _ as t } from \"../../../chunks/tslib.es6.js\";\nimport { property as s } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/has.js\";\nimport \"../../../core/Logger.js\";\nimport \"../../../core/RandomLCG.js\";\nimport { subclass as r } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport { calculateNDVI as e, getBandMatrix3 as n } from \"./bandIndexUtils.js\";\nimport i from \"./BaseRasterFunction.js\";\nimport o from \"./NDVIFunctionArguments.js\";\nlet u = class extends i {\n  constructor() {\n    super(...arguments), this.functionName = \"NDVI\", this.functionArguments = null, this.rasterArgumentNames = [\"raster\"];\n  }\n  _bindSourceRasters() {\n    const {\n      scientificOutput: t,\n      visibleBandID: s,\n      infraredBandID: r\n    } = this.functionArguments;\n    this.outputPixelType = this._getOutputPixelType(t ? \"f32\" : \"u8\");\n    const e = this.sourceRasterInfos[0],\n      n = Math.max(s, r);\n    if (e.bandCount < 2 || n >= e.bandCount) return {\n      success: !1,\n      supportsGPU: !1,\n      error: \"ndvi-function: source raster has insufficient amount of raster bands\"\n    };\n    if (s < 0 || r < 0) return {\n      success: !1,\n      supportsGPU: !1,\n      error: \"ndvi-function: invalid visible or infrared band id\"\n    };\n    const i = e.clone();\n    i.pixelType = this.outputPixelType, this._removeStatsHistColormapVAT(i), i.bandCount = 1, i.keyProperties = {\n      ...i.keyProperties,\n      BandProperties: void 0\n    };\n    const [o, u, a, c] = t ? [-1, 1, 0, .1] : [0, 200, 100, 10];\n    return i.statistics = [{\n      min: o,\n      max: u,\n      avg: a,\n      stddev: c\n    }], this.rasterInfo = i, {\n      success: !0,\n      supportsGPU: !0\n    };\n  }\n  _processPixels(t) {\n    const s = t.pixelBlocks?.[0];\n    if (null == s) return null;\n    const {\n      visibleBandID: r,\n      infraredBandID: n,\n      scientificOutput: i\n    } = this.functionArguments;\n    return e(s, r, n, !i);\n  }\n  _getWebGLParameters() {\n    const {\n        visibleBandID: t,\n        infraredBandID: s,\n        scientificOutput: r\n      } = this.functionArguments,\n      e = this.isInputBandIdsSwizzled ? [0, 1, 2] : [s, t, 0];\n    return {\n      bandIndexMat3: n(e),\n      scaled: !r\n    };\n  }\n  _getInputBandIds(t) {\n    const {\n      visibleBandID: s,\n      infraredBandID: r\n    } = this.functionArguments;\n    return [r, s, 0].map(s => t[s]);\n  }\n};\nt([s({\n  json: {\n    write: !0,\n    name: \"rasterFunction\"\n  }\n})], u.prototype, \"functionName\", void 0), t([s({\n  type: o,\n  json: {\n    write: !0,\n    name: \"rasterFunctionArguments\"\n  }\n})], u.prototype, \"functionArguments\", void 0), t([s()], u.prototype, \"rasterArgumentNames\", void 0), u = t([r(\"esri.layers.support.rasterFunctions.NDVIFunction\")], u);\nconst a = u;\nexport { a as default };","map":{"version":3,"names":["_","t","property","s","subclass","r","calculateNDVI","e","getBandMatrix3","n","i","o","u","constructor","arguments","functionName","functionArguments","rasterArgumentNames","_bindSourceRasters","scientificOutput","visibleBandID","infraredBandID","outputPixelType","_getOutputPixelType","sourceRasterInfos","Math","max","bandCount","success","supportsGPU","error","clone","pixelType","_removeStatsHistColormapVAT","keyProperties","BandProperties","a","c","statistics","min","avg","stddev","rasterInfo","_processPixels","pixelBlocks","_getWebGLParameters","isInputBandIdsSwizzled","bandIndexMat3","scaled","_getInputBandIds","map","json","write","name","prototype","type","default"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/layers/support/rasterFunctions/NDVIFunction.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{_ as t}from\"../../../chunks/tslib.es6.js\";import{property as s}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/has.js\";import\"../../../core/Logger.js\";import\"../../../core/RandomLCG.js\";import{subclass as r}from\"../../../core/accessorSupport/decorators/subclass.js\";import{calculateNDVI as e,getBandMatrix3 as n}from\"./bandIndexUtils.js\";import i from\"./BaseRasterFunction.js\";import o from\"./NDVIFunctionArguments.js\";let u=class extends i{constructor(){super(...arguments),this.functionName=\"NDVI\",this.functionArguments=null,this.rasterArgumentNames=[\"raster\"]}_bindSourceRasters(){const{scientificOutput:t,visibleBandID:s,infraredBandID:r}=this.functionArguments;this.outputPixelType=this._getOutputPixelType(t?\"f32\":\"u8\");const e=this.sourceRasterInfos[0],n=Math.max(s,r);if(e.bandCount<2||n>=e.bandCount)return{success:!1,supportsGPU:!1,error:\"ndvi-function: source raster has insufficient amount of raster bands\"};if(s<0||r<0)return{success:!1,supportsGPU:!1,error:\"ndvi-function: invalid visible or infrared band id\"};const i=e.clone();i.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(i),i.bandCount=1,i.keyProperties={...i.keyProperties,BandProperties:void 0};const[o,u,a,c]=t?[-1,1,0,.1]:[0,200,100,10];return i.statistics=[{min:o,max:u,avg:a,stddev:c}],this.rasterInfo=i,{success:!0,supportsGPU:!0}}_processPixels(t){const s=t.pixelBlocks?.[0];if(null==s)return null;const{visibleBandID:r,infraredBandID:n,scientificOutput:i}=this.functionArguments;return e(s,r,n,!i)}_getWebGLParameters(){const{visibleBandID:t,infraredBandID:s,scientificOutput:r}=this.functionArguments,e=this.isInputBandIdsSwizzled?[0,1,2]:[s,t,0];return{bandIndexMat3:n(e),scaled:!r}}_getInputBandIds(t){const{visibleBandID:s,infraredBandID:r}=this.functionArguments;return[r,s,0].map((s=>t[s]))}};t([s({json:{write:!0,name:\"rasterFunction\"}})],u.prototype,\"functionName\",void 0),t([s({type:o,json:{write:!0,name:\"rasterFunctionArguments\"}})],u.prototype,\"functionArguments\",void 0),t([s()],u.prototype,\"rasterArgumentNames\",void 0),u=t([r(\"esri.layers.support.rasterFunctions.NDVIFunction\")],u);const a=u;export{a as default};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}