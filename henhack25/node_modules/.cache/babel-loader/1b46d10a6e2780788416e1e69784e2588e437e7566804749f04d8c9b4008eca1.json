{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport \"../../../core/has.js\";\nimport { JSONMap as e } from \"../../../core/jsonMap.js\";\nimport t from \"../PixelBlock.js\";\nimport { isIntegerPixelType as a } from \"../rasterFormats/pixelRangeUtils.js\";\nconst n = new e({\n    0: \"difference\",\n    1: \"relative-difference\",\n    2: \"categorical\",\n    3: \"euclidean-distance\",\n    4: \"angle-difference\",\n    5: \"band-with-most-change\"\n  }, {\n    useNumericKeys: !0\n  }),\n  s = new e({\n    0: \"all\",\n    1: \"changed\",\n    2: \"unchanged\"\n  }, {\n    useNumericKeys: !0\n  });\nfunction i(e, n, s, i) {\n  const [f, h] = e,\n    m = a(s) && !a(f.pixelType) && !a(h.pixelType),\n    p = [f.mask, h.mask].filter(e => e),\n    u = t.combineBandMasks(p),\n    g = e.map(e => e.pixels[0]),\n    {\n      width: k,\n      height: x\n    } = f,\n    b = t.createEmptyBand(s, k * x);\n  switch (n) {\n    case \"difference\":\n    case \"relative-difference\":\n      o({\n        bands: g,\n        mask: u,\n        outBand: b,\n        isRoundingNeeded: m,\n        isRelative: \"relative-difference\" === n\n      });\n      break;\n    case \"categorical\":\n      c({\n        bands: g,\n        mask: u,\n        outBand: b,\n        ...i\n      });\n      break;\n    case \"euclidean-distance\":\n      l({\n        pixels: e.map(e => e.pixels),\n        mask: u,\n        outBand: b\n      });\n      break;\n    case \"angle-difference\":\n      r({\n        pixels: e.map(e => e.pixels),\n        mask: u,\n        outBand: b\n      });\n      break;\n    case \"band-with-most-change\":\n      d({\n        pixels: e.map(e => e.pixels),\n        mask: u,\n        outBand: b\n      });\n  }\n  const B = new t({\n    width: k,\n    height: x,\n    pixels: [b],\n    pixelType: s,\n    mask: u\n  });\n  return B.updateStatistics(), B;\n}\nfunction o(e) {\n  const {\n      bands: [t, a],\n      mask: n,\n      isRelative: s,\n      isRoundingNeeded: i,\n      outBand: o\n    } = e,\n    c = t.length;\n  for (let l = 0; l < c; l++) if (!n || n[l]) {\n    let e = t[l] - a[l];\n    if (s) {\n      const n = Math.max(Math.abs(t[l]) - Math.abs(a[l]));\n      e = n > 0 ? e / n : 0;\n    }\n    o[l] = i ? Math.round(e) : e;\n  }\n}\nfunction c(e) {\n  const {\n      bands: [t, a],\n      categoryIndexLookups: [n, s],\n      classNames: [i, o],\n      mask: c,\n      keepMethod: l,\n      outBand: r\n    } = e,\n    d = t.length,\n    f = i.length,\n    h = o.length,\n    m = f * h,\n    p = m + 1,\n    u = m + 2;\n  for (let g = 0; g < d; g++) if (!c || c[g]) {\n    const e = t[g],\n      c = a[g],\n      d = n[e],\n      f = s[c],\n      k = i[d],\n      x = o[f];\n    r[g] = null == d || null == f ? m : \"changed\" === l && k === x ? p : \"unchanged\" === l && k !== x ? u : d * h + f;\n  }\n}\nfunction l(e) {\n  const {\n      pixels: [t, a],\n      mask: n,\n      outBand: s\n    } = e,\n    i = t[0].length,\n    o = t.length;\n  for (let c = 0; c < i; c++) if (!n || n[c]) {\n    let e = 0;\n    for (let n = 0; n < o; n++) {\n      const s = t[n][c] - a[n][c];\n      e += s * s;\n    }\n    s[c] = Math.sqrt(e);\n  }\n}\nfunction r(e) {\n  const {\n      pixels: [t, a],\n      mask: n,\n      outBand: s\n    } = e,\n    i = t[0].length,\n    o = t.length;\n  for (let c = 0; c < i; c++) if (!n || n[c]) {\n    let e = 0,\n      n = 0,\n      i = 0;\n    for (let s = 0; s < o; s++) {\n      const o = t[s][c],\n        l = a[s][c];\n      e += o * l, n += o * o, i += l * l;\n    }\n    const l = Math.sqrt(n * i);\n    s[c] = l ? Math.acos(e / l) : 1.5707963267948966;\n  }\n}\nfunction d(e) {\n  const {\n      pixels: [t, a],\n      mask: n,\n      outBand: s\n    } = e,\n    i = t[0].length,\n    o = t.length;\n  for (let c = 0; c < i; c++) if (!n || n[c]) {\n    let e = 0,\n      n = 0;\n    for (let s = 0; s < o; s++) {\n      const i = Math.abs(t[s][c] - a[s][c]);\n      i > e && (e = i, n = s);\n    }\n    s[c] = n;\n  }\n}\nexport { n as changeMethodMap, i as computeChange, s as keepMethodMap };","map":{"version":3,"names":["JSONMap","e","t","isIntegerPixelType","a","n","useNumericKeys","s","i","f","h","m","pixelType","p","mask","filter","u","combineBandMasks","g","map","pixels","width","k","height","x","b","createEmptyBand","o","bands","outBand","isRoundingNeeded","isRelative","c","l","r","d","B","updateStatistics","length","Math","max","abs","round","categoryIndexLookups","classNames","keepMethod","sqrt","acos","changeMethodMap","computeChange","keepMethodMap"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/layers/support/rasterFunctions/changeDetectionUtils.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport\"../../../core/has.js\";import{JSONMap as e}from\"../../../core/jsonMap.js\";import t from\"../PixelBlock.js\";import{isIntegerPixelType as a}from\"../rasterFormats/pixelRangeUtils.js\";const n=new e({0:\"difference\",1:\"relative-difference\",2:\"categorical\",3:\"euclidean-distance\",4:\"angle-difference\",5:\"band-with-most-change\"},{useNumericKeys:!0}),s=new e({0:\"all\",1:\"changed\",2:\"unchanged\"},{useNumericKeys:!0});function i(e,n,s,i){const[f,h]=e,m=a(s)&&!a(f.pixelType)&&!a(h.pixelType),p=[f.mask,h.mask].filter((e=>e)),u=t.combineBandMasks(p),g=e.map((e=>e.pixels[0])),{width:k,height:x}=f,b=t.createEmptyBand(s,k*x);switch(n){case\"difference\":case\"relative-difference\":o({bands:g,mask:u,outBand:b,isRoundingNeeded:m,isRelative:\"relative-difference\"===n});break;case\"categorical\":c({bands:g,mask:u,outBand:b,...i});break;case\"euclidean-distance\":l({pixels:e.map((e=>e.pixels)),mask:u,outBand:b});break;case\"angle-difference\":r({pixels:e.map((e=>e.pixels)),mask:u,outBand:b});break;case\"band-with-most-change\":d({pixels:e.map((e=>e.pixels)),mask:u,outBand:b})}const B=new t({width:k,height:x,pixels:[b],pixelType:s,mask:u});return B.updateStatistics(),B}function o(e){const{bands:[t,a],mask:n,isRelative:s,isRoundingNeeded:i,outBand:o}=e,c=t.length;for(let l=0;l<c;l++)if(!n||n[l]){let e=t[l]-a[l];if(s){const n=Math.max(Math.abs(t[l])-Math.abs(a[l]));e=n>0?e/n:0}o[l]=i?Math.round(e):e}}function c(e){const{bands:[t,a],categoryIndexLookups:[n,s],classNames:[i,o],mask:c,keepMethod:l,outBand:r}=e,d=t.length,f=i.length,h=o.length,m=f*h,p=m+1,u=m+2;for(let g=0;g<d;g++)if(!c||c[g]){const e=t[g],c=a[g],d=n[e],f=s[c],k=i[d],x=o[f];r[g]=null==d||null==f?m:\"changed\"===l&&k===x?p:\"unchanged\"===l&&k!==x?u:d*h+f}}function l(e){const{pixels:[t,a],mask:n,outBand:s}=e,i=t[0].length,o=t.length;for(let c=0;c<i;c++)if(!n||n[c]){let e=0;for(let n=0;n<o;n++){const s=t[n][c]-a[n][c];e+=s*s}s[c]=Math.sqrt(e)}}function r(e){const{pixels:[t,a],mask:n,outBand:s}=e,i=t[0].length,o=t.length;for(let c=0;c<i;c++)if(!n||n[c]){let e=0,n=0,i=0;for(let s=0;s<o;s++){const o=t[s][c],l=a[s][c];e+=o*l,n+=o*o,i+=l*l}const l=Math.sqrt(n*i);s[c]=l?Math.acos(e/l):1.5707963267948966}}function d(e){const{pixels:[t,a],mask:n,outBand:s}=e,i=t[0].length,o=t.length;for(let c=0;c<i;c++)if(!n||n[c]){let e=0,n=0;for(let s=0;s<o;s++){const i=Math.abs(t[s][c]-a[s][c]);i>e&&(e=i,n=s)}s[c]=n}}export{n as changeMethodMap,i as computeChange,s as keepMethodMap};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}