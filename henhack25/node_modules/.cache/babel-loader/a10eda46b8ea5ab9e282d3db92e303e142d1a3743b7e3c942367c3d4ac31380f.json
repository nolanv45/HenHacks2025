{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { baseObjectMemory as r } from \"../../../../../core/memoryEstimations.js\";\nimport { normalizeTransform as e, quantizeX as t, quantizeY as s } from \"../../../../../geometry/support/quantizationUtils.js\";\nimport { convertToGeometry as a } from \"../../../../../layers/graphics/featureConversionUtils.js\";\nimport { FeatureSetReader as i } from \"./FeatureSetReader.js\";\nclass d extends i {\n  static from(r, e) {\n    if (r instanceof this) {\n      const t = new Set(e),\n        s = r._indices.filter(r => t.has(r));\n      return new d(r._reader, s);\n    }\n    return new d(r.copy(), e);\n  }\n  constructor(r, e) {\n    super(r.metadata), this._currentIndex = -1, this._displayTransform = null, this._reader = r, this._indices = e;\n  }\n  setTransformForDisplay(r) {\n    const t = this._reader.getInTransform();\n    if (null == t) return void (this._displayTransform = e(r));\n    const s = e(t),\n      a = e(r),\n      [i, d] = s.scale,\n      [n, o] = s.translate,\n      [h, u] = a.scale,\n      [_, l] = a.translate,\n      y = i / h,\n      c = d / u,\n      p = (n - _) / h,\n      m = (o - l) / u;\n    this._displayTransform = {\n      originPosition: \"lowerLeft\",\n      scale: [1 / y, 1 / c, 1, 1],\n      translate: [-p / y, -m / c, 0, 0]\n    };\n  }\n  getInTransform() {\n    return this._reader.getInTransform();\n  }\n  get fields() {\n    return this._reader.fields;\n  }\n  get hasNext() {\n    return this._currentIndex + 1 < this._indices.length;\n  }\n  getSize() {\n    return this._indices.length;\n  }\n  getCursor() {\n    return this.copy();\n  }\n  copy() {\n    const r = new d(this._reader.copy(), this._indices);\n    return r._currentIndex = this._currentIndex, r._displayTransform = this._displayTransform, r._processorAttributes = this._processorAttributes, r;\n  }\n  get contextTimeZone() {\n    return this._reader.contextTimeZone;\n  }\n  set contextTimeZone(r) {\n    this._reader.contextTimeZone = r;\n  }\n  get usedMemory() {\n    return r + this._reader.usedMemory;\n  }\n  setProcessorAttributes(r) {\n    this._processorAttributes = Object.assign(this._processorAttributes ?? {}, r);\n  }\n  _nextIndex() {\n    return ++this._currentIndex < this._indices.length && (this._reader.setIndex(this._indices[this._currentIndex]), !0);\n  }\n  next() {\n    for (; this._nextIndex() && !this._reader._getExists(););\n    return this._currentIndex < this._indices.length;\n  }\n  readXForDisplay() {\n    return this._displayTransform ? t(this._displayTransform, this._reader.readXForDisplay()) : this._reader.readXForDisplay();\n  }\n  readYForDisplay() {\n    return this._displayTransform ? s(this._displayTransform, this._reader.readYForDisplay()) : this._reader.readYForDisplay();\n  }\n  readGeometryForDisplay() {\n    return this._displayTransform ? this._reader.readGeometryForDisplayTransformed(this._displayTransform) : this._reader.readGeometryForDisplay();\n  }\n  readCentroidForDisplay() {\n    const r = this._reader.readCentroidForDisplay()?.clone();\n    if (r) {\n      const [e, a] = r.coords;\n      this._displayTransform ? (r.coords[0] = t(this._displayTransform, e), r.coords[1] = s(this._displayTransform, a)) : (r.coords[0] = e, r.coords[1] = a);\n    }\n    return r;\n  }\n  get geometryType() {\n    return this._reader.geometryType;\n  }\n  get hasFeatures() {\n    return this._reader.hasFeatures;\n  }\n  get exceededTransferLimit() {\n    return this._reader.exceededTransferLimit;\n  }\n  get hasZ() {\n    return this._reader.hasZ;\n  }\n  get hasM() {\n    return this._reader.hasM;\n  }\n  readAttribute(r, e = !1) {\n    return this._reader.readAttribute(r, e) ?? this._processorAttributes?.[r];\n  }\n  readAttributes() {\n    return {\n      ...(this._processorAttributes ?? {}),\n      ...this._reader.readAttributes()\n    };\n  }\n  joinAttributes(r) {\n    return this._reader.joinAttributes(r);\n  }\n  getBounds(r) {\n    return this._reader.getBounds(r);\n  }\n  getAttributeHash() {\n    return this._reader.getAttributeHash();\n  }\n  getObjectId() {\n    return this._reader.getObjectId();\n  }\n  getDisplayId() {\n    return this._reader.getDisplayId();\n  }\n  setDisplayId(r) {\n    return this._reader.setDisplayId(r);\n  }\n  setIndex(r) {\n    return this._reader.setIndex(r);\n  }\n  getIndex() {\n    return this._reader.getIndex();\n  }\n  readXWorldSpace() {\n    return this._reader.readXWorldSpace();\n  }\n  readYWorldSpace() {\n    return this._reader.readYWorldSpace();\n  }\n  _readX() {\n    return this._reader.readXForDisplay();\n  }\n  _readY() {\n    return this._reader.readYForDisplay();\n  }\n  _readServerCentroid() {\n    return this._reader._readServerCentroid();\n  }\n  readLegacyFeatureForDisplay() {\n    const r = this.readCentroidForDisplay();\n    return {\n      attributes: this.readAttributes(),\n      geometry: this.readLegacyGeometryForDisplay(),\n      centroid: (r && {\n        x: r.coords[0],\n        y: r.coords[1]\n      }) ?? null\n    };\n  }\n  readLegacyGeometryForDisplay() {\n    const r = this.readGeometryForDisplay();\n    return a(r, this.geometryType, !1, !1);\n  }\n  readGeometryArea() {\n    return this._displayTransform ? this._reader.readGeometryForDisplayTransformed(this._displayTransform)?.area() ?? 0 : this._reader.readGeometryArea();\n  }\n  readGeometryWorldSpace() {\n    return this._reader.readGeometryWorldSpace();\n  }\n  _readGeometry() {\n    return this._reader._readGeometry();\n  }\n  _readAttribute(r, e) {\n    throw new Error(\"Error: Should not be called. Underlying _reader should be used instead\");\n  }\n  _readAttributes() {\n    throw new Error(\"Error: Should not be called. Underlying _reader should be used instead\");\n  }\n  readArcadeFeature() {\n    return this._reader.readArcadeFeature();\n  }\n  geometry() {\n    return this._reader.geometry();\n  }\n  field(r) {\n    return this._reader.field(r);\n  }\n  hasField(r) {\n    return this._reader.hasField(r);\n  }\n  setField(r, e) {\n    return this._reader.setField(r, e);\n  }\n  keys() {\n    return this._reader.keys();\n  }\n  castToText(r = !1) {\n    return this._reader.castToText(r);\n  }\n}\nexport { d as FeatureSetReaderIndirect };","map":{"version":3,"names":["baseObjectMemory","r","normalizeTransform","e","quantizeX","t","quantizeY","s","convertToGeometry","a","FeatureSetReader","i","d","from","Set","_indices","filter","has","_reader","copy","constructor","metadata","_currentIndex","_displayTransform","setTransformForDisplay","getInTransform","scale","n","o","translate","h","u","_","l","y","c","p","m","originPosition","fields","hasNext","length","getSize","getCursor","_processorAttributes","contextTimeZone","usedMemory","setProcessorAttributes","Object","assign","_nextIndex","setIndex","next","_getExists","readXForDisplay","readYForDisplay","readGeometryForDisplay","readGeometryForDisplayTransformed","readCentroidForDisplay","clone","coords","geometryType","hasFeatures","exceededTransferLimit","hasZ","hasM","readAttribute","readAttributes","joinAttributes","getBounds","getAttributeHash","getObjectId","getDisplayId","setDisplayId","getIndex","readXWorldSpace","readYWorldSpace","_readX","_readY","_readServerCentroid","readLegacyFeatureForDisplay","attributes","geometry","readLegacyGeometryForDisplay","centroid","x","readGeometryArea","area","readGeometryWorldSpace","_readGeometry","_readAttribute","Error","_readAttributes","readArcadeFeature","field","hasField","setField","keys","castToText","FeatureSetReaderIndirect"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/2d/layers/features/support/FeatureSetReaderIndirect.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{baseObjectMemory as r}from\"../../../../../core/memoryEstimations.js\";import{normalizeTransform as e,quantizeX as t,quantizeY as s}from\"../../../../../geometry/support/quantizationUtils.js\";import{convertToGeometry as a}from\"../../../../../layers/graphics/featureConversionUtils.js\";import{FeatureSetReader as i}from\"./FeatureSetReader.js\";class d extends i{static from(r,e){if(r instanceof this){const t=new Set(e),s=r._indices.filter((r=>t.has(r)));return new d(r._reader,s)}return new d(r.copy(),e)}constructor(r,e){super(r.metadata),this._currentIndex=-1,this._displayTransform=null,this._reader=r,this._indices=e}setTransformForDisplay(r){const t=this._reader.getInTransform();if(null==t)return void(this._displayTransform=e(r));const s=e(t),a=e(r),[i,d]=s.scale,[n,o]=s.translate,[h,u]=a.scale,[_,l]=a.translate,y=i/h,c=d/u,p=(n-_)/h,m=(o-l)/u;this._displayTransform={originPosition:\"lowerLeft\",scale:[1/y,1/c,1,1],translate:[-p/y,-m/c,0,0]}}getInTransform(){return this._reader.getInTransform()}get fields(){return this._reader.fields}get hasNext(){return this._currentIndex+1<this._indices.length}getSize(){return this._indices.length}getCursor(){return this.copy()}copy(){const r=new d(this._reader.copy(),this._indices);return r._currentIndex=this._currentIndex,r._displayTransform=this._displayTransform,r._processorAttributes=this._processorAttributes,r}get contextTimeZone(){return this._reader.contextTimeZone}set contextTimeZone(r){this._reader.contextTimeZone=r}get usedMemory(){return r+this._reader.usedMemory}setProcessorAttributes(r){this._processorAttributes=Object.assign(this._processorAttributes??{},r)}_nextIndex(){return++this._currentIndex<this._indices.length&&(this._reader.setIndex(this._indices[this._currentIndex]),!0)}next(){for(;this._nextIndex()&&!this._reader._getExists(););return this._currentIndex<this._indices.length}readXForDisplay(){return this._displayTransform?t(this._displayTransform,this._reader.readXForDisplay()):this._reader.readXForDisplay()}readYForDisplay(){return this._displayTransform?s(this._displayTransform,this._reader.readYForDisplay()):this._reader.readYForDisplay()}readGeometryForDisplay(){return this._displayTransform?this._reader.readGeometryForDisplayTransformed(this._displayTransform):this._reader.readGeometryForDisplay()}readCentroidForDisplay(){const r=this._reader.readCentroidForDisplay()?.clone();if(r){const[e,a]=r.coords;this._displayTransform?(r.coords[0]=t(this._displayTransform,e),r.coords[1]=s(this._displayTransform,a)):(r.coords[0]=e,r.coords[1]=a)}return r}get geometryType(){return this._reader.geometryType}get hasFeatures(){return this._reader.hasFeatures}get exceededTransferLimit(){return this._reader.exceededTransferLimit}get hasZ(){return this._reader.hasZ}get hasM(){return this._reader.hasM}readAttribute(r,e=!1){return this._reader.readAttribute(r,e)??this._processorAttributes?.[r]}readAttributes(){return{...this._processorAttributes??{},...this._reader.readAttributes()}}joinAttributes(r){return this._reader.joinAttributes(r)}getBounds(r){return this._reader.getBounds(r)}getAttributeHash(){return this._reader.getAttributeHash()}getObjectId(){return this._reader.getObjectId()}getDisplayId(){return this._reader.getDisplayId()}setDisplayId(r){return this._reader.setDisplayId(r)}setIndex(r){return this._reader.setIndex(r)}getIndex(){return this._reader.getIndex()}readXWorldSpace(){return this._reader.readXWorldSpace()}readYWorldSpace(){return this._reader.readYWorldSpace()}_readX(){return this._reader.readXForDisplay()}_readY(){return this._reader.readYForDisplay()}_readServerCentroid(){return this._reader._readServerCentroid()}readLegacyFeatureForDisplay(){const r=this.readCentroidForDisplay();return{attributes:this.readAttributes(),geometry:this.readLegacyGeometryForDisplay(),centroid:(r&&{x:r.coords[0],y:r.coords[1]})??null}}readLegacyGeometryForDisplay(){const r=this.readGeometryForDisplay();return a(r,this.geometryType,!1,!1)}readGeometryArea(){return this._displayTransform?this._reader.readGeometryForDisplayTransformed(this._displayTransform)?.area()??0:this._reader.readGeometryArea()}readGeometryWorldSpace(){return this._reader.readGeometryWorldSpace()}_readGeometry(){return this._reader._readGeometry()}_readAttribute(r,e){throw new Error(\"Error: Should not be called. Underlying _reader should be used instead\")}_readAttributes(){throw new Error(\"Error: Should not be called. Underlying _reader should be used instead\")}readArcadeFeature(){return this._reader.readArcadeFeature()}geometry(){return this._reader.geometry()}field(r){return this._reader.field(r)}hasField(r){return this._reader.hasField(r)}setField(r,e){return this._reader.setField(r,e)}keys(){return this._reader.keys()}castToText(r=!1){return this._reader.castToText(r)}}export{d as FeatureSetReaderIndirect};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}