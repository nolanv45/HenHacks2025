{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nclass t {\n  constructor() {\n    let t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 15e3;\n    let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5e3;\n    this._timer = null, this._cachedBlocks = new Map(), this._size = -1, this._duration = t, this._interval = Math.min(t, e);\n  }\n  decreaseRefCount(t, e) {\n    const s = t + \"/\" + e,\n      r = this._cachedBlocks;\n    if (r.has(s)) {\n      const t = r.get(s);\n      return t.refCount--, t.refCount <= 0 && (r.delete(s), t.controller && t.controller.abort()), t.refCount;\n    }\n    return 0;\n  }\n  getBlock(t, e) {\n    const s = t + \"/\" + e,\n      r = this._cachedBlocks;\n    if (r.has(s)) {\n      const t = r.get(s);\n      return t.ts = Date.now(), t.refCount++, r.delete(s), r.set(s, t), t.block;\n    }\n    return null;\n  }\n  putBlock(t, e, s, r) {\n    const i = this._cachedBlocks,\n      c = t + \"/\" + e;\n    if (i.has(c)) {\n      const t = i.get(c);\n      t.ts = Date.now(), t.refCount++;\n    } else i.set(c, {\n      block: s,\n      ts: Date.now(),\n      refCount: 1,\n      controller: r\n    });\n    this._trim(), this._updateTimer();\n  }\n  deleteBlock(t, e) {\n    const s = this._cachedBlocks,\n      r = t + \"/\" + e;\n    s.has(r) && s.delete(r);\n  }\n  updateMaxSize(t) {\n    this._size = t, this._trim();\n  }\n  empty() {\n    this._cachedBlocks.clear(), this._clearTimer();\n  }\n  getCurrentSize() {\n    return this._cachedBlocks.size;\n  }\n  _updateTimer() {\n    if (null != this._timer) return;\n    const t = this._cachedBlocks;\n    this._timer = setInterval(() => {\n      const e = Array.from(t),\n        s = Date.now();\n      for (let r = 0; r < e.length && e[r][1].ts <= s - this._duration; r++) t.delete(e[r][0]);\n      0 === t.size && this._clearTimer();\n    }, this._interval);\n  }\n  _trim() {\n    const t = this._cachedBlocks;\n    if (-1 === this._size || this._size >= t.size) return;\n    const e = Array.from(t);\n    for (let s = 0; s < e.length - this._size; s++) t.delete(e[s][0]);\n  }\n  _clearTimer() {\n    null != this._timer && (clearInterval(this._timer), this._timer = null);\n  }\n}\nexport { t as default };","map":{"version":3,"names":["t","constructor","arguments","length","undefined","e","_timer","_cachedBlocks","Map","_size","_duration","_interval","Math","min","decreaseRefCount","s","r","has","get","refCount","delete","controller","abort","getBlock","ts","Date","now","set","block","putBlock","i","c","_trim","_updateTimer","deleteBlock","updateMaxSize","empty","clear","_clearTimer","getCurrentSize","size","setInterval","Array","from","clearInterval","default"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/layers/support/rasterDatasets/EphemeralBlockCache.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nclass t{constructor(t=15e3,e=5e3){this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=t,this._interval=Math.min(t,e)}decreaseRefCount(t,e){const s=t+\"/\"+e,r=this._cachedBlocks;if(r.has(s)){const t=r.get(s);return t.refCount--,t.refCount<=0&&(r.delete(s),t.controller&&t.controller.abort()),t.refCount}return 0}getBlock(t,e){const s=t+\"/\"+e,r=this._cachedBlocks;if(r.has(s)){const t=r.get(s);return t.ts=Date.now(),t.refCount++,r.delete(s),r.set(s,t),t.block}return null}putBlock(t,e,s,r){const i=this._cachedBlocks,c=t+\"/\"+e;if(i.has(c)){const t=i.get(c);t.ts=Date.now(),t.refCount++}else i.set(c,{block:s,ts:Date.now(),refCount:1,controller:r});this._trim(),this._updateTimer()}deleteBlock(t,e){const s=this._cachedBlocks,r=t+\"/\"+e;s.has(r)&&s.delete(r)}updateMaxSize(t){this._size=t,this._trim()}empty(){this._cachedBlocks.clear(),this._clearTimer()}getCurrentSize(){return this._cachedBlocks.size}_updateTimer(){if(null!=this._timer)return;const t=this._cachedBlocks;this._timer=setInterval((()=>{const e=Array.from(t),s=Date.now();for(let r=0;r<e.length&&e[r][1].ts<=s-this._duration;r++)t.delete(e[r][0]);0===t.size&&this._clearTimer()}),this._interval)}_trim(){const t=this._cachedBlocks;if(-1===this._size||this._size>=t.size)return;const e=Array.from(t);for(let s=0;s<e.length-this._size;s++)t.delete(e[s][0])}_clearTimer(){null!=this._timer&&(clearInterval(this._timer),this._timer=null)}}export{t as default};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}