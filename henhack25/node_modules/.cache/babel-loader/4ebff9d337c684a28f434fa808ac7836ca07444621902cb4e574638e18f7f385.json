{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport o from \"../../../core/ObjectPool.js\";\nimport l from \"./TileKey.js\";\nclass s {\n  constructor() {\n    this.spans = [];\n  }\n  acquire(o) {\n    this.lodInfo = o;\n  }\n  release() {\n    this.lodInfo = null, this.spans.length = 0;\n  }\n  *keys() {\n    const o = this.lodInfo;\n    for (const {\n      row: s,\n      colFrom: e,\n      colTo: r\n    } of this.spans) for (let t = e; t <= r; t++) {\n      const e = o.getWorldForColumn(t);\n      yield new l(o.level, s, o.normalizeCol(t), e);\n    }\n  }\n  forEach(o, l) {\n    const {\n        spans: s,\n        lodInfo: e\n      } = this,\n      {\n        level: r\n      } = e;\n    if (0 !== s.length) for (const {\n      row: t,\n      colFrom: n,\n      colTo: c\n    } of s) for (let s = n; s <= c; s++) o.call(l, r, t, e.normalizeCol(s), e.getWorldForColumn(s));\n  }\n}\ns.pool = new o(s);\nexport { s as default };","map":{"version":3,"names":["o","l","s","constructor","spans","acquire","lodInfo","release","length","keys","row","colFrom","e","colTo","r","t","getWorldForColumn","level","normalizeCol","forEach","n","c","call","pool","default"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/2d/tiling/TileCoverage.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport o from\"../../../core/ObjectPool.js\";import l from\"./TileKey.js\";class s{constructor(){this.spans=[]}acquire(o){this.lodInfo=o}release(){this.lodInfo=null,this.spans.length=0}*keys(){const o=this.lodInfo;for(const{row:s,colFrom:e,colTo:r}of this.spans)for(let t=e;t<=r;t++){const e=o.getWorldForColumn(t);yield new l(o.level,s,o.normalizeCol(t),e)}}forEach(o,l){const{spans:s,lodInfo:e}=this,{level:r}=e;if(0!==s.length)for(const{row:t,colFrom:n,colTo:c}of s)for(let s=n;s<=c;s++)o.call(l,r,t,e.normalizeCol(s),e.getWorldForColumn(s))}}s.pool=new o(s);export{s as default};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAOA,CAAC,MAAK,6BAA6B;AAAC,OAAOC,CAAC,MAAK,cAAc;AAAC,MAAMC,CAAC;EAACC,WAAWA,CAAA,EAAE;IAAC,IAAI,CAACC,KAAK,GAAC,EAAE;EAAA;EAACC,OAAOA,CAACL,CAAC,EAAC;IAAC,IAAI,CAACM,OAAO,GAACN,CAAC;EAAA;EAACO,OAAOA,CAAA,EAAE;IAAC,IAAI,CAACD,OAAO,GAAC,IAAI,EAAC,IAAI,CAACF,KAAK,CAACI,MAAM,GAAC,CAAC;EAAA;EAAC,CAACC,IAAIA,CAAA,EAAE;IAAC,MAAMT,CAAC,GAAC,IAAI,CAACM,OAAO;IAAC,KAAI,MAAK;MAACI,GAAG,EAACR,CAAC;MAACS,OAAO,EAACC,CAAC;MAACC,KAAK,EAACC;IAAC,CAAC,IAAG,IAAI,CAACV,KAAK,EAAC,KAAI,IAAIW,CAAC,GAACH,CAAC,EAACG,CAAC,IAAED,CAAC,EAACC,CAAC,EAAE,EAAC;MAAC,MAAMH,CAAC,GAACZ,CAAC,CAACgB,iBAAiB,CAACD,CAAC,CAAC;MAAC,MAAM,IAAId,CAAC,CAACD,CAAC,CAACiB,KAAK,EAACf,CAAC,EAACF,CAAC,CAACkB,YAAY,CAACH,CAAC,CAAC,EAACH,CAAC,CAAC;IAAA;EAAC;EAACO,OAAOA,CAACnB,CAAC,EAACC,CAAC,EAAC;IAAC,MAAK;QAACG,KAAK,EAACF,CAAC;QAACI,OAAO,EAACM;MAAC,CAAC,GAAC,IAAI;MAAC;QAACK,KAAK,EAACH;MAAC,CAAC,GAACF,CAAC;IAAC,IAAG,CAAC,KAAGV,CAAC,CAACM,MAAM,EAAC,KAAI,MAAK;MAACE,GAAG,EAACK,CAAC;MAACJ,OAAO,EAACS,CAAC;MAACP,KAAK,EAACQ;IAAC,CAAC,IAAGnB,CAAC,EAAC,KAAI,IAAIA,CAAC,GAACkB,CAAC,EAAClB,CAAC,IAAEmB,CAAC,EAACnB,CAAC,EAAE,EAACF,CAAC,CAACsB,IAAI,CAACrB,CAAC,EAACa,CAAC,EAACC,CAAC,EAACH,CAAC,CAACM,YAAY,CAAChB,CAAC,CAAC,EAACU,CAAC,CAACI,iBAAiB,CAACd,CAAC,CAAC,CAAC;EAAA;AAAC;AAACA,CAAC,CAACqB,IAAI,GAAC,IAAIvB,CAAC,CAACE,CAAC,CAAC;AAAC,SAAOA,CAAC,IAAIsB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}