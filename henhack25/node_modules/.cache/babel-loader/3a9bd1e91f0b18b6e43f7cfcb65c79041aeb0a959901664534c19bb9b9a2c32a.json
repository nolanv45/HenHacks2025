{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { result as e } from \"../../core/asyncUtils.js\";\nimport t from \"../../core/Error.js\";\nimport { assertIsSome as i } from \"../../core/maybe.js\";\nimport { whenOrAbort as n, throwIfAbortError as o } from \"../../core/promiseUtils.js\";\nimport { getMetersPerUnitForSR as l } from \"../../core/unitUtils.js\";\nimport s from \"../../geometry/Multipoint.js\";\nimport a from \"../../geometry/Point.js\";\nimport r from \"../../geometry/Polyline.js\";\nimport { initializeProjection as c, project as u } from \"../../geometry/projection.js\";\nimport { fromExtent as h, create as f, contains as p } from \"../../geometry/support/aaBoundingRect.js\";\nimport { MultiTileElevationSampler as m } from \"./ElevationSampler.js\";\nimport { ElevationTile as d } from \"./ElevationTile.js\";\nimport { TileKey as y } from \"./TileKey.js\";\nclass T {\n  async queryAll(e, i, n) {\n    if (!(e = n?.ignoreInvisibleLayers ? e.filter(e => e.visible) : e.slice()).length) throw new t(\"elevation-query:invalid-layer\", \"Elevation queries require at least one elevation layer to fetch tiles from\");\n    const o = w.fromGeometry(i);\n    let l = !1;\n    n?.returnSampleInfo || (l = !0);\n    const s = {\n        ...R,\n        ...n,\n        returnSampleInfo: !0\n      },\n      a = await this.query(e[e.length - 1], o, s),\n      r = await this._queryAllContinue(e, a, s);\n    return r.geometry = r.geometry.export(), l && delete r.sampleInfo, r;\n  }\n  async query(e, i, n) {\n    if (!e) throw new t(\"elevation-query:invalid-layer\", \"Elevation queries require an elevation layer to fetch tiles from\");\n    if (!i || !(i instanceof w) && \"point\" !== i.type && \"multipoint\" !== i.type && \"polyline\" !== i.type) throw new t(\"elevation-query:invalid-geometry\", \"Only point, polyline and multipoint geometries can be used to query elevation\");\n    const o = {\n        ...R,\n        ...n\n      },\n      l = new x(e, i.spatialReference, o),\n      s = o.signal;\n    return await e.load({\n      signal: s\n    }), await q(l, i, s), await this._selectTiles(l, s), await F(l, s), j(l), b(l, s);\n  }\n  async createSampler(e, i, n) {\n    if (!e) throw new t(\"elevation-query:invalid-layer\", \"Elevation queries require an elevation layer to fetch tiles from\");\n    if (!i || \"extent\" !== i.type) throw new t(\"elevation-query:invalid-extent\", \"Invalid or undefined extent\");\n    const o = {\n      ...R,\n      ...n\n    };\n    return this._createSampler(e, i, o);\n  }\n  async createSamplerAll(e, i, n) {\n    if (!(e = n?.ignoreInvisibleLayers ? e.filter(e => e.visible) : e.slice()).length) throw new t(\"elevation-query:invalid-layer\", \"Elevation queries require at least one elevation layer to fetch tiles from\");\n    if (!i || \"extent\" !== i.type) throw new t(\"elevation-query:invalid-extent\", \"Invalid or undefined extent\");\n    const o = {\n        ...R,\n        ...n,\n        returnSampleInfo: !0\n      },\n      l = await this._createSampler(e[e.length - 1], i, o);\n    return this._createSamplerAllContinue(e, i, l, o);\n  }\n  async _createSampler(e, t, i, n) {\n    const o = i.signal;\n    await e.load({\n      signal: o\n    });\n    const l = t.spatialReference,\n      s = e.tileInfo.spatialReference;\n    l.equals(s) || (await c([{\n      source: l,\n      dest: s\n    }], {\n      signal: o\n    }), t = u(t, s));\n    const a = new _(e, t, i, n);\n    return await this._selectTiles(a, o), await F(a, o), new m(a.elevationTiles, a.layer.tileInfo, a.options.noDataValue);\n  }\n  async _createSamplerAllContinue(e, t, i, n) {\n    if (e.pop(), !e.length) return i;\n    const o = i.samplers.filter(e => !e.tile.hasNoDataValues).map(e => h(e.extent)),\n      l = await this._createSampler(e[e.length - 1], t, n, o);\n    if (0 === l.samplers.length) return i;\n    const s = i.samplers.concat(l.samplers),\n      a = new m(s, n.noDataValue);\n    return this._createSamplerAllContinue(e, t, a, n);\n  }\n  async _queryAllContinue(e, t, n) {\n    const o = e.pop(),\n      l = t.geometry.coordinates,\n      s = t.sampleInfo;\n    i(s);\n    const a = [],\n      r = [];\n    for (let i = 0; i < l.length; i++) {\n      const t = s[i];\n      t.demResolution >= 0 ? t.source || (t.source = o) : e.length && (a.push(l[i]), r.push(i));\n    }\n    if (!e.length || 0 === a.length) return t;\n    const c = t.geometry.clone(a),\n      u = await this.query(e[e.length - 1], c, n),\n      h = u.sampleInfo;\n    if (!h) throw new Error(\"no sampleInfo\");\n    return r.forEach((e, t) => {\n      l[e].z = u.geometry.coordinates[t].z, s[e].demResolution = h[t].demResolution;\n    }), this._queryAllContinue(e, t, n);\n  }\n  async _selectTiles(e, i) {\n    \"geometry\" === e.type && I(e);\n    const n = e.options.demResolution;\n    if (\"number\" == typeof n) C(e, n);else if (\"finest-contiguous\" === n) await this._selectTilesFinestContiguous(e, i);else {\n      if (\"auto\" !== n) throw new t(\"elevation-query:invalid-dem-resolution\", `Invalid dem resolution value '${n}', expected a number, \"finest-contiguous\" or \"auto\"`);\n      await this._selectTilesAuto(e, i);\n    }\n  }\n  async _selectTilesFinestContiguous(e, t) {\n    const {\n        tileInfo: i,\n        tilemapCache: n\n      } = e.layer,\n      o = E(i, n, e.options.minDemResolution);\n    await this._selectTilesFinestContiguousAt(e, o, t);\n  }\n  async _selectTilesFinestContiguousAt(e, i, l) {\n    const s = e.layer;\n    if (e.selectTilesAtLOD(i), i < 0) return;\n    const a = s.tilemapCache,\n      r = e.getTilesToFetch();\n    try {\n      if (a && !L(a)) await n(Promise.all(r.map(e => a.fetchAvailability(e.level, e.row, e.col, {\n        signal: l\n      }))), l);else if (await F(e, l), !e.allElevationTilesFetched()) throw e.clearElevationTiles(), new t(\"elevation-query:has-unavailable-tiles\");\n    } catch (c) {\n      o(c), await this._selectTilesFinestContiguousAt(e, i - 1, l);\n    }\n  }\n  async _selectTilesAuto(t, i) {\n    M(t), S(t);\n    const l = t.layer.tilemapCache;\n    if (!l || L(l)) return this._selectTilesAutoPrefetchUpsample(t, i);\n    const s = t.getTilesToFetch(),\n      a = {},\n      r = s.map(async t => {\n        const n = new y(null, 0, 0, 0, f()),\n          s = await e(l.fetchAvailabilityUpsample(t.level, t.row, t.col, n, {\n            signal: i\n          }));\n        !1 !== s.ok ? null != t.id && (a[t.id] = n) : o(s.error);\n      });\n    await n(Promise.all(r), i), t.remapTiles(a);\n  }\n  async _selectTilesAutoPrefetchUpsample(e, t) {\n    const i = e.layer.tileInfo;\n    await F(e, t);\n    let n = !1;\n    e.forEachTileToFetch((e, t) => {\n      i.upsampleTile(e) ? n = !0 : t();\n    }), n && (await this._selectTilesAutoPrefetchUpsample(e, t));\n  }\n}\nclass w {\n  export() {\n    return this._exporter(this.coordinates, this.spatialReference);\n  }\n  clone(e) {\n    const t = new w();\n    return t.geometry = this.geometry, t.spatialReference = this.spatialReference, t.coordinates = e || this.coordinates.map(e => e.clone()), t._exporter = this._exporter, t;\n  }\n  async project(e, t) {\n    if (this.spatialReference.equals(e)) return this.clone();\n    await c([{\n      source: this.spatialReference,\n      dest: e\n    }], {\n      signal: t\n    });\n    const i = new s({\n        spatialReference: this.spatialReference,\n        points: this.coordinates.map(e => [e.x, e.y])\n      }),\n      n = u(i, e);\n    if (!n) return null;\n    const o = this.coordinates.map((e, t) => {\n        const i = e.clone(),\n          o = n.points[t];\n        return i.x = o[0], i.y = o[1], i;\n      }),\n      l = this.clone(o);\n    return l.spatialReference = e, l;\n  }\n  static fromGeometry(e) {\n    const t = new w();\n    if (t.geometry = e, t.spatialReference = e.spatialReference, e instanceof w) t.coordinates = e.coordinates.map(e => e.clone()), t._exporter = (t, i) => {\n      const n = e.clone(t);\n      return n.spatialReference = i, n;\n    };else switch (e.type) {\n      case \"point\":\n        {\n          const i = e,\n            {\n              hasZ: n,\n              hasM: o\n            } = i;\n          t.coordinates = n && o ? [new v(i.x, i.y, i.z, i.m)] : n ? [new v(i.x, i.y, i.z)] : o ? [new v(i.x, i.y, null, i.m)] : [new v(i.x, i.y)], t._exporter = (t, i) => e.hasM ? new a(t[0].x, t[0].y, t[0].z, t[0].m, i) : new a(t[0].x, t[0].y, t[0].z, i);\n          break;\n        }\n      case \"multipoint\":\n        {\n          const i = e,\n            {\n              hasZ: n,\n              hasM: o\n            } = i;\n          t.coordinates = n && o ? i.points.map(e => new v(e[0], e[1], e[2], e[3])) : n ? i.points.map(e => new v(e[0], e[1], e[2])) : o ? i.points.map(e => new v(e[0], e[1], null, e[2])) : i.points.map(e => new v(e[0], e[1])), t._exporter = (t, i) => e.hasM ? new s({\n            points: t.map(e => [e.x, e.y, e.z, e.m]),\n            hasZ: !0,\n            hasM: !0,\n            spatialReference: i\n          }) : new s(t.map(e => [e.x, e.y, e.z]), i);\n          break;\n        }\n      case \"polyline\":\n        {\n          const i = e,\n            n = [],\n            o = [],\n            {\n              hasZ: l,\n              hasM: s\n            } = e;\n          let a = 0;\n          for (const e of i.paths) if (o.push([a, a + e.length]), a += e.length, l && s) for (const t of e) n.push(new v(t[0], t[1], t[2], t[3]));else if (l) for (const t of e) n.push(new v(t[0], t[1], t[2]));else if (s) for (const t of e) n.push(new v(t[0], t[1], null, t[2]));else for (const t of e) n.push(new v(t[0], t[1]));\n          t.coordinates = n, t._exporter = (t, i) => {\n            const n = e.hasM ? t.map(e => [e.x, e.y, e.z ?? 0, e.m ?? 0]) : t.map(e => [e.x, e.y, e.z ?? 0]),\n              l = o.map(e => n.slice(e[0], e[1]));\n            return new r({\n              paths: l,\n              hasM: e.hasM,\n              hasZ: !0,\n              spatialReference: i\n            });\n          };\n          break;\n        }\n    }\n    return t;\n  }\n}\nclass v {\n  constructor(e, t) {\n    let i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    let n = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n    let o = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n    let l = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n    this.x = e, this.y = t, this.z = i, this.m = n, this.tile = o, this.elevationTile = l;\n  }\n  clone() {\n    return new v(this.x, this.y, this.z, this.m);\n  }\n}\nclass g {\n  constructor(e, t) {\n    this.layer = e, this.options = t;\n  }\n}\nclass x extends g {\n  constructor(e, t, i) {\n    super(e, i), this.outSpatialReference = t, this.type = \"geometry\";\n  }\n  selectTilesAtLOD(e) {\n    if (e < 0) this.geometry.coordinates.forEach(e => e.tile = null);else {\n      const {\n          tileInfo: t,\n          tilemapCache: i\n        } = this.layer,\n        n = D(t, i)[e].level;\n      this.geometry.coordinates.forEach(e => e.tile = t.tileAt(n, e.x, e.y));\n    }\n  }\n  allElevationTilesFetched() {\n    return !this.geometry.coordinates.some(e => !e.elevationTile);\n  }\n  clearElevationTiles() {\n    for (const e of this.geometry.coordinates) e.elevationTile !== this.outsideExtentTile && (e.elevationTile = null);\n  }\n  populateElevationTiles(e) {\n    for (const t of this.geometry.coordinates) !t.elevationTile && t.tile?.id && (t.elevationTile = e[t.tile.id]);\n  }\n  remapTiles(e) {\n    for (const t of this.geometry.coordinates) {\n      const i = t.tile?.id;\n      t.tile = i ? e[i] : null;\n    }\n  }\n  getTilesToFetch() {\n    const e = {},\n      t = [];\n    for (const i of this.geometry.coordinates) {\n      const n = i.tile;\n      if (!n) continue;\n      const o = i.tile?.id;\n      i.elevationTile || !o || e[o] || (e[o] = n, t.push(n));\n    }\n    return t;\n  }\n  forEachTileToFetch(e) {\n    for (const t of this.geometry.coordinates) t.tile && !t.elevationTile && e(t.tile, () => {\n      t.tile = null;\n    });\n  }\n}\nclass _ extends g {\n  constructor(e, t, i, n) {\n    super(e, i), this.type = \"extent\", this.elevationTiles = [], this._candidateTiles = [], this._fetchedCandidates = new Set(), this.extent = t.clone().intersection(e.fullExtent), this.maskExtents = n;\n  }\n  selectTilesAtLOD(e, t) {\n    const i = this._maximumLodForRequests(t),\n      n = Math.min(i, e);\n    n < 0 ? this._candidateTiles.length = 0 : this._selectCandidateTilesCoveringExtentAt(n);\n  }\n  _maximumLodForRequests(e) {\n    const {\n        tileInfo: t,\n        tilemapCache: i\n      } = this.layer,\n      n = D(t, i);\n    if (!e) return n.length - 1;\n    const o = this.extent;\n    if (null == o) return -1;\n    for (let l = n.length - 1; l >= 0; l--) {\n      const i = n[l],\n        s = i.resolution * t.size[0],\n        a = i.resolution * t.size[1];\n      if (Math.ceil(o.width / s) * Math.ceil(o.height / a) <= e) return l;\n    }\n    return -1;\n  }\n  allElevationTilesFetched() {\n    return this._candidateTiles.length === this.elevationTiles.length;\n  }\n  clearElevationTiles() {\n    this.elevationTiles.length = 0, this._fetchedCandidates.clear();\n  }\n  populateElevationTiles(e) {\n    for (const t of this._candidateTiles) {\n      const i = t.id && e[t.id];\n      i && (this._fetchedCandidates.add(t), this.elevationTiles.push(i));\n    }\n  }\n  remapTiles(e) {\n    this._candidateTiles = z(this._candidateTiles.map(t => e[t.id]));\n  }\n  getTilesToFetch() {\n    return this._candidateTiles;\n  }\n  forEachTileToFetch(e, t) {\n    const i = this._candidateTiles;\n    this._candidateTiles = [], i.forEach(i => {\n      if (this._fetchedCandidates.has(i)) return void (t && t(i));\n      let n = !1;\n      e(i, () => n = !0), n ? t && t(i) : this._candidateTiles.push(i);\n    }), this._candidateTiles = z(this._candidateTiles, t);\n  }\n  _selectCandidateTilesCoveringExtentAt(e) {\n    this._candidateTiles.length = 0;\n    const t = this.extent;\n    if (null == t) return;\n    const {\n        tileInfo: i,\n        tilemapCache: n\n      } = this.layer,\n      o = D(i, n)[e],\n      l = i.tileAt(o.level, t.xmin, t.ymin),\n      s = l.extent;\n    if (null == s) return;\n    const a = o.resolution * i.size[0],\n      r = o.resolution * i.size[1],\n      c = Math.ceil((t.xmax - s[0]) / a),\n      u = Math.ceil((t.ymax - s[1]) / r);\n    for (let h = 0; h < u; h++) for (let e = 0; e < c; e++) {\n      const t = new y(null, l.level, l.row - h, l.col + e);\n      i.updateTileInfo(t), this._tileIsMasked(t) || this._candidateTiles.push(t);\n    }\n  }\n  _tileIsMasked(e) {\n    return !!this.maskExtents && this.maskExtents.some(t => e.extent && p(t, e.extent));\n  }\n}\nfunction E(e, t) {\n  let i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  const n = D(e, t);\n  let o = n.length - 1;\n  if (i > 0) {\n    const t = i / l(e.spatialReference),\n      s = n.findIndex(e => e.resolution < t);\n    0 === s ? o = 0 : s > 0 && (o = s - 1);\n  }\n  return o;\n}\nconst R = {\n  maximumAutoTileRequests: 20,\n  noDataValue: 0,\n  returnSampleInfo: !1,\n  demResolution: \"auto\",\n  minDemResolution: 0\n};\nasync function q(e, i, n) {\n  let o;\n  const l = e.layer.tileInfo.spatialReference;\n  if (i instanceof w ? o = await i.project(l, n) : (await c([{\n    source: i.spatialReference,\n    dest: l\n  }], {\n    signal: n\n  }), o = u(i, l)), !o) throw new t(\"elevation-query:spatial-reference-mismatch\", `Cannot query elevation in '${i.spatialReference.wkid}' on an elevation service in '${l.wkid}'`);\n  e.geometry = w.fromGeometry(o);\n}\nfunction I(e) {\n  if (null == e.layer.fullExtent) return;\n  const t = new d(null);\n  t.sample = () => e.options.noDataValue, e.outsideExtentTile = t;\n  const i = e.layer.fullExtent;\n  e.geometry.coordinates.forEach(e => {\n    const n = e.x,\n      o = e.y;\n    (n < i.xmin || n > i.xmax || o < i.ymin || o > i.ymax) && (e.elevationTile = t);\n  });\n}\nfunction A(e, t) {\n  const {\n      tileInfo: i,\n      tilemapCache: n\n    } = e.layer,\n    o = t / l(i.spatialReference),\n    s = D(i, n);\n  let a = s[0],\n    r = 0;\n  for (let l = 1; l < s.length; l++) {\n    const e = s[l];\n    Math.abs(e.resolution - o) < Math.abs(a.resolution - o) && (a = e, r = l);\n  }\n  return r;\n}\nfunction C(e, t) {\n  const i = A(e, t);\n  e.selectTilesAtLOD(i);\n}\nfunction M(e) {\n  const {\n      tileInfo: t,\n      tilemapCache: i\n    } = e.layer,\n    n = E(t, i, e.options.minDemResolution);\n  e.selectTilesAtLOD(n, e.options.maximumAutoTileRequests);\n}\nfunction D(e, t) {\n  const i = e.lods;\n  if (L(t)) {\n    const {\n      effectiveMinLOD: e,\n      effectiveMaxLOD: n\n    } = t;\n    return i.filter(t => t.level >= e && t.level <= n);\n  }\n  return i;\n}\nasync function F(e, t) {\n  const i = e.getTilesToFetch(),\n    o = {},\n    l = e.options.cache,\n    s = e.options.noDataValue,\n    a = i.map(async i => {\n      if (null == i.id) return;\n      const n = `${e.layer.uid}:${i.id}:${s}`,\n        a = null != l ? l.get(n) : null,\n        r = null != a ? a : await e.layer.fetchTile(i.level, i.row, i.col, {\n          noDataValue: s,\n          signal: t\n        });\n      null != l && l.put(n, r), o[i.id] = new d(i, r);\n    });\n  await n(Promise.allSettled(a), t), e.populateElevationTiles(o);\n}\nfunction S(e) {\n  const t = e.layer.tileInfo;\n  let i = 0;\n  const n = {},\n    o = e => {\n      null != e.id && (e.id in n ? n[e.id]++ : (n[e.id] = 1, i++));\n    },\n    l = e => {\n      if (null == e.id) return;\n      const t = n[e.id];\n      1 === t ? (delete n[e.id], i--) : n[e.id] = t - 1;\n    };\n  e.forEachTileToFetch(o, l);\n  let s = !0;\n  for (; s && (s = !1, e.forEachTileToFetch(n => {\n    i <= e.options.maximumAutoTileRequests || (l(n), t.upsampleTile(n) && (s = !0), o(n));\n  }, l), s););\n}\nfunction j(e) {\n  e.geometry.coordinates.forEach(t => {\n    const i = t.elevationTile;\n    let n = e.options.noDataValue;\n    if (i) {\n      const e = i.sample(t.x, t.y);\n      null != e ? n = e : t.elevationTile = null;\n    }\n    t.z = n;\n  });\n}\nfunction z(e, t) {\n  const i = {},\n    n = [];\n  for (const l of e) {\n    const e = l.id;\n    e && !i[e] ? (i[e] = l, n.push(l)) : t && t(l);\n  }\n  const o = n.sort((e, t) => e.level - t.level);\n  return o.filter((e, i) => {\n    for (let n = 0; n < i; n++) {\n      const i = o[n].extent;\n      if (i && e.extent && p(i, e.extent)) return t && t(e), !1;\n    }\n    return !0;\n  });\n}\nasync function b(e, t) {\n  const n = await e.geometry.project(e.outSpatialReference, t);\n  i(n);\n  const o = {\n    geometry: n.export(),\n    noDataValue: e.options.noDataValue\n  };\n  return e.options.returnSampleInfo && (o.sampleInfo = k(e)), e.geometry.coordinates.forEach(e => {\n    e.tile = null, e.elevationTile = null;\n  }), o;\n}\nfunction k(e) {\n  const t = e.layer.tileInfo,\n    i = l(t.spatialReference);\n  return e.geometry.coordinates.map(n => {\n    let o = -1;\n    if (n.elevationTile && n.elevationTile !== e.outsideExtentTile) {\n      o = t.lodAt(n.elevationTile.tile.level).resolution * i;\n    }\n    return {\n      demResolution: o\n    };\n  });\n}\nfunction L(e) {\n  return null != e?.tileInfo;\n}\nexport { T as ElevationQuery, w as GeometryDescriptor, E as getFinestLodIndex };","map":{"version":3,"names":["result","e","t","assertIsSome","i","whenOrAbort","n","throwIfAbortError","o","getMetersPerUnitForSR","l","s","a","r","initializeProjection","c","project","u","fromExtent","h","create","f","contains","p","MultiTileElevationSampler","m","ElevationTile","d","TileKey","y","T","queryAll","ignoreInvisibleLayers","filter","visible","slice","length","w","fromGeometry","returnSampleInfo","R","query","_queryAllContinue","geometry","export","sampleInfo","type","x","spatialReference","signal","load","q","_selectTiles","F","j","b","createSampler","_createSampler","createSamplerAll","_createSamplerAllContinue","tileInfo","equals","source","dest","_","elevationTiles","layer","options","noDataValue","pop","samplers","tile","hasNoDataValues","map","extent","concat","coordinates","demResolution","push","clone","Error","forEach","z","I","C","_selectTilesFinestContiguous","_selectTilesAuto","tilemapCache","E","minDemResolution","_selectTilesFinestContiguousAt","selectTilesAtLOD","getTilesToFetch","L","Promise","all","fetchAvailability","level","row","col","allElevationTilesFetched","clearElevationTiles","M","S","_selectTilesAutoPrefetchUpsample","fetchAvailabilityUpsample","ok","id","error","remapTiles","forEachTileToFetch","upsampleTile","_exporter","points","hasZ","hasM","v","paths","constructor","arguments","undefined","elevationTile","g","outSpatialReference","D","tileAt","some","outsideExtentTile","populateElevationTiles","_candidateTiles","_fetchedCandidates","Set","intersection","fullExtent","maskExtents","_maximumLodForRequests","Math","min","_selectCandidateTilesCoveringExtentAt","resolution","size","ceil","width","height","clear","add","has","xmin","ymin","xmax","ymax","updateTileInfo","_tileIsMasked","findIndex","maximumAutoTileRequests","wkid","sample","A","abs","lods","effectiveMinLOD","effectiveMaxLOD","cache","uid","get","fetchTile","put","allSettled","sort","k","lodAt","ElevationQuery","GeometryDescriptor","getFinestLodIndex"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/layers/support/ElevationQuery.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{result as e}from\"../../core/asyncUtils.js\";import t from\"../../core/Error.js\";import{assertIsSome as i}from\"../../core/maybe.js\";import{whenOrAbort as n,throwIfAbortError as o}from\"../../core/promiseUtils.js\";import{getMetersPerUnitForSR as l}from\"../../core/unitUtils.js\";import s from\"../../geometry/Multipoint.js\";import a from\"../../geometry/Point.js\";import r from\"../../geometry/Polyline.js\";import{initializeProjection as c,project as u}from\"../../geometry/projection.js\";import{fromExtent as h,create as f,contains as p}from\"../../geometry/support/aaBoundingRect.js\";import{MultiTileElevationSampler as m}from\"./ElevationSampler.js\";import{ElevationTile as d}from\"./ElevationTile.js\";import{TileKey as y}from\"./TileKey.js\";class T{async queryAll(e,i,n){if(!(e=n?.ignoreInvisibleLayers?e.filter((e=>e.visible)):e.slice()).length)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require at least one elevation layer to fetch tiles from\");const o=w.fromGeometry(i);let l=!1;n?.returnSampleInfo||(l=!0);const s={...R,...n,returnSampleInfo:!0},a=await this.query(e[e.length-1],o,s),r=await this._queryAllContinue(e,a,s);return r.geometry=r.geometry.export(),l&&delete r.sampleInfo,r}async query(e,i,n){if(!e)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require an elevation layer to fetch tiles from\");if(!i||!(i instanceof w)&&\"point\"!==i.type&&\"multipoint\"!==i.type&&\"polyline\"!==i.type)throw new t(\"elevation-query:invalid-geometry\",\"Only point, polyline and multipoint geometries can be used to query elevation\");const o={...R,...n},l=new x(e,i.spatialReference,o),s=o.signal;return await e.load({signal:s}),await q(l,i,s),await this._selectTiles(l,s),await F(l,s),j(l),b(l,s)}async createSampler(e,i,n){if(!e)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require an elevation layer to fetch tiles from\");if(!i||\"extent\"!==i.type)throw new t(\"elevation-query:invalid-extent\",\"Invalid or undefined extent\");const o={...R,...n};return this._createSampler(e,i,o)}async createSamplerAll(e,i,n){if(!(e=n?.ignoreInvisibleLayers?e.filter((e=>e.visible)):e.slice()).length)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require at least one elevation layer to fetch tiles from\");if(!i||\"extent\"!==i.type)throw new t(\"elevation-query:invalid-extent\",\"Invalid or undefined extent\");const o={...R,...n,returnSampleInfo:!0},l=await this._createSampler(e[e.length-1],i,o);return this._createSamplerAllContinue(e,i,l,o)}async _createSampler(e,t,i,n){const o=i.signal;await e.load({signal:o});const l=t.spatialReference,s=e.tileInfo.spatialReference;l.equals(s)||(await c([{source:l,dest:s}],{signal:o}),t=u(t,s));const a=new _(e,t,i,n);return await this._selectTiles(a,o),await F(a,o),new m(a.elevationTiles,a.layer.tileInfo,a.options.noDataValue)}async _createSamplerAllContinue(e,t,i,n){if(e.pop(),!e.length)return i;const o=i.samplers.filter((e=>!e.tile.hasNoDataValues)).map((e=>h(e.extent))),l=await this._createSampler(e[e.length-1],t,n,o);if(0===l.samplers.length)return i;const s=i.samplers.concat(l.samplers),a=new m(s,n.noDataValue);return this._createSamplerAllContinue(e,t,a,n)}async _queryAllContinue(e,t,n){const o=e.pop(),l=t.geometry.coordinates,s=t.sampleInfo;i(s);const a=[],r=[];for(let i=0;i<l.length;i++){const t=s[i];t.demResolution>=0?t.source||(t.source=o):e.length&&(a.push(l[i]),r.push(i))}if(!e.length||0===a.length)return t;const c=t.geometry.clone(a),u=await this.query(e[e.length-1],c,n),h=u.sampleInfo;if(!h)throw new Error(\"no sampleInfo\");return r.forEach(((e,t)=>{l[e].z=u.geometry.coordinates[t].z,s[e].demResolution=h[t].demResolution})),this._queryAllContinue(e,t,n)}async _selectTiles(e,i){\"geometry\"===e.type&&I(e);const n=e.options.demResolution;if(\"number\"==typeof n)C(e,n);else if(\"finest-contiguous\"===n)await this._selectTilesFinestContiguous(e,i);else{if(\"auto\"!==n)throw new t(\"elevation-query:invalid-dem-resolution\",`Invalid dem resolution value '${n}', expected a number, \"finest-contiguous\" or \"auto\"`);await this._selectTilesAuto(e,i)}}async _selectTilesFinestContiguous(e,t){const{tileInfo:i,tilemapCache:n}=e.layer,o=E(i,n,e.options.minDemResolution);await this._selectTilesFinestContiguousAt(e,o,t)}async _selectTilesFinestContiguousAt(e,i,l){const s=e.layer;if(e.selectTilesAtLOD(i),i<0)return;const a=s.tilemapCache,r=e.getTilesToFetch();try{if(a&&!L(a))await n(Promise.all(r.map((e=>a.fetchAvailability(e.level,e.row,e.col,{signal:l})))),l);else if(await F(e,l),!e.allElevationTilesFetched())throw e.clearElevationTiles(),new t(\"elevation-query:has-unavailable-tiles\")}catch(c){o(c),await this._selectTilesFinestContiguousAt(e,i-1,l)}}async _selectTilesAuto(t,i){M(t),S(t);const l=t.layer.tilemapCache;if(!l||L(l))return this._selectTilesAutoPrefetchUpsample(t,i);const s=t.getTilesToFetch(),a={},r=s.map((async t=>{const n=new y(null,0,0,0,f()),s=await e(l.fetchAvailabilityUpsample(t.level,t.row,t.col,n,{signal:i}));!1!==s.ok?null!=t.id&&(a[t.id]=n):o(s.error)}));await n(Promise.all(r),i),t.remapTiles(a)}async _selectTilesAutoPrefetchUpsample(e,t){const i=e.layer.tileInfo;await F(e,t);let n=!1;e.forEachTileToFetch(((e,t)=>{i.upsampleTile(e)?n=!0:t()})),n&&await this._selectTilesAutoPrefetchUpsample(e,t)}}class w{export(){return this._exporter(this.coordinates,this.spatialReference)}clone(e){const t=new w;return t.geometry=this.geometry,t.spatialReference=this.spatialReference,t.coordinates=e||this.coordinates.map((e=>e.clone())),t._exporter=this._exporter,t}async project(e,t){if(this.spatialReference.equals(e))return this.clone();await c([{source:this.spatialReference,dest:e}],{signal:t});const i=new s({spatialReference:this.spatialReference,points:this.coordinates.map((e=>[e.x,e.y]))}),n=u(i,e);if(!n)return null;const o=this.coordinates.map(((e,t)=>{const i=e.clone(),o=n.points[t];return i.x=o[0],i.y=o[1],i})),l=this.clone(o);return l.spatialReference=e,l}static fromGeometry(e){const t=new w;if(t.geometry=e,t.spatialReference=e.spatialReference,e instanceof w)t.coordinates=e.coordinates.map((e=>e.clone())),t._exporter=(t,i)=>{const n=e.clone(t);return n.spatialReference=i,n};else switch(e.type){case\"point\":{const i=e,{hasZ:n,hasM:o}=i;t.coordinates=n&&o?[new v(i.x,i.y,i.z,i.m)]:n?[new v(i.x,i.y,i.z)]:o?[new v(i.x,i.y,null,i.m)]:[new v(i.x,i.y)],t._exporter=(t,i)=>e.hasM?new a(t[0].x,t[0].y,t[0].z,t[0].m,i):new a(t[0].x,t[0].y,t[0].z,i);break}case\"multipoint\":{const i=e,{hasZ:n,hasM:o}=i;t.coordinates=n&&o?i.points.map((e=>new v(e[0],e[1],e[2],e[3]))):n?i.points.map((e=>new v(e[0],e[1],e[2]))):o?i.points.map((e=>new v(e[0],e[1],null,e[2]))):i.points.map((e=>new v(e[0],e[1]))),t._exporter=(t,i)=>e.hasM?new s({points:t.map((e=>[e.x,e.y,e.z,e.m])),hasZ:!0,hasM:!0,spatialReference:i}):new s(t.map((e=>[e.x,e.y,e.z])),i);break}case\"polyline\":{const i=e,n=[],o=[],{hasZ:l,hasM:s}=e;let a=0;for(const e of i.paths)if(o.push([a,a+e.length]),a+=e.length,l&&s)for(const t of e)n.push(new v(t[0],t[1],t[2],t[3]));else if(l)for(const t of e)n.push(new v(t[0],t[1],t[2]));else if(s)for(const t of e)n.push(new v(t[0],t[1],null,t[2]));else for(const t of e)n.push(new v(t[0],t[1]));t.coordinates=n,t._exporter=(t,i)=>{const n=e.hasM?t.map((e=>[e.x,e.y,e.z??0,e.m??0])):t.map((e=>[e.x,e.y,e.z??0])),l=o.map((e=>n.slice(e[0],e[1])));return new r({paths:l,hasM:e.hasM,hasZ:!0,spatialReference:i})};break}}return t}}class v{constructor(e,t,i=null,n=null,o=null,l=null){this.x=e,this.y=t,this.z=i,this.m=n,this.tile=o,this.elevationTile=l}clone(){return new v(this.x,this.y,this.z,this.m)}}class g{constructor(e,t){this.layer=e,this.options=t}}class x extends g{constructor(e,t,i){super(e,i),this.outSpatialReference=t,this.type=\"geometry\"}selectTilesAtLOD(e){if(e<0)this.geometry.coordinates.forEach((e=>e.tile=null));else{const{tileInfo:t,tilemapCache:i}=this.layer,n=D(t,i)[e].level;this.geometry.coordinates.forEach((e=>e.tile=t.tileAt(n,e.x,e.y)))}}allElevationTilesFetched(){return!this.geometry.coordinates.some((e=>!e.elevationTile))}clearElevationTiles(){for(const e of this.geometry.coordinates)e.elevationTile!==this.outsideExtentTile&&(e.elevationTile=null)}populateElevationTiles(e){for(const t of this.geometry.coordinates)!t.elevationTile&&t.tile?.id&&(t.elevationTile=e[t.tile.id])}remapTiles(e){for(const t of this.geometry.coordinates){const i=t.tile?.id;t.tile=i?e[i]:null}}getTilesToFetch(){const e={},t=[];for(const i of this.geometry.coordinates){const n=i.tile;if(!n)continue;const o=i.tile?.id;i.elevationTile||!o||e[o]||(e[o]=n,t.push(n))}return t}forEachTileToFetch(e){for(const t of this.geometry.coordinates)t.tile&&!t.elevationTile&&e(t.tile,(()=>{t.tile=null}))}}class _ extends g{constructor(e,t,i,n){super(e,i),this.type=\"extent\",this.elevationTiles=[],this._candidateTiles=[],this._fetchedCandidates=new Set,this.extent=t.clone().intersection(e.fullExtent),this.maskExtents=n}selectTilesAtLOD(e,t){const i=this._maximumLodForRequests(t),n=Math.min(i,e);n<0?this._candidateTiles.length=0:this._selectCandidateTilesCoveringExtentAt(n)}_maximumLodForRequests(e){const{tileInfo:t,tilemapCache:i}=this.layer,n=D(t,i);if(!e)return n.length-1;const o=this.extent;if(null==o)return-1;for(let l=n.length-1;l>=0;l--){const i=n[l],s=i.resolution*t.size[0],a=i.resolution*t.size[1];if(Math.ceil(o.width/s)*Math.ceil(o.height/a)<=e)return l}return-1}allElevationTilesFetched(){return this._candidateTiles.length===this.elevationTiles.length}clearElevationTiles(){this.elevationTiles.length=0,this._fetchedCandidates.clear()}populateElevationTiles(e){for(const t of this._candidateTiles){const i=t.id&&e[t.id];i&&(this._fetchedCandidates.add(t),this.elevationTiles.push(i))}}remapTiles(e){this._candidateTiles=z(this._candidateTiles.map((t=>e[t.id])))}getTilesToFetch(){return this._candidateTiles}forEachTileToFetch(e,t){const i=this._candidateTiles;this._candidateTiles=[],i.forEach((i=>{if(this._fetchedCandidates.has(i))return void(t&&t(i));let n=!1;e(i,(()=>n=!0)),n?t&&t(i):this._candidateTiles.push(i)})),this._candidateTiles=z(this._candidateTiles,t)}_selectCandidateTilesCoveringExtentAt(e){this._candidateTiles.length=0;const t=this.extent;if(null==t)return;const{tileInfo:i,tilemapCache:n}=this.layer,o=D(i,n)[e],l=i.tileAt(o.level,t.xmin,t.ymin),s=l.extent;if(null==s)return;const a=o.resolution*i.size[0],r=o.resolution*i.size[1],c=Math.ceil((t.xmax-s[0])/a),u=Math.ceil((t.ymax-s[1])/r);for(let h=0;h<u;h++)for(let e=0;e<c;e++){const t=new y(null,l.level,l.row-h,l.col+e);i.updateTileInfo(t),this._tileIsMasked(t)||this._candidateTiles.push(t)}}_tileIsMasked(e){return!!this.maskExtents&&this.maskExtents.some((t=>e.extent&&p(t,e.extent)))}}function E(e,t,i=0){const n=D(e,t);let o=n.length-1;if(i>0){const t=i/l(e.spatialReference),s=n.findIndex((e=>e.resolution<t));0===s?o=0:s>0&&(o=s-1)}return o}const R={maximumAutoTileRequests:20,noDataValue:0,returnSampleInfo:!1,demResolution:\"auto\",minDemResolution:0};async function q(e,i,n){let o;const l=e.layer.tileInfo.spatialReference;if(i instanceof w?o=await i.project(l,n):(await c([{source:i.spatialReference,dest:l}],{signal:n}),o=u(i,l)),!o)throw new t(\"elevation-query:spatial-reference-mismatch\",`Cannot query elevation in '${i.spatialReference.wkid}' on an elevation service in '${l.wkid}'`);e.geometry=w.fromGeometry(o)}function I(e){if(null==e.layer.fullExtent)return;const t=new d(null);t.sample=()=>e.options.noDataValue,e.outsideExtentTile=t;const i=e.layer.fullExtent;e.geometry.coordinates.forEach((e=>{const n=e.x,o=e.y;(n<i.xmin||n>i.xmax||o<i.ymin||o>i.ymax)&&(e.elevationTile=t)}))}function A(e,t){const{tileInfo:i,tilemapCache:n}=e.layer,o=t/l(i.spatialReference),s=D(i,n);let a=s[0],r=0;for(let l=1;l<s.length;l++){const e=s[l];Math.abs(e.resolution-o)<Math.abs(a.resolution-o)&&(a=e,r=l)}return r}function C(e,t){const i=A(e,t);e.selectTilesAtLOD(i)}function M(e){const{tileInfo:t,tilemapCache:i}=e.layer,n=E(t,i,e.options.minDemResolution);e.selectTilesAtLOD(n,e.options.maximumAutoTileRequests)}function D(e,t){const i=e.lods;if(L(t)){const{effectiveMinLOD:e,effectiveMaxLOD:n}=t;return i.filter((t=>t.level>=e&&t.level<=n))}return i}async function F(e,t){const i=e.getTilesToFetch(),o={},l=e.options.cache,s=e.options.noDataValue,a=i.map((async i=>{if(null==i.id)return;const n=`${e.layer.uid}:${i.id}:${s}`,a=null!=l?l.get(n):null,r=null!=a?a:await e.layer.fetchTile(i.level,i.row,i.col,{noDataValue:s,signal:t});null!=l&&l.put(n,r),o[i.id]=new d(i,r)}));await n(Promise.allSettled(a),t),e.populateElevationTiles(o)}function S(e){const t=e.layer.tileInfo;let i=0;const n={},o=e=>{null!=e.id&&(e.id in n?n[e.id]++:(n[e.id]=1,i++))},l=e=>{if(null==e.id)return;const t=n[e.id];1===t?(delete n[e.id],i--):n[e.id]=t-1};e.forEachTileToFetch(o,l);let s=!0;for(;s&&(s=!1,e.forEachTileToFetch((n=>{i<=e.options.maximumAutoTileRequests||(l(n),t.upsampleTile(n)&&(s=!0),o(n))}),l),s););}function j(e){e.geometry.coordinates.forEach((t=>{const i=t.elevationTile;let n=e.options.noDataValue;if(i){const e=i.sample(t.x,t.y);null!=e?n=e:t.elevationTile=null}t.z=n}))}function z(e,t){const i={},n=[];for(const l of e){const e=l.id;e&&!i[e]?(i[e]=l,n.push(l)):t&&t(l)}const o=n.sort(((e,t)=>e.level-t.level));return o.filter(((e,i)=>{for(let n=0;n<i;n++){const i=o[n].extent;if(i&&e.extent&&p(i,e.extent))return t&&t(e),!1}return!0}))}async function b(e,t){const n=await e.geometry.project(e.outSpatialReference,t);i(n);const o={geometry:n.export(),noDataValue:e.options.noDataValue};return e.options.returnSampleInfo&&(o.sampleInfo=k(e)),e.geometry.coordinates.forEach((e=>{e.tile=null,e.elevationTile=null})),o}function k(e){const t=e.layer.tileInfo,i=l(t.spatialReference);return e.geometry.coordinates.map((n=>{let o=-1;if(n.elevationTile&&n.elevationTile!==e.outsideExtentTile){o=t.lodAt(n.elevationTile.tile.level).resolution*i}return{demResolution:o}}))}function L(e){return null!=e?.tileInfo}export{T as ElevationQuery,w as GeometryDescriptor,E as getFinestLodIndex};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}