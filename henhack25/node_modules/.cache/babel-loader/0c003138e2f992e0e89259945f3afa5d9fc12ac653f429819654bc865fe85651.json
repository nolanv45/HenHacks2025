{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport t from \"../../../../core/Error.js\";\nimport has from \"../../../../core/has.js\";\nimport e from \"../../../../core/Logger.js\";\nimport { AttributeDataType as i, filterFlagsUnit as s, animationUnit as r, gpgpuUnit as a, localTimeOriginUnit as n, visualVariableUnit as u, dataDrivenUnit0 as h, dataDrivenUnit1 as o, dataDrivenUnit2 as l } from \"./definitions.js\";\nimport { getDisplayIdTexel as d } from \"./DisplayId.js\";\nimport { getPixelArrayCtor as g, getPixelBytes as _ } from \"./Utils.js\";\nimport { TextureWrapMode as p, TextureSamplingMode as c } from \"../../../webgl/enums.js\";\nimport { FramebufferObject as x } from \"../../../webgl/FramebufferObject.js\";\nimport { Texture as f } from \"../../../webgl/Texture.js\";\nimport { TextureDescriptor as b } from \"../../../webgl/TextureDescriptor.js\";\nconst T = () => e.getLogger(\"esri.views.2d.engine.webgl.AttributeStoreView\");\nclass m {\n  constructor(t, e, i) {\n    this._texture = null, this._lastTexture = null, this._fbos = {}, this.texelSize = 4;\n    const {\n        buffer: s,\n        pixelType: r,\n        textureOnly: a\n      } = t,\n      n = g(r);\n    this.blockIndex = i, this.pixelType = r, this.size = e, this.textureOnly = a, a || (this.data = new n(s)), this._resetRange();\n  }\n  destroy() {\n    this._texture?.dispose();\n    for (const t in this._fbos) {\n      const e = this._fbos[t];\n      e && (\"0\" === t && e.detachColorTexture(), e.dispose()), this._fbos[t] = null;\n    }\n    this._texture = null;\n  }\n  get _textureDesc() {\n    const t = new b();\n    return t.wrapMode = p.CLAMP_TO_EDGE, t.samplingMode = c.NEAREST, t.dataType = this.pixelType, t.width = this.size, t.height = this.size, t;\n  }\n  setData(t, e, i) {\n    const s = d(t),\n      r = this.data,\n      a = s * this.texelSize + e;\n    !r || a >= r.length || (r[a] = i, this.dirtyStart = Math.min(this.dirtyStart, s), this.dirtyEnd = Math.max(this.dirtyEnd, s));\n  }\n  getData(t, e) {\n    if (null == this.data) return null;\n    const i = d(t) * this.texelSize + e;\n    return !this.data || i >= this.data.length ? null : this.data[i];\n  }\n  getTexture(t) {\n    return this._texture ?? this._initTexture(t);\n  }\n  getFBO(t) {\n    let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    if (!this._fbos[e]) {\n      const i = 0 === e ? this.getTexture(t) : this._textureDesc;\n      this._fbos[e] = new x(t, i);\n    }\n    return this._fbos[e];\n  }\n  get hasDirty() {\n    const t = this.dirtyStart;\n    return this.dirtyEnd >= t;\n  }\n  updateTexture(e, i) {\n    try {\n      const s = this.dirtyStart,\n        r = this.dirtyEnd;\n      if (!this.hasDirty) return;\n      has(\"esri-2d-update-debug\") && console.debug(`Version[${i}] AttributeStoreView.updateTexture`, {\n        start: s,\n        end: r,\n        firstBytes: new Uint8Array(this.data.buffer.slice(0, 16)),\n        block: this\n      }), this._resetRange();\n      const a = this.data.buffer,\n        n = this.getTexture(e),\n        u = 4,\n        h = (s - s % this.size) / this.size,\n        o = (r - r % this.size) / this.size,\n        l = h,\n        d = this.size,\n        _ = o,\n        p = h * this.size * u,\n        c = (d + _ * this.size) * u - p,\n        x = g(this.pixelType),\n        f = new x(a, p * x.BYTES_PER_ELEMENT, c),\n        b = this.size,\n        m = _ - l + 1;\n      if (m > this.size) return void T().error(new t(\"mapview-webgl\", \"Out-of-bounds index when updating AttributeData\"));\n      n.updateData(0, 0, l, b, m, f);\n    } catch (s) {}\n  }\n  update(t) {\n    const {\n      data: e,\n      start: i,\n      end: s\n    } = t;\n    if (null != e && null != this.data) {\n      const s = this.data,\n        r = i * this.texelSize;\n      for (let i = 0; i < e.length; i++) {\n        const a = 1 << i % this.texelSize;\n        t.layout & a && (s[r + i] = e[i]);\n      }\n    }\n    this.dirtyStart = Math.min(this.dirtyStart, i), this.dirtyEnd = Math.max(this.dirtyEnd, s);\n  }\n  resize(t, e) {\n    const i = this.size;\n    if (this.size = e, this.textureOnly) return void (i !== this.size && (this._lastTexture = this._texture, this._texture = null));\n    const s = g(this.pixelType);\n    this.destroy(), this.data = new s(t.buffer);\n  }\n  _resetRange() {\n    this.dirtyStart = 2147483647, this.dirtyEnd = 0;\n  }\n  _initTexture(t) {\n    const e = new f(t, this._textureDesc, this.data ?? void 0);\n    if (null != this._lastTexture && this._fbos[0]) {\n      const i = this._lastTexture.descriptor.width,\n        s = this._lastTexture.descriptor.height,\n        r = this._lastTexture.descriptor.dataType,\n        a = this._lastTexture.descriptor.pixelFormat,\n        n = this.getFBO(t),\n        u = _(r),\n        h = new (g(r))(new ArrayBuffer(i * s * u * this.texelSize)),\n        o = t.getBoundFramebufferObject(),\n        {\n          x: l,\n          y: d,\n          width: p,\n          height: c\n        } = t.getViewport();\n      t.bindFramebuffer(n), n.readPixels(0, 0, i, s, a, r, h), e.updateData(0, 0, 0, 2 * i, s / 2, h), t.setViewport(l, d, p, c), t.bindFramebuffer(o);\n    }\n    return this.destroy(), this._texture = e, this._texture;\n  }\n}\nclass y {\n  constructor() {\n    this.size = 0, this._pendingAttributeUpdates = [], this._version = 0, this._epoch = 0, this._locked = !1;\n  }\n  get locked() {\n    return this._locked;\n  }\n  _initialize(t) {\n    if (!t) throw new Error(\"InternalError: initArgs must be defined\");\n    const e = t.blockDescriptors;\n    if (this.size = t.blockSize, has(\"esri-2d-update-debug\") && console.debug(\"AttributeStoreView.initialize\", {\n      message: t\n    }), null == this._data) this._data = e.map((t, e) => null != t ? new m(t, this.size, e) : null);else for (let i = 0; i < this._data.length; i++) {\n      const t = this._data[i],\n        s = e[i];\n      null != s && (null == t ? this._data[i] = new m(s, this.size, i) : t.resize(s, this.size));\n    }\n  }\n  destroy() {\n    for (const t of this._data ?? []) t?.destroy();\n    this._defaultTexture?.dispose(), this._defaultTexture = null, this._pendingAttributeUpdates = [];\n  }\n  isEmpty() {\n    return null == this._data;\n  }\n  getBlock(t) {\n    if (null == this._data) return null;\n    return this._data[t];\n  }\n  setLabelMinZoom(t, e) {\n    this.setData(t, i.FilterFlags, 1, e);\n  }\n  setLocalTimeOrigin(t, e) {\n    this.setData(t, i.LocalTimeOrigin, 0, e);\n  }\n  getLabelMinZoom(t) {\n    return this.getData(t, i.FilterFlags, 1, 255);\n  }\n  getFilterFlags(t) {\n    return this.getData(t, i.FilterFlags, 0, 0);\n  }\n  getVisualVariableData(t, e) {\n    return this.getData(t, i.VV, e, 0);\n  }\n  getData(t, e, i, s) {\n    if (!this._data) return 0;\n    const r = this._data[e];\n    if (null == r) return 0;\n    const a = r.getData(t, i);\n    return null != a ? a : s;\n  }\n  setData(t, e, i, s) {\n    this._data[e].setData(t, i, s);\n  }\n  lockTextureUploads() {\n    this._locked = !0;\n  }\n  unlockTextureUploads() {\n    this._locked = !1, this.update();\n  }\n  requestUpdate(t) {\n    this._version = t.version, this._pendingAttributeUpdates.push(t), has(\"esri-2d-update-debug\") && console.debug(`Version[${this._version}] AttributeStoreView.requestUpdate`, {\n      message: t\n    });\n  }\n  get currentEpoch() {\n    return this._epoch;\n  }\n  update() {\n    if (this._locked) return;\n    const t = this._pendingAttributeUpdates;\n    this._pendingAttributeUpdates = [];\n    for (const e of t) {\n      const {\n        blockData: t,\n        initArgs: i,\n        sendUpdateEpoch: s,\n        version: r\n      } = e;\n      has(\"esri-2d-update-debug\") && console.debug(`Version[${this._version}] Epoch[${s}] AttributeStoreView.applyUpdate`), this._version = r, this._epoch = s, null != i && this._initialize(i);\n      const a = this._data;\n      for (let e = 0; e < t.length; e++) {\n        const i = t[e],\n          s = a[e];\n        null != s && null != i && (has(\"esri-2d-update-debug\") && console.debug(`Version[${this._version}] CpuBlock[${e}] AttributeStoreView.update`, {\n          block: i\n        }), s.update(i));\n      }\n    }\n  }\n  getUniforms(t) {\n    return {\n      filterFlags: {\n        texture: this._getTexture(t, i.FilterFlags),\n        unit: s\n      },\n      animation: {\n        texture: this._getTexture(t, i.Animation),\n        unit: r\n      },\n      gpgpu: {\n        texture: this._getTexture(t, i.GPGPU),\n        unit: a\n      },\n      localTimeOrigin: {\n        texture: this._getTexture(t, i.LocalTimeOrigin),\n        unit: n\n      },\n      visualVariableData: {\n        texture: this._getTexture(t, i.VV),\n        unit: u\n      },\n      dataDriven0: {\n        texture: this._getTexture(t, i.DD0),\n        unit: h\n      },\n      dataDriven1: {\n        texture: this._getTexture(t, i.DD1),\n        unit: o\n      },\n      dataDriven2: {\n        texture: this._getTexture(t, i.DD2),\n        unit: l\n      },\n      size: this.size\n    };\n  }\n  _getTexture(t, e) {\n    const i = this._data?.[e];\n    return i ? (i.updateTexture(t, this._version), i.getTexture(t)) : this._getDefaultTexture(t);\n  }\n  _getDefaultTexture(t) {\n    if (null == this._defaultTexture) {\n      const e = new b();\n      e.wrapMode = p.CLAMP_TO_EDGE, e.samplingMode = c.NEAREST, e.width = 1, e.height = 1, this._defaultTexture = new f(t, e, new Uint8Array(4));\n    }\n    return this._defaultTexture;\n  }\n}\nexport { y as AttributeStoreView };","map":{"version":3,"names":["t","has","e","AttributeDataType","i","filterFlagsUnit","s","animationUnit","r","gpgpuUnit","a","localTimeOriginUnit","n","visualVariableUnit","u","dataDrivenUnit0","h","dataDrivenUnit1","o","dataDrivenUnit2","l","getDisplayIdTexel","d","getPixelArrayCtor","g","getPixelBytes","_","TextureWrapMode","p","TextureSamplingMode","c","FramebufferObject","x","Texture","f","TextureDescriptor","b","T","getLogger","m","constructor","_texture","_lastTexture","_fbos","texelSize","buffer","pixelType","textureOnly","blockIndex","size","data","_resetRange","destroy","dispose","detachColorTexture","_textureDesc","wrapMode","CLAMP_TO_EDGE","samplingMode","NEAREST","dataType","width","height","setData","length","dirtyStart","Math","min","dirtyEnd","max","getData","getTexture","_initTexture","getFBO","arguments","undefined","hasDirty","updateTexture","console","debug","start","end","firstBytes","Uint8Array","slice","block","BYTES_PER_ELEMENT","error","updateData","update","layout","resize","descriptor","pixelFormat","ArrayBuffer","getBoundFramebufferObject","y","getViewport","bindFramebuffer","readPixels","setViewport","_pendingAttributeUpdates","_version","_epoch","_locked","locked","_initialize","Error","blockDescriptors","blockSize","message","_data","map","_defaultTexture","isEmpty","getBlock","setLabelMinZoom","FilterFlags","setLocalTimeOrigin","LocalTimeOrigin","getLabelMinZoom","getFilterFlags","getVisualVariableData","VV","lockTextureUploads","unlockTextureUploads","requestUpdate","version","push","currentEpoch","blockData","initArgs","sendUpdateEpoch","getUniforms","filterFlags","texture","_getTexture","unit","animation","Animation","gpgpu","GPGPU","localTimeOrigin","visualVariableData","dataDriven0","DD0","dataDriven1","DD1","dataDriven2","DD2","_getDefaultTexture","AttributeStoreView"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/2d/engine/webgl/AttributeStoreView.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport t from\"../../../../core/Error.js\";import has from\"../../../../core/has.js\";import e from\"../../../../core/Logger.js\";import{AttributeDataType as i,filterFlagsUnit as s,animationUnit as r,gpgpuUnit as a,localTimeOriginUnit as n,visualVariableUnit as u,dataDrivenUnit0 as h,dataDrivenUnit1 as o,dataDrivenUnit2 as l}from\"./definitions.js\";import{getDisplayIdTexel as d}from\"./DisplayId.js\";import{getPixelArrayCtor as g,getPixelBytes as _}from\"./Utils.js\";import{TextureWrapMode as p,TextureSamplingMode as c}from\"../../../webgl/enums.js\";import{FramebufferObject as x}from\"../../../webgl/FramebufferObject.js\";import{Texture as f}from\"../../../webgl/Texture.js\";import{TextureDescriptor as b}from\"../../../webgl/TextureDescriptor.js\";const T=()=>e.getLogger(\"esri.views.2d.engine.webgl.AttributeStoreView\");class m{constructor(t,e,i){this._texture=null,this._lastTexture=null,this._fbos={},this.texelSize=4;const{buffer:s,pixelType:r,textureOnly:a}=t,n=g(r);this.blockIndex=i,this.pixelType=r,this.size=e,this.textureOnly=a,a||(this.data=new n(s)),this._resetRange()}destroy(){this._texture?.dispose();for(const t in this._fbos){const e=this._fbos[t];e&&(\"0\"===t&&e.detachColorTexture(),e.dispose()),this._fbos[t]=null}this._texture=null}get _textureDesc(){const t=new b;return t.wrapMode=p.CLAMP_TO_EDGE,t.samplingMode=c.NEAREST,t.dataType=this.pixelType,t.width=this.size,t.height=this.size,t}setData(t,e,i){const s=d(t),r=this.data,a=s*this.texelSize+e;!r||a>=r.length||(r[a]=i,this.dirtyStart=Math.min(this.dirtyStart,s),this.dirtyEnd=Math.max(this.dirtyEnd,s))}getData(t,e){if(null==this.data)return null;const i=d(t)*this.texelSize+e;return!this.data||i>=this.data.length?null:this.data[i]}getTexture(t){return this._texture??this._initTexture(t)}getFBO(t,e=0){if(!this._fbos[e]){const i=0===e?this.getTexture(t):this._textureDesc;this._fbos[e]=new x(t,i)}return this._fbos[e]}get hasDirty(){const t=this.dirtyStart;return this.dirtyEnd>=t}updateTexture(e,i){try{const s=this.dirtyStart,r=this.dirtyEnd;if(!this.hasDirty)return;has(\"esri-2d-update-debug\")&&console.debug(`Version[${i}] AttributeStoreView.updateTexture`,{start:s,end:r,firstBytes:new Uint8Array(this.data.buffer.slice(0,16)),block:this}),this._resetRange();const a=this.data.buffer,n=this.getTexture(e),u=4,h=(s-s%this.size)/this.size,o=(r-r%this.size)/this.size,l=h,d=this.size,_=o,p=h*this.size*u,c=(d+_*this.size)*u-p,x=g(this.pixelType),f=new x(a,p*x.BYTES_PER_ELEMENT,c),b=this.size,m=_-l+1;if(m>this.size)return void T().error(new t(\"mapview-webgl\",\"Out-of-bounds index when updating AttributeData\"));n.updateData(0,0,l,b,m,f)}catch(s){}}update(t){const{data:e,start:i,end:s}=t;if(null!=e&&null!=this.data){const s=this.data,r=i*this.texelSize;for(let i=0;i<e.length;i++){const a=1<<i%this.texelSize;t.layout&a&&(s[r+i]=e[i])}}this.dirtyStart=Math.min(this.dirtyStart,i),this.dirtyEnd=Math.max(this.dirtyEnd,s)}resize(t,e){const i=this.size;if(this.size=e,this.textureOnly)return void(i!==this.size&&(this._lastTexture=this._texture,this._texture=null));const s=g(this.pixelType);this.destroy(),this.data=new s(t.buffer)}_resetRange(){this.dirtyStart=2147483647,this.dirtyEnd=0}_initTexture(t){const e=new f(t,this._textureDesc,this.data??void 0);if(null!=this._lastTexture&&this._fbos[0]){const i=this._lastTexture.descriptor.width,s=this._lastTexture.descriptor.height,r=this._lastTexture.descriptor.dataType,a=this._lastTexture.descriptor.pixelFormat,n=this.getFBO(t),u=_(r),h=new(g(r))(new ArrayBuffer(i*s*u*this.texelSize)),o=t.getBoundFramebufferObject(),{x:l,y:d,width:p,height:c}=t.getViewport();t.bindFramebuffer(n),n.readPixels(0,0,i,s,a,r,h),e.updateData(0,0,0,2*i,s/2,h),t.setViewport(l,d,p,c),t.bindFramebuffer(o)}return this.destroy(),this._texture=e,this._texture}}class y{constructor(){this.size=0,this._pendingAttributeUpdates=[],this._version=0,this._epoch=0,this._locked=!1}get locked(){return this._locked}_initialize(t){if(!t)throw new Error(\"InternalError: initArgs must be defined\");const e=t.blockDescriptors;if(this.size=t.blockSize,has(\"esri-2d-update-debug\")&&console.debug(\"AttributeStoreView.initialize\",{message:t}),null==this._data)this._data=e.map(((t,e)=>null!=t?new m(t,this.size,e):null));else for(let i=0;i<this._data.length;i++){const t=this._data[i],s=e[i];null!=s&&(null==t?this._data[i]=new m(s,this.size,i):t.resize(s,this.size))}}destroy(){for(const t of this._data??[])t?.destroy();this._defaultTexture?.dispose(),this._defaultTexture=null,this._pendingAttributeUpdates=[]}isEmpty(){return null==this._data}getBlock(t){if(null==this._data)return null;return this._data[t]}setLabelMinZoom(t,e){this.setData(t,i.FilterFlags,1,e)}setLocalTimeOrigin(t,e){this.setData(t,i.LocalTimeOrigin,0,e)}getLabelMinZoom(t){return this.getData(t,i.FilterFlags,1,255)}getFilterFlags(t){return this.getData(t,i.FilterFlags,0,0)}getVisualVariableData(t,e){return this.getData(t,i.VV,e,0)}getData(t,e,i,s){if(!this._data)return 0;const r=this._data[e];if(null==r)return 0;const a=r.getData(t,i);return null!=a?a:s}setData(t,e,i,s){this._data[e].setData(t,i,s)}lockTextureUploads(){this._locked=!0}unlockTextureUploads(){this._locked=!1,this.update()}requestUpdate(t){this._version=t.version,this._pendingAttributeUpdates.push(t),has(\"esri-2d-update-debug\")&&console.debug(`Version[${this._version}] AttributeStoreView.requestUpdate`,{message:t})}get currentEpoch(){return this._epoch}update(){if(this._locked)return;const t=this._pendingAttributeUpdates;this._pendingAttributeUpdates=[];for(const e of t){const{blockData:t,initArgs:i,sendUpdateEpoch:s,version:r}=e;has(\"esri-2d-update-debug\")&&console.debug(`Version[${this._version}] Epoch[${s}] AttributeStoreView.applyUpdate`),this._version=r,this._epoch=s,null!=i&&this._initialize(i);const a=this._data;for(let e=0;e<t.length;e++){const i=t[e],s=a[e];null!=s&&null!=i&&(has(\"esri-2d-update-debug\")&&console.debug(`Version[${this._version}] CpuBlock[${e}] AttributeStoreView.update`,{block:i}),s.update(i))}}}getUniforms(t){return{filterFlags:{texture:this._getTexture(t,i.FilterFlags),unit:s},animation:{texture:this._getTexture(t,i.Animation),unit:r},gpgpu:{texture:this._getTexture(t,i.GPGPU),unit:a},localTimeOrigin:{texture:this._getTexture(t,i.LocalTimeOrigin),unit:n},visualVariableData:{texture:this._getTexture(t,i.VV),unit:u},dataDriven0:{texture:this._getTexture(t,i.DD0),unit:h},dataDriven1:{texture:this._getTexture(t,i.DD1),unit:o},dataDriven2:{texture:this._getTexture(t,i.DD2),unit:l},size:this.size}}_getTexture(t,e){const i=this._data?.[e];return i?(i.updateTexture(t,this._version),i.getTexture(t)):this._getDefaultTexture(t)}_getDefaultTexture(t){if(null==this._defaultTexture){const e=new b;e.wrapMode=p.CLAMP_TO_EDGE,e.samplingMode=c.NEAREST,e.width=1,e.height=1,this._defaultTexture=new f(t,e,new Uint8Array(4))}return this._defaultTexture}}export{y as AttributeStoreView};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}