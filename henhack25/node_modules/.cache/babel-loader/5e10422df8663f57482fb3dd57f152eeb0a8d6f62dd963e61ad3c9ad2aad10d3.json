{"ast":null,"code":"import { ComponentInternals, Controller, GenericController, bypassGetter, bypassReadOnly, bypassSetter, controllerSymbol, devOnlySetPersistentControllerData, dynamicGetSet, elementToInstance, getSet, isController, keyTrackResolve, proxyExports, readonly, retrieveComponent, retrieveParentControllers, setAmbientComponent, setParentController, trackKey, trackPropKey, trackPropertyKey, watch } from \"./chunk-PP2BAVRW.js\";\nimport { retrieveComponentMembers } from \"./chunk-XKVBN44N.js\";\n\n// src/ControllerManager.ts\nimport { Deferred, isEsriInternalEnv, safeAsyncCall, safeCall } from \"@arcgis/components-utils\";\nimport { devToolsAwareTimeout } from \"@arcgis/components-utils\";\nvar useControllerManager = (component, forceUpdate) => new ControllerManager(component, forceUpdate);\nvar ControllerManager = class extends GenericController {\n  constructor(component, forceUpdate) {\n    const isLit = \"addController\" in component;\n    if (process.env.NODE_ENV !== \"production\" && isEsriInternalEnv() && !isLit) {\n      Object.defineProperty(component.el, \"__component\", {\n        value: component\n      });\n      ({});\n    }\n    const controllers = /* @__PURE__ */new Set();\n    function addController(controller) {\n      controllers.add(controller);\n      if (!(controllerSymbol in controller) && component.renderRoot && component.el.isConnected) {\n        controller.hostConnected?.();\n      }\n    }\n    function removeController(controller) {\n      void controllers.delete(controller);\n      controller.controllerRemoved?.();\n    }\n    const controllerHost = component;\n    controllerHost.addController = addController;\n    controllerHost.removeController = removeController;\n    if (!isLit) {\n      const update = forceUpdate ?? component.constructor.__forceUpdate;\n      controllerHost.requestUpdate = () => update(component);\n    }\n    if (process.env.NODE_ENV !== \"production\" && isEsriInternalEnv()) {\n      const stencilToLitMapping = {\n        componentDidLoad: \"loaded\",\n        componentDidRender: \"updated\",\n        componentDidUpdate: \"updated\",\n        componentShouldUpdate: \"shouldUpdate\",\n        componentWillLoad: \"load\",\n        componentWillRender: \"willUpdate\",\n        componentWillUpdate: \"willUpdate\"\n      };\n      Object.entries(stencilToLitMapping).forEach(([stencilMethod, litMethod]) => {\n        if (isLit && stencilMethod in component) {\n          throw new Error(`Unexpected ${stencilMethod}() in a Lit component ${component.el.tagName.toLowerCase()}. In Lit, you should use ${litMethod}() instead`);\n        }\n        if (!isLit && litMethod in component) {\n          throw new Error(`Unexpected ${litMethod}() in a Stencil component ${component.el.tagName.toLowerCase()}. In Stencil, you should use ${litMethod}() instead`);\n        }\n      });\n      if (isLit) {\n        let i = 0;\n        let isLitElementClass = false;\n        for (let prototype = component; !isLitElementClass; i++) {\n          if (prototype === null) {\n            throw new Error(\"Expected controllers to be used in a LitElement class\");\n          }\n          if (Object.hasOwn(prototype, \"_load\")) {\n            isLitElementClass = true;\n            break;\n          }\n          prototype = Object.getPrototypeOf(prototype);\n        }\n        if (i < 1) {\n          throw new Error(\"It looks like you are trying to call useControllerManager in a component that uses LitElement imported from 'lit'. useControllerManager should only be used in the LitElement coming from `@arcgis/lumina`\");\n        }\n      }\n    }\n    super(component);\n    /** @internal */\n    this.internals = new ComponentInternals(this.component);\n    this.destroyed = false;\n    this._updatePromise = new Deferred();\n    this._originalLifecycles = {};\n    this.isLit = isLit;\n    this.component.manager = this;\n    retrieveComponentMembers(component, isLit);\n    this._controllers = controllers;\n    this.exports = void 0;\n    this.hasDestroy = autoDestroyDisabledPropName in this.component && typeof this.component.destroy === \"function\";\n    this._bindLifecycleMethods();\n    const internals = this.internals;\n    Object.keys(internals.members).forEach(name => {\n      internals.accessorGetter[name] = defaultGetterSetter;\n      internals.accessorSetter[name] = defaultGetterSetter;\n      internals.getSetProxy(name);\n    });\n    if (isLit) {\n      this.internals.enabledWatchers = this.internals.allWatchers;\n    } else {\n      Object.defineProperty(component, \"updateComplete\", {\n        get: async () => await this._updatePromise.promise\n      });\n    }\n    queueMicrotask(internals.enableReadonly);\n    setAmbientComponent(component);\n    elementToInstance.set(component.el, component);\n    elementToInstance.set(component, component);\n  }\n  _bindLifecycleMethods() {\n    const component = this.component;\n    const isLit = this.isLit;\n    const isStencilDistBuild = component.el === component;\n    this._originalLifecycles = {\n      // These component's callbacks will be called by Lit, so we don't have to\n      _connectedCallback: isLit || isStencilDistBuild ? void 0 : component.connectedCallback,\n      _disconnectedCallback: isLit || isStencilDistBuild ? void 0 : component.disconnectedCallback,\n      _load: isLit ? component.load : component.componentWillLoad,\n      _loaded: isLit ? component.loaded : component.componentDidLoad,\n      _willUpdate: isLit ? void 0 : component.componentWillUpdate,\n      _updated: isLit ? void 0 : component.componentDidUpdate,\n      _destroy: component.destroy\n    };\n    const hostConnected = this._connectedCallback.bind(this);\n    const hostDisconnected = this._disconnectedCallback.bind(this);\n    const hostUpdate = this._update.bind(this);\n    const hostUpdated = this._updated.bind(this);\n    if (isLit) {\n      component.constructor.prototype.addController.call(component, {\n        // Lit will call these callbacks\n        hostConnected,\n        hostDisconnected,\n        hostUpdate,\n        hostUpdated\n      });\n    } else {\n      component.connectedCallback = hostConnected;\n      component.disconnectedCallback = hostDisconnected;\n      component.componentWillLoad = this._load.bind(this);\n      component.componentDidLoad = this._loaded.bind(this);\n      component.componentWillUpdate = hostUpdate;\n      component.componentDidUpdate = hostUpdated;\n    }\n    if (this.hasDestroy) {\n      component.destroy = this.destroy.bind(this);\n    }\n  }\n  /**\n   * Private because this is not supposed to be called by Component directly.\n   * Instead, _bindLifecycleMethods will take care of that. Otherwise, you risk\n   * calling lifecycle methods twice.\n   *\n   * @internal\n   */\n  _connectedCallback() {\n    if (this.destroyed) {\n      const tagName = this.component.el.tagName.toLowerCase();\n      this.component.el.remove();\n      throw new Error(`The ${tagName} component has already been destroyed. It cannot be used again. If you meant to disconnect and reconnect a component without automatic destroy, set the ${autoDestroyDisabledPropName} prop.`);\n    }\n    if (this._autoDestroyTimeout !== void 0) {\n      clearTimeout(this._autoDestroyTimeout);\n    }\n    const internals = this.internals;\n    internals.enabledWatchers = internals.allWatchers;\n    keyTrackResolve();\n    internals.enableReadonly?.();\n    this._controllers.forEach(callConnected);\n    this._originalLifecycles._connectedCallback?.call(this.component);\n    if (process.env.NODE_ENV !== \"production\" && isEsriInternalEnv()) {\n      devOnlySetPersistentControllerData?.(this, true);\n    }\n  }\n  /** @internal */\n  _disconnectedCallback() {\n    if (this.destroyed) {\n      return;\n    }\n    this._controllers.forEach(callDisconnected);\n    this._originalLifecycles._disconnectedCallback?.call(this.component);\n    if (this.hasDestroy) {\n      this._setAutoDestroyTimeout();\n    }\n  }\n  /** @internal */\n  async _load() {\n    await Promise.allSettled(Array.from(this._controllers, callLoad));\n    await this._originalLifecycles._load?.call(this.component);\n    if (this.hasDestroy) {\n      watch(this.component, autoDestroyDisabledPropName, () => this._setAutoDestroyTimeout());\n    }\n  }\n  /** @internal */\n  _loaded() {\n    this._controllers.forEach(callLoaded);\n    this._originalLifecycles._loaded?.call(this.component);\n  }\n  _update() {\n    const maybeLitComponent = this.component;\n    this._controllers.forEach(callUpdate, maybeLitComponent.$changes);\n    return this._originalLifecycles._willUpdate?.call(this.component);\n  }\n  _updated() {\n    const maybeLitComponent = this.component;\n    this._controllers.forEach(callUpdated, maybeLitComponent.$changes);\n    this._originalLifecycles._updated?.call(this.component);\n    if (this.isLit) {\n      maybeLitComponent.$changes = /* @__PURE__ */new Map();\n    } else {\n      const updatePromise = this._updatePromise;\n      this._updatePromise = new Deferred();\n      updatePromise.resolve(true);\n    }\n  }\n  async destroy() {\n    if (process.env.NODE_ENV !== \"production\" && isEsriInternalEnv()) {\n      this.ensureHasDestroy?.();\n    }\n    if (this.destroyed) {\n      return;\n    }\n    if (this.component.el.isConnected) {\n      this.hasDestroy = false;\n      try {\n        this.component.el.remove();\n      } finally {\n        this.hasDestroy = true;\n      }\n    }\n    this._autoDestroyTimeout = void 0;\n    this.destroyed = true;\n    this._controllers.forEach(callDestroy);\n    this._controllers.clear();\n    await this._originalLifecycles._destroy?.call(this.component);\n  }\n  _setAutoDestroyTimeout() {\n    if (this._autoDestroyTimeout !== void 0) {\n      clearTimeout(this._autoDestroyTimeout);\n    }\n    if (!this.component.el.isConnected && !this.component.autoDestroyDisabled) {\n      const destroy = () => void this.destroy().catch(console.error);\n      if (process.env.NODE_ENV !== \"production\" && isEsriInternalEnv() && autoDestroyOnDisconnectTimeout === 0) {\n        queueMicrotask(destroy);\n      } else {\n        this._autoDestroyTimeout = devToolsAwareTimeout(destroy, autoDestroyOnDisconnectTimeout);\n      }\n    }\n  }\n};\nif (process.env.NODE_ENV !== \"production\" && isEsriInternalEnv()) {\n  ControllerManager.prototype.ensureHasDestroy = function ensureHasDestroy() {\n    if (!this.hasDestroy) {\n      throw new Error(`\n          If the component uses a controller that uses destroy() method, then the\n          component must have the following properties:\n          /**\n           * If true, the component will not be destroyed automatically when it is\n           * disconnected from the document. This is useful when you want to move the\n           * component to a different place on the page, or temporarily hide it. If this\n           * is set, make sure to call the \\`destroy\\` method when you are done to prevent\n           * memory leaks.\n           */\n          @${this.isLit ? \"property\" : \"Prop\"}() ${autoDestroyDisabledPropName} = false;\n          \n          /** Permanently destroy the component */\n          @${this.isLit ? \"method\" : \"Method\"}()\n          async destroy(): Promise<void> {\n            await this.manager.destroy();\n          }\n          `.trim().split(\"\\n\").map(line => line.trim()).join(\"\\n\"));\n    }\n  };\n}\nvar autoDestroyDisabledPropName = \"autoDestroyDisabled\";\nvar autoDestroyOnDisconnectTimeout = 1e3;\nvar exportsForTests = process.env.NODE_ENV !== \"production\" && isEsriInternalEnv() ? {\n  setAutoDestroyOnDisconnectTimeout: timeout => {\n    autoDestroyOnDisconnectTimeout = timeout;\n  }\n} : void 0;\nvar defaultGetterSetter = value => value;\nfunction callConnected(controller) {\n  if (\"triggerConnected\" in controller) {\n    controller.triggerConnected();\n  } else {\n    safeCall(controller.hostConnected, controller);\n  }\n}\nfunction callDisconnected(controller) {\n  if (\"triggerDisconnected\" in controller) {\n    controller.triggerDisconnected();\n  } else {\n    safeCall(controller.hostDisconnected, controller);\n  }\n}\nasync function callLoad(controller) {\n  if (\"triggerLoad\" in controller) {\n    await controller.triggerLoad();\n  } else {\n    await safeAsyncCall(controller.hostLoad, controller);\n  }\n}\nfunction callLoaded(controller) {\n  if (\"triggerLoaded\" in controller) {\n    controller.triggerLoaded();\n  } else {\n    safeCall(controller.hostLoaded, controller);\n  }\n}\nfunction callUpdate(controller) {\n  if (\"triggerUpdate\" in controller) {\n    controller.triggerUpdate(this);\n  } else {\n    safeCall(controller.hostUpdate, controller, this);\n  }\n}\nfunction callUpdated(controller) {\n  if (\"triggerUpdated\" in controller) {\n    controller.triggerUpdated(this);\n  } else {\n    safeCall(controller.hostUpdated, controller, this);\n  }\n}\nfunction callDestroy(controller) {\n  if (\"triggerDestroy\" in controller) {\n    controller.triggerDestroy();\n  } else {\n    safeCall(controller.hostDestroy, controller);\n  }\n}\n\n// src/functional.ts\nvar makeController = constructor => proxy(void 0, constructor);\nvar makeGenericController = constructor => component => proxy(component,\n/**\n * GenericController is identical to Controller, in all except for typing.\n * So dying a type-cast here so as not to needlessly add one more object\n * to the prototype chain\n */\nconstructor);\nvar FunctionalController = class extends Controller {\n  constructor(component, constructor) {\n    super(component);\n    const originalExports = this.exports;\n    try {\n      setAmbientComponent(this.component);\n      const value = constructor(this.component, this);\n      const constructorChangedExports = this.exports !== originalExports;\n      if (value instanceof Promise) {\n        if (!constructorChangedExports) {\n          this.setProvisionalExports(value);\n        }\n        const resolved = value.then(result => {\n          this.exports = result;\n          super.catchUpLifecycle();\n        }).catch(error => {\n          this._ready.reject(error);\n          console.error(error);\n        });\n        this.onLoad(async () => await resolved);\n      } else {\n        if (!constructorChangedExports || value !== void 0) {\n          this.exports = value;\n        }\n        queueMicrotask(() => super.catchUpLifecycle());\n      }\n    } catch (error) {\n      this._ready.reject(error);\n      console.error(error);\n    }\n  }\n  /** Noop - will be called in the constructor instead */\n  catchUpLifecycle() {\n    return;\n  }\n};\nvar proxy = proxyExports(FunctionalController);\n\n// src/useWatchAttributes.ts\nvar useWatchAttributes = (attributes, callback) => new AttributeWatchController(attributes, callback);\nvar AttributeWatchController = class extends Controller {\n  constructor(_attributes, _callback) {\n    super();\n    this._attributes = _attributes;\n    this._callback = _callback;\n    this._observer = new MutationObserver(mutations => {\n      mutations.forEach(mutation => {\n        if (_attributes.includes(mutation.attributeName)) {\n          _callback.call(this.component, this.component.el.getAttribute(mutation.attributeName), mutation.oldValue, mutation.attributeName);\n        }\n      });\n    });\n  }\n  hostConnected() {\n    this._attributes.forEach(attribute => {\n      if (this.component.el.hasAttribute(attribute)) {\n        this._callback.call(this.component, null, this.component.el.getAttribute(attribute), attribute);\n      }\n    });\n    this._observer.observe(this.component.el, {\n      attributes: true,\n      attributeOldValue: true,\n      attributeFilter: this._attributes\n    });\n  }\n  hostDisconnected() {\n    this._observer.disconnect();\n  }\n};\n\n// src/load.ts\nvar load = makeController;\n\n// src/toFunction.ts\nvar toFunction = Class => (...args) => {\n  const ambientControllers = retrieveParentControllers();\n  const instance = new Class(...args);\n  setParentController(ambientControllers.at(-1));\n  return instance;\n};\n\n// src/useMedia.ts\nvar useMedia = query => makeController((_component, controller) => {\n  const media = globalThis.matchMedia(query);\n  function changed() {\n    controller.exports = media.matches;\n  }\n  changed();\n  controller.onLifecycle(() => {\n    media.addEventListener(\"change\", changed);\n    return () => media.removeEventListener(\"change\", changed);\n  });\n  return void 0;\n});\n\n// src/useDirection.ts\nimport { getElementAttribute, isEsriInternalEnv as isEsriInternalEnv2, observeAncestorsMutation } from \"@arcgis/components-utils\";\nvar defaultDirection = \"ltr\";\nvar useDirection = () => makeController((component, controller) => {\n  controller.exports = defaultDirection;\n  controller.onLifecycle(() => {\n    function callback() {\n      const dir = getElementAttribute(component.el, \"dir\", defaultDirection);\n      controller.exports = dir === \"rtl\" ? \"rtl\" : \"ltr\";\n    }\n    callback();\n    return observeAncestorsMutation(component.el, [\"dir\"], callback);\n  });\n  if (process.env.NODE_ENV !== \"production\" && isEsriInternalEnv2()) {\n    trackKey(component, resolved => {\n      if (resolved?.key === \"dir\") {\n        throw new Error(`Do not assign this controller to a prop called \\`dir\\` as that will overwrite the \\`dir\\` attribute on the host element - component should not be setting the \\`dir\\` attribute on itself. Instead, assign this controller to a property called \\`direction\\`.`);\n      }\n    }, controller.exports);\n  }\n  return void 0;\n});\n\n// src/useT9n.ts\nimport { getElementLocales, startLocaleObserver } from \"@arcgis/components-utils\";\nvar makeT9nController = getAssetPath => (options = {}) =>\n// eslint-disable-next-line @typescript-eslint/promise-function-async\nmakeController((component, controller) => {\n  const locale = getElementLocales(component.el);\n  const pending = {\n    _lang: locale.lang,\n    _t9nLocale: locale.t9nLocale,\n    _loading: true\n  };\n  const componentWithOverrides = component;\n  controller.onLifecycle(() => startLocaleObserver(component.el, () => getAssetPath(\"./assets\"), ({\n    t9nLocale,\n    t9nStrings,\n    lang\n  }) => {\n    const withoutOverrides = {\n      ...t9nStrings,\n      _lang: lang,\n      _t9nLocale: t9nLocale,\n      _loading: false\n    };\n    controller.exports = withoutOverrides;\n    const label = t9nStrings.componentLabel;\n    if (typeof label === \"string\" && \"label\" in component && component.label == null) {\n      component.label ?? (component.label = label);\n    }\n    applyOverrides(componentWithOverrides.messageOverrides);\n  }, options.name));\n  function applyOverrides(messageOverrides) {\n    const currentValue = controller.exports;\n    const rawMessages = currentValue._original ?? currentValue;\n    const updated = deepMerge(rawMessages, messageOverrides);\n    if (messageOverrides) {\n      updated._original = rawMessages;\n    }\n    controller.exports = updated;\n  }\n  if (\"messageOverrides\" in componentWithOverrides) {\n    controller.onLifecycle(() => watch(componentWithOverrides, \"messageOverrides\", applyOverrides));\n  }\n  if (options.blocking) {\n    controller.setProvisionalExports(pending, false);\n    return controller.ready;\n  } else {\n    return pending;\n  }\n});\nfunction deepMerge(original, overwrites) {\n  if (!overwrites) {\n    return original;\n  }\n  const merged = {\n    ...original\n  };\n  Object.entries(overwrites).forEach(([key, value]) => {\n    if (typeof value === \"object\") {\n      merged[key] = deepMerge(original[key], value);\n    } else {\n      merged[key] = value ?? original[key];\n    }\n  });\n  return merged;\n}\n\n// src/usePropertyChange.ts\nimport { isEsriInternalEnv as isEsriInternalEnv3 } from \"@arcgis/components-utils\";\nvar usePropertyChange = _component => propertyChangeController;\nvar eventName = \"arcgisPropertyChange\";\nfunction propertyChangeController(...toWatch) {\n  const component = retrieveComponent();\n  const eventedComponent = component;\n  let eventEmitter = eventedComponent[eventName];\n  if (component.manager.isLit) {\n    eventEmitter = component.constructor.$createEvent(eventName, void 0, component);\n    if (process.env.NODE_ENV !== \"production\" && isEsriInternalEnv3()) {\n      if (typeof eventEmitter !== \"object\" || eventEmitter === null || !(\"emit\" in eventEmitter) || typeof eventEmitter.emit !== \"function\") {\n        throw new Error(`Expected to find $createEvent static property on Lumina's LitElement\"`);\n      }\n    }\n  }\n  if (process.env.NODE_ENV !== \"production\" && isEsriInternalEnv3()) {\n    if (typeof eventEmitter !== \"object\" || eventEmitter === null || !(\"emit\" in eventEmitter) || typeof eventEmitter.emit !== \"function\") {\n      throw new Error(`For consistency, usePropertyChange must be assigned to an arcgisPropertyChange property that has an @Event() decorator`);\n    }\n    const allProps = new Set(Object.entries(component.manager.internals.members).filter(([_name, [propType]]) => (propType & 31 /* Prop */) !== 0).map(([name]) => name));\n    toWatch.forEach(prop => {\n      if (!allProps.has(prop)) {\n        throw new Error(prop in component ? `For usePropertyChange to emit event on \"${prop}\" property change, you should add @${component.manager.isLit ? \"property\" : \"Prop\"}() to ${prop} in ${component.el.tagName.toLowerCase()}` : `usePropertyChange can't emit event on \"${prop}\" property change as such property does not exist in ${component.el.tagName.toLowerCase()}`);\n      }\n    });\n  }\n  component.manager.onLoad(() => component.manager.onLifecycle(() => toWatch.map(name =>\n  // Casting to 'el' to simplify dynamic prop name typing\n  watch(component, name, () => eventEmitter.emit({\n    name\n  })))));\n  if (process.env.NODE_ENV !== \"production\" && isEsriInternalEnv3() && component.manager.isLit) {\n    trackKey(component, resolution => {\n      if (resolution === void 0 || resolution.isReactive || resolution.key !== eventName) {\n        throw new Error(`For consistency, usePropertyChange must be assigned to an arcgisPropertyChange property and that property should not have @property() or @state() decorators: arcgisPropertyChange = usePropertyChange<this>()(\"prop1\", \"prop2\");`);\n      }\n    }, eventEmitter);\n  }\n  return eventEmitter;\n}\nexport { Controller, GenericController, bypassGetter, bypassReadOnly, bypassSetter, controllerSymbol, dynamicGetSet, getSet, isController, keyTrackResolve, load, makeController, makeGenericController, makeT9nController, proxyExports, readonly, retrieveComponent, toFunction, trackKey, trackPropKey, trackPropertyKey, useControllerManager, useDirection, useMedia, usePropertyChange, useWatchAttributes, watch };","map":{"version":3,"names":["ComponentInternals","Controller","GenericController","bypassGetter","bypassReadOnly","bypassSetter","controllerSymbol","devOnlySetPersistentControllerData","dynamicGetSet","elementToInstance","getSet","isController","keyTrackResolve","proxyExports","readonly","retrieveComponent","retrieveParentControllers","setAmbientComponent","setParentController","trackKey","trackPropKey","trackPropertyKey","watch","retrieveComponentMembers","Deferred","isEsriInternalEnv","safeAsyncCall","safeCall","devToolsAwareTimeout","useControllerManager","component","forceUpdate","ControllerManager","constructor","isLit","process","env","NODE_ENV","Object","defineProperty","el","value","controllers","Set","addController","controller","add","renderRoot","isConnected","hostConnected","removeController","delete","controllerRemoved","controllerHost","update","__forceUpdate","requestUpdate","stencilToLitMapping","componentDidLoad","componentDidRender","componentDidUpdate","componentShouldUpdate","componentWillLoad","componentWillRender","componentWillUpdate","entries","forEach","stencilMethod","litMethod","Error","tagName","toLowerCase","i","isLitElementClass","prototype","hasOwn","getPrototypeOf","internals","destroyed","_updatePromise","_originalLifecycles","manager","_controllers","exports","hasDestroy","autoDestroyDisabledPropName","destroy","_bindLifecycleMethods","keys","members","name","accessorGetter","defaultGetterSetter","accessorSetter","getSetProxy","enabledWatchers","allWatchers","get","promise","queueMicrotask","enableReadonly","set","isStencilDistBuild","_connectedCallback","connectedCallback","_disconnectedCallback","disconnectedCallback","_load","load","_loaded","loaded","_willUpdate","_updated","_destroy","bind","hostDisconnected","hostUpdate","_update","hostUpdated","call","remove","_autoDestroyTimeout","clearTimeout","callConnected","callDisconnected","_setAutoDestroyTimeout","Promise","allSettled","Array","from","callLoad","callLoaded","maybeLitComponent","callUpdate","$changes","callUpdated","Map","updatePromise","resolve","ensureHasDestroy","callDestroy","clear","autoDestroyDisabled","catch","console","error","autoDestroyOnDisconnectTimeout","trim","split","map","line","join","exportsForTests","setAutoDestroyOnDisconnectTimeout","timeout","triggerConnected","triggerDisconnected","triggerLoad","hostLoad","triggerLoaded","hostLoaded","triggerUpdate","triggerUpdated","triggerDestroy","hostDestroy","makeController","proxy","makeGenericController","FunctionalController","originalExports","constructorChangedExports","setProvisionalExports","resolved","then","result","catchUpLifecycle","_ready","reject","onLoad","useWatchAttributes","attributes","callback","AttributeWatchController","_attributes","_callback","_observer","MutationObserver","mutations","mutation","includes","attributeName","getAttribute","oldValue","attribute","hasAttribute","observe","attributeOldValue","attributeFilter","disconnect","toFunction","Class","args","ambientControllers","instance","at","useMedia","query","_component","media","globalThis","matchMedia","changed","matches","onLifecycle","addEventListener","removeEventListener","getElementAttribute","isEsriInternalEnv2","observeAncestorsMutation","defaultDirection","useDirection","dir","key","getElementLocales","startLocaleObserver","makeT9nController","getAssetPath","options","locale","pending","_lang","lang","_t9nLocale","t9nLocale","_loading","componentWithOverrides","t9nStrings","withoutOverrides","label","componentLabel","applyOverrides","messageOverrides","currentValue","rawMessages","_original","updated","deepMerge","blocking","ready","original","overwrites","merged","isEsriInternalEnv3","usePropertyChange","propertyChangeController","eventName","toWatch","eventedComponent","eventEmitter","$createEvent","emit","allProps","filter","_name","propType","prop","has","resolution","isReactive"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/components-controllers/dist/index.js"],"sourcesContent":["import {\n  ComponentInternals,\n  Controller,\n  GenericController,\n  bypassGetter,\n  bypassReadOnly,\n  bypassSetter,\n  controllerSymbol,\n  devOnlySetPersistentControllerData,\n  dynamicGetSet,\n  elementToInstance,\n  getSet,\n  isController,\n  keyTrackResolve,\n  proxyExports,\n  readonly,\n  retrieveComponent,\n  retrieveParentControllers,\n  setAmbientComponent,\n  setParentController,\n  trackKey,\n  trackPropKey,\n  trackPropertyKey,\n  watch\n} from \"./chunk-PP2BAVRW.js\";\nimport {\n  retrieveComponentMembers\n} from \"./chunk-XKVBN44N.js\";\n\n// src/ControllerManager.ts\nimport { Deferred, isEsriInternalEnv, safeAsyncCall, safeCall } from \"@arcgis/components-utils\";\nimport { devToolsAwareTimeout } from \"@arcgis/components-utils\";\nvar useControllerManager = (component, forceUpdate) => new ControllerManager(component, forceUpdate);\nvar ControllerManager = class extends GenericController {\n  constructor(component, forceUpdate) {\n    const isLit = \"addController\" in component;\n    if (process.env.NODE_ENV !== \"production\" && isEsriInternalEnv() && !isLit) {\n      Object.defineProperty(component.el, \"__component\", {\n        value: component\n      });\n      ({});\n    }\n    const controllers = /* @__PURE__ */ new Set();\n    function addController(controller) {\n      controllers.add(controller);\n      if (!(controllerSymbol in controller) && component.renderRoot && component.el.isConnected) {\n        controller.hostConnected?.();\n      }\n    }\n    function removeController(controller) {\n      void controllers.delete(controller);\n      controller.controllerRemoved?.();\n    }\n    const controllerHost = component;\n    controllerHost.addController = addController;\n    controllerHost.removeController = removeController;\n    if (!isLit) {\n      const update = forceUpdate ?? component.constructor.__forceUpdate;\n      controllerHost.requestUpdate = () => update(component);\n    }\n    if (process.env.NODE_ENV !== \"production\" && isEsriInternalEnv()) {\n      const stencilToLitMapping = {\n        componentDidLoad: \"loaded\",\n        componentDidRender: \"updated\",\n        componentDidUpdate: \"updated\",\n        componentShouldUpdate: \"shouldUpdate\",\n        componentWillLoad: \"load\",\n        componentWillRender: \"willUpdate\",\n        componentWillUpdate: \"willUpdate\"\n      };\n      Object.entries(stencilToLitMapping).forEach(([stencilMethod, litMethod]) => {\n        if (isLit && stencilMethod in component) {\n          throw new Error(\n            `Unexpected ${stencilMethod}() in a Lit component ${component.el.tagName.toLowerCase()}. In Lit, you should use ${litMethod}() instead`\n          );\n        }\n        if (!isLit && litMethod in component) {\n          throw new Error(\n            `Unexpected ${litMethod}() in a Stencil component ${component.el.tagName.toLowerCase()}. In Stencil, you should use ${litMethod}() instead`\n          );\n        }\n      });\n      if (isLit) {\n        let i = 0;\n        let isLitElementClass = false;\n        for (let prototype = component; !isLitElementClass; i++) {\n          if (prototype === null) {\n            throw new Error(\"Expected controllers to be used in a LitElement class\");\n          }\n          if (Object.hasOwn(prototype, \"_load\")) {\n            isLitElementClass = true;\n            break;\n          }\n          prototype = Object.getPrototypeOf(prototype);\n        }\n        if (i < 1) {\n          throw new Error(\n            \"It looks like you are trying to call useControllerManager in a component that uses LitElement imported from 'lit'. useControllerManager should only be used in the LitElement coming from `@arcgis/lumina`\"\n          );\n        }\n      }\n    }\n    super(component);\n    /** @internal */\n    this.internals = new ComponentInternals(this.component);\n    this.destroyed = false;\n    this._updatePromise = new Deferred();\n    this._originalLifecycles = {};\n    this.isLit = isLit;\n    this.component.manager = this;\n    retrieveComponentMembers(component, isLit);\n    this._controllers = controllers;\n    this.exports = void 0;\n    this.hasDestroy = autoDestroyDisabledPropName in this.component && typeof this.component.destroy === \"function\";\n    this._bindLifecycleMethods();\n    const internals = this.internals;\n    Object.keys(internals.members).forEach((name) => {\n      internals.accessorGetter[name] = defaultGetterSetter;\n      internals.accessorSetter[name] = defaultGetterSetter;\n      internals.getSetProxy(name);\n    });\n    if (isLit) {\n      this.internals.enabledWatchers = this.internals.allWatchers;\n    } else {\n      Object.defineProperty(component, \"updateComplete\", {\n        get: async () => await this._updatePromise.promise\n      });\n    }\n    queueMicrotask(internals.enableReadonly);\n    setAmbientComponent(component);\n    elementToInstance.set(component.el, component);\n    elementToInstance.set(component, component);\n  }\n  _bindLifecycleMethods() {\n    const component = this.component;\n    const isLit = this.isLit;\n    const isStencilDistBuild = component.el === component;\n    this._originalLifecycles = {\n      // These component's callbacks will be called by Lit, so we don't have to\n      _connectedCallback: isLit || isStencilDistBuild ? void 0 : component.connectedCallback,\n      _disconnectedCallback: isLit || isStencilDistBuild ? void 0 : component.disconnectedCallback,\n      _load: isLit ? component.load : component.componentWillLoad,\n      _loaded: isLit ? component.loaded : component.componentDidLoad,\n      _willUpdate: isLit ? void 0 : component.componentWillUpdate,\n      _updated: isLit ? void 0 : component.componentDidUpdate,\n      _destroy: component.destroy\n    };\n    const hostConnected = this._connectedCallback.bind(this);\n    const hostDisconnected = this._disconnectedCallback.bind(this);\n    const hostUpdate = this._update.bind(this);\n    const hostUpdated = this._updated.bind(this);\n    if (isLit) {\n      component.constructor.prototype.addController.call(component, {\n        // Lit will call these callbacks\n        hostConnected,\n        hostDisconnected,\n        hostUpdate,\n        hostUpdated\n      });\n    } else {\n      component.connectedCallback = hostConnected;\n      component.disconnectedCallback = hostDisconnected;\n      component.componentWillLoad = this._load.bind(this);\n      component.componentDidLoad = this._loaded.bind(this);\n      component.componentWillUpdate = hostUpdate;\n      component.componentDidUpdate = hostUpdated;\n    }\n    if (this.hasDestroy) {\n      component.destroy = this.destroy.bind(this);\n    }\n  }\n  /**\n   * Private because this is not supposed to be called by Component directly.\n   * Instead, _bindLifecycleMethods will take care of that. Otherwise, you risk\n   * calling lifecycle methods twice.\n   *\n   * @internal\n   */\n  _connectedCallback() {\n    if (this.destroyed) {\n      const tagName = this.component.el.tagName.toLowerCase();\n      this.component.el.remove();\n      throw new Error(\n        `The ${tagName} component has already been destroyed. It cannot be used again. If you meant to disconnect and reconnect a component without automatic destroy, set the ${autoDestroyDisabledPropName} prop.`\n      );\n    }\n    if (this._autoDestroyTimeout !== void 0) {\n      clearTimeout(this._autoDestroyTimeout);\n    }\n    const internals = this.internals;\n    internals.enabledWatchers = internals.allWatchers;\n    keyTrackResolve();\n    internals.enableReadonly?.();\n    this._controllers.forEach(callConnected);\n    this._originalLifecycles._connectedCallback?.call(this.component);\n    if (process.env.NODE_ENV !== \"production\" && isEsriInternalEnv()) {\n      devOnlySetPersistentControllerData?.(this, true);\n    }\n  }\n  /** @internal */\n  _disconnectedCallback() {\n    if (this.destroyed) {\n      return;\n    }\n    this._controllers.forEach(callDisconnected);\n    this._originalLifecycles._disconnectedCallback?.call(this.component);\n    if (this.hasDestroy) {\n      this._setAutoDestroyTimeout();\n    }\n  }\n  /** @internal */\n  async _load() {\n    await Promise.allSettled(Array.from(this._controllers, callLoad));\n    await this._originalLifecycles._load?.call(this.component);\n    if (this.hasDestroy) {\n      watch(this.component, autoDestroyDisabledPropName, () => this._setAutoDestroyTimeout());\n    }\n  }\n  /** @internal */\n  _loaded() {\n    this._controllers.forEach(callLoaded);\n    this._originalLifecycles._loaded?.call(this.component);\n  }\n  _update() {\n    const maybeLitComponent = this.component;\n    this._controllers.forEach(callUpdate, maybeLitComponent.$changes);\n    return this._originalLifecycles._willUpdate?.call(this.component);\n  }\n  _updated() {\n    const maybeLitComponent = this.component;\n    this._controllers.forEach(callUpdated, maybeLitComponent.$changes);\n    this._originalLifecycles._updated?.call(this.component);\n    if (this.isLit) {\n      maybeLitComponent.$changes = /* @__PURE__ */ new Map();\n    } else {\n      const updatePromise = this._updatePromise;\n      this._updatePromise = new Deferred();\n      updatePromise.resolve(true);\n    }\n  }\n  async destroy() {\n    if (process.env.NODE_ENV !== \"production\" && isEsriInternalEnv()) {\n      this.ensureHasDestroy?.();\n    }\n    if (this.destroyed) {\n      return;\n    }\n    if (this.component.el.isConnected) {\n      this.hasDestroy = false;\n      try {\n        this.component.el.remove();\n      } finally {\n        this.hasDestroy = true;\n      }\n    }\n    this._autoDestroyTimeout = void 0;\n    this.destroyed = true;\n    this._controllers.forEach(callDestroy);\n    this._controllers.clear();\n    await this._originalLifecycles._destroy?.call(this.component);\n  }\n  _setAutoDestroyTimeout() {\n    if (this._autoDestroyTimeout !== void 0) {\n      clearTimeout(this._autoDestroyTimeout);\n    }\n    if (!this.component.el.isConnected && !this.component.autoDestroyDisabled) {\n      const destroy = () => void this.destroy().catch(console.error);\n      if (process.env.NODE_ENV !== \"production\" && isEsriInternalEnv() && autoDestroyOnDisconnectTimeout === 0) {\n        queueMicrotask(destroy);\n      } else {\n        this._autoDestroyTimeout = devToolsAwareTimeout(destroy, autoDestroyOnDisconnectTimeout);\n      }\n    }\n  }\n};\nif (process.env.NODE_ENV !== \"production\" && isEsriInternalEnv()) {\n  ControllerManager.prototype.ensureHasDestroy = function ensureHasDestroy() {\n    if (!this.hasDestroy) {\n      throw new Error(\n        `\n          If the component uses a controller that uses destroy() method, then the\n          component must have the following properties:\n          /**\n           * If true, the component will not be destroyed automatically when it is\n           * disconnected from the document. This is useful when you want to move the\n           * component to a different place on the page, or temporarily hide it. If this\n           * is set, make sure to call the \\`destroy\\` method when you are done to prevent\n           * memory leaks.\n           */\n          @${this.isLit ? \"property\" : \"Prop\"}() ${autoDestroyDisabledPropName} = false;\n          \n          /** Permanently destroy the component */\n          @${this.isLit ? \"method\" : \"Method\"}()\n          async destroy(): Promise<void> {\n            await this.manager.destroy();\n          }\n          `.trim().split(\"\\n\").map((line) => line.trim()).join(\"\\n\")\n      );\n    }\n  };\n}\nvar autoDestroyDisabledPropName = \"autoDestroyDisabled\";\nvar autoDestroyOnDisconnectTimeout = 1e3;\nvar exportsForTests = process.env.NODE_ENV !== \"production\" && isEsriInternalEnv() ? {\n  setAutoDestroyOnDisconnectTimeout: (timeout) => {\n    autoDestroyOnDisconnectTimeout = timeout;\n  }\n} : void 0;\nvar defaultGetterSetter = (value) => value;\nfunction callConnected(controller) {\n  if (\"triggerConnected\" in controller) {\n    controller.triggerConnected();\n  } else {\n    safeCall(controller.hostConnected, controller);\n  }\n}\nfunction callDisconnected(controller) {\n  if (\"triggerDisconnected\" in controller) {\n    controller.triggerDisconnected();\n  } else {\n    safeCall(controller.hostDisconnected, controller);\n  }\n}\nasync function callLoad(controller) {\n  if (\"triggerLoad\" in controller) {\n    await controller.triggerLoad();\n  } else {\n    await safeAsyncCall(controller.hostLoad, controller);\n  }\n}\nfunction callLoaded(controller) {\n  if (\"triggerLoaded\" in controller) {\n    controller.triggerLoaded();\n  } else {\n    safeCall(controller.hostLoaded, controller);\n  }\n}\nfunction callUpdate(controller) {\n  if (\"triggerUpdate\" in controller) {\n    controller.triggerUpdate(this);\n  } else {\n    safeCall(controller.hostUpdate, controller, this);\n  }\n}\nfunction callUpdated(controller) {\n  if (\"triggerUpdated\" in controller) {\n    controller.triggerUpdated(this);\n  } else {\n    safeCall(controller.hostUpdated, controller, this);\n  }\n}\nfunction callDestroy(controller) {\n  if (\"triggerDestroy\" in controller) {\n    controller.triggerDestroy();\n  } else {\n    safeCall(controller.hostDestroy, controller);\n  }\n}\n\n// src/functional.ts\nvar makeController = (constructor) => proxy(void 0, constructor);\nvar makeGenericController = (constructor) => (component) => proxy(\n  component,\n  /**\n   * GenericController is identical to Controller, in all except for typing.\n   * So dying a type-cast here so as not to needlessly add one more object\n   * to the prototype chain\n   */\n  constructor\n);\nvar FunctionalController = class extends Controller {\n  constructor(component, constructor) {\n    super(component);\n    const originalExports = this.exports;\n    try {\n      setAmbientComponent(this.component);\n      const value = constructor(this.component, this);\n      const constructorChangedExports = this.exports !== originalExports;\n      if (value instanceof Promise) {\n        if (!constructorChangedExports) {\n          this.setProvisionalExports(value);\n        }\n        const resolved = value.then((result) => {\n          this.exports = result;\n          super.catchUpLifecycle();\n        }).catch((error) => {\n          this._ready.reject(error);\n          console.error(error);\n        });\n        this.onLoad(async () => await resolved);\n      } else {\n        if (!constructorChangedExports || value !== void 0) {\n          this.exports = value;\n        }\n        queueMicrotask(() => super.catchUpLifecycle());\n      }\n    } catch (error) {\n      this._ready.reject(error);\n      console.error(error);\n    }\n  }\n  /** Noop - will be called in the constructor instead */\n  catchUpLifecycle() {\n    return;\n  }\n};\nvar proxy = proxyExports(FunctionalController);\n\n// src/useWatchAttributes.ts\nvar useWatchAttributes = (attributes, callback) => new AttributeWatchController(attributes, callback);\nvar AttributeWatchController = class extends Controller {\n  constructor(_attributes, _callback) {\n    super();\n    this._attributes = _attributes;\n    this._callback = _callback;\n    this._observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if (_attributes.includes(mutation.attributeName)) {\n          _callback.call(\n            this.component,\n            this.component.el.getAttribute(mutation.attributeName),\n            mutation.oldValue,\n            mutation.attributeName\n          );\n        }\n      });\n    });\n  }\n  hostConnected() {\n    this._attributes.forEach((attribute) => {\n      if (this.component.el.hasAttribute(attribute)) {\n        this._callback.call(this.component, null, this.component.el.getAttribute(attribute), attribute);\n      }\n    });\n    this._observer.observe(this.component.el, {\n      attributes: true,\n      attributeOldValue: true,\n      attributeFilter: this._attributes\n    });\n  }\n  hostDisconnected() {\n    this._observer.disconnect();\n  }\n};\n\n// src/load.ts\nvar load = makeController;\n\n// src/toFunction.ts\nvar toFunction = (Class) => (...args) => {\n  const ambientControllers = retrieveParentControllers();\n  const instance = new Class(...args);\n  setParentController(ambientControllers.at(-1));\n  return instance;\n};\n\n// src/useMedia.ts\nvar useMedia = (query) => makeController((_component, controller) => {\n  const media = globalThis.matchMedia(query);\n  function changed() {\n    controller.exports = media.matches;\n  }\n  changed();\n  controller.onLifecycle(() => {\n    media.addEventListener(\"change\", changed);\n    return () => media.removeEventListener(\"change\", changed);\n  });\n  return void 0;\n});\n\n// src/useDirection.ts\nimport { getElementAttribute, isEsriInternalEnv as isEsriInternalEnv2, observeAncestorsMutation } from \"@arcgis/components-utils\";\nvar defaultDirection = \"ltr\";\nvar useDirection = () => makeController((component, controller) => {\n  controller.exports = defaultDirection;\n  controller.onLifecycle(() => {\n    function callback() {\n      const dir = getElementAttribute(component.el, \"dir\", defaultDirection);\n      controller.exports = dir === \"rtl\" ? \"rtl\" : \"ltr\";\n    }\n    callback();\n    return observeAncestorsMutation(component.el, [\"dir\"], callback);\n  });\n  if (process.env.NODE_ENV !== \"production\" && isEsriInternalEnv2()) {\n    trackKey(\n      component,\n      (resolved) => {\n        if (resolved?.key === \"dir\") {\n          throw new Error(\n            `Do not assign this controller to a prop called \\`dir\\` as that will overwrite the \\`dir\\` attribute on the host element - component should not be setting the \\`dir\\` attribute on itself. Instead, assign this controller to a property called \\`direction\\`.`\n          );\n        }\n      },\n      controller.exports\n    );\n  }\n  return void 0;\n});\n\n// src/useT9n.ts\nimport { getElementLocales, startLocaleObserver } from \"@arcgis/components-utils\";\nvar makeT9nController = (getAssetPath) => (options = {}) => (\n  // eslint-disable-next-line @typescript-eslint/promise-function-async\n  makeController((component, controller) => {\n    const locale = getElementLocales(component.el);\n    const pending = {\n      _lang: locale.lang,\n      _t9nLocale: locale.t9nLocale,\n      _loading: true\n    };\n    const componentWithOverrides = component;\n    controller.onLifecycle(\n      () => startLocaleObserver(\n        component.el,\n        () => getAssetPath(\"./assets\"),\n        ({ t9nLocale, t9nStrings, lang }) => {\n          const withoutOverrides = {\n            ...t9nStrings,\n            _lang: lang,\n            _t9nLocale: t9nLocale,\n            _loading: false\n          };\n          controller.exports = withoutOverrides;\n          const label = t9nStrings.componentLabel;\n          if (typeof label === \"string\" && \"label\" in component && component.label == null) {\n            component.label ?? (component.label = label);\n          }\n          applyOverrides(componentWithOverrides.messageOverrides);\n        },\n        options.name\n      )\n    );\n    function applyOverrides(messageOverrides) {\n      const currentValue = controller.exports;\n      const rawMessages = currentValue._original ?? currentValue;\n      const updated = deepMerge(rawMessages, messageOverrides);\n      if (messageOverrides) {\n        updated._original = rawMessages;\n      }\n      controller.exports = updated;\n    }\n    if (\"messageOverrides\" in componentWithOverrides) {\n      controller.onLifecycle(() => watch(componentWithOverrides, \"messageOverrides\", applyOverrides));\n    }\n    if (options.blocking) {\n      controller.setProvisionalExports(pending, false);\n      return controller.ready;\n    } else {\n      return pending;\n    }\n  })\n);\nfunction deepMerge(original, overwrites) {\n  if (!overwrites) {\n    return original;\n  }\n  const merged = { ...original };\n  Object.entries(overwrites).forEach(([key, value]) => {\n    if (typeof value === \"object\") {\n      merged[key] = deepMerge(original[key], value);\n    } else {\n      merged[key] = value ?? original[key];\n    }\n  });\n  return merged;\n}\n\n// src/usePropertyChange.ts\nimport { isEsriInternalEnv as isEsriInternalEnv3 } from \"@arcgis/components-utils\";\nvar usePropertyChange = (_component) => propertyChangeController;\nvar eventName = \"arcgisPropertyChange\";\nfunction propertyChangeController(...toWatch) {\n  const component = retrieveComponent();\n  const eventedComponent = component;\n  let eventEmitter = eventedComponent[eventName];\n  if (component.manager.isLit) {\n    eventEmitter = component.constructor.$createEvent(eventName, void 0, component);\n    if (process.env.NODE_ENV !== \"production\" && isEsriInternalEnv3()) {\n      if (typeof eventEmitter !== \"object\" || eventEmitter === null || !(\"emit\" in eventEmitter) || typeof eventEmitter.emit !== \"function\") {\n        throw new Error(`Expected to find $createEvent static property on Lumina's LitElement\"`);\n      }\n    }\n  }\n  if (process.env.NODE_ENV !== \"production\" && isEsriInternalEnv3()) {\n    if (typeof eventEmitter !== \"object\" || eventEmitter === null || !(\"emit\" in eventEmitter) || typeof eventEmitter.emit !== \"function\") {\n      throw new Error(\n        `For consistency, usePropertyChange must be assigned to an arcgisPropertyChange property that has an @Event() decorator`\n      );\n    }\n    const allProps = new Set(\n      Object.entries(component.manager.internals.members).filter(([_name, [propType]]) => (propType & 31 /* Prop */) !== 0).map(([name]) => name)\n    );\n    toWatch.forEach((prop) => {\n      if (!allProps.has(prop)) {\n        throw new Error(\n          prop in component ? `For usePropertyChange to emit event on \"${prop}\" property change, you should add @${component.manager.isLit ? \"property\" : \"Prop\"}() to ${prop} in ${component.el.tagName.toLowerCase()}` : `usePropertyChange can't emit event on \"${prop}\" property change as such property does not exist in ${component.el.tagName.toLowerCase()}`\n        );\n      }\n    });\n  }\n  component.manager.onLoad(\n    () => component.manager.onLifecycle(\n      () => toWatch.map(\n        (name) => (\n          // Casting to 'el' to simplify dynamic prop name typing\n          watch(component, name, () => eventEmitter.emit({ name }))\n        )\n      )\n    )\n  );\n  if (process.env.NODE_ENV !== \"production\" && isEsriInternalEnv3() && component.manager.isLit) {\n    trackKey(\n      component,\n      (resolution) => {\n        if (resolution === void 0 || resolution.isReactive || resolution.key !== eventName) {\n          throw new Error(\n            `For consistency, usePropertyChange must be assigned to an arcgisPropertyChange property and that property should not have @property() or @state() decorators: arcgisPropertyChange = usePropertyChange<this>()(\"prop1\", \"prop2\");`\n          );\n        }\n      },\n      eventEmitter\n    );\n  }\n  return eventEmitter;\n}\nexport {\n  Controller,\n  GenericController,\n  bypassGetter,\n  bypassReadOnly,\n  bypassSetter,\n  controllerSymbol,\n  dynamicGetSet,\n  getSet,\n  isController,\n  keyTrackResolve,\n  load,\n  makeController,\n  makeGenericController,\n  makeT9nController,\n  proxyExports,\n  readonly,\n  retrieveComponent,\n  toFunction,\n  trackKey,\n  trackPropKey,\n  trackPropertyKey,\n  useControllerManager,\n  useDirection,\n  useMedia,\n  usePropertyChange,\n  useWatchAttributes,\n  watch\n};\n"],"mappings":"AAAA,SACEA,kBAAkB,EAClBC,UAAU,EACVC,iBAAiB,EACjBC,YAAY,EACZC,cAAc,EACdC,YAAY,EACZC,gBAAgB,EAChBC,kCAAkC,EAClCC,aAAa,EACbC,iBAAiB,EACjBC,MAAM,EACNC,YAAY,EACZC,eAAe,EACfC,YAAY,EACZC,QAAQ,EACRC,iBAAiB,EACjBC,yBAAyB,EACzBC,mBAAmB,EACnBC,mBAAmB,EACnBC,QAAQ,EACRC,YAAY,EACZC,gBAAgB,EAChBC,KAAK,QACA,qBAAqB;AAC5B,SACEC,wBAAwB,QACnB,qBAAqB;;AAE5B;AACA,SAASC,QAAQ,EAAEC,iBAAiB,EAAEC,aAAa,EAAEC,QAAQ,QAAQ,0BAA0B;AAC/F,SAASC,oBAAoB,QAAQ,0BAA0B;AAC/D,IAAIC,oBAAoB,GAAGA,CAACC,SAAS,EAAEC,WAAW,KAAK,IAAIC,iBAAiB,CAACF,SAAS,EAAEC,WAAW,CAAC;AACpG,IAAIC,iBAAiB,GAAG,cAAc9B,iBAAiB,CAAC;EACtD+B,WAAWA,CAACH,SAAS,EAAEC,WAAW,EAAE;IAClC,MAAMG,KAAK,GAAG,eAAe,IAAIJ,SAAS;IAC1C,IAAIK,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IAAIZ,iBAAiB,CAAC,CAAC,IAAI,CAACS,KAAK,EAAE;MAC1EI,MAAM,CAACC,cAAc,CAACT,SAAS,CAACU,EAAE,EAAE,aAAa,EAAE;QACjDC,KAAK,EAAEX;MACT,CAAC,CAAC;MACF,CAAC,CAAC,CAAC;IACL;IACA,MAAMY,WAAW,GAAG,eAAgB,IAAIC,GAAG,CAAC,CAAC;IAC7C,SAASC,aAAaA,CAACC,UAAU,EAAE;MACjCH,WAAW,CAACI,GAAG,CAACD,UAAU,CAAC;MAC3B,IAAI,EAAEvC,gBAAgB,IAAIuC,UAAU,CAAC,IAAIf,SAAS,CAACiB,UAAU,IAAIjB,SAAS,CAACU,EAAE,CAACQ,WAAW,EAAE;QACzFH,UAAU,CAACI,aAAa,GAAG,CAAC;MAC9B;IACF;IACA,SAASC,gBAAgBA,CAACL,UAAU,EAAE;MACpC,KAAKH,WAAW,CAACS,MAAM,CAACN,UAAU,CAAC;MACnCA,UAAU,CAACO,iBAAiB,GAAG,CAAC;IAClC;IACA,MAAMC,cAAc,GAAGvB,SAAS;IAChCuB,cAAc,CAACT,aAAa,GAAGA,aAAa;IAC5CS,cAAc,CAACH,gBAAgB,GAAGA,gBAAgB;IAClD,IAAI,CAAChB,KAAK,EAAE;MACV,MAAMoB,MAAM,GAAGvB,WAAW,IAAID,SAAS,CAACG,WAAW,CAACsB,aAAa;MACjEF,cAAc,CAACG,aAAa,GAAG,MAAMF,MAAM,CAACxB,SAAS,CAAC;IACxD;IACA,IAAIK,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IAAIZ,iBAAiB,CAAC,CAAC,EAAE;MAChE,MAAMgC,mBAAmB,GAAG;QAC1BC,gBAAgB,EAAE,QAAQ;QAC1BC,kBAAkB,EAAE,SAAS;QAC7BC,kBAAkB,EAAE,SAAS;QAC7BC,qBAAqB,EAAE,cAAc;QACrCC,iBAAiB,EAAE,MAAM;QACzBC,mBAAmB,EAAE,YAAY;QACjCC,mBAAmB,EAAE;MACvB,CAAC;MACD1B,MAAM,CAAC2B,OAAO,CAACR,mBAAmB,CAAC,CAACS,OAAO,CAAC,CAAC,CAACC,aAAa,EAAEC,SAAS,CAAC,KAAK;QAC1E,IAAIlC,KAAK,IAAIiC,aAAa,IAAIrC,SAAS,EAAE;UACvC,MAAM,IAAIuC,KAAK,CACb,cAAcF,aAAa,yBAAyBrC,SAAS,CAACU,EAAE,CAAC8B,OAAO,CAACC,WAAW,CAAC,CAAC,4BAA4BH,SAAS,YAC7H,CAAC;QACH;QACA,IAAI,CAAClC,KAAK,IAAIkC,SAAS,IAAItC,SAAS,EAAE;UACpC,MAAM,IAAIuC,KAAK,CACb,cAAcD,SAAS,6BAA6BtC,SAAS,CAACU,EAAE,CAAC8B,OAAO,CAACC,WAAW,CAAC,CAAC,gCAAgCH,SAAS,YACjI,CAAC;QACH;MACF,CAAC,CAAC;MACF,IAAIlC,KAAK,EAAE;QACT,IAAIsC,CAAC,GAAG,CAAC;QACT,IAAIC,iBAAiB,GAAG,KAAK;QAC7B,KAAK,IAAIC,SAAS,GAAG5C,SAAS,EAAE,CAAC2C,iBAAiB,EAAED,CAAC,EAAE,EAAE;UACvD,IAAIE,SAAS,KAAK,IAAI,EAAE;YACtB,MAAM,IAAIL,KAAK,CAAC,uDAAuD,CAAC;UAC1E;UACA,IAAI/B,MAAM,CAACqC,MAAM,CAACD,SAAS,EAAE,OAAO,CAAC,EAAE;YACrCD,iBAAiB,GAAG,IAAI;YACxB;UACF;UACAC,SAAS,GAAGpC,MAAM,CAACsC,cAAc,CAACF,SAAS,CAAC;QAC9C;QACA,IAAIF,CAAC,GAAG,CAAC,EAAE;UACT,MAAM,IAAIH,KAAK,CACb,4MACF,CAAC;QACH;MACF;IACF;IACA,KAAK,CAACvC,SAAS,CAAC;IAChB;IACA,IAAI,CAAC+C,SAAS,GAAG,IAAI7E,kBAAkB,CAAC,IAAI,CAAC8B,SAAS,CAAC;IACvD,IAAI,CAACgD,SAAS,GAAG,KAAK;IACtB,IAAI,CAACC,cAAc,GAAG,IAAIvD,QAAQ,CAAC,CAAC;IACpC,IAAI,CAACwD,mBAAmB,GAAG,CAAC,CAAC;IAC7B,IAAI,CAAC9C,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACJ,SAAS,CAACmD,OAAO,GAAG,IAAI;IAC7B1D,wBAAwB,CAACO,SAAS,EAAEI,KAAK,CAAC;IAC1C,IAAI,CAACgD,YAAY,GAAGxC,WAAW;IAC/B,IAAI,CAACyC,OAAO,GAAG,KAAK,CAAC;IACrB,IAAI,CAACC,UAAU,GAAGC,2BAA2B,IAAI,IAAI,CAACvD,SAAS,IAAI,OAAO,IAAI,CAACA,SAAS,CAACwD,OAAO,KAAK,UAAU;IAC/G,IAAI,CAACC,qBAAqB,CAAC,CAAC;IAC5B,MAAMV,SAAS,GAAG,IAAI,CAACA,SAAS;IAChCvC,MAAM,CAACkD,IAAI,CAACX,SAAS,CAACY,OAAO,CAAC,CAACvB,OAAO,CAAEwB,IAAI,IAAK;MAC/Cb,SAAS,CAACc,cAAc,CAACD,IAAI,CAAC,GAAGE,mBAAmB;MACpDf,SAAS,CAACgB,cAAc,CAACH,IAAI,CAAC,GAAGE,mBAAmB;MACpDf,SAAS,CAACiB,WAAW,CAACJ,IAAI,CAAC;IAC7B,CAAC,CAAC;IACF,IAAIxD,KAAK,EAAE;MACT,IAAI,CAAC2C,SAAS,CAACkB,eAAe,GAAG,IAAI,CAAClB,SAAS,CAACmB,WAAW;IAC7D,CAAC,MAAM;MACL1D,MAAM,CAACC,cAAc,CAACT,SAAS,EAAE,gBAAgB,EAAE;QACjDmE,GAAG,EAAE,MAAAA,CAAA,KAAY,MAAM,IAAI,CAAClB,cAAc,CAACmB;MAC7C,CAAC,CAAC;IACJ;IACAC,cAAc,CAACtB,SAAS,CAACuB,cAAc,CAAC;IACxCnF,mBAAmB,CAACa,SAAS,CAAC;IAC9BrB,iBAAiB,CAAC4F,GAAG,CAACvE,SAAS,CAACU,EAAE,EAAEV,SAAS,CAAC;IAC9CrB,iBAAiB,CAAC4F,GAAG,CAACvE,SAAS,EAAEA,SAAS,CAAC;EAC7C;EACAyD,qBAAqBA,CAAA,EAAG;IACtB,MAAMzD,SAAS,GAAG,IAAI,CAACA,SAAS;IAChC,MAAMI,KAAK,GAAG,IAAI,CAACA,KAAK;IACxB,MAAMoE,kBAAkB,GAAGxE,SAAS,CAACU,EAAE,KAAKV,SAAS;IACrD,IAAI,CAACkD,mBAAmB,GAAG;MACzB;MACAuB,kBAAkB,EAAErE,KAAK,IAAIoE,kBAAkB,GAAG,KAAK,CAAC,GAAGxE,SAAS,CAAC0E,iBAAiB;MACtFC,qBAAqB,EAAEvE,KAAK,IAAIoE,kBAAkB,GAAG,KAAK,CAAC,GAAGxE,SAAS,CAAC4E,oBAAoB;MAC5FC,KAAK,EAAEzE,KAAK,GAAGJ,SAAS,CAAC8E,IAAI,GAAG9E,SAAS,CAACgC,iBAAiB;MAC3D+C,OAAO,EAAE3E,KAAK,GAAGJ,SAAS,CAACgF,MAAM,GAAGhF,SAAS,CAAC4B,gBAAgB;MAC9DqD,WAAW,EAAE7E,KAAK,GAAG,KAAK,CAAC,GAAGJ,SAAS,CAACkC,mBAAmB;MAC3DgD,QAAQ,EAAE9E,KAAK,GAAG,KAAK,CAAC,GAAGJ,SAAS,CAAC8B,kBAAkB;MACvDqD,QAAQ,EAAEnF,SAAS,CAACwD;IACtB,CAAC;IACD,MAAMrC,aAAa,GAAG,IAAI,CAACsD,kBAAkB,CAACW,IAAI,CAAC,IAAI,CAAC;IACxD,MAAMC,gBAAgB,GAAG,IAAI,CAACV,qBAAqB,CAACS,IAAI,CAAC,IAAI,CAAC;IAC9D,MAAME,UAAU,GAAG,IAAI,CAACC,OAAO,CAACH,IAAI,CAAC,IAAI,CAAC;IAC1C,MAAMI,WAAW,GAAG,IAAI,CAACN,QAAQ,CAACE,IAAI,CAAC,IAAI,CAAC;IAC5C,IAAIhF,KAAK,EAAE;MACTJ,SAAS,CAACG,WAAW,CAACyC,SAAS,CAAC9B,aAAa,CAAC2E,IAAI,CAACzF,SAAS,EAAE;QAC5D;QACAmB,aAAa;QACbkE,gBAAgB;QAChBC,UAAU;QACVE;MACF,CAAC,CAAC;IACJ,CAAC,MAAM;MACLxF,SAAS,CAAC0E,iBAAiB,GAAGvD,aAAa;MAC3CnB,SAAS,CAAC4E,oBAAoB,GAAGS,gBAAgB;MACjDrF,SAAS,CAACgC,iBAAiB,GAAG,IAAI,CAAC6C,KAAK,CAACO,IAAI,CAAC,IAAI,CAAC;MACnDpF,SAAS,CAAC4B,gBAAgB,GAAG,IAAI,CAACmD,OAAO,CAACK,IAAI,CAAC,IAAI,CAAC;MACpDpF,SAAS,CAACkC,mBAAmB,GAAGoD,UAAU;MAC1CtF,SAAS,CAAC8B,kBAAkB,GAAG0D,WAAW;IAC5C;IACA,IAAI,IAAI,CAAClC,UAAU,EAAE;MACnBtD,SAAS,CAACwD,OAAO,GAAG,IAAI,CAACA,OAAO,CAAC4B,IAAI,CAAC,IAAI,CAAC;IAC7C;EACF;EACA;AACF;AACA;AACA;AACA;AACA;AACA;EACEX,kBAAkBA,CAAA,EAAG;IACnB,IAAI,IAAI,CAACzB,SAAS,EAAE;MAClB,MAAMR,OAAO,GAAG,IAAI,CAACxC,SAAS,CAACU,EAAE,CAAC8B,OAAO,CAACC,WAAW,CAAC,CAAC;MACvD,IAAI,CAACzC,SAAS,CAACU,EAAE,CAACgF,MAAM,CAAC,CAAC;MAC1B,MAAM,IAAInD,KAAK,CACb,OAAOC,OAAO,2JAA2Je,2BAA2B,QACtM,CAAC;IACH;IACA,IAAI,IAAI,CAACoC,mBAAmB,KAAK,KAAK,CAAC,EAAE;MACvCC,YAAY,CAAC,IAAI,CAACD,mBAAmB,CAAC;IACxC;IACA,MAAM5C,SAAS,GAAG,IAAI,CAACA,SAAS;IAChCA,SAAS,CAACkB,eAAe,GAAGlB,SAAS,CAACmB,WAAW;IACjDpF,eAAe,CAAC,CAAC;IACjBiE,SAAS,CAACuB,cAAc,GAAG,CAAC;IAC5B,IAAI,CAAClB,YAAY,CAAChB,OAAO,CAACyD,aAAa,CAAC;IACxC,IAAI,CAAC3C,mBAAmB,CAACuB,kBAAkB,EAAEgB,IAAI,CAAC,IAAI,CAACzF,SAAS,CAAC;IACjE,IAAIK,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IAAIZ,iBAAiB,CAAC,CAAC,EAAE;MAChElB,kCAAkC,GAAG,IAAI,EAAE,IAAI,CAAC;IAClD;EACF;EACA;EACAkG,qBAAqBA,CAAA,EAAG;IACtB,IAAI,IAAI,CAAC3B,SAAS,EAAE;MAClB;IACF;IACA,IAAI,CAACI,YAAY,CAAChB,OAAO,CAAC0D,gBAAgB,CAAC;IAC3C,IAAI,CAAC5C,mBAAmB,CAACyB,qBAAqB,EAAEc,IAAI,CAAC,IAAI,CAACzF,SAAS,CAAC;IACpE,IAAI,IAAI,CAACsD,UAAU,EAAE;MACnB,IAAI,CAACyC,sBAAsB,CAAC,CAAC;IAC/B;EACF;EACA;EACA,MAAMlB,KAAKA,CAAA,EAAG;IACZ,MAAMmB,OAAO,CAACC,UAAU,CAACC,KAAK,CAACC,IAAI,CAAC,IAAI,CAAC/C,YAAY,EAAEgD,QAAQ,CAAC,CAAC;IACjE,MAAM,IAAI,CAAClD,mBAAmB,CAAC2B,KAAK,EAAEY,IAAI,CAAC,IAAI,CAACzF,SAAS,CAAC;IAC1D,IAAI,IAAI,CAACsD,UAAU,EAAE;MACnB9D,KAAK,CAAC,IAAI,CAACQ,SAAS,EAAEuD,2BAA2B,EAAE,MAAM,IAAI,CAACwC,sBAAsB,CAAC,CAAC,CAAC;IACzF;EACF;EACA;EACAhB,OAAOA,CAAA,EAAG;IACR,IAAI,CAAC3B,YAAY,CAAChB,OAAO,CAACiE,UAAU,CAAC;IACrC,IAAI,CAACnD,mBAAmB,CAAC6B,OAAO,EAAEU,IAAI,CAAC,IAAI,CAACzF,SAAS,CAAC;EACxD;EACAuF,OAAOA,CAAA,EAAG;IACR,MAAMe,iBAAiB,GAAG,IAAI,CAACtG,SAAS;IACxC,IAAI,CAACoD,YAAY,CAAChB,OAAO,CAACmE,UAAU,EAAED,iBAAiB,CAACE,QAAQ,CAAC;IACjE,OAAO,IAAI,CAACtD,mBAAmB,CAAC+B,WAAW,EAAEQ,IAAI,CAAC,IAAI,CAACzF,SAAS,CAAC;EACnE;EACAkF,QAAQA,CAAA,EAAG;IACT,MAAMoB,iBAAiB,GAAG,IAAI,CAACtG,SAAS;IACxC,IAAI,CAACoD,YAAY,CAAChB,OAAO,CAACqE,WAAW,EAAEH,iBAAiB,CAACE,QAAQ,CAAC;IAClE,IAAI,CAACtD,mBAAmB,CAACgC,QAAQ,EAAEO,IAAI,CAAC,IAAI,CAACzF,SAAS,CAAC;IACvD,IAAI,IAAI,CAACI,KAAK,EAAE;MACdkG,iBAAiB,CAACE,QAAQ,GAAG,eAAgB,IAAIE,GAAG,CAAC,CAAC;IACxD,CAAC,MAAM;MACL,MAAMC,aAAa,GAAG,IAAI,CAAC1D,cAAc;MACzC,IAAI,CAACA,cAAc,GAAG,IAAIvD,QAAQ,CAAC,CAAC;MACpCiH,aAAa,CAACC,OAAO,CAAC,IAAI,CAAC;IAC7B;EACF;EACA,MAAMpD,OAAOA,CAAA,EAAG;IACd,IAAInD,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IAAIZ,iBAAiB,CAAC,CAAC,EAAE;MAChE,IAAI,CAACkH,gBAAgB,GAAG,CAAC;IAC3B;IACA,IAAI,IAAI,CAAC7D,SAAS,EAAE;MAClB;IACF;IACA,IAAI,IAAI,CAAChD,SAAS,CAACU,EAAE,CAACQ,WAAW,EAAE;MACjC,IAAI,CAACoC,UAAU,GAAG,KAAK;MACvB,IAAI;QACF,IAAI,CAACtD,SAAS,CAACU,EAAE,CAACgF,MAAM,CAAC,CAAC;MAC5B,CAAC,SAAS;QACR,IAAI,CAACpC,UAAU,GAAG,IAAI;MACxB;IACF;IACA,IAAI,CAACqC,mBAAmB,GAAG,KAAK,CAAC;IACjC,IAAI,CAAC3C,SAAS,GAAG,IAAI;IACrB,IAAI,CAACI,YAAY,CAAChB,OAAO,CAAC0E,WAAW,CAAC;IACtC,IAAI,CAAC1D,YAAY,CAAC2D,KAAK,CAAC,CAAC;IACzB,MAAM,IAAI,CAAC7D,mBAAmB,CAACiC,QAAQ,EAAEM,IAAI,CAAC,IAAI,CAACzF,SAAS,CAAC;EAC/D;EACA+F,sBAAsBA,CAAA,EAAG;IACvB,IAAI,IAAI,CAACJ,mBAAmB,KAAK,KAAK,CAAC,EAAE;MACvCC,YAAY,CAAC,IAAI,CAACD,mBAAmB,CAAC;IACxC;IACA,IAAI,CAAC,IAAI,CAAC3F,SAAS,CAACU,EAAE,CAACQ,WAAW,IAAI,CAAC,IAAI,CAAClB,SAAS,CAACgH,mBAAmB,EAAE;MACzE,MAAMxD,OAAO,GAAGA,CAAA,KAAM,KAAK,IAAI,CAACA,OAAO,CAAC,CAAC,CAACyD,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;MAC9D,IAAI9G,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IAAIZ,iBAAiB,CAAC,CAAC,IAAIyH,8BAA8B,KAAK,CAAC,EAAE;QACxG/C,cAAc,CAACb,OAAO,CAAC;MACzB,CAAC,MAAM;QACL,IAAI,CAACmC,mBAAmB,GAAG7F,oBAAoB,CAAC0D,OAAO,EAAE4D,8BAA8B,CAAC;MAC1F;IACF;EACF;AACF,CAAC;AACD,IAAI/G,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IAAIZ,iBAAiB,CAAC,CAAC,EAAE;EAChEO,iBAAiB,CAAC0C,SAAS,CAACiE,gBAAgB,GAAG,SAASA,gBAAgBA,CAAA,EAAG;IACzE,IAAI,CAAC,IAAI,CAACvD,UAAU,EAAE;MACpB,MAAM,IAAIf,KAAK,CACb;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,IAAI,CAACnC,KAAK,GAAG,UAAU,GAAG,MAAM,MAAMmD,2BAA2B;AAC9E;AACA;AACA,aAAa,IAAI,CAACnD,KAAK,GAAG,QAAQ,GAAG,QAAQ;AAC7C;AACA;AACA;AACA,WAAW,CAACiH,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACH,IAAI,CAAC,CAAC,CAAC,CAACI,IAAI,CAAC,IAAI,CAC7D,CAAC;IACH;EACF,CAAC;AACH;AACA,IAAIlE,2BAA2B,GAAG,qBAAqB;AACvD,IAAI6D,8BAA8B,GAAG,GAAG;AACxC,IAAIM,eAAe,GAAGrH,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IAAIZ,iBAAiB,CAAC,CAAC,GAAG;EACnFgI,iCAAiC,EAAGC,OAAO,IAAK;IAC9CR,8BAA8B,GAAGQ,OAAO;EAC1C;AACF,CAAC,GAAG,KAAK,CAAC;AACV,IAAI9D,mBAAmB,GAAInD,KAAK,IAAKA,KAAK;AAC1C,SAASkF,aAAaA,CAAC9E,UAAU,EAAE;EACjC,IAAI,kBAAkB,IAAIA,UAAU,EAAE;IACpCA,UAAU,CAAC8G,gBAAgB,CAAC,CAAC;EAC/B,CAAC,MAAM;IACLhI,QAAQ,CAACkB,UAAU,CAACI,aAAa,EAAEJ,UAAU,CAAC;EAChD;AACF;AACA,SAAS+E,gBAAgBA,CAAC/E,UAAU,EAAE;EACpC,IAAI,qBAAqB,IAAIA,UAAU,EAAE;IACvCA,UAAU,CAAC+G,mBAAmB,CAAC,CAAC;EAClC,CAAC,MAAM;IACLjI,QAAQ,CAACkB,UAAU,CAACsE,gBAAgB,EAAEtE,UAAU,CAAC;EACnD;AACF;AACA,eAAeqF,QAAQA,CAACrF,UAAU,EAAE;EAClC,IAAI,aAAa,IAAIA,UAAU,EAAE;IAC/B,MAAMA,UAAU,CAACgH,WAAW,CAAC,CAAC;EAChC,CAAC,MAAM;IACL,MAAMnI,aAAa,CAACmB,UAAU,CAACiH,QAAQ,EAAEjH,UAAU,CAAC;EACtD;AACF;AACA,SAASsF,UAAUA,CAACtF,UAAU,EAAE;EAC9B,IAAI,eAAe,IAAIA,UAAU,EAAE;IACjCA,UAAU,CAACkH,aAAa,CAAC,CAAC;EAC5B,CAAC,MAAM;IACLpI,QAAQ,CAACkB,UAAU,CAACmH,UAAU,EAAEnH,UAAU,CAAC;EAC7C;AACF;AACA,SAASwF,UAAUA,CAACxF,UAAU,EAAE;EAC9B,IAAI,eAAe,IAAIA,UAAU,EAAE;IACjCA,UAAU,CAACoH,aAAa,CAAC,IAAI,CAAC;EAChC,CAAC,MAAM;IACLtI,QAAQ,CAACkB,UAAU,CAACuE,UAAU,EAAEvE,UAAU,EAAE,IAAI,CAAC;EACnD;AACF;AACA,SAAS0F,WAAWA,CAAC1F,UAAU,EAAE;EAC/B,IAAI,gBAAgB,IAAIA,UAAU,EAAE;IAClCA,UAAU,CAACqH,cAAc,CAAC,IAAI,CAAC;EACjC,CAAC,MAAM;IACLvI,QAAQ,CAACkB,UAAU,CAACyE,WAAW,EAAEzE,UAAU,EAAE,IAAI,CAAC;EACpD;AACF;AACA,SAAS+F,WAAWA,CAAC/F,UAAU,EAAE;EAC/B,IAAI,gBAAgB,IAAIA,UAAU,EAAE;IAClCA,UAAU,CAACsH,cAAc,CAAC,CAAC;EAC7B,CAAC,MAAM;IACLxI,QAAQ,CAACkB,UAAU,CAACuH,WAAW,EAAEvH,UAAU,CAAC;EAC9C;AACF;;AAEA;AACA,IAAIwH,cAAc,GAAIpI,WAAW,IAAKqI,KAAK,CAAC,KAAK,CAAC,EAAErI,WAAW,CAAC;AAChE,IAAIsI,qBAAqB,GAAItI,WAAW,IAAMH,SAAS,IAAKwI,KAAK,CAC/DxI,SAAS;AACT;AACF;AACA;AACA;AACA;AACEG,WACF,CAAC;AACD,IAAIuI,oBAAoB,GAAG,cAAcvK,UAAU,CAAC;EAClDgC,WAAWA,CAACH,SAAS,EAAEG,WAAW,EAAE;IAClC,KAAK,CAACH,SAAS,CAAC;IAChB,MAAM2I,eAAe,GAAG,IAAI,CAACtF,OAAO;IACpC,IAAI;MACFlE,mBAAmB,CAAC,IAAI,CAACa,SAAS,CAAC;MACnC,MAAMW,KAAK,GAAGR,WAAW,CAAC,IAAI,CAACH,SAAS,EAAE,IAAI,CAAC;MAC/C,MAAM4I,yBAAyB,GAAG,IAAI,CAACvF,OAAO,KAAKsF,eAAe;MAClE,IAAIhI,KAAK,YAAYqF,OAAO,EAAE;QAC5B,IAAI,CAAC4C,yBAAyB,EAAE;UAC9B,IAAI,CAACC,qBAAqB,CAAClI,KAAK,CAAC;QACnC;QACA,MAAMmI,QAAQ,GAAGnI,KAAK,CAACoI,IAAI,CAAEC,MAAM,IAAK;UACtC,IAAI,CAAC3F,OAAO,GAAG2F,MAAM;UACrB,KAAK,CAACC,gBAAgB,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAChC,KAAK,CAAEE,KAAK,IAAK;UAClB,IAAI,CAAC+B,MAAM,CAACC,MAAM,CAAChC,KAAK,CAAC;UACzBD,OAAO,CAACC,KAAK,CAACA,KAAK,CAAC;QACtB,CAAC,CAAC;QACF,IAAI,CAACiC,MAAM,CAAC,YAAY,MAAMN,QAAQ,CAAC;MACzC,CAAC,MAAM;QACL,IAAI,CAACF,yBAAyB,IAAIjI,KAAK,KAAK,KAAK,CAAC,EAAE;UAClD,IAAI,CAAC0C,OAAO,GAAG1C,KAAK;QACtB;QACA0D,cAAc,CAAC,MAAM,KAAK,CAAC4E,gBAAgB,CAAC,CAAC,CAAC;MAChD;IACF,CAAC,CAAC,OAAO9B,KAAK,EAAE;MACd,IAAI,CAAC+B,MAAM,CAACC,MAAM,CAAChC,KAAK,CAAC;MACzBD,OAAO,CAACC,KAAK,CAACA,KAAK,CAAC;IACtB;EACF;EACA;EACA8B,gBAAgBA,CAAA,EAAG;IACjB;EACF;AACF,CAAC;AACD,IAAIT,KAAK,GAAGzJ,YAAY,CAAC2J,oBAAoB,CAAC;;AAE9C;AACA,IAAIW,kBAAkB,GAAGA,CAACC,UAAU,EAAEC,QAAQ,KAAK,IAAIC,wBAAwB,CAACF,UAAU,EAAEC,QAAQ,CAAC;AACrG,IAAIC,wBAAwB,GAAG,cAAcrL,UAAU,CAAC;EACtDgC,WAAWA,CAACsJ,WAAW,EAAEC,SAAS,EAAE;IAClC,KAAK,CAAC,CAAC;IACP,IAAI,CAACD,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACC,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,SAAS,GAAG,IAAIC,gBAAgB,CAAEC,SAAS,IAAK;MACnDA,SAAS,CAACzH,OAAO,CAAE0H,QAAQ,IAAK;QAC9B,IAAIL,WAAW,CAACM,QAAQ,CAACD,QAAQ,CAACE,aAAa,CAAC,EAAE;UAChDN,SAAS,CAACjE,IAAI,CACZ,IAAI,CAACzF,SAAS,EACd,IAAI,CAACA,SAAS,CAACU,EAAE,CAACuJ,YAAY,CAACH,QAAQ,CAACE,aAAa,CAAC,EACtDF,QAAQ,CAACI,QAAQ,EACjBJ,QAAQ,CAACE,aACX,CAAC;QACH;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EACA7I,aAAaA,CAAA,EAAG;IACd,IAAI,CAACsI,WAAW,CAACrH,OAAO,CAAE+H,SAAS,IAAK;MACtC,IAAI,IAAI,CAACnK,SAAS,CAACU,EAAE,CAAC0J,YAAY,CAACD,SAAS,CAAC,EAAE;QAC7C,IAAI,CAACT,SAAS,CAACjE,IAAI,CAAC,IAAI,CAACzF,SAAS,EAAE,IAAI,EAAE,IAAI,CAACA,SAAS,CAACU,EAAE,CAACuJ,YAAY,CAACE,SAAS,CAAC,EAAEA,SAAS,CAAC;MACjG;IACF,CAAC,CAAC;IACF,IAAI,CAACR,SAAS,CAACU,OAAO,CAAC,IAAI,CAACrK,SAAS,CAACU,EAAE,EAAE;MACxC4I,UAAU,EAAE,IAAI;MAChBgB,iBAAiB,EAAE,IAAI;MACvBC,eAAe,EAAE,IAAI,CAACd;IACxB,CAAC,CAAC;EACJ;EACApE,gBAAgBA,CAAA,EAAG;IACjB,IAAI,CAACsE,SAAS,CAACa,UAAU,CAAC,CAAC;EAC7B;AACF,CAAC;;AAED;AACA,IAAI1F,IAAI,GAAGyD,cAAc;;AAEzB;AACA,IAAIkC,UAAU,GAAIC,KAAK,IAAK,CAAC,GAAGC,IAAI,KAAK;EACvC,MAAMC,kBAAkB,GAAG1L,yBAAyB,CAAC,CAAC;EACtD,MAAM2L,QAAQ,GAAG,IAAIH,KAAK,CAAC,GAAGC,IAAI,CAAC;EACnCvL,mBAAmB,CAACwL,kBAAkB,CAACE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9C,OAAOD,QAAQ;AACjB,CAAC;;AAED;AACA,IAAIE,QAAQ,GAAIC,KAAK,IAAKzC,cAAc,CAAC,CAAC0C,UAAU,EAAElK,UAAU,KAAK;EACnE,MAAMmK,KAAK,GAAGC,UAAU,CAACC,UAAU,CAACJ,KAAK,CAAC;EAC1C,SAASK,OAAOA,CAAA,EAAG;IACjBtK,UAAU,CAACsC,OAAO,GAAG6H,KAAK,CAACI,OAAO;EACpC;EACAD,OAAO,CAAC,CAAC;EACTtK,UAAU,CAACwK,WAAW,CAAC,MAAM;IAC3BL,KAAK,CAACM,gBAAgB,CAAC,QAAQ,EAAEH,OAAO,CAAC;IACzC,OAAO,MAAMH,KAAK,CAACO,mBAAmB,CAAC,QAAQ,EAAEJ,OAAO,CAAC;EAC3D,CAAC,CAAC;EACF,OAAO,KAAK,CAAC;AACf,CAAC,CAAC;;AAEF;AACA,SAASK,mBAAmB,EAAE/L,iBAAiB,IAAIgM,kBAAkB,EAAEC,wBAAwB,QAAQ,0BAA0B;AACjI,IAAIC,gBAAgB,GAAG,KAAK;AAC5B,IAAIC,YAAY,GAAGA,CAAA,KAAMvD,cAAc,CAAC,CAACvI,SAAS,EAAEe,UAAU,KAAK;EACjEA,UAAU,CAACsC,OAAO,GAAGwI,gBAAgB;EACrC9K,UAAU,CAACwK,WAAW,CAAC,MAAM;IAC3B,SAAShC,QAAQA,CAAA,EAAG;MAClB,MAAMwC,GAAG,GAAGL,mBAAmB,CAAC1L,SAAS,CAACU,EAAE,EAAE,KAAK,EAAEmL,gBAAgB,CAAC;MACtE9K,UAAU,CAACsC,OAAO,GAAG0I,GAAG,KAAK,KAAK,GAAG,KAAK,GAAG,KAAK;IACpD;IACAxC,QAAQ,CAAC,CAAC;IACV,OAAOqC,wBAAwB,CAAC5L,SAAS,CAACU,EAAE,EAAE,CAAC,KAAK,CAAC,EAAE6I,QAAQ,CAAC;EAClE,CAAC,CAAC;EACF,IAAIlJ,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IAAIoL,kBAAkB,CAAC,CAAC,EAAE;IACjEtM,QAAQ,CACNW,SAAS,EACR8I,QAAQ,IAAK;MACZ,IAAIA,QAAQ,EAAEkD,GAAG,KAAK,KAAK,EAAE;QAC3B,MAAM,IAAIzJ,KAAK,CACb,gQACF,CAAC;MACH;IACF,CAAC,EACDxB,UAAU,CAACsC,OACb,CAAC;EACH;EACA,OAAO,KAAK,CAAC;AACf,CAAC,CAAC;;AAEF;AACA,SAAS4I,iBAAiB,EAAEC,mBAAmB,QAAQ,0BAA0B;AACjF,IAAIC,iBAAiB,GAAIC,YAAY,IAAK,CAACC,OAAO,GAAG,CAAC,CAAC;AACrD;AACA9D,cAAc,CAAC,CAACvI,SAAS,EAAEe,UAAU,KAAK;EACxC,MAAMuL,MAAM,GAAGL,iBAAiB,CAACjM,SAAS,CAACU,EAAE,CAAC;EAC9C,MAAM6L,OAAO,GAAG;IACdC,KAAK,EAAEF,MAAM,CAACG,IAAI;IAClBC,UAAU,EAAEJ,MAAM,CAACK,SAAS;IAC5BC,QAAQ,EAAE;EACZ,CAAC;EACD,MAAMC,sBAAsB,GAAG7M,SAAS;EACxCe,UAAU,CAACwK,WAAW,CACpB,MAAMW,mBAAmB,CACvBlM,SAAS,CAACU,EAAE,EACZ,MAAM0L,YAAY,CAAC,UAAU,CAAC,EAC9B,CAAC;IAAEO,SAAS;IAAEG,UAAU;IAAEL;EAAK,CAAC,KAAK;IACnC,MAAMM,gBAAgB,GAAG;MACvB,GAAGD,UAAU;MACbN,KAAK,EAAEC,IAAI;MACXC,UAAU,EAAEC,SAAS;MACrBC,QAAQ,EAAE;IACZ,CAAC;IACD7L,UAAU,CAACsC,OAAO,GAAG0J,gBAAgB;IACrC,MAAMC,KAAK,GAAGF,UAAU,CAACG,cAAc;IACvC,IAAI,OAAOD,KAAK,KAAK,QAAQ,IAAI,OAAO,IAAIhN,SAAS,IAAIA,SAAS,CAACgN,KAAK,IAAI,IAAI,EAAE;MAChFhN,SAAS,CAACgN,KAAK,KAAKhN,SAAS,CAACgN,KAAK,GAAGA,KAAK,CAAC;IAC9C;IACAE,cAAc,CAACL,sBAAsB,CAACM,gBAAgB,CAAC;EACzD,CAAC,EACDd,OAAO,CAACzI,IACV,CACF,CAAC;EACD,SAASsJ,cAAcA,CAACC,gBAAgB,EAAE;IACxC,MAAMC,YAAY,GAAGrM,UAAU,CAACsC,OAAO;IACvC,MAAMgK,WAAW,GAAGD,YAAY,CAACE,SAAS,IAAIF,YAAY;IAC1D,MAAMG,OAAO,GAAGC,SAAS,CAACH,WAAW,EAAEF,gBAAgB,CAAC;IACxD,IAAIA,gBAAgB,EAAE;MACpBI,OAAO,CAACD,SAAS,GAAGD,WAAW;IACjC;IACAtM,UAAU,CAACsC,OAAO,GAAGkK,OAAO;EAC9B;EACA,IAAI,kBAAkB,IAAIV,sBAAsB,EAAE;IAChD9L,UAAU,CAACwK,WAAW,CAAC,MAAM/L,KAAK,CAACqN,sBAAsB,EAAE,kBAAkB,EAAEK,cAAc,CAAC,CAAC;EACjG;EACA,IAAIb,OAAO,CAACoB,QAAQ,EAAE;IACpB1M,UAAU,CAAC8H,qBAAqB,CAAC0D,OAAO,EAAE,KAAK,CAAC;IAChD,OAAOxL,UAAU,CAAC2M,KAAK;EACzB,CAAC,MAAM;IACL,OAAOnB,OAAO;EAChB;AACF,CAAC,CACF;AACD,SAASiB,SAASA,CAACG,QAAQ,EAAEC,UAAU,EAAE;EACvC,IAAI,CAACA,UAAU,EAAE;IACf,OAAOD,QAAQ;EACjB;EACA,MAAME,MAAM,GAAG;IAAE,GAAGF;EAAS,CAAC;EAC9BnN,MAAM,CAAC2B,OAAO,CAACyL,UAAU,CAAC,CAACxL,OAAO,CAAC,CAAC,CAAC4J,GAAG,EAAErL,KAAK,CAAC,KAAK;IACnD,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MAC7BkN,MAAM,CAAC7B,GAAG,CAAC,GAAGwB,SAAS,CAACG,QAAQ,CAAC3B,GAAG,CAAC,EAAErL,KAAK,CAAC;IAC/C,CAAC,MAAM;MACLkN,MAAM,CAAC7B,GAAG,CAAC,GAAGrL,KAAK,IAAIgN,QAAQ,CAAC3B,GAAG,CAAC;IACtC;EACF,CAAC,CAAC;EACF,OAAO6B,MAAM;AACf;;AAEA;AACA,SAASlO,iBAAiB,IAAImO,kBAAkB,QAAQ,0BAA0B;AAClF,IAAIC,iBAAiB,GAAI9C,UAAU,IAAK+C,wBAAwB;AAChE,IAAIC,SAAS,GAAG,sBAAsB;AACtC,SAASD,wBAAwBA,CAAC,GAAGE,OAAO,EAAE;EAC5C,MAAMlO,SAAS,GAAGf,iBAAiB,CAAC,CAAC;EACrC,MAAMkP,gBAAgB,GAAGnO,SAAS;EAClC,IAAIoO,YAAY,GAAGD,gBAAgB,CAACF,SAAS,CAAC;EAC9C,IAAIjO,SAAS,CAACmD,OAAO,CAAC/C,KAAK,EAAE;IAC3BgO,YAAY,GAAGpO,SAAS,CAACG,WAAW,CAACkO,YAAY,CAACJ,SAAS,EAAE,KAAK,CAAC,EAAEjO,SAAS,CAAC;IAC/E,IAAIK,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IAAIuN,kBAAkB,CAAC,CAAC,EAAE;MACjE,IAAI,OAAOM,YAAY,KAAK,QAAQ,IAAIA,YAAY,KAAK,IAAI,IAAI,EAAE,MAAM,IAAIA,YAAY,CAAC,IAAI,OAAOA,YAAY,CAACE,IAAI,KAAK,UAAU,EAAE;QACrI,MAAM,IAAI/L,KAAK,CAAC,uEAAuE,CAAC;MAC1F;IACF;EACF;EACA,IAAIlC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IAAIuN,kBAAkB,CAAC,CAAC,EAAE;IACjE,IAAI,OAAOM,YAAY,KAAK,QAAQ,IAAIA,YAAY,KAAK,IAAI,IAAI,EAAE,MAAM,IAAIA,YAAY,CAAC,IAAI,OAAOA,YAAY,CAACE,IAAI,KAAK,UAAU,EAAE;MACrI,MAAM,IAAI/L,KAAK,CACb,wHACF,CAAC;IACH;IACA,MAAMgM,QAAQ,GAAG,IAAI1N,GAAG,CACtBL,MAAM,CAAC2B,OAAO,CAACnC,SAAS,CAACmD,OAAO,CAACJ,SAAS,CAACY,OAAO,CAAC,CAAC6K,MAAM,CAAC,CAAC,CAACC,KAAK,EAAE,CAACC,QAAQ,CAAC,CAAC,KAAK,CAACA,QAAQ,GAAG,EAAE,CAAC,gBAAgB,CAAC,CAAC,CAACnH,GAAG,CAAC,CAAC,CAAC3D,IAAI,CAAC,KAAKA,IAAI,CAC5I,CAAC;IACDsK,OAAO,CAAC9L,OAAO,CAAEuM,IAAI,IAAK;MACxB,IAAI,CAACJ,QAAQ,CAACK,GAAG,CAACD,IAAI,CAAC,EAAE;QACvB,MAAM,IAAIpM,KAAK,CACboM,IAAI,IAAI3O,SAAS,GAAG,2CAA2C2O,IAAI,sCAAsC3O,SAAS,CAACmD,OAAO,CAAC/C,KAAK,GAAG,UAAU,GAAG,MAAM,SAASuO,IAAI,OAAO3O,SAAS,CAACU,EAAE,CAAC8B,OAAO,CAACC,WAAW,CAAC,CAAC,EAAE,GAAG,0CAA0CkM,IAAI,wDAAwD3O,SAAS,CAACU,EAAE,CAAC8B,OAAO,CAACC,WAAW,CAAC,CAAC,EAC3V,CAAC;MACH;IACF,CAAC,CAAC;EACJ;EACAzC,SAAS,CAACmD,OAAO,CAACiG,MAAM,CACtB,MAAMpJ,SAAS,CAACmD,OAAO,CAACoI,WAAW,CACjC,MAAM2C,OAAO,CAAC3G,GAAG,CACd3D,IAAI;EACH;EACApE,KAAK,CAACQ,SAAS,EAAE4D,IAAI,EAAE,MAAMwK,YAAY,CAACE,IAAI,CAAC;IAAE1K;EAAK,CAAC,CAAC,CAE5D,CACF,CACF,CAAC;EACD,IAAIvD,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IAAIuN,kBAAkB,CAAC,CAAC,IAAI9N,SAAS,CAACmD,OAAO,CAAC/C,KAAK,EAAE;IAC5Ff,QAAQ,CACNW,SAAS,EACR6O,UAAU,IAAK;MACd,IAAIA,UAAU,KAAK,KAAK,CAAC,IAAIA,UAAU,CAACC,UAAU,IAAID,UAAU,CAAC7C,GAAG,KAAKiC,SAAS,EAAE;QAClF,MAAM,IAAI1L,KAAK,CACb,mOACF,CAAC;MACH;IACF,CAAC,EACD6L,YACF,CAAC;EACH;EACA,OAAOA,YAAY;AACrB;AACA,SACEjQ,UAAU,EACVC,iBAAiB,EACjBC,YAAY,EACZC,cAAc,EACdC,YAAY,EACZC,gBAAgB,EAChBE,aAAa,EACbE,MAAM,EACNC,YAAY,EACZC,eAAe,EACfgG,IAAI,EACJyD,cAAc,EACdE,qBAAqB,EACrB0D,iBAAiB,EACjBpN,YAAY,EACZC,QAAQ,EACRC,iBAAiB,EACjBwL,UAAU,EACVpL,QAAQ,EACRC,YAAY,EACZC,gBAAgB,EAChBQ,oBAAoB,EACpB+L,YAAY,EACZf,QAAQ,EACRgD,iBAAiB,EACjB1E,kBAAkB,EAClB7J,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}