{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport \"../../../core/has.js\";\nimport { JSONMap as t } from \"../../../core/jsonMap.js\";\nimport e from \"../PixelBlock.js\";\nimport { mirror as o } from \"./mirror.js\";\nconst n = new t({\n  1: \"min\",\n  2: \"max\",\n  3: \"mean\",\n  4: \"stddev\",\n  5: \"median\",\n  6: \"majority\",\n  7: \"minority\"\n}, {\n  useNumericKeys: !0\n});\nfunction s(t, e) {\n  const {\n      fillNoDataOnly: o\n    } = e,\n    {\n      band: n,\n      width: s,\n      height: r,\n      mask: i,\n      outBand: l\n    } = t;\n  if (o && !i) return void l.set(n);\n  const {\n      statisticsType: a,\n      kernelRows: c,\n      kernelCols: f\n    } = e,\n    h = \"stddev\" === a,\n    m = s * r,\n    u = new Float64Array(m),\n    d = new Float64Array(m),\n    y = new Uint32Array(m);\n  for (let A = 0; A < r; A++) {\n    const t = A * s;\n    let e = 0,\n      o = 0,\n      r = 0;\n    for (let s = 0; s < f; s++) i && !i[t + s] || (e += n[t + s], h && (o += n[t + s] ** 2), r++);\n    u[t] = e, d[t] = o, y[t] = r;\n    for (let l = 1; l <= s - f; l++) {\n      const s = t + l - 1,\n        a = s + f;\n      i ? (i[s] && (r--, e -= n[s], h && (o -= n[s] ** 2)), i[a] && (r++, e += n[a], h && (o += n[a] ** 2))) : (e -= n[s], e += n[a], h && (o -= n[s] ** 2, o += n[a] ** 2)), u[t + l] = e, y[t + l] = r, h && (d[t + l] = o);\n    }\n  }\n  const k = new Float64Array(m),\n    w = new Float64Array(m),\n    p = new Uint32Array(m),\n    M = c * s;\n  for (let A = 0; A <= s - f; A++) {\n    let t = 0,\n      e = 0,\n      o = 0;\n    for (let n = 0; n < c; n++) {\n      const r = n * s + A;\n      t += u[r], o += y[r], h && (e += d[r]);\n    }\n    k[A] = t, w[A] = e, p[A] = o;\n    for (let n = 1; n <= r - c; n++) {\n      const r = (n - 1) * s + A,\n        i = r + M;\n      t -= u[r], t += u[i], o -= y[r], o += y[i], h && (e -= d[r], e += d[i]), k[n * s + A] = t, w[n * s + A] = e, p[n * s + A] = o;\n    }\n  }\n  const g = Math.floor(c / 2),\n    b = Math.floor(f / 2);\n  for (let A = g; A < r - g; A++) {\n    const t = A * s;\n    for (let e = b; e < s - b; e++) {\n      const n = (A - g) * s + e - b,\n        r = p[n];\n      if (0 === r || o && (!i || i[t + e])) continue;\n      const a = k[n] / r,\n        c = h ? Math.sqrt((w[n] - k[n] * a) / r) : a;\n      l[t + e] = c, i && (i[t + e] = 255);\n    }\n  }\n}\nfunction r(t, e) {\n  const {\n      fillNoDataOnly: o\n    } = e,\n    {\n      band: n,\n      width: s,\n      height: r,\n      mask: i,\n      outBand: l\n    } = t;\n  if (o && !i) return void l.set(n);\n  const {\n      kernelRows: a,\n      kernelCols: c,\n      statisticsType: f\n    } = e,\n    h = Math.floor(a / 2),\n    m = Math.floor(c / 2),\n    u = \"min\" === f,\n    d = l.slice(),\n    y = new Uint32Array(s * r);\n  for (let k = h; k < r - h; k++) {\n    const t = k * s;\n    for (let e = m; e < s - m; e++) {\n      let o = u ? Number.MAX_VALUE : -Number.MAX_VALUE,\n        r = 0;\n      for (let l = 0; l < a; l++) for (let a = 0; a < c; a++) {\n        const c = t + e + (l - h) * s + a - m;\n        i && !i[c] || (o = u ? Math.min(o, n[c]) : Math.max(o, n[c]), r++);\n      }\n      i ? (d[t + e] = 0 === r ? 0 : o, y[t + e] = r) : l[t + e] = 0 === r ? 0 : o;\n    }\n  }\n  if (i) for (let k = h; k < r - h; k++) {\n    const t = k * s;\n    for (let e = m; e < s - m; e++) if (y[t + e]) {\n      if (o && i[t + e]) continue;\n      l[t + e] = d[t + e], i[t + e] = 255;\n    }\n  }\n}\nfunction i(t, e) {\n  const {\n      fillNoDataOnly: o\n    } = e,\n    {\n      band: n,\n      width: s,\n      height: r,\n      mask: i,\n      outBand: l\n    } = t;\n  if (o && !i) return void l.set(n);\n  const {\n      kernelRows: a,\n      kernelCols: c\n    } = e,\n    f = Math.floor(a / 2),\n    h = Math.floor(c / 2),\n    m = l.slice(),\n    u = new Uint32Array(s * r);\n  for (let d = f; d < r - f; d++) {\n    const t = d * s;\n    for (let e = h; e < s - h; e++) {\n      if (o && i?.[t + e]) continue;\n      const r = [];\n      for (let o = 0; o < a; o++) for (let l = 0; l < c; l++) {\n        const a = t + e + (o - f) * s + l - h;\n        i && !i[a] || r.push(n[a]);\n      }\n      r.length && (r.sort((t, e) => t - e), i ? (m[t + e] = r[Math.floor((r.length - 1) / 2)], u[t + e] = r.length) : l[t + e] = r[Math.floor((r.length - 1) / 2)]);\n    }\n  }\n  if (i) for (let d = f; d < r - f; d++) {\n    const t = d * s;\n    for (let e = h; e < s - h; e++) if (u[t + e]) {\n      if (o && i[t + e]) continue;\n      l[t + e] = m[t + e], i[t + e] = 255;\n    }\n  }\n}\nfunction l(t, e) {\n  const {\n      fillNoDataOnly: o\n    } = e,\n    {\n      band: n,\n      width: s,\n      height: r,\n      mask: i,\n      outBand: l\n    } = t;\n  if (o && !i) return void l.set(n);\n  const {\n      kernelRows: a,\n      kernelCols: c\n    } = e,\n    f = Math.floor(a / 2),\n    h = Math.floor(c / 2),\n    m = \"majority\" === e.statisticsType,\n    u = a * c,\n    d = l.slice(),\n    y = new Uint32Array(s * r);\n  for (let k = f; k < r - f; k++) {\n    const t = k * s;\n    for (let e = h; e < s - h; e++) {\n      if (o && i?.[t + e]) continue;\n      const r = new Map();\n      for (let o = 0; o < a; o++) for (let l = 0; l < c; l++) {\n        const a = t + e + (o - f) * s + l - h;\n        if (i && !i[a]) continue;\n        const c = n[a];\n        r.set(c, r.has(c) ? r.get(c) + 1 : 1);\n      }\n      if (0 === r.size) continue;\n      let k = 0,\n        w = 0,\n        p = m ? 0 : u + 1;\n      for (const t of r.keys()) w = r.get(t), m === w > p && (p = w, k = t);\n      i ? (d[t + e] = k, y[t + e] = r.size) : l[t + e] = k;\n    }\n  }\n  if (i) for (let k = f; k < r - f; k++) {\n    const t = k * s;\n    for (let e = h; e < s - h; e++) if (y[t + e]) {\n      if (o && i[t + e]) continue;\n      l[t + e] = d[t + e], i[t + e] = 255;\n    }\n  }\n}\nfunction a(t, n) {\n  const {\n      mask: a\n    } = t,\n    {\n      fillNoDataOnly: c\n    } = n;\n  if (c && !a) return t;\n  const {\n      pixels: f,\n      width: h,\n      height: m,\n      bandMasks: u,\n      pixelType: d\n    } = t,\n    y = f.length,\n    k = h * m,\n    w = [],\n    {\n      kernelRows: p,\n      kernelCols: M,\n      statisticsType: g,\n      mirrorEdges: b\n    } = n;\n  if (c && !a) return t;\n  const A = n.outputPixelType ?? d,\n    x = [];\n  for (let N = 0; N < y; N++) {\n    const t = f[N],\n      d = e.createEmptyBand(A, k);\n    c && d.set(t);\n    const y = u?.[N] ?? a,\n      j = y?.slice() ?? null,\n      B = {\n        band: t,\n        width: h,\n        height: m,\n        mask: j,\n        outBand: d\n      };\n    switch (g) {\n      case \"min\":\n      case \"max\":\n        r(B, n);\n        break;\n      case \"mean\":\n      case \"stddev\":\n        s(B, n);\n        break;\n      case \"median\":\n        i(B, n);\n        break;\n      case \"majority\":\n      case \"minority\":\n        l(B, n);\n    }\n    b && !c && o(d, h, m, p, M), w.push(d), j && x.push(j);\n  }\n  let j = x[0] ?? a;\n  x.length !== y && (x.length = 0), y > 1 && u?.length && (j = e.combineBandMasks(u));\n  const B = new e({\n    pixelType: A,\n    width: h,\n    height: m,\n    pixels: w,\n    bandMasks: u && x.length ? x : null,\n    mask: j\n  });\n  return B.updateStatistics(), B;\n}\nexport { a as computeFocalStatistics, n as statisticsTypeMap };","map":{"version":3,"names":["JSONMap","t","e","mirror","o","n","useNumericKeys","s","fillNoDataOnly","band","width","height","r","mask","i","outBand","l","set","statisticsType","a","kernelRows","c","kernelCols","f","h","m","u","Float64Array","d","y","Uint32Array","A","k","w","p","M","g","Math","floor","b","sqrt","slice","Number","MAX_VALUE","min","max","push","length","sort","Map","has","get","size","keys","pixels","bandMasks","pixelType","mirrorEdges","outputPixelType","x","N","createEmptyBand","j","B","combineBandMasks","updateStatistics","computeFocalStatistics","statisticsTypeMap"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/layers/support/rasterFunctions/focalStatUtils.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport\"../../../core/has.js\";import{JSONMap as t}from\"../../../core/jsonMap.js\";import e from\"../PixelBlock.js\";import{mirror as o}from\"./mirror.js\";const n=new t({1:\"min\",2:\"max\",3:\"mean\",4:\"stddev\",5:\"median\",6:\"majority\",7:\"minority\"},{useNumericKeys:!0});function s(t,e){const{fillNoDataOnly:o}=e,{band:n,width:s,height:r,mask:i,outBand:l}=t;if(o&&!i)return void l.set(n);const{statisticsType:a,kernelRows:c,kernelCols:f}=e,h=\"stddev\"===a,m=s*r,u=new Float64Array(m),d=new Float64Array(m),y=new Uint32Array(m);for(let A=0;A<r;A++){const t=A*s;let e=0,o=0,r=0;for(let s=0;s<f;s++)i&&!i[t+s]||(e+=n[t+s],h&&(o+=n[t+s]**2),r++);u[t]=e,d[t]=o,y[t]=r;for(let l=1;l<=s-f;l++){const s=t+l-1,a=s+f;i?(i[s]&&(r--,e-=n[s],h&&(o-=n[s]**2)),i[a]&&(r++,e+=n[a],h&&(o+=n[a]**2))):(e-=n[s],e+=n[a],h&&(o-=n[s]**2,o+=n[a]**2)),u[t+l]=e,y[t+l]=r,h&&(d[t+l]=o)}}const k=new Float64Array(m),w=new Float64Array(m),p=new Uint32Array(m),M=c*s;for(let A=0;A<=s-f;A++){let t=0,e=0,o=0;for(let n=0;n<c;n++){const r=n*s+A;t+=u[r],o+=y[r],h&&(e+=d[r])}k[A]=t,w[A]=e,p[A]=o;for(let n=1;n<=r-c;n++){const r=(n-1)*s+A,i=r+M;t-=u[r],t+=u[i],o-=y[r],o+=y[i],h&&(e-=d[r],e+=d[i]),k[n*s+A]=t,w[n*s+A]=e,p[n*s+A]=o}}const g=Math.floor(c/2),b=Math.floor(f/2);for(let A=g;A<r-g;A++){const t=A*s;for(let e=b;e<s-b;e++){const n=(A-g)*s+e-b,r=p[n];if(0===r||o&&(!i||i[t+e]))continue;const a=k[n]/r,c=h?Math.sqrt((w[n]-k[n]*a)/r):a;l[t+e]=c,i&&(i[t+e]=255)}}}function r(t,e){const{fillNoDataOnly:o}=e,{band:n,width:s,height:r,mask:i,outBand:l}=t;if(o&&!i)return void l.set(n);const{kernelRows:a,kernelCols:c,statisticsType:f}=e,h=Math.floor(a/2),m=Math.floor(c/2),u=\"min\"===f,d=l.slice(),y=new Uint32Array(s*r);for(let k=h;k<r-h;k++){const t=k*s;for(let e=m;e<s-m;e++){let o=u?Number.MAX_VALUE:-Number.MAX_VALUE,r=0;for(let l=0;l<a;l++)for(let a=0;a<c;a++){const c=t+e+(l-h)*s+a-m;i&&!i[c]||(o=u?Math.min(o,n[c]):Math.max(o,n[c]),r++)}i?(d[t+e]=0===r?0:o,y[t+e]=r):l[t+e]=0===r?0:o}}if(i)for(let k=h;k<r-h;k++){const t=k*s;for(let e=m;e<s-m;e++)if(y[t+e]){if(o&&i[t+e])continue;l[t+e]=d[t+e],i[t+e]=255}}}function i(t,e){const{fillNoDataOnly:o}=e,{band:n,width:s,height:r,mask:i,outBand:l}=t;if(o&&!i)return void l.set(n);const{kernelRows:a,kernelCols:c}=e,f=Math.floor(a/2),h=Math.floor(c/2),m=l.slice(),u=new Uint32Array(s*r);for(let d=f;d<r-f;d++){const t=d*s;for(let e=h;e<s-h;e++){if(o&&i?.[t+e])continue;const r=[];for(let o=0;o<a;o++)for(let l=0;l<c;l++){const a=t+e+(o-f)*s+l-h;i&&!i[a]||r.push(n[a])}r.length&&(r.sort(((t,e)=>t-e)),i?(m[t+e]=r[Math.floor((r.length-1)/2)],u[t+e]=r.length):l[t+e]=r[Math.floor((r.length-1)/2)])}}if(i)for(let d=f;d<r-f;d++){const t=d*s;for(let e=h;e<s-h;e++)if(u[t+e]){if(o&&i[t+e])continue;l[t+e]=m[t+e],i[t+e]=255}}}function l(t,e){const{fillNoDataOnly:o}=e,{band:n,width:s,height:r,mask:i,outBand:l}=t;if(o&&!i)return void l.set(n);const{kernelRows:a,kernelCols:c}=e,f=Math.floor(a/2),h=Math.floor(c/2),m=\"majority\"===e.statisticsType,u=a*c,d=l.slice(),y=new Uint32Array(s*r);for(let k=f;k<r-f;k++){const t=k*s;for(let e=h;e<s-h;e++){if(o&&i?.[t+e])continue;const r=new Map;for(let o=0;o<a;o++)for(let l=0;l<c;l++){const a=t+e+(o-f)*s+l-h;if(i&&!i[a])continue;const c=n[a];r.set(c,r.has(c)?r.get(c)+1:1)}if(0===r.size)continue;let k=0,w=0,p=m?0:u+1;for(const t of r.keys())w=r.get(t),m===w>p&&(p=w,k=t);i?(d[t+e]=k,y[t+e]=r.size):l[t+e]=k}}if(i)for(let k=f;k<r-f;k++){const t=k*s;for(let e=h;e<s-h;e++)if(y[t+e]){if(o&&i[t+e])continue;l[t+e]=d[t+e],i[t+e]=255}}}function a(t,n){const{mask:a}=t,{fillNoDataOnly:c}=n;if(c&&!a)return t;const{pixels:f,width:h,height:m,bandMasks:u,pixelType:d}=t,y=f.length,k=h*m,w=[],{kernelRows:p,kernelCols:M,statisticsType:g,mirrorEdges:b}=n;if(c&&!a)return t;const A=n.outputPixelType??d,x=[];for(let N=0;N<y;N++){const t=f[N],d=e.createEmptyBand(A,k);c&&d.set(t);const y=u?.[N]??a,j=y?.slice()??null,B={band:t,width:h,height:m,mask:j,outBand:d};switch(g){case\"min\":case\"max\":r(B,n);break;case\"mean\":case\"stddev\":s(B,n);break;case\"median\":i(B,n);break;case\"majority\":case\"minority\":l(B,n)}b&&!c&&o(d,h,m,p,M),w.push(d),j&&x.push(j)}let j=x[0]??a;x.length!==y&&(x.length=0),y>1&&u?.length&&(j=e.combineBandMasks(u));const B=new e({pixelType:A,width:h,height:m,pixels:w,bandMasks:u&&x.length?x:null,mask:j});return B.updateStatistics(),B}export{a as computeFocalStatistics,n as statisticsTypeMap};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}