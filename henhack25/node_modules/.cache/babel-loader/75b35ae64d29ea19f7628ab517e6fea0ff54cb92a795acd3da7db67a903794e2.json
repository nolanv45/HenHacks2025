{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { setSingleImageTextures as r, setCoordsAndTransforms as t } from \"./utils.js\";\nconst e = {\n  vsPath: \"raster/rfx/vs\",\n  fsPath: \"raster/rfx/curvature\",\n  attributes: new Map([[\"a_position\", 0], [\"a_texcoord\", 1]])\n};\nfunction a(r, t) {\n  const {\n      painter: a,\n      rasterFunction: s\n    } = r,\n    {\n      curvatureType: n\n    } = s.parameters,\n    o = [n];\n  return a.materialManager.getProgram(e, o);\n}\nfunction s(e, a, s) {\n  r(e, a, s), t(a);\n  const n = s.getRasterTextureSize();\n  a.setUniform2fv(\"u_srcImageSize\", n);\n  const {\n      zFactor: o\n    } = e.rasterFunction.parameters,\n    i = s.getRasterCellSize();\n  a.setUniform1f(\"u_zlFactor\", 200 * o / i[0] / i[1]);\n}\nconst n = {\n  createProgram: a,\n  bindTextureAndUniforms: s\n};\nexport { n as default };","map":{"version":3,"names":["setSingleImageTextures","r","setCoordsAndTransforms","t","e","vsPath","fsPath","attributes","Map","a","painter","rasterFunction","s","curvatureType","n","parameters","o","materialManager","getProgram","getRasterTextureSize","setUniform2fv","zFactor","i","getRasterCellSize","setUniform1f","createProgram","bindTextureAndUniforms","default"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/2d/engine/imagery/processor/curvatureProcessor.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{setSingleImageTextures as r,setCoordsAndTransforms as t}from\"./utils.js\";const e={vsPath:\"raster/rfx/vs\",fsPath:\"raster/rfx/curvature\",attributes:new Map([[\"a_position\",0],[\"a_texcoord\",1]])};function a(r,t){const{painter:a,rasterFunction:s}=r,{curvatureType:n}=s.parameters,o=[n];return a.materialManager.getProgram(e,o)}function s(e,a,s){r(e,a,s),t(a);const n=s.getRasterTextureSize();a.setUniform2fv(\"u_srcImageSize\",n);const{zFactor:o}=e.rasterFunction.parameters,i=s.getRasterCellSize();a.setUniform1f(\"u_zlFactor\",200*o/i[0]/i[1])}const n={createProgram:a,bindTextureAndUniforms:s};export{n as default};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,sBAAsB,IAAIC,CAAC,EAACC,sBAAsB,IAAIC,CAAC,QAAK,YAAY;AAAC,MAAMC,CAAC,GAAC;EAACC,MAAM,EAAC,eAAe;EAACC,MAAM,EAAC,sBAAsB;EAACC,UAAU,EAAC,IAAIC,GAAG,CAAC,CAAC,CAAC,YAAY,EAAC,CAAC,CAAC,EAAC,CAAC,YAAY,EAAC,CAAC,CAAC,CAAC;AAAC,CAAC;AAAC,SAASC,CAACA,CAACR,CAAC,EAACE,CAAC,EAAC;EAAC,MAAK;MAACO,OAAO,EAACD,CAAC;MAACE,cAAc,EAACC;IAAC,CAAC,GAACX,CAAC;IAAC;MAACY,aAAa,EAACC;IAAC,CAAC,GAACF,CAAC,CAACG,UAAU;IAACC,CAAC,GAAC,CAACF,CAAC,CAAC;EAAC,OAAOL,CAAC,CAACQ,eAAe,CAACC,UAAU,CAACd,CAAC,EAACY,CAAC,CAAC;AAAA;AAAC,SAASJ,CAACA,CAACR,CAAC,EAACK,CAAC,EAACG,CAAC,EAAC;EAACX,CAAC,CAACG,CAAC,EAACK,CAAC,EAACG,CAAC,CAAC,EAACT,CAAC,CAACM,CAAC,CAAC;EAAC,MAAMK,CAAC,GAACF,CAAC,CAACO,oBAAoB,CAAC,CAAC;EAACV,CAAC,CAACW,aAAa,CAAC,gBAAgB,EAACN,CAAC,CAAC;EAAC,MAAK;MAACO,OAAO,EAACL;IAAC,CAAC,GAACZ,CAAC,CAACO,cAAc,CAACI,UAAU;IAACO,CAAC,GAACV,CAAC,CAACW,iBAAiB,CAAC,CAAC;EAACd,CAAC,CAACe,YAAY,CAAC,YAAY,EAAC,GAAG,GAACR,CAAC,GAACM,CAAC,CAAC,CAAC,CAAC,GAACA,CAAC,CAAC,CAAC,CAAC,CAAC;AAAA;AAAC,MAAMR,CAAC,GAAC;EAACW,aAAa,EAAChB,CAAC;EAACiB,sBAAsB,EAACd;AAAC,CAAC;AAAC,SAAOE,CAAC,IAAIa,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}