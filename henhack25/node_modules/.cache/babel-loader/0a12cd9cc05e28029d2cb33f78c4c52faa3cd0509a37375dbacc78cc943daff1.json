{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { addCameraPosition as e } from \"./util/View.glsl.js\";\nimport { FloatBindUniform as r } from \"../shaderModules/FloatBindUniform.js\";\nimport { FloatPassUniform as i } from \"../shaderModules/FloatPassUniform.js\";\nimport { glsl as o } from \"../shaderModules/glsl.js\";\nfunction n(n, c) {\n  if (!c.screenSizeEnabled) return;\n  const t = n.vertex;\n  e(t, c), t.uniforms.add(new r(\"perScreenPixelRatio\", e => e.camera.perScreenPixelRatio), new i(\"screenSizeScale\", e => e.screenSizeScale)).code.add(o`float computeRenderPixelSizeAt( vec3 pWorld ){\nvec3 viewForward = - vec3(view[0][2], view[1][2], view[2][2]);\nfloat viewDirectionDistance = abs(dot(viewForward, pWorld - cameraPosition));\nreturn viewDirectionDistance * perScreenPixelRatio;\n}\nvec3 screenSizeScaling(vec3 position, vec3 anchor){\nreturn position * screenSizeScale * computeRenderPixelSizeAt(anchor) + anchor;\n}`);\n}\nexport { n as ScreenSizeScaling };","map":{"version":3,"names":["addCameraPosition","e","FloatBindUniform","r","FloatPassUniform","i","glsl","o","n","c","screenSizeEnabled","t","vertex","uniforms","add","camera","perScreenPixelRatio","screenSizeScale","code","ScreenSizeScaling"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/ScreenSizeScaling.glsl.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{addCameraPosition as e}from\"./util/View.glsl.js\";import{FloatBindUniform as r}from\"../shaderModules/FloatBindUniform.js\";import{FloatPassUniform as i}from\"../shaderModules/FloatPassUniform.js\";import{glsl as o}from\"../shaderModules/glsl.js\";function n(n,c){if(!c.screenSizeEnabled)return;const t=n.vertex;e(t,c),t.uniforms.add(new r(\"perScreenPixelRatio\",(e=>e.camera.perScreenPixelRatio)),new i(\"screenSizeScale\",(e=>e.screenSizeScale))).code.add(o`float computeRenderPixelSizeAt( vec3 pWorld ){\nvec3 viewForward = - vec3(view[0][2], view[1][2], view[2][2]);\nfloat viewDirectionDistance = abs(dot(viewForward, pWorld - cameraPosition));\nreturn viewDirectionDistance * perScreenPixelRatio;\n}\nvec3 screenSizeScaling(vec3 position, vec3 anchor){\nreturn position * screenSizeScale * computeRenderPixelSizeAt(anchor) + anchor;\n}`)}export{n as ScreenSizeScaling};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,iBAAiB,IAAIC,CAAC,QAAK,qBAAqB;AAAC,SAAOC,gBAAgB,IAAIC,CAAC,QAAK,sCAAsC;AAAC,SAAOC,gBAAgB,IAAIC,CAAC,QAAK,sCAAsC;AAAC,SAAOC,IAAI,IAAIC,CAAC,QAAK,0BAA0B;AAAC,SAASC,CAACA,CAACA,CAAC,EAACC,CAAC,EAAC;EAAC,IAAG,CAACA,CAAC,CAACC,iBAAiB,EAAC;EAAO,MAAMC,CAAC,GAACH,CAAC,CAACI,MAAM;EAACX,CAAC,CAACU,CAAC,EAACF,CAAC,CAAC,EAACE,CAAC,CAACE,QAAQ,CAACC,GAAG,CAAC,IAAIX,CAAC,CAAC,qBAAqB,EAAEF,CAAC,IAAEA,CAAC,CAACc,MAAM,CAACC,mBAAoB,CAAC,EAAC,IAAIX,CAAC,CAAC,iBAAiB,EAAEJ,CAAC,IAAEA,CAAC,CAACgB,eAAgB,CAAC,CAAC,CAACC,IAAI,CAACJ,GAAG,CAACP,CAAC;AACxc;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC;AAAA;AAAC,SAAOC,CAAC,IAAIW,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}