{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport has from \"../../../../core/has.js\";\nimport { assertIsSome as t } from \"../../../../core/maybe.js\";\nimport { FreeList as e } from \"./cpuMapped/FreeList.js\";\nconst r = has(\"esri-2d-log-allocations\");\nclass s {\n  static create(t, e) {\n    const r = e.acquireUint32Array(t);\n    return new s(r, e);\n  }\n  constructor(t, e) {\n    this._array = t, this._pool = e;\n  }\n  get array() {\n    return this._array;\n  }\n  get length() {\n    return this._array.length;\n  }\n  getUint32View(t, e) {\n    return new Uint32Array(this._array.buffer, t + this._array.byteOffset, e);\n  }\n  expand(t) {\n    if (t <= this._array.byteLength) return;\n    const e = this._pool.acquireUint32Array(t);\n    e.set(this._array), this._pool.releaseUint32Array(this._array), this._array = e;\n  }\n  destroy() {\n    this._pool.releaseUint32Array(this._array);\n  }\n}\nclass a {\n  constructor() {\n    this._data = new ArrayBuffer(a.BYTE_LENGTH), this._freeList = new e({\n      start: 0,\n      end: this._data.byteLength\n    });\n  }\n  static get BYTE_LENGTH() {\n    return 16e6;\n  }\n  get buffer() {\n    return this._data;\n  }\n  acquireUint32Array(t) {\n    const e = this._freeList.firstFit(t);\n    return null == e ? null : new Uint32Array(this._data, e, t / Uint32Array.BYTES_PER_ELEMENT);\n  }\n  releaseUint32Array(t) {\n    this._freeList.free(t.byteOffset, t.byteLength);\n  }\n}\nclass i {\n  constructor() {\n    this._pages = [], this._pagesByBuffer = new Map(), this._bytesAllocated = 0;\n  }\n  destroy() {\n    this._pages = [], this._pagesByBuffer = null;\n  }\n  get _bytesTotal() {\n    return this._pages.length * a.BYTE_LENGTH;\n  }\n  acquireUint32Array(e) {\n    if (this._bytesAllocated += e, r && console.log(`Allocating ${e}, (${this._bytesAllocated} / ${this._bytesTotal})`), e >= a.BYTE_LENGTH) return new Uint32Array(e / Uint32Array.BYTES_PER_ELEMENT);\n    for (const t of this._pages) {\n      const r = t.acquireUint32Array(e);\n      if (null != r) return r;\n    }\n    const s = this._addPage().acquireUint32Array(e);\n    return t(s, \"Expected to allocate page\"), s;\n  }\n  releaseUint32Array(t) {\n    this._bytesAllocated -= t.byteLength, r && console.log(`Freeing ${t.byteLength}, (${this._bytesAllocated} / ${this._bytesTotal})`);\n    const e = this._pagesByBuffer.get(t.buffer);\n    e && e.releaseUint32Array(t);\n  }\n  _addPage() {\n    const t = new a();\n    return this._pages.push(t), this._pagesByBuffer.set(t.buffer, t), t;\n  }\n}\nexport { i as ArrayBufferPool, s as PooledUint32Array };","map":{"version":3,"names":["has","assertIsSome","t","FreeList","e","r","s","create","acquireUint32Array","constructor","_array","_pool","array","length","getUint32View","Uint32Array","buffer","byteOffset","expand","byteLength","set","releaseUint32Array","destroy","a","_data","ArrayBuffer","BYTE_LENGTH","_freeList","start","end","firstFit","BYTES_PER_ELEMENT","free","i","_pages","_pagesByBuffer","Map","_bytesAllocated","_bytesTotal","console","log","_addPage","get","push","ArrayBufferPool","PooledUint32Array"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/2d/engine/webgl/PooledUint32Array.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport has from\"../../../../core/has.js\";import{assertIsSome as t}from\"../../../../core/maybe.js\";import{FreeList as e}from\"./cpuMapped/FreeList.js\";const r=has(\"esri-2d-log-allocations\");class s{static create(t,e){const r=e.acquireUint32Array(t);return new s(r,e)}constructor(t,e){this._array=t,this._pool=e}get array(){return this._array}get length(){return this._array.length}getUint32View(t,e){return new Uint32Array(this._array.buffer,t+this._array.byteOffset,e)}expand(t){if(t<=this._array.byteLength)return;const e=this._pool.acquireUint32Array(t);e.set(this._array),this._pool.releaseUint32Array(this._array),this._array=e}destroy(){this._pool.releaseUint32Array(this._array)}}class a{constructor(){this._data=new ArrayBuffer(a.BYTE_LENGTH),this._freeList=new e({start:0,end:this._data.byteLength})}static get BYTE_LENGTH(){return 16e6}get buffer(){return this._data}acquireUint32Array(t){const e=this._freeList.firstFit(t);return null==e?null:new Uint32Array(this._data,e,t/Uint32Array.BYTES_PER_ELEMENT)}releaseUint32Array(t){this._freeList.free(t.byteOffset,t.byteLength)}}class i{constructor(){this._pages=[],this._pagesByBuffer=new Map,this._bytesAllocated=0}destroy(){this._pages=[],this._pagesByBuffer=null}get _bytesTotal(){return this._pages.length*a.BYTE_LENGTH}acquireUint32Array(e){if(this._bytesAllocated+=e,r&&console.log(`Allocating ${e}, (${this._bytesAllocated} / ${this._bytesTotal})`),e>=a.BYTE_LENGTH)return new Uint32Array(e/Uint32Array.BYTES_PER_ELEMENT);for(const t of this._pages){const r=t.acquireUint32Array(e);if(null!=r)return r}const s=this._addPage().acquireUint32Array(e);return t(s,\"Expected to allocate page\"),s}releaseUint32Array(t){this._bytesAllocated-=t.byteLength,r&&console.log(`Freeing ${t.byteLength}, (${this._bytesAllocated} / ${this._bytesTotal})`);const e=this._pagesByBuffer.get(t.buffer);e&&e.releaseUint32Array(t)}_addPage(){const t=new a;return this._pages.push(t),this._pagesByBuffer.set(t.buffer,t),t}}export{i as ArrayBufferPool,s as PooledUint32Array};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}