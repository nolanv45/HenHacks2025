{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { AllocationTracer as t } from \"./AllocationTracer.js\";\nimport { ResourceType as r } from \"./enums.js\";\nconst e = {\n  RECORD_ALLOCATIONS: !1\n};\nclass n {\n  constructor() {\n    for (this._current = new Array(), this._allocations = e.RECORD_ALLOCATIONS ? new t(\"WebGLObject\") : null; this._current.length < r.COUNT;) this._current.push(0);\n  }\n  increment(t, r, e = 1) {\n    this._current[t] += e, this._allocations?.add(r);\n  }\n  decrement(t, r, e = 1) {\n    this._current[t] -= e, this._allocations?.remove(r);\n  }\n  get current() {\n    return this._current;\n  }\n  get total() {\n    return this.current.reduce((t, e, n) => t + (n < r.UNCOUNTED ? e : 0), 0);\n  }\n  get resourceInformation() {\n    let t = \"\";\n    if (this.total > 0) {\n      t += \"Live objects:\\n\";\n      for (let e = 0; e < r.COUNT; ++e) {\n        const n = this._current[e];\n        n > 0 && (t += `${r[e]}: ${n}\\n`);\n      }\n    }\n    return t += this._allocations?.resetLog(), t;\n  }\n}\nexport { n as InstanceCounter, e as test };","map":{"version":3,"names":["AllocationTracer","t","ResourceType","r","e","RECORD_ALLOCATIONS","n","constructor","_current","Array","_allocations","length","COUNT","push","increment","add","decrement","remove","current","total","reduce","UNCOUNTED","resourceInformation","resetLog","InstanceCounter","test"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/webgl/InstanceCounter.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{AllocationTracer as t}from\"./AllocationTracer.js\";import{ResourceType as r}from\"./enums.js\";const e={RECORD_ALLOCATIONS:!1};class n{constructor(){for(this._current=new Array,this._allocations=e.RECORD_ALLOCATIONS?new t(\"WebGLObject\"):null;this._current.length<r.COUNT;)this._current.push(0)}increment(t,r,e=1){this._current[t]+=e,this._allocations?.add(r)}decrement(t,r,e=1){this._current[t]-=e,this._allocations?.remove(r)}get current(){return this._current}get total(){return this.current.reduce(((t,e,n)=>t+(n<r.UNCOUNTED?e:0)),0)}get resourceInformation(){let t=\"\";if(this.total>0){t+=\"Live objects:\\n\";for(let e=0;e<r.COUNT;++e){const n=this._current[e];n>0&&(t+=`${r[e]}: ${n}\\n`)}}return t+=this._allocations?.resetLog(),t}}export{n as InstanceCounter,e as test};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,gBAAgB,IAAIC,CAAC,QAAK,uBAAuB;AAAC,SAAOC,YAAY,IAAIC,CAAC,QAAK,YAAY;AAAC,MAAMC,CAAC,GAAC;EAACC,kBAAkB,EAAC,CAAC;AAAC,CAAC;AAAC,MAAMC,CAAC;EAACC,WAAWA,CAAA,EAAE;IAAC,KAAI,IAAI,CAACC,QAAQ,GAAC,IAAIC,KAAK,CAAD,CAAC,EAAC,IAAI,CAACC,YAAY,GAACN,CAAC,CAACC,kBAAkB,GAAC,IAAIJ,CAAC,CAAC,aAAa,CAAC,GAAC,IAAI,EAAC,IAAI,CAACO,QAAQ,CAACG,MAAM,GAACR,CAAC,CAACS,KAAK,GAAE,IAAI,CAACJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAC;EAAA;EAACC,SAASA,CAACb,CAAC,EAACE,CAAC,EAACC,CAAC,GAAC,CAAC,EAAC;IAAC,IAAI,CAACI,QAAQ,CAACP,CAAC,CAAC,IAAEG,CAAC,EAAC,IAAI,CAACM,YAAY,EAAEK,GAAG,CAACZ,CAAC,CAAC;EAAA;EAACa,SAASA,CAACf,CAAC,EAACE,CAAC,EAACC,CAAC,GAAC,CAAC,EAAC;IAAC,IAAI,CAACI,QAAQ,CAACP,CAAC,CAAC,IAAEG,CAAC,EAAC,IAAI,CAACM,YAAY,EAAEO,MAAM,CAACd,CAAC,CAAC;EAAA;EAAC,IAAIe,OAAOA,CAAA,EAAE;IAAC,OAAO,IAAI,CAACV,QAAQ;EAAA;EAAC,IAAIW,KAAKA,CAAA,EAAE;IAAC,OAAO,IAAI,CAACD,OAAO,CAACE,MAAM,CAAE,CAACnB,CAAC,EAACG,CAAC,EAACE,CAAC,KAAGL,CAAC,IAAEK,CAAC,GAACH,CAAC,CAACkB,SAAS,GAACjB,CAAC,GAAC,CAAC,CAAC,EAAE,CAAC,CAAC;EAAA;EAAC,IAAIkB,mBAAmBA,CAAA,EAAE;IAAC,IAAIrB,CAAC,GAAC,EAAE;IAAC,IAAG,IAAI,CAACkB,KAAK,GAAC,CAAC,EAAC;MAAClB,CAAC,IAAE,iBAAiB;MAAC,KAAI,IAAIG,CAAC,GAAC,CAAC,EAACA,CAAC,GAACD,CAAC,CAACS,KAAK,EAAC,EAAER,CAAC,EAAC;QAAC,MAAME,CAAC,GAAC,IAAI,CAACE,QAAQ,CAACJ,CAAC,CAAC;QAACE,CAAC,GAAC,CAAC,KAAGL,CAAC,IAAE,GAAGE,CAAC,CAACC,CAAC,CAAC,KAAKE,CAAC,IAAI,CAAC;MAAA;IAAC;IAAC,OAAOL,CAAC,IAAE,IAAI,CAACS,YAAY,EAAEa,QAAQ,CAAC,CAAC,EAACtB,CAAC;EAAA;AAAC;AAAC,SAAOK,CAAC,IAAIkB,eAAe,EAACpB,CAAC,IAAIqB,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}