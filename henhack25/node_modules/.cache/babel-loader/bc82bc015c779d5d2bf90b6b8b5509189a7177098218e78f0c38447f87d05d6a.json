{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { clamp as t, deg2rad as i } from \"../../../../core/mathUtils.js\";\nimport { subtract as e, normalize as s, dot as n } from \"../../../../core/libs/gl-matrix-2/math/vec2.js\";\nimport { create as r } from \"../../../../core/libs/gl-matrix-2/factories/vec2f64.js\";\nimport { o as h, i as o, e as a, n as _, h as c, f as l, v as p, g, m as d, I as u, c as m } from \"../../../../chunks/vec32.js\";\nimport { create as f } from \"../../../../core/libs/gl-matrix-2/factories/vec3f64.js\";\nimport { create as D, fromPositionAndNormal as x, signedDistance as E, copy as b, isPointInside as I, projectPoint as M, getNormal as V, intersectLine as N } from \"../../../../geometry/support/plane.js\";\nimport { angle as X, projectPointSignedLength as Y } from \"../../../../geometry/support/vector.js\";\nimport { intersectLineAndRay as T, LineType as Z } from \"../../../support/geometry2dUtils.js\";\nclass P {\n  get plane() {\n    return this._plane;\n  }\n  get requiresSplitEdgeLeft() {\n    return !this._left.isOriginalDirection;\n  }\n  get requiresSplitEdgeRight() {\n    return !this._right.isOriginalDirection;\n  }\n  get edgeDirection() {\n    return this._edgeDirection;\n  }\n  constructor(t, i, e, s = 0, n = j.IMMEDIATE) {\n    this._helper = t, this._planeType = i, this._edge = e, this.distance = s, this._plane = D(), this._offsetPlane = D(), this._minDistance = -1 / 0, this._maxDistance = 1 / 0, this._selectedArrow = 1, n === j.IMMEDIATE && this._initialize();\n  }\n  _initialize() {\n    this._initializeNeighbors(), this._initializePlane(), this._initializeDistanceConstraints();\n  }\n  _initializeNeighbors() {\n    const t = this._toXYZ(this._edge.leftVertex.pos),\n      i = this._toXYZ(this._edge.leftVertex.leftEdge?.leftVertex?.pos),\n      e = this._toXYZ(this._edge.rightVertex.pos),\n      s = this._toXYZ(this._edge.rightVertex.rightEdge?.rightVertex?.pos);\n    this._edgeDirection = h(f(), t, e), i ? (this._left = this._computeNeighbor(t, i, this._edgeDirection), this._right = this._computeNeighbor(e, s, this._edgeDirection, this._left)) : (this._right = this._computeNeighbor(e, s, this._edgeDirection), this._left = this._computeNeighbor(t, i, this._edgeDirection, this._right));\n  }\n  _toXYZ(t) {\n    return null != t ? this._helper.toXYZ(t) : null;\n  }\n  _pointToXYZ(t) {\n    return this._toXYZ(this._helper.pointToVector(t));\n  }\n  _computeNeighbor(t, i, e, s) {\n    const n = f();\n    if (i) {\n      h(n, t, i);\n      const s = !this._passesBisectingAngleThreshold(n, e);\n      return {\n        start: t,\n        end: i,\n        direction: s ? this._bisectVectorsPerpendicular(e, n) : n,\n        isOriginalDirection: !s\n      };\n    }\n    return this._helper.hasZ() ? s && (a(n, e, s.direction), a(n, n, e), _(n, n), Math.sign(n[1]) !== Math.sign(e[0]) && c(n, n, -1)) : o(n, -e[1], e[0], 0), {\n      start: t,\n      end: i,\n      direction: n,\n      isOriginalDirection: !0\n    };\n  }\n  _passesBisectingAngleThreshold(t, i) {\n    const e = Math.abs(X(i, t));\n    return e >= y && e <= Math.PI - y;\n  }\n  _bisectVectorsPerpendicular(t, i) {\n    const e = l(t, i) < 0 ? t : p(f(), t),\n      s = Math.abs(l(e, i));\n    if (!(s < A || s > 1 - A)) return this._bisectDirection(e, i);\n    const n = a(f(), e, [0, 0, 1]);\n    return _(n, n);\n  }\n  _bisectDirection(t, i) {\n    const e = g(f(), t, i);\n    return _(e, e);\n  }\n  _initializePlane() {\n    const t = this._computeNormalDirection(this._left),\n      i = this._computeNormalDirection(this._right);\n    l(t, i) < 0 && p(i, i), x(this._left.start, this._bisectDirection(t, i), this._plane);\n  }\n  _computeNormalDirection(t) {\n    const i = a(f(), t.direction, this._edgeDirection);\n    _(i, i);\n    const e = a(f(), this._edgeDirection, i);\n    return this._planeType === z.XY && (e[2] = 0), _(e, e);\n  }\n  _initializeDistanceConstraints() {\n    null == this._left.end || this.requiresSplitEdgeLeft || this._updateDistanceConstraint(E(this._plane, this._left.end)), null == this._right.end || this.requiresSplitEdgeRight || this._updateDistanceConstraint(E(this._plane, this._right.end)), this._updateIntersectDistanceConstraint(this._plane);\n  }\n  _updateDistanceConstraint(t) {\n    t <= 0 && (this._minDistance = Math.max(this._minDistance, t)), t >= 0 && (this._maxDistance = Math.min(this._maxDistance, t));\n  }\n  _updateIntersectDistanceConstraint(t) {\n    const i = V(t),\n      h = this._edgeDirection,\n      o = g(f(), this._left.start, this._left.direction),\n      a = g(f(), this._right.start, this._right.direction),\n      _ = this._pointInBasis2D(r(), i, h, this._left.start),\n      l = this._pointInBasis2D(r(), i, h, o),\n      p = this._pointInBasis2D(r(), i, h, this._right.start),\n      d = this._pointInBasis2D(r(), i, h, a),\n      [u] = T({\n        start: l,\n        end: _,\n        type: Z.LINE\n      }, {\n        start: d,\n        end: p,\n        type: Z.LINE\n      });\n    if (!u) return;\n    const m = e(r(), _, l);\n    s(m, m);\n    const D = e(r(), u, l),\n      x = n(m, D),\n      b = g(f(), o, c(f(), this._left.direction, -x)),\n      I = E(t, b);\n    this._updateDistanceConstraint(I);\n  }\n  _pointInBasis2D(t, i, e, s) {\n    return t[0] = Y(i, s), t[1] = Y(e, s), t;\n  }\n  _offset(t, i) {\n    Number.isFinite(this._minDistance) && (i = Math.max(this._minDistance, i)), Number.isFinite(this._maxDistance) && (i = Math.min(this._maxDistance, i)), b(this._offsetPlane, this._plane), this._offsetPlane[3] -= i;\n    const e = (t, i, e) => null != i && N(this._offsetPlane, t, g(f(), t, i), e),\n      s = f();\n    (t === this._edge.leftVertex ? e(this._left.start, this._left.direction, s) : e(this._right.start, this._right.direction, s)) && this._helper.copy(this._helper.fromXYZ(s, void 0, this._helper.getM(t.pos)), t.pos);\n  }\n  selectArrowFromStartPoint(t) {\n    this._selectedArrow = I(this.plane, this._pointToXYZ(t)) ? 1 : -1;\n  }\n  get selectedArrow() {\n    return this._selectedArrow;\n  }\n  signedDistanceToPoint(t) {\n    return E(this.plane, this._pointToXYZ(t));\n  }\n  clampedStartAndEnd(i) {\n    const e = this._helper.toXYZ(this._helper.pointToVector(i)),\n      s = M(this._plane, e, f()),\n      n = E(this._plane, e),\n      r = t(n, this._minDistance, this._maxDistance);\n    return d(e, s, e, r / n), {\n      start: s,\n      end: e\n    };\n  }\n  apply(t) {\n    this._offset(t, this.distance);\n  }\n  undo(t) {\n    this._offset(t, 0);\n  }\n  canAccumulate(t) {\n    return t instanceof P && this._edge.leftVertex.index === t._edge.leftVertex.index && this._edge.rightVertex.index === t._edge.rightVertex.index && this._edge.component === t._edge.component && this._maybeEqualsVec3(this._left.direction, t._left.direction) && this._maybeEqualsVec3(this._right.direction, t._right.direction) && u(V(this._plane), V(t._plane));\n  }\n  accumulate(t, i) {\n    const e = this._plane[3] - i._plane[3] + i.distance;\n    this._offset(t, e);\n  }\n  accumulateParams(t) {\n    const i = t.distance - t._plane[3];\n    this.distance = i + this._plane[3];\n  }\n  clone() {\n    const t = new P(this._helper, this._planeType, this._edge, this.distance, j.DEFERRED);\n    return b(t._plane, this._plane), b(t._offsetPlane, this._offsetPlane), t._maxDistance = this._maxDistance, t._minDistance = this._minDistance, t._left = this._cloneNeighbor(this._left), t._right = this._cloneNeighbor(this._right), t._edgeDirection = m(f(), this._edgeDirection), t;\n  }\n  _maybeEqualsVec3(t, i) {\n    return null == t && null == i || null != t && null != i && u(t, i);\n  }\n  _cloneNeighbor({\n    start: t,\n    end: i,\n    direction: e,\n    isOriginalDirection: s\n  }) {\n    return {\n      start: m(f(), t),\n      end: null != i ? m(f(), i) : null,\n      direction: m(f(), e),\n      isOriginalDirection: s\n    };\n  }\n}\nconst y = i(15),\n  A = .001;\nvar z, j;\n!function (t) {\n  t[t.XYZ = 0] = \"XYZ\", t[t.XY = 1] = \"XY\";\n}(z || (z = {})), function (t) {\n  t[t.IMMEDIATE = 0] = \"IMMEDIATE\", t[t.DEFERRED = 1] = \"DEFERRED\";\n}(j || (j = {}));\nexport { P as OffsetEdgeVertex, z as PlaneType };","map":{"version":3,"names":["clamp","t","deg2rad","i","subtract","e","normalize","s","dot","n","create","r","o","h","a","_","c","f","l","v","p","g","m","d","I","u","D","fromPositionAndNormal","x","signedDistance","E","copy","b","isPointInside","projectPoint","M","getNormal","V","intersectLine","N","angle","X","projectPointSignedLength","Y","intersectLineAndRay","T","LineType","Z","P","plane","_plane","requiresSplitEdgeLeft","_left","isOriginalDirection","requiresSplitEdgeRight","_right","edgeDirection","_edgeDirection","constructor","j","IMMEDIATE","_helper","_planeType","_edge","distance","_offsetPlane","_minDistance","_maxDistance","_selectedArrow","_initialize","_initializeNeighbors","_initializePlane","_initializeDistanceConstraints","_toXYZ","leftVertex","pos","leftEdge","rightVertex","rightEdge","_computeNeighbor","toXYZ","_pointToXYZ","pointToVector","_passesBisectingAngleThreshold","start","end","direction","_bisectVectorsPerpendicular","hasZ","Math","sign","abs","y","PI","A","_bisectDirection","_computeNormalDirection","z","XY","_updateDistanceConstraint","_updateIntersectDistanceConstraint","max","min","_pointInBasis2D","type","LINE","_offset","Number","isFinite","fromXYZ","getM","selectArrowFromStartPoint","selectedArrow","signedDistanceToPoint","clampedStartAndEnd","apply","undo","canAccumulate","index","component","_maybeEqualsVec3","accumulate","accumulateParams","clone","DEFERRED","_cloneNeighbor","XYZ","OffsetEdgeVertex","PlaneType"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/interactive/editGeometry/operations/OffsetEdgeVertex.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{clamp as t,deg2rad as i}from\"../../../../core/mathUtils.js\";import{subtract as e,normalize as s,dot as n}from\"../../../../core/libs/gl-matrix-2/math/vec2.js\";import{create as r}from\"../../../../core/libs/gl-matrix-2/factories/vec2f64.js\";import{o as h,i as o,e as a,n as _,h as c,f as l,v as p,g,m as d,I as u,c as m}from\"../../../../chunks/vec32.js\";import{create as f}from\"../../../../core/libs/gl-matrix-2/factories/vec3f64.js\";import{create as D,fromPositionAndNormal as x,signedDistance as E,copy as b,isPointInside as I,projectPoint as M,getNormal as V,intersectLine as N}from\"../../../../geometry/support/plane.js\";import{angle as X,projectPointSignedLength as Y}from\"../../../../geometry/support/vector.js\";import{intersectLineAndRay as T,LineType as Z}from\"../../../support/geometry2dUtils.js\";class P{get plane(){return this._plane}get requiresSplitEdgeLeft(){return!this._left.isOriginalDirection}get requiresSplitEdgeRight(){return!this._right.isOriginalDirection}get edgeDirection(){return this._edgeDirection}constructor(t,i,e,s=0,n=j.IMMEDIATE){this._helper=t,this._planeType=i,this._edge=e,this.distance=s,this._plane=D(),this._offsetPlane=D(),this._minDistance=-1/0,this._maxDistance=1/0,this._selectedArrow=1,n===j.IMMEDIATE&&this._initialize()}_initialize(){this._initializeNeighbors(),this._initializePlane(),this._initializeDistanceConstraints()}_initializeNeighbors(){const t=this._toXYZ(this._edge.leftVertex.pos),i=this._toXYZ(this._edge.leftVertex.leftEdge?.leftVertex?.pos),e=this._toXYZ(this._edge.rightVertex.pos),s=this._toXYZ(this._edge.rightVertex.rightEdge?.rightVertex?.pos);this._edgeDirection=h(f(),t,e),i?(this._left=this._computeNeighbor(t,i,this._edgeDirection),this._right=this._computeNeighbor(e,s,this._edgeDirection,this._left)):(this._right=this._computeNeighbor(e,s,this._edgeDirection),this._left=this._computeNeighbor(t,i,this._edgeDirection,this._right))}_toXYZ(t){return null!=t?this._helper.toXYZ(t):null}_pointToXYZ(t){return this._toXYZ(this._helper.pointToVector(t))}_computeNeighbor(t,i,e,s){const n=f();if(i){h(n,t,i);const s=!this._passesBisectingAngleThreshold(n,e);return{start:t,end:i,direction:s?this._bisectVectorsPerpendicular(e,n):n,isOriginalDirection:!s}}return this._helper.hasZ()?s&&(a(n,e,s.direction),a(n,n,e),_(n,n),Math.sign(n[1])!==Math.sign(e[0])&&c(n,n,-1)):o(n,-e[1],e[0],0),{start:t,end:i,direction:n,isOriginalDirection:!0}}_passesBisectingAngleThreshold(t,i){const e=Math.abs(X(i,t));return e>=y&&e<=Math.PI-y}_bisectVectorsPerpendicular(t,i){const e=l(t,i)<0?t:p(f(),t),s=Math.abs(l(e,i));if(!(s<A||s>1-A))return this._bisectDirection(e,i);const n=a(f(),e,[0,0,1]);return _(n,n)}_bisectDirection(t,i){const e=g(f(),t,i);return _(e,e)}_initializePlane(){const t=this._computeNormalDirection(this._left),i=this._computeNormalDirection(this._right);l(t,i)<0&&p(i,i),x(this._left.start,this._bisectDirection(t,i),this._plane)}_computeNormalDirection(t){const i=a(f(),t.direction,this._edgeDirection);_(i,i);const e=a(f(),this._edgeDirection,i);return this._planeType===z.XY&&(e[2]=0),_(e,e)}_initializeDistanceConstraints(){null==this._left.end||this.requiresSplitEdgeLeft||this._updateDistanceConstraint(E(this._plane,this._left.end)),null==this._right.end||this.requiresSplitEdgeRight||this._updateDistanceConstraint(E(this._plane,this._right.end)),this._updateIntersectDistanceConstraint(this._plane)}_updateDistanceConstraint(t){t<=0&&(this._minDistance=Math.max(this._minDistance,t)),t>=0&&(this._maxDistance=Math.min(this._maxDistance,t))}_updateIntersectDistanceConstraint(t){const i=V(t),h=this._edgeDirection,o=g(f(),this._left.start,this._left.direction),a=g(f(),this._right.start,this._right.direction),_=this._pointInBasis2D(r(),i,h,this._left.start),l=this._pointInBasis2D(r(),i,h,o),p=this._pointInBasis2D(r(),i,h,this._right.start),d=this._pointInBasis2D(r(),i,h,a),[u]=T({start:l,end:_,type:Z.LINE},{start:d,end:p,type:Z.LINE});if(!u)return;const m=e(r(),_,l);s(m,m);const D=e(r(),u,l),x=n(m,D),b=g(f(),o,c(f(),this._left.direction,-x)),I=E(t,b);this._updateDistanceConstraint(I)}_pointInBasis2D(t,i,e,s){return t[0]=Y(i,s),t[1]=Y(e,s),t}_offset(t,i){Number.isFinite(this._minDistance)&&(i=Math.max(this._minDistance,i)),Number.isFinite(this._maxDistance)&&(i=Math.min(this._maxDistance,i)),b(this._offsetPlane,this._plane),this._offsetPlane[3]-=i;const e=(t,i,e)=>null!=i&&N(this._offsetPlane,t,g(f(),t,i),e),s=f();(t===this._edge.leftVertex?e(this._left.start,this._left.direction,s):e(this._right.start,this._right.direction,s))&&this._helper.copy(this._helper.fromXYZ(s,void 0,this._helper.getM(t.pos)),t.pos)}selectArrowFromStartPoint(t){this._selectedArrow=I(this.plane,this._pointToXYZ(t))?1:-1}get selectedArrow(){return this._selectedArrow}signedDistanceToPoint(t){return E(this.plane,this._pointToXYZ(t))}clampedStartAndEnd(i){const e=this._helper.toXYZ(this._helper.pointToVector(i)),s=M(this._plane,e,f()),n=E(this._plane,e),r=t(n,this._minDistance,this._maxDistance);return d(e,s,e,r/n),{start:s,end:e}}apply(t){this._offset(t,this.distance)}undo(t){this._offset(t,0)}canAccumulate(t){return t instanceof P&&this._edge.leftVertex.index===t._edge.leftVertex.index&&this._edge.rightVertex.index===t._edge.rightVertex.index&&this._edge.component===t._edge.component&&this._maybeEqualsVec3(this._left.direction,t._left.direction)&&this._maybeEqualsVec3(this._right.direction,t._right.direction)&&u(V(this._plane),V(t._plane))}accumulate(t,i){const e=this._plane[3]-i._plane[3]+i.distance;this._offset(t,e)}accumulateParams(t){const i=t.distance-t._plane[3];this.distance=i+this._plane[3]}clone(){const t=new P(this._helper,this._planeType,this._edge,this.distance,j.DEFERRED);return b(t._plane,this._plane),b(t._offsetPlane,this._offsetPlane),t._maxDistance=this._maxDistance,t._minDistance=this._minDistance,t._left=this._cloneNeighbor(this._left),t._right=this._cloneNeighbor(this._right),t._edgeDirection=m(f(),this._edgeDirection),t}_maybeEqualsVec3(t,i){return null==t&&null==i||null!=t&&null!=i&&u(t,i)}_cloneNeighbor({start:t,end:i,direction:e,isOriginalDirection:s}){return{start:m(f(),t),end:null!=i?m(f(),i):null,direction:m(f(),e),isOriginalDirection:s}}}const y=i(15),A=.001;var z,j;!function(t){t[t.XYZ=0]=\"XYZ\",t[t.XY=1]=\"XY\"}(z||(z={})),function(t){t[t.IMMEDIATE=0]=\"IMMEDIATE\",t[t.DEFERRED=1]=\"DEFERRED\"}(j||(j={}));export{P as OffsetEdgeVertex,z as PlaneType};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}