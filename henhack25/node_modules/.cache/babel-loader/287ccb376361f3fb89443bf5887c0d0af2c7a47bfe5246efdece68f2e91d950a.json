{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { estimateNumberArrayMemory as t } from \"../../core/memoryEstimations.js\";\nconst s = 2;\nclass e {\n  constructor(t = [], s = []) {\n    this.lengths = t ?? [], this.coords = s ?? [];\n  }\n  static fromJSON(t) {\n    return new e(t.lengths, t.coords);\n  }\n  static fromRect(t) {\n    const [s, o, r, h] = t,\n      n = r - s,\n      i = h - o;\n    return new e([5], [s, o, n, 0, 0, i, -n, 0, 0, -i]);\n  }\n  get isPoint() {\n    return 0 === this.lengths.length && this.coords.length >= 2;\n  }\n  get maxLength() {\n    return Math.max(...this.lengths);\n  }\n  get size() {\n    return this.lengths.reduce((t, s) => t + s);\n  }\n  get usedMemory() {\n    return 64 + t(this.lengths, this.coords);\n  }\n  area() {\n    let t = 0,\n      e = 0;\n    if (!this.lengths.length) return 0;\n    for (let o = 0; o < this.lengths.length; o++) {\n      const r = this.lengths[o];\n      if (r < 3) continue;\n      let h = this.coords[s * e],\n        n = this.coords[s * e + 1];\n      for (let o = 1; o < r; o += 1) {\n        const r = this.coords[s * (o + e)],\n          i = this.coords[s * (o + e) + 1];\n        t += -.5 * (r - h) * (i + n), h = r, n = i;\n      }\n      e += r;\n    }\n    return t;\n  }\n  forEachVertex(t) {\n    let e = 0;\n    this.lengths.length || t(this.coords[0], this.coords[1]);\n    for (let o = 0; o < this.lengths.length; o++) {\n      const r = this.lengths[o];\n      for (let o = 0; o < r; o++) {\n        t(this.coords[s * (o + e)], this.coords[s * (o + e) + 1]);\n      }\n      e += r;\n    }\n  }\n  deltaDecode() {\n    const t = this.clone(),\n      {\n        coords: s,\n        lengths: e\n      } = t;\n    let o = 0;\n    for (const r of e) {\n      for (let t = 1; t < r; t++) s[2 * (o + t)] += s[2 * (o + t) - 2], s[2 * (o + t) + 1] += s[2 * (o + t) - 1];\n      o += r;\n    }\n    return t;\n  }\n  clone(t) {\n    if (0 === this.lengths.length) return new e([], [this.coords[0], this.coords[1]]);\n    const o = (0 === this.lengths.length ? 1 : this.lengths.reduce((t, s) => t + s)) * s,\n      r = this.coords.slice(0, o);\n    return t ? (t.set(r), new e(this.lengths, t)) : new e(Array.from(this.lengths), Array.from(r));\n  }\n}\nexport { e as default };","map":{"version":3,"names":["estimateNumberArrayMemory","t","s","e","constructor","lengths","coords","fromJSON","fromRect","o","r","h","n","i","isPoint","length","maxLength","Math","max","size","reduce","usedMemory","area","forEachVertex","deltaDecode","clone","slice","set","Array","from","default"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/layers/graphics/OptimizedGeometry.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{estimateNumberArrayMemory as t}from\"../../core/memoryEstimations.js\";const s=2;class e{constructor(t=[],s=[]){this.lengths=t??[],this.coords=s??[]}static fromJSON(t){return new e(t.lengths,t.coords)}static fromRect(t){const[s,o,r,h]=t,n=r-s,i=h-o;return new e([5],[s,o,n,0,0,i,-n,0,0,-i])}get isPoint(){return 0===this.lengths.length&&this.coords.length>=2}get maxLength(){return Math.max(...this.lengths)}get size(){return this.lengths.reduce(((t,s)=>t+s))}get usedMemory(){return 64+t(this.lengths,this.coords)}area(){let t=0,e=0;if(!this.lengths.length)return 0;for(let o=0;o<this.lengths.length;o++){const r=this.lengths[o];if(r<3)continue;let h=this.coords[s*e],n=this.coords[s*e+1];for(let o=1;o<r;o+=1){const r=this.coords[s*(o+e)],i=this.coords[s*(o+e)+1];t+=-.5*(r-h)*(i+n),h=r,n=i}e+=r}return t}forEachVertex(t){let e=0;this.lengths.length||t(this.coords[0],this.coords[1]);for(let o=0;o<this.lengths.length;o++){const r=this.lengths[o];for(let o=0;o<r;o++){t(this.coords[s*(o+e)],this.coords[s*(o+e)+1])}e+=r}}deltaDecode(){const t=this.clone(),{coords:s,lengths:e}=t;let o=0;for(const r of e){for(let t=1;t<r;t++)s[2*(o+t)]+=s[2*(o+t)-2],s[2*(o+t)+1]+=s[2*(o+t)-1];o+=r}return t}clone(t){if(0===this.lengths.length)return new e([],[this.coords[0],this.coords[1]]);const o=(0===this.lengths.length?1:this.lengths.reduce(((t,s)=>t+s)))*s,r=this.coords.slice(0,o);return t?(t.set(r),new e(this.lengths,t)):new e(Array.from(this.lengths),Array.from(r))}}export{e as default};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}