{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { clone as t } from \"../core/lang.js\";\nimport { collectMultipath as e } from \"./geometryCursorCollectUtils.js\";\nimport { isPolygon as s, isPolyline as i, isMultipoint as h, isExtent as r, isPoint as n } from \"./support/jsonUtils.js\";\nimport o from \"../layers/graphics/OptimizedGeometry.js\";\nclass a {\n  static fromOptimized(t, e) {\n    let s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;\n    let i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !1;\n    let h = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n    return new p().initialize(t, e, s, i, h);\n  }\n  static fromJSON(t) {\n    let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;\n    let s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;\n    const [i, h] = u(t);\n    return new c().initialize(i, h, e, s, 1);\n  }\n  static fromOptimizedCIM(t, e) {\n    let s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;\n    let i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !1;\n    let h = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n    return new y().initialize(t, e, s, i, h);\n  }\n  static fromJSONCIM(t) {\n    let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;\n    let s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;\n    let i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n    const [h, r] = u(t);\n    return new m().initialize(h, r, e, s, i);\n  }\n  static fromFeatureSetReader(t) {\n    const e = t.readGeometryForDisplay(),\n      s = t.geometryType;\n    return e && s ? this.fromOptimized(e, s) : null;\n  }\n  static fromFeatureSetReaderCIM(t) {\n    const e = t.readGeometryForDisplay(),\n      s = t.geometryType;\n    return e && s ? this.fromOptimizedCIM(e, s) : null;\n  }\n  static createEmptyOptimized(t) {\n    let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;\n    let s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;\n    let i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n    return new p().initialize(new o(), t, e, s, i);\n  }\n  static createEmptyJSON(t) {\n    let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;\n    let s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;\n    return new c().initialize([], t, e, s, 1);\n  }\n  static createEmptyOptimizedCIM(t) {\n    let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;\n    let s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;\n    let i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n    return new y().initialize(new o(), t, e, s, i);\n  }\n  static createEmptyJSONCIM(t) {\n    let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;\n    let s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;\n    let i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n    return new m().initialize([], t, e, s, i);\n  }\n  asJSON() {\n    const t = e(this);\n    return \"esriGeometryEnvelope\" === this.geometryType ? {\n      xmin: t[0][0][0],\n      ymin: t[0][0][1],\n      xmax: t[0][2][0],\n      ymax: t[0][2][1]\n    } : \"esriGeometryMultipoint\" === this.geometryType ? {\n      points: t.flat()\n    } : \"esriGeometryPoint\" === this.geometryType ? {\n      x: t[0][0][0],\n      y: t[0][0][1]\n    } : \"esriGeometryPolygon\" === this.geometryType ? {\n      rings: t\n    } : {\n      paths: t\n    };\n  }\n  getCurrentRingArea() {\n    if (this.pathSize < 3) return 0;\n    let t,\n      e,\n      s = 0;\n    if (this.seekPathStart(), !this.nextPoint()) return 0;\n    t = this.x, e = this.y;\n    const i = t,\n      h = e;\n    for (; this.nextPoint();) s += (t - this.x) * (e + this.y), t = this.x, e = this.y;\n    return s += (t - i) * (e + h), -.5 * s;\n  }\n  invertY() {\n    this.yFactor *= -1;\n  }\n}\nclass p extends a {\n  constructor() {\n    super(...arguments), this._end = -1;\n  }\n  initialize(t, e, s, i, h) {\n    return this.hasZ = s, this.hasM = i, this.geometryType = e, this._stride = 2 + Number(s) + Number(i), this._geometry = t, this._pathIndex = -1, this._pathOffset = 0, this._pointOffset = -this._stride, this._end = -1, this.yFactor = h, this;\n  }\n  reset() {\n    this.initialize(this._geometry, this.geometryType, this.hasZ, this.hasM, this.yFactor);\n  }\n  seekPath(t) {\n    if (t >= 0 && t < this.totalSize) {\n      if (this._pathIndex < t) for (; this._pathIndex < t && this.nextPath(););else if (this._pathIndex > t) for (; this._pathIndex > t && this.prevPath(););\n      return !0;\n    }\n    return !1;\n  }\n  seekPathStart() {\n    this._pointOffset = this._pathOffset - this._stride;\n  }\n  seekPathEnd() {\n    this._pointOffset = this._end;\n  }\n  seekInPath(t) {\n    const e = this._pathOffset + t * this._stride;\n    return e >= 0 && e < this._end && (this._pointOffset = e, !0);\n  }\n  nextPoint() {\n    return (this._pointOffset += this._stride) < this._end;\n  }\n  prevPoint() {\n    return (this._pointOffset -= this._stride) >= this._pathOffset;\n  }\n  nextPath() {\n    return !(this.pathIndex >= this.totalSize - 1) && (this._pathIndex >= 0 && (this._pathOffset += this._stride * this.pathSize), this._pathIndex++, this._pointOffset = this._pathOffset - this._stride, this._end = this._pointOffset + this._stride + this._stride * this.pathSize, !0);\n  }\n  prevPath() {\n    return !(this.pathIndex <= 0) && (this._pathIndex--, this._end = this._pathOffset, this._pathOffset -= this._stride * this.pathSize, this._pointOffset = this._pathOffset - this._stride, !0);\n  }\n  getCurrentPath() {\n    const t = this._end,\n      e = this._geometry.coords,\n      s = this._pathOffset;\n    return new p().initialize(new o([this.pathSize], e.slice(s, t)), this.geometryType, this.hasZ, this.hasM, this.yFactor);\n  }\n  pathLength() {\n    const t = this._end,\n      e = this._stride,\n      s = this._geometry.coords;\n    let i = 0;\n    for (let h = this._pathOffset + e; h < t; h += e) {\n      const t = s[h - e],\n        r = s[h - e + 1],\n        n = s[h] - t,\n        o = s[h + 1] - r;\n      i += Math.sqrt(n * n + o * o);\n    }\n    return i;\n  }\n  startPath() {\n    this._geometry.lengths.push(0);\n  }\n  pushPath(t) {\n    this.startPath(), this.pushPoints(t);\n  }\n  pushPoint(t) {\n    for (let e = 0; e < this._stride; ++e) this._geometry.coords.push(t[e]);\n    this._geometry.lengths[this.totalSize - 1]++;\n  }\n  pushXY(t, e) {\n    this._geometry.coords.push(t, e), this._geometry.lengths[this.totalSize - 1]++;\n  }\n  pushPoints(t) {\n    for (const e of t) for (let t = 0; t < this._stride; ++t) this._geometry.coords.push(e[t]);\n    this._geometry.lengths[this.totalSize - 1] += t.length;\n  }\n  pushCursor(t) {\n    const e = t.asOptimized();\n    this._geometry.coords.push(...e.coords), this._geometry.lengths.push(...e.lengths);\n  }\n  asOptimized() {\n    const t = this._geometry.clone();\n    if (1 !== this.yFactor) for (let e = 1; e < t.coords.length; e += this._stride) t.coords[e] *= this.yFactor;\n    return \"esriGeometryPoint\" === this.geometryType && (t.lengths.length = 0), t;\n  }\n  isClosed() {\n    const t = this._geometry.coords,\n      e = this._pathOffset,\n      s = this._end - this._stride;\n    for (let i = 0; i < this._stride; i++) if (t[e + i] !== t[s + i]) return !1;\n    return !0;\n  }\n  clone() {\n    return new p().initialize(this._geometry.clone(), this.geometryType, this.hasZ, this.hasM, this.yFactor);\n  }\n  get totalPoints() {\n    return this._geometry.isPoint ? 1 : this._geometry.lengths.reduce((t, e) => t + e);\n  }\n  get pathSize() {\n    const {\n      lengths: t\n    } = this._geometry;\n    return this._geometry.isPoint ? 1 : this._pathIndex < 0 || this._pathIndex > t.length - 1 ? 0 : t[this._pathIndex];\n  }\n  get totalSize() {\n    return this._geometry.isPoint ? 1 : this._geometry.lengths.length;\n  }\n  get x() {\n    return this._geometry.coords[this._pointOffset];\n  }\n  set x(t) {\n    this._geometry.coords[this._pointOffset] = t;\n  }\n  get y() {\n    return this.yFactor * this._geometry.coords[this._pointOffset + 1];\n  }\n  set y(t) {\n    this._geometry.coords[this._pointOffset + 1] = this.yFactor * t;\n  }\n  get z() {\n    return this._geometry.coords[this._pointOffset + 2];\n  }\n  set z(t) {\n    this._geometry.coords[this._pointOffset + 2] = t;\n  }\n  get m() {\n    const t = this.hasZ ? 3 : 2;\n    return this._geometry.coords[this._pointOffset + t];\n  }\n  set m(t) {\n    this._geometry.coords[this._pointOffset + 3] = t;\n  }\n  get pathIndex() {\n    return this._pathIndex;\n  }\n  get _coordIndex() {\n    return this._pointOffset / this._stride;\n  }\n}\nfunction _(t) {\n  const e = [t.x, t.y];\n  return t.z && e.push(t.z), t.m && e.push(t.m), e;\n}\nfunction u(t) {\n  return s(t) ? [t.rings, \"esriGeometryPolygon\"] : i(t) ? [t.paths, \"esriGeometryPolyline\"] : h(t) ? [[t.points], \"esriGeometryMultipoint\"] : r(t) ? [[[[t.xmin, t.ymin], [t.xmin, t.ymax], [t.xmax, t.ymax], [t.xmax, t.ymin], [t.xmin, t.ymin]]], \"esriGeometryEnvelope\"] : n(t) ? [[[_(t)]], \"esriGeometryPoint\"] : [[], \"esriGeometryPolyline\"];\n}\nclass c extends a {\n  initialize(t, e, s, i, h) {\n    return this._paths = t, this.geometryType = e, this.hasZ = s, this.hasM = i, this._pathIndex = this._pointIndex = -1, this.yFactor = h, this._mIndex = this.hasZ ? 3 : 2, this;\n  }\n  reset() {\n    this._pathIndex = this._pointIndex = -1;\n  }\n  seekPath(t) {\n    return this._pathIndex = t, this._pointIndex = -1, t >= 0 && t < this.totalSize && (this._currentPath = this._paths[t], !0);\n  }\n  seekPathStart() {\n    this._pointIndex = -1;\n  }\n  seekPathEnd() {\n    this._pointIndex = this._currentPath.length;\n  }\n  seekInPath(t) {\n    return t >= 0 && t < this._currentPath.length && (this._pointIndex = t, this._currentPoint = this._currentPath[this._pointIndex], !0);\n  }\n  nextPoint() {\n    return this._currentPoint = this._currentPath[++this._pointIndex], this._pointIndex < this._currentPath.length;\n  }\n  prevPoint() {\n    return this._currentPoint = this._currentPath[--this._pointIndex], this._pointIndex >= 0;\n  }\n  nextPath() {\n    return this._pointIndex = -1, this._currentPath = this._paths[++this._pathIndex], this._pathIndex < this.totalSize;\n  }\n  prevPath() {\n    return this.pathIndex > 0 && (this._pointIndex = -1, this._pathIndex--, this._currentPath = this._paths[this._pathIndex], !0);\n  }\n  pathLength() {\n    const t = this._currentPath.length,\n      e = this._currentPath;\n    let s = 0;\n    for (let i = 1; i < t; i++) {\n      const t = e[i - 1],\n        h = e[i],\n        r = t[0],\n        n = t[1],\n        o = h[0] - r,\n        a = h[1] - n;\n      s += Math.sqrt(o * o + a * a);\n    }\n    return s;\n  }\n  startPath() {\n    this._paths.push([]);\n  }\n  getCurrentPath() {\n    return new c().initialize([this._currentPath], this.geometryType, this.hasZ, this.hasM, this.yFactor);\n  }\n  pushPath(t) {\n    this._paths.push(t);\n  }\n  pushPoint(t) {\n    this._paths[this.totalSize - 1].push(t);\n  }\n  pushXY(t, e) {\n    this._paths[this.totalSize - 1].push([t, e]);\n  }\n  pushPoints(t) {\n    this._paths[this.totalSize - 1].push(...t);\n  }\n  pushCursor(t) {\n    const s = e(t);\n    for (const e of s) this.pushPath(e);\n  }\n  asOptimized() {\n    const t = new o();\n    if (\"esriGeometryPoint\" === this.geometryType) t.coords.push(...this._paths[0][0]), t.lengths.length = 0;else for (const e of this._paths) {\n      for (const s of e) t.coords.push(s[0]), t.coords.push(s[1] * this.yFactor), this.hasZ && t.coords.push(s[2]), this.hasM && t.coords.push(s[this._mIndex]);\n      t.lengths.push(e.length);\n    }\n    return t;\n  }\n  isClosed() {\n    const t = this._currentPath[0],\n      e = this._currentPath[this._currentPath.length - 1];\n    for (let s = 0; s < t.length; s++) if (t[s] !== e[s]) return !1;\n    return !0;\n  }\n  clone() {\n    return new c().initialize(t(this._paths), this.geometryType, this.hasZ, this.hasM, this.yFactor);\n  }\n  get totalPoints() {\n    return this._paths.map(t => t.length).reduce((t, e) => t + e);\n  }\n  get pathSize() {\n    return this._pathIndex < 0 || this._pathIndex > this.totalSize - 1 ? -1 : this._paths[this._pathIndex].length;\n  }\n  get totalSize() {\n    return this._paths.length;\n  }\n  get x() {\n    return this._currentPoint[0];\n  }\n  set x(t) {\n    this._currentPoint[0] = t;\n  }\n  get y() {\n    return this.yFactor * this._currentPoint[1];\n  }\n  set y(t) {\n    this._currentPoint[1] = this.yFactor * t;\n  }\n  get z() {\n    return this._currentPoint[2];\n  }\n  set z(t) {\n    this._currentPoint[2] = t;\n  }\n  get m() {\n    return this._currentPoint[this._mIndex];\n  }\n  set m(t) {\n    this._currentPoint[this._mIndex] = t;\n  }\n  get pathIndex() {\n    return this._pathIndex;\n  }\n}\nconst d = 4,\n  l = 1;\nclass y extends p {\n  initialize(t, e, s, i, h) {\n    return super.initialize(t, e, s, i, h), this._controlPoints || (this._controlPoints = this._controlPoints = new Array(this.totalSize).fill(void 0).map(t => new Set())), this;\n  }\n  startPath() {\n    super.startPath(), this._controlPoints.push(new Set());\n  }\n  clone() {\n    const t = new y().initialize(this._geometry.clone(), this.geometryType, this.hasZ, this.hasM, this.yFactor);\n    return t._controlPoints = this._controlPoints, t;\n  }\n  setControlPoint() {\n    this._controlPoints[this.pathIndex].add(this._coordIndex);\n  }\n  getControlPoint() {\n    return this._controlPoints[this.pathIndex].has(this._coordIndex);\n  }\n  setControlPointAt(t) {\n    this._controlPoints[this.pathIndex].add(t);\n  }\n  getControlPointAt(t) {\n    return this._controlPoints[this.pathIndex].has(t);\n  }\n}\nclass m extends c {\n  initialize(t, e, s, i, h) {\n    return super.initialize(t, e, s, i, h);\n  }\n  clone() {\n    return new m().initialize(t(this._paths), this.geometryType, this.hasZ, this.hasM, this.yFactor);\n  }\n  setControlPoint() {\n    this._paths[this.pathIndex][this._pointIndex][d] = l;\n  }\n  getControlPoint() {\n    return this._paths[this.pathIndex][this._pointIndex][d] === l;\n  }\n  setControlPointAt(t) {\n    this._paths[this.pathIndex][t][d] = l;\n  }\n  getControlPointAt(t) {\n    return this._paths[this.pathIndex][t][d] === l;\n  }\n}\nexport { a as GeometryCursor };","map":{"version":3,"names":["clone","t","collectMultipath","e","isPolygon","s","isPolyline","i","isMultipoint","h","isExtent","r","isPoint","n","o","a","fromOptimized","arguments","length","undefined","p","initialize","fromJSON","u","c","fromOptimizedCIM","y","fromJSONCIM","m","fromFeatureSetReader","readGeometryForDisplay","geometryType","fromFeatureSetReaderCIM","createEmptyOptimized","createEmptyJSON","createEmptyOptimizedCIM","createEmptyJSONCIM","asJSON","xmin","ymin","xmax","ymax","points","flat","x","rings","paths","getCurrentRingArea","pathSize","seekPathStart","nextPoint","invertY","yFactor","constructor","_end","hasZ","hasM","_stride","Number","_geometry","_pathIndex","_pathOffset","_pointOffset","reset","seekPath","totalSize","nextPath","prevPath","seekPathEnd","seekInPath","prevPoint","pathIndex","getCurrentPath","coords","slice","pathLength","Math","sqrt","startPath","lengths","push","pushPath","pushPoints","pushPoint","pushXY","pushCursor","asOptimized","isClosed","totalPoints","reduce","z","_coordIndex","_","_paths","_pointIndex","_mIndex","_currentPath","_currentPoint","map","d","l","_controlPoints","Array","fill","Set","setControlPoint","add","getControlPoint","has","setControlPointAt","getControlPointAt","GeometryCursor"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/geometry/GeometryCursor.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{clone as t}from\"../core/lang.js\";import{collectMultipath as e}from\"./geometryCursorCollectUtils.js\";import{isPolygon as s,isPolyline as i,isMultipoint as h,isExtent as r,isPoint as n}from\"./support/jsonUtils.js\";import o from\"../layers/graphics/OptimizedGeometry.js\";class a{static fromOptimized(t,e,s=!1,i=!1,h=1){return(new p).initialize(t,e,s,i,h)}static fromJSON(t,e=!1,s=!1){const[i,h]=u(t);return(new c).initialize(i,h,e,s,1)}static fromOptimizedCIM(t,e,s=!1,i=!1,h=1){return(new y).initialize(t,e,s,i,h)}static fromJSONCIM(t,e=!1,s=!1,i=1){const[h,r]=u(t);return(new m).initialize(h,r,e,s,i)}static fromFeatureSetReader(t){const e=t.readGeometryForDisplay(),s=t.geometryType;return e&&s?this.fromOptimized(e,s):null}static fromFeatureSetReaderCIM(t){const e=t.readGeometryForDisplay(),s=t.geometryType;return e&&s?this.fromOptimizedCIM(e,s):null}static createEmptyOptimized(t,e=!1,s=!1,i=1){return(new p).initialize(new o,t,e,s,i)}static createEmptyJSON(t,e=!1,s=!1){return(new c).initialize([],t,e,s,1)}static createEmptyOptimizedCIM(t,e=!1,s=!1,i=1){return(new y).initialize(new o,t,e,s,i)}static createEmptyJSONCIM(t,e=!1,s=!1,i=1){return(new m).initialize([],t,e,s,i)}asJSON(){const t=e(this);return\"esriGeometryEnvelope\"===this.geometryType?{xmin:t[0][0][0],ymin:t[0][0][1],xmax:t[0][2][0],ymax:t[0][2][1]}:\"esriGeometryMultipoint\"===this.geometryType?{points:t.flat()}:\"esriGeometryPoint\"===this.geometryType?{x:t[0][0][0],y:t[0][0][1]}:\"esriGeometryPolygon\"===this.geometryType?{rings:t}:{paths:t}}getCurrentRingArea(){if(this.pathSize<3)return 0;let t,e,s=0;if(this.seekPathStart(),!this.nextPoint())return 0;t=this.x,e=this.y;const i=t,h=e;for(;this.nextPoint();)s+=(t-this.x)*(e+this.y),t=this.x,e=this.y;return s+=(t-i)*(e+h),-.5*s}invertY(){this.yFactor*=-1}}class p extends a{constructor(){super(...arguments),this._end=-1}initialize(t,e,s,i,h){return this.hasZ=s,this.hasM=i,this.geometryType=e,this._stride=2+Number(s)+Number(i),this._geometry=t,this._pathIndex=-1,this._pathOffset=0,this._pointOffset=-this._stride,this._end=-1,this.yFactor=h,this}reset(){this.initialize(this._geometry,this.geometryType,this.hasZ,this.hasM,this.yFactor)}seekPath(t){if(t>=0&&t<this.totalSize){if(this._pathIndex<t)for(;this._pathIndex<t&&this.nextPath(););else if(this._pathIndex>t)for(;this._pathIndex>t&&this.prevPath(););return!0}return!1}seekPathStart(){this._pointOffset=this._pathOffset-this._stride}seekPathEnd(){this._pointOffset=this._end}seekInPath(t){const e=this._pathOffset+t*this._stride;return e>=0&&e<this._end&&(this._pointOffset=e,!0)}nextPoint(){return(this._pointOffset+=this._stride)<this._end}prevPoint(){return(this._pointOffset-=this._stride)>=this._pathOffset}nextPath(){return!(this.pathIndex>=this.totalSize-1)&&(this._pathIndex>=0&&(this._pathOffset+=this._stride*this.pathSize),this._pathIndex++,this._pointOffset=this._pathOffset-this._stride,this._end=this._pointOffset+this._stride+this._stride*this.pathSize,!0)}prevPath(){return!(this.pathIndex<=0)&&(this._pathIndex--,this._end=this._pathOffset,this._pathOffset-=this._stride*this.pathSize,this._pointOffset=this._pathOffset-this._stride,!0)}getCurrentPath(){const t=this._end,e=this._geometry.coords,s=this._pathOffset;return(new p).initialize(new o([this.pathSize],e.slice(s,t)),this.geometryType,this.hasZ,this.hasM,this.yFactor)}pathLength(){const t=this._end,e=this._stride,s=this._geometry.coords;let i=0;for(let h=this._pathOffset+e;h<t;h+=e){const t=s[h-e],r=s[h-e+1],n=s[h]-t,o=s[h+1]-r;i+=Math.sqrt(n*n+o*o)}return i}startPath(){this._geometry.lengths.push(0)}pushPath(t){this.startPath(),this.pushPoints(t)}pushPoint(t){for(let e=0;e<this._stride;++e)this._geometry.coords.push(t[e]);this._geometry.lengths[this.totalSize-1]++}pushXY(t,e){this._geometry.coords.push(t,e),this._geometry.lengths[this.totalSize-1]++}pushPoints(t){for(const e of t)for(let t=0;t<this._stride;++t)this._geometry.coords.push(e[t]);this._geometry.lengths[this.totalSize-1]+=t.length}pushCursor(t){const e=t.asOptimized();this._geometry.coords.push(...e.coords),this._geometry.lengths.push(...e.lengths)}asOptimized(){const t=this._geometry.clone();if(1!==this.yFactor)for(let e=1;e<t.coords.length;e+=this._stride)t.coords[e]*=this.yFactor;return\"esriGeometryPoint\"===this.geometryType&&(t.lengths.length=0),t}isClosed(){const t=this._geometry.coords,e=this._pathOffset,s=this._end-this._stride;for(let i=0;i<this._stride;i++)if(t[e+i]!==t[s+i])return!1;return!0}clone(){return(new p).initialize(this._geometry.clone(),this.geometryType,this.hasZ,this.hasM,this.yFactor)}get totalPoints(){return this._geometry.isPoint?1:this._geometry.lengths.reduce(((t,e)=>t+e))}get pathSize(){const{lengths:t}=this._geometry;return this._geometry.isPoint?1:this._pathIndex<0||this._pathIndex>t.length-1?0:t[this._pathIndex]}get totalSize(){return this._geometry.isPoint?1:this._geometry.lengths.length}get x(){return this._geometry.coords[this._pointOffset]}set x(t){this._geometry.coords[this._pointOffset]=t}get y(){return this.yFactor*this._geometry.coords[this._pointOffset+1]}set y(t){this._geometry.coords[this._pointOffset+1]=this.yFactor*t}get z(){return this._geometry.coords[this._pointOffset+2]}set z(t){this._geometry.coords[this._pointOffset+2]=t}get m(){const t=this.hasZ?3:2;return this._geometry.coords[this._pointOffset+t]}set m(t){this._geometry.coords[this._pointOffset+3]=t}get pathIndex(){return this._pathIndex}get _coordIndex(){return this._pointOffset/this._stride}}function _(t){const e=[t.x,t.y];return t.z&&e.push(t.z),t.m&&e.push(t.m),e}function u(t){return s(t)?[t.rings,\"esriGeometryPolygon\"]:i(t)?[t.paths,\"esriGeometryPolyline\"]:h(t)?[[t.points],\"esriGeometryMultipoint\"]:r(t)?[[[[t.xmin,t.ymin],[t.xmin,t.ymax],[t.xmax,t.ymax],[t.xmax,t.ymin],[t.xmin,t.ymin]]],\"esriGeometryEnvelope\"]:n(t)?[[[_(t)]],\"esriGeometryPoint\"]:[[],\"esriGeometryPolyline\"]}class c extends a{initialize(t,e,s,i,h){return this._paths=t,this.geometryType=e,this.hasZ=s,this.hasM=i,this._pathIndex=this._pointIndex=-1,this.yFactor=h,this._mIndex=this.hasZ?3:2,this}reset(){this._pathIndex=this._pointIndex=-1}seekPath(t){return this._pathIndex=t,this._pointIndex=-1,t>=0&&t<this.totalSize&&(this._currentPath=this._paths[t],!0)}seekPathStart(){this._pointIndex=-1}seekPathEnd(){this._pointIndex=this._currentPath.length}seekInPath(t){return t>=0&&t<this._currentPath.length&&(this._pointIndex=t,this._currentPoint=this._currentPath[this._pointIndex],!0)}nextPoint(){return this._currentPoint=this._currentPath[++this._pointIndex],this._pointIndex<this._currentPath.length}prevPoint(){return this._currentPoint=this._currentPath[--this._pointIndex],this._pointIndex>=0}nextPath(){return this._pointIndex=-1,this._currentPath=this._paths[++this._pathIndex],this._pathIndex<this.totalSize}prevPath(){return this.pathIndex>0&&(this._pointIndex=-1,this._pathIndex--,this._currentPath=this._paths[this._pathIndex],!0)}pathLength(){const t=this._currentPath.length,e=this._currentPath;let s=0;for(let i=1;i<t;i++){const t=e[i-1],h=e[i],r=t[0],n=t[1],o=h[0]-r,a=h[1]-n;s+=Math.sqrt(o*o+a*a)}return s}startPath(){this._paths.push([])}getCurrentPath(){return(new c).initialize([this._currentPath],this.geometryType,this.hasZ,this.hasM,this.yFactor)}pushPath(t){this._paths.push(t)}pushPoint(t){this._paths[this.totalSize-1].push(t)}pushXY(t,e){this._paths[this.totalSize-1].push([t,e])}pushPoints(t){this._paths[this.totalSize-1].push(...t)}pushCursor(t){const s=e(t);for(const e of s)this.pushPath(e)}asOptimized(){const t=new o;if(\"esriGeometryPoint\"===this.geometryType)t.coords.push(...this._paths[0][0]),t.lengths.length=0;else for(const e of this._paths){for(const s of e)t.coords.push(s[0]),t.coords.push(s[1]*this.yFactor),this.hasZ&&t.coords.push(s[2]),this.hasM&&t.coords.push(s[this._mIndex]);t.lengths.push(e.length)}return t}isClosed(){const t=this._currentPath[0],e=this._currentPath[this._currentPath.length-1];for(let s=0;s<t.length;s++)if(t[s]!==e[s])return!1;return!0}clone(){return(new c).initialize(t(this._paths),this.geometryType,this.hasZ,this.hasM,this.yFactor)}get totalPoints(){return this._paths.map((t=>t.length)).reduce(((t,e)=>t+e))}get pathSize(){return this._pathIndex<0||this._pathIndex>this.totalSize-1?-1:this._paths[this._pathIndex].length}get totalSize(){return this._paths.length}get x(){return this._currentPoint[0]}set x(t){this._currentPoint[0]=t}get y(){return this.yFactor*this._currentPoint[1]}set y(t){this._currentPoint[1]=this.yFactor*t}get z(){return this._currentPoint[2]}set z(t){this._currentPoint[2]=t}get m(){return this._currentPoint[this._mIndex]}set m(t){this._currentPoint[this._mIndex]=t}get pathIndex(){return this._pathIndex}}const d=4,l=1;class y extends p{initialize(t,e,s,i,h){return super.initialize(t,e,s,i,h),this._controlPoints||(this._controlPoints=this._controlPoints=new Array(this.totalSize).fill(void 0).map((t=>new Set))),this}startPath(){super.startPath(),this._controlPoints.push(new Set)}clone(){const t=(new y).initialize(this._geometry.clone(),this.geometryType,this.hasZ,this.hasM,this.yFactor);return t._controlPoints=this._controlPoints,t}setControlPoint(){this._controlPoints[this.pathIndex].add(this._coordIndex)}getControlPoint(){return this._controlPoints[this.pathIndex].has(this._coordIndex)}setControlPointAt(t){this._controlPoints[this.pathIndex].add(t)}getControlPointAt(t){return this._controlPoints[this.pathIndex].has(t)}}class m extends c{initialize(t,e,s,i,h){return super.initialize(t,e,s,i,h)}clone(){return(new m).initialize(t(this._paths),this.geometryType,this.hasZ,this.hasM,this.yFactor)}setControlPoint(){this._paths[this.pathIndex][this._pointIndex][d]=l}getControlPoint(){return this._paths[this.pathIndex][this._pointIndex][d]===l}setControlPointAt(t){this._paths[this.pathIndex][t][d]=l}getControlPointAt(t){return this._paths[this.pathIndex][t][d]===l}}export{a as GeometryCursor};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,KAAK,IAAIC,CAAC,QAAK,iBAAiB;AAAC,SAAOC,gBAAgB,IAAIC,CAAC,QAAK,iCAAiC;AAAC,SAAOC,SAAS,IAAIC,CAAC,EAACC,UAAU,IAAIC,CAAC,EAACC,YAAY,IAAIC,CAAC,EAACC,QAAQ,IAAIC,CAAC,EAACC,OAAO,IAAIC,CAAC,QAAK,wBAAwB;AAAC,OAAOC,CAAC,MAAK,yCAAyC;AAAC,MAAMC,CAAC;EAAC,OAAOC,aAAaA,CAACf,CAAC,EAACE,CAAC,EAAe;IAAA,IAAdE,CAAC,GAAAY,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,CAAC,CAAC;IAAA,IAACV,CAAC,GAAAU,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,CAAC,CAAC;IAAA,IAACR,CAAC,GAAAQ,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,CAAC;IAAE,OAAO,IAAIG,CAAC,CAAD,CAAC,CAAEC,UAAU,CAACpB,CAAC,EAACE,CAAC,EAACE,CAAC,EAACE,CAAC,EAACE,CAAC,CAAC;EAAA;EAAC,OAAOa,QAAQA,CAACrB,CAAC,EAAW;IAAA,IAAVE,CAAC,GAAAc,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,CAAC,CAAC;IAAA,IAACZ,CAAC,GAAAY,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,CAAC,CAAC;IAAE,MAAK,CAACV,CAAC,EAACE,CAAC,CAAC,GAACc,CAAC,CAACtB,CAAC,CAAC;IAAC,OAAO,IAAIuB,CAAC,CAAD,CAAC,CAAEH,UAAU,CAACd,CAAC,EAACE,CAAC,EAACN,CAAC,EAACE,CAAC,EAAC,CAAC,CAAC;EAAA;EAAC,OAAOoB,gBAAgBA,CAACxB,CAAC,EAACE,CAAC,EAAe;IAAA,IAAdE,CAAC,GAAAY,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,CAAC,CAAC;IAAA,IAACV,CAAC,GAAAU,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,CAAC,CAAC;IAAA,IAACR,CAAC,GAAAQ,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,CAAC;IAAE,OAAO,IAAIS,CAAC,CAAD,CAAC,CAAEL,UAAU,CAACpB,CAAC,EAACE,CAAC,EAACE,CAAC,EAACE,CAAC,EAACE,CAAC,CAAC;EAAA;EAAC,OAAOkB,WAAWA,CAAC1B,CAAC,EAAe;IAAA,IAAdE,CAAC,GAAAc,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,CAAC,CAAC;IAAA,IAACZ,CAAC,GAAAY,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,CAAC,CAAC;IAAA,IAACV,CAAC,GAAAU,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,CAAC;IAAE,MAAK,CAACR,CAAC,EAACE,CAAC,CAAC,GAACY,CAAC,CAACtB,CAAC,CAAC;IAAC,OAAO,IAAI2B,CAAC,CAAD,CAAC,CAAEP,UAAU,CAACZ,CAAC,EAACE,CAAC,EAACR,CAAC,EAACE,CAAC,EAACE,CAAC,CAAC;EAAA;EAAC,OAAOsB,oBAAoBA,CAAC5B,CAAC,EAAC;IAAC,MAAME,CAAC,GAACF,CAAC,CAAC6B,sBAAsB,CAAC,CAAC;MAACzB,CAAC,GAACJ,CAAC,CAAC8B,YAAY;IAAC,OAAO5B,CAAC,IAAEE,CAAC,GAAC,IAAI,CAACW,aAAa,CAACb,CAAC,EAACE,CAAC,CAAC,GAAC,IAAI;EAAA;EAAC,OAAO2B,uBAAuBA,CAAC/B,CAAC,EAAC;IAAC,MAAME,CAAC,GAACF,CAAC,CAAC6B,sBAAsB,CAAC,CAAC;MAACzB,CAAC,GAACJ,CAAC,CAAC8B,YAAY;IAAC,OAAO5B,CAAC,IAAEE,CAAC,GAAC,IAAI,CAACoB,gBAAgB,CAACtB,CAAC,EAACE,CAAC,CAAC,GAAC,IAAI;EAAA;EAAC,OAAO4B,oBAAoBA,CAAChC,CAAC,EAAe;IAAA,IAAdE,CAAC,GAAAc,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,CAAC,CAAC;IAAA,IAACZ,CAAC,GAAAY,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,CAAC,CAAC;IAAA,IAACV,CAAC,GAAAU,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,CAAC;IAAE,OAAO,IAAIG,CAAC,CAAD,CAAC,CAAEC,UAAU,CAAC,IAAIP,CAAC,CAAD,CAAC,EAACb,CAAC,EAACE,CAAC,EAACE,CAAC,EAACE,CAAC,CAAC;EAAA;EAAC,OAAO2B,eAAeA,CAACjC,CAAC,EAAW;IAAA,IAAVE,CAAC,GAAAc,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,CAAC,CAAC;IAAA,IAACZ,CAAC,GAAAY,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,CAAC,CAAC;IAAE,OAAO,IAAIO,CAAC,CAAD,CAAC,CAAEH,UAAU,CAAC,EAAE,EAACpB,CAAC,EAACE,CAAC,EAACE,CAAC,EAAC,CAAC,CAAC;EAAA;EAAC,OAAO8B,uBAAuBA,CAAClC,CAAC,EAAe;IAAA,IAAdE,CAAC,GAAAc,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,CAAC,CAAC;IAAA,IAACZ,CAAC,GAAAY,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,CAAC,CAAC;IAAA,IAACV,CAAC,GAAAU,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,CAAC;IAAE,OAAO,IAAIS,CAAC,CAAD,CAAC,CAAEL,UAAU,CAAC,IAAIP,CAAC,CAAD,CAAC,EAACb,CAAC,EAACE,CAAC,EAACE,CAAC,EAACE,CAAC,CAAC;EAAA;EAAC,OAAO6B,kBAAkBA,CAACnC,CAAC,EAAe;IAAA,IAAdE,CAAC,GAAAc,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,CAAC,CAAC;IAAA,IAACZ,CAAC,GAAAY,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,CAAC,CAAC;IAAA,IAACV,CAAC,GAAAU,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,CAAC;IAAE,OAAO,IAAIW,CAAC,CAAD,CAAC,CAAEP,UAAU,CAAC,EAAE,EAACpB,CAAC,EAACE,CAAC,EAACE,CAAC,EAACE,CAAC,CAAC;EAAA;EAAC8B,MAAMA,CAAA,EAAE;IAAC,MAAMpC,CAAC,GAACE,CAAC,CAAC,IAAI,CAAC;IAAC,OAAM,sBAAsB,KAAG,IAAI,CAAC4B,YAAY,GAAC;MAACO,IAAI,EAACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAACsC,IAAI,EAACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAACuC,IAAI,EAACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAACwC,IAAI,EAACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAAC,CAAC,GAAC,wBAAwB,KAAG,IAAI,CAAC8B,YAAY,GAAC;MAACW,MAAM,EAACzC,CAAC,CAAC0C,IAAI,CAAC;IAAC,CAAC,GAAC,mBAAmB,KAAG,IAAI,CAACZ,YAAY,GAAC;MAACa,CAAC,EAAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAACyB,CAAC,EAACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAAC,CAAC,GAAC,qBAAqB,KAAG,IAAI,CAAC8B,YAAY,GAAC;MAACc,KAAK,EAAC5C;IAAC,CAAC,GAAC;MAAC6C,KAAK,EAAC7C;IAAC,CAAC;EAAA;EAAC8C,kBAAkBA,CAAA,EAAE;IAAC,IAAG,IAAI,CAACC,QAAQ,GAAC,CAAC,EAAC,OAAO,CAAC;IAAC,IAAI/C,CAAC;MAACE,CAAC;MAACE,CAAC,GAAC,CAAC;IAAC,IAAG,IAAI,CAAC4C,aAAa,CAAC,CAAC,EAAC,CAAC,IAAI,CAACC,SAAS,CAAC,CAAC,EAAC,OAAO,CAAC;IAACjD,CAAC,GAAC,IAAI,CAAC2C,CAAC,EAACzC,CAAC,GAAC,IAAI,CAACuB,CAAC;IAAC,MAAMnB,CAAC,GAACN,CAAC;MAACQ,CAAC,GAACN,CAAC;IAAC,OAAK,IAAI,CAAC+C,SAAS,CAAC,CAAC,GAAE7C,CAAC,IAAE,CAACJ,CAAC,GAAC,IAAI,CAAC2C,CAAC,KAAGzC,CAAC,GAAC,IAAI,CAACuB,CAAC,CAAC,EAACzB,CAAC,GAAC,IAAI,CAAC2C,CAAC,EAACzC,CAAC,GAAC,IAAI,CAACuB,CAAC;IAAC,OAAOrB,CAAC,IAAE,CAACJ,CAAC,GAACM,CAAC,KAAGJ,CAAC,GAACM,CAAC,CAAC,EAAC,CAAC,EAAE,GAACJ,CAAC;EAAA;EAAC8C,OAAOA,CAAA,EAAE;IAAC,IAAI,CAACC,OAAO,IAAE,CAAC,CAAC;EAAA;AAAC;AAAC,MAAMhC,CAAC,SAASL,CAAC;EAACsC,WAAWA,CAAA,EAAE;IAAC,KAAK,CAAC,GAAGpC,SAAS,CAAC,EAAC,IAAI,CAACqC,IAAI,GAAC,CAAC,CAAC;EAAA;EAACjC,UAAUA,CAACpB,CAAC,EAACE,CAAC,EAACE,CAAC,EAACE,CAAC,EAACE,CAAC,EAAC;IAAC,OAAO,IAAI,CAAC8C,IAAI,GAAClD,CAAC,EAAC,IAAI,CAACmD,IAAI,GAACjD,CAAC,EAAC,IAAI,CAACwB,YAAY,GAAC5B,CAAC,EAAC,IAAI,CAACsD,OAAO,GAAC,CAAC,GAACC,MAAM,CAACrD,CAAC,CAAC,GAACqD,MAAM,CAACnD,CAAC,CAAC,EAAC,IAAI,CAACoD,SAAS,GAAC1D,CAAC,EAAC,IAAI,CAAC2D,UAAU,GAAC,CAAC,CAAC,EAAC,IAAI,CAACC,WAAW,GAAC,CAAC,EAAC,IAAI,CAACC,YAAY,GAAC,CAAC,IAAI,CAACL,OAAO,EAAC,IAAI,CAACH,IAAI,GAAC,CAAC,CAAC,EAAC,IAAI,CAACF,OAAO,GAAC3C,CAAC,EAAC,IAAI;EAAA;EAACsD,KAAKA,CAAA,EAAE;IAAC,IAAI,CAAC1C,UAAU,CAAC,IAAI,CAACsC,SAAS,EAAC,IAAI,CAAC5B,YAAY,EAAC,IAAI,CAACwB,IAAI,EAAC,IAAI,CAACC,IAAI,EAAC,IAAI,CAACJ,OAAO,CAAC;EAAA;EAACY,QAAQA,CAAC/D,CAAC,EAAC;IAAC,IAAGA,CAAC,IAAE,CAAC,IAAEA,CAAC,GAAC,IAAI,CAACgE,SAAS,EAAC;MAAC,IAAG,IAAI,CAACL,UAAU,GAAC3D,CAAC,EAAC,OAAK,IAAI,CAAC2D,UAAU,GAAC3D,CAAC,IAAE,IAAI,CAACiE,QAAQ,CAAC,CAAC,EAAE,CAAC,KAAK,IAAG,IAAI,CAACN,UAAU,GAAC3D,CAAC,EAAC,OAAK,IAAI,CAAC2D,UAAU,GAAC3D,CAAC,IAAE,IAAI,CAACkE,QAAQ,CAAC,CAAC,EAAE;MAAC,OAAM,CAAC,CAAC;IAAA;IAAC,OAAM,CAAC,CAAC;EAAA;EAAClB,aAAaA,CAAA,EAAE;IAAC,IAAI,CAACa,YAAY,GAAC,IAAI,CAACD,WAAW,GAAC,IAAI,CAACJ,OAAO;EAAA;EAACW,WAAWA,CAAA,EAAE;IAAC,IAAI,CAACN,YAAY,GAAC,IAAI,CAACR,IAAI;EAAA;EAACe,UAAUA,CAACpE,CAAC,EAAC;IAAC,MAAME,CAAC,GAAC,IAAI,CAAC0D,WAAW,GAAC5D,CAAC,GAAC,IAAI,CAACwD,OAAO;IAAC,OAAOtD,CAAC,IAAE,CAAC,IAAEA,CAAC,GAAC,IAAI,CAACmD,IAAI,KAAG,IAAI,CAACQ,YAAY,GAAC3D,CAAC,EAAC,CAAC,CAAC,CAAC;EAAA;EAAC+C,SAASA,CAAA,EAAE;IAAC,OAAM,CAAC,IAAI,CAACY,YAAY,IAAE,IAAI,CAACL,OAAO,IAAE,IAAI,CAACH,IAAI;EAAA;EAACgB,SAASA,CAAA,EAAE;IAAC,OAAM,CAAC,IAAI,CAACR,YAAY,IAAE,IAAI,CAACL,OAAO,KAAG,IAAI,CAACI,WAAW;EAAA;EAACK,QAAQA,CAAA,EAAE;IAAC,OAAM,EAAE,IAAI,CAACK,SAAS,IAAE,IAAI,CAACN,SAAS,GAAC,CAAC,CAAC,KAAG,IAAI,CAACL,UAAU,IAAE,CAAC,KAAG,IAAI,CAACC,WAAW,IAAE,IAAI,CAACJ,OAAO,GAAC,IAAI,CAACT,QAAQ,CAAC,EAAC,IAAI,CAACY,UAAU,EAAE,EAAC,IAAI,CAACE,YAAY,GAAC,IAAI,CAACD,WAAW,GAAC,IAAI,CAACJ,OAAO,EAAC,IAAI,CAACH,IAAI,GAAC,IAAI,CAACQ,YAAY,GAAC,IAAI,CAACL,OAAO,GAAC,IAAI,CAACA,OAAO,GAAC,IAAI,CAACT,QAAQ,EAAC,CAAC,CAAC,CAAC;EAAA;EAACmB,QAAQA,CAAA,EAAE;IAAC,OAAM,EAAE,IAAI,CAACI,SAAS,IAAE,CAAC,CAAC,KAAG,IAAI,CAACX,UAAU,EAAE,EAAC,IAAI,CAACN,IAAI,GAAC,IAAI,CAACO,WAAW,EAAC,IAAI,CAACA,WAAW,IAAE,IAAI,CAACJ,OAAO,GAAC,IAAI,CAACT,QAAQ,EAAC,IAAI,CAACc,YAAY,GAAC,IAAI,CAACD,WAAW,GAAC,IAAI,CAACJ,OAAO,EAAC,CAAC,CAAC,CAAC;EAAA;EAACe,cAAcA,CAAA,EAAE;IAAC,MAAMvE,CAAC,GAAC,IAAI,CAACqD,IAAI;MAACnD,CAAC,GAAC,IAAI,CAACwD,SAAS,CAACc,MAAM;MAACpE,CAAC,GAAC,IAAI,CAACwD,WAAW;IAAC,OAAO,IAAIzC,CAAC,CAAD,CAAC,CAAEC,UAAU,CAAC,IAAIP,CAAC,CAAC,CAAC,IAAI,CAACkC,QAAQ,CAAC,EAAC7C,CAAC,CAACuE,KAAK,CAACrE,CAAC,EAACJ,CAAC,CAAC,CAAC,EAAC,IAAI,CAAC8B,YAAY,EAAC,IAAI,CAACwB,IAAI,EAAC,IAAI,CAACC,IAAI,EAAC,IAAI,CAACJ,OAAO,CAAC;EAAA;EAACuB,UAAUA,CAAA,EAAE;IAAC,MAAM1E,CAAC,GAAC,IAAI,CAACqD,IAAI;MAACnD,CAAC,GAAC,IAAI,CAACsD,OAAO;MAACpD,CAAC,GAAC,IAAI,CAACsD,SAAS,CAACc,MAAM;IAAC,IAAIlE,CAAC,GAAC,CAAC;IAAC,KAAI,IAAIE,CAAC,GAAC,IAAI,CAACoD,WAAW,GAAC1D,CAAC,EAACM,CAAC,GAACR,CAAC,EAACQ,CAAC,IAAEN,CAAC,EAAC;MAAC,MAAMF,CAAC,GAACI,CAAC,CAACI,CAAC,GAACN,CAAC,CAAC;QAACQ,CAAC,GAACN,CAAC,CAACI,CAAC,GAACN,CAAC,GAAC,CAAC,CAAC;QAACU,CAAC,GAACR,CAAC,CAACI,CAAC,CAAC,GAACR,CAAC;QAACa,CAAC,GAACT,CAAC,CAACI,CAAC,GAAC,CAAC,CAAC,GAACE,CAAC;MAACJ,CAAC,IAAEqE,IAAI,CAACC,IAAI,CAAChE,CAAC,GAACA,CAAC,GAACC,CAAC,GAACA,CAAC,CAAC;IAAA;IAAC,OAAOP,CAAC;EAAA;EAACuE,SAASA,CAAA,EAAE;IAAC,IAAI,CAACnB,SAAS,CAACoB,OAAO,CAACC,IAAI,CAAC,CAAC,CAAC;EAAA;EAACC,QAAQA,CAAChF,CAAC,EAAC;IAAC,IAAI,CAAC6E,SAAS,CAAC,CAAC,EAAC,IAAI,CAACI,UAAU,CAACjF,CAAC,CAAC;EAAA;EAACkF,SAASA,CAAClF,CAAC,EAAC;IAAC,KAAI,IAAIE,CAAC,GAAC,CAAC,EAACA,CAAC,GAAC,IAAI,CAACsD,OAAO,EAAC,EAAEtD,CAAC,EAAC,IAAI,CAACwD,SAAS,CAACc,MAAM,CAACO,IAAI,CAAC/E,CAAC,CAACE,CAAC,CAAC,CAAC;IAAC,IAAI,CAACwD,SAAS,CAACoB,OAAO,CAAC,IAAI,CAACd,SAAS,GAAC,CAAC,CAAC,EAAE;EAAA;EAACmB,MAAMA,CAACnF,CAAC,EAACE,CAAC,EAAC;IAAC,IAAI,CAACwD,SAAS,CAACc,MAAM,CAACO,IAAI,CAAC/E,CAAC,EAACE,CAAC,CAAC,EAAC,IAAI,CAACwD,SAAS,CAACoB,OAAO,CAAC,IAAI,CAACd,SAAS,GAAC,CAAC,CAAC,EAAE;EAAA;EAACiB,UAAUA,CAACjF,CAAC,EAAC;IAAC,KAAI,MAAME,CAAC,IAAIF,CAAC,EAAC,KAAI,IAAIA,CAAC,GAAC,CAAC,EAACA,CAAC,GAAC,IAAI,CAACwD,OAAO,EAAC,EAAExD,CAAC,EAAC,IAAI,CAAC0D,SAAS,CAACc,MAAM,CAACO,IAAI,CAAC7E,CAAC,CAACF,CAAC,CAAC,CAAC;IAAC,IAAI,CAAC0D,SAAS,CAACoB,OAAO,CAAC,IAAI,CAACd,SAAS,GAAC,CAAC,CAAC,IAAEhE,CAAC,CAACiB,MAAM;EAAA;EAACmE,UAAUA,CAACpF,CAAC,EAAC;IAAC,MAAME,CAAC,GAACF,CAAC,CAACqF,WAAW,CAAC,CAAC;IAAC,IAAI,CAAC3B,SAAS,CAACc,MAAM,CAACO,IAAI,CAAC,GAAG7E,CAAC,CAACsE,MAAM,CAAC,EAAC,IAAI,CAACd,SAAS,CAACoB,OAAO,CAACC,IAAI,CAAC,GAAG7E,CAAC,CAAC4E,OAAO,CAAC;EAAA;EAACO,WAAWA,CAAA,EAAE;IAAC,MAAMrF,CAAC,GAAC,IAAI,CAAC0D,SAAS,CAAC3D,KAAK,CAAC,CAAC;IAAC,IAAG,CAAC,KAAG,IAAI,CAACoD,OAAO,EAAC,KAAI,IAAIjD,CAAC,GAAC,CAAC,EAACA,CAAC,GAACF,CAAC,CAACwE,MAAM,CAACvD,MAAM,EAACf,CAAC,IAAE,IAAI,CAACsD,OAAO,EAACxD,CAAC,CAACwE,MAAM,CAACtE,CAAC,CAAC,IAAE,IAAI,CAACiD,OAAO;IAAC,OAAM,mBAAmB,KAAG,IAAI,CAACrB,YAAY,KAAG9B,CAAC,CAAC8E,OAAO,CAAC7D,MAAM,GAAC,CAAC,CAAC,EAACjB,CAAC;EAAA;EAACsF,QAAQA,CAAA,EAAE;IAAC,MAAMtF,CAAC,GAAC,IAAI,CAAC0D,SAAS,CAACc,MAAM;MAACtE,CAAC,GAAC,IAAI,CAAC0D,WAAW;MAACxD,CAAC,GAAC,IAAI,CAACiD,IAAI,GAAC,IAAI,CAACG,OAAO;IAAC,KAAI,IAAIlD,CAAC,GAAC,CAAC,EAACA,CAAC,GAAC,IAAI,CAACkD,OAAO,EAAClD,CAAC,EAAE,EAAC,IAAGN,CAAC,CAACE,CAAC,GAACI,CAAC,CAAC,KAAGN,CAAC,CAACI,CAAC,GAACE,CAAC,CAAC,EAAC,OAAM,CAAC,CAAC;IAAC,OAAM,CAAC,CAAC;EAAA;EAACP,KAAKA,CAAA,EAAE;IAAC,OAAO,IAAIoB,CAAC,CAAD,CAAC,CAAEC,UAAU,CAAC,IAAI,CAACsC,SAAS,CAAC3D,KAAK,CAAC,CAAC,EAAC,IAAI,CAAC+B,YAAY,EAAC,IAAI,CAACwB,IAAI,EAAC,IAAI,CAACC,IAAI,EAAC,IAAI,CAACJ,OAAO,CAAC;EAAA;EAAC,IAAIoC,WAAWA,CAAA,EAAE;IAAC,OAAO,IAAI,CAAC7B,SAAS,CAAC/C,OAAO,GAAC,CAAC,GAAC,IAAI,CAAC+C,SAAS,CAACoB,OAAO,CAACU,MAAM,CAAE,CAACxF,CAAC,EAACE,CAAC,KAAGF,CAAC,GAACE,CAAE,CAAC;EAAA;EAAC,IAAI6C,QAAQA,CAAA,EAAE;IAAC,MAAK;MAAC+B,OAAO,EAAC9E;IAAC,CAAC,GAAC,IAAI,CAAC0D,SAAS;IAAC,OAAO,IAAI,CAACA,SAAS,CAAC/C,OAAO,GAAC,CAAC,GAAC,IAAI,CAACgD,UAAU,GAAC,CAAC,IAAE,IAAI,CAACA,UAAU,GAAC3D,CAAC,CAACiB,MAAM,GAAC,CAAC,GAAC,CAAC,GAACjB,CAAC,CAAC,IAAI,CAAC2D,UAAU,CAAC;EAAA;EAAC,IAAIK,SAASA,CAAA,EAAE;IAAC,OAAO,IAAI,CAACN,SAAS,CAAC/C,OAAO,GAAC,CAAC,GAAC,IAAI,CAAC+C,SAAS,CAACoB,OAAO,CAAC7D,MAAM;EAAA;EAAC,IAAI0B,CAACA,CAAA,EAAE;IAAC,OAAO,IAAI,CAACe,SAAS,CAACc,MAAM,CAAC,IAAI,CAACX,YAAY,CAAC;EAAA;EAAC,IAAIlB,CAACA,CAAC3C,CAAC,EAAC;IAAC,IAAI,CAAC0D,SAAS,CAACc,MAAM,CAAC,IAAI,CAACX,YAAY,CAAC,GAAC7D,CAAC;EAAA;EAAC,IAAIyB,CAACA,CAAA,EAAE;IAAC,OAAO,IAAI,CAAC0B,OAAO,GAAC,IAAI,CAACO,SAAS,CAACc,MAAM,CAAC,IAAI,CAACX,YAAY,GAAC,CAAC,CAAC;EAAA;EAAC,IAAIpC,CAACA,CAACzB,CAAC,EAAC;IAAC,IAAI,CAAC0D,SAAS,CAACc,MAAM,CAAC,IAAI,CAACX,YAAY,GAAC,CAAC,CAAC,GAAC,IAAI,CAACV,OAAO,GAACnD,CAAC;EAAA;EAAC,IAAIyF,CAACA,CAAA,EAAE;IAAC,OAAO,IAAI,CAAC/B,SAAS,CAACc,MAAM,CAAC,IAAI,CAACX,YAAY,GAAC,CAAC,CAAC;EAAA;EAAC,IAAI4B,CAACA,CAACzF,CAAC,EAAC;IAAC,IAAI,CAAC0D,SAAS,CAACc,MAAM,CAAC,IAAI,CAACX,YAAY,GAAC,CAAC,CAAC,GAAC7D,CAAC;EAAA;EAAC,IAAI2B,CAACA,CAAA,EAAE;IAAC,MAAM3B,CAAC,GAAC,IAAI,CAACsD,IAAI,GAAC,CAAC,GAAC,CAAC;IAAC,OAAO,IAAI,CAACI,SAAS,CAACc,MAAM,CAAC,IAAI,CAACX,YAAY,GAAC7D,CAAC,CAAC;EAAA;EAAC,IAAI2B,CAACA,CAAC3B,CAAC,EAAC;IAAC,IAAI,CAAC0D,SAAS,CAACc,MAAM,CAAC,IAAI,CAACX,YAAY,GAAC,CAAC,CAAC,GAAC7D,CAAC;EAAA;EAAC,IAAIsE,SAASA,CAAA,EAAE;IAAC,OAAO,IAAI,CAACX,UAAU;EAAA;EAAC,IAAI+B,WAAWA,CAAA,EAAE;IAAC,OAAO,IAAI,CAAC7B,YAAY,GAAC,IAAI,CAACL,OAAO;EAAA;AAAC;AAAC,SAASmC,CAACA,CAAC3F,CAAC,EAAC;EAAC,MAAME,CAAC,GAAC,CAACF,CAAC,CAAC2C,CAAC,EAAC3C,CAAC,CAACyB,CAAC,CAAC;EAAC,OAAOzB,CAAC,CAACyF,CAAC,IAAEvF,CAAC,CAAC6E,IAAI,CAAC/E,CAAC,CAACyF,CAAC,CAAC,EAACzF,CAAC,CAAC2B,CAAC,IAAEzB,CAAC,CAAC6E,IAAI,CAAC/E,CAAC,CAAC2B,CAAC,CAAC,EAACzB,CAAC;AAAA;AAAC,SAASoB,CAACA,CAACtB,CAAC,EAAC;EAAC,OAAOI,CAAC,CAACJ,CAAC,CAAC,GAAC,CAACA,CAAC,CAAC4C,KAAK,EAAC,qBAAqB,CAAC,GAACtC,CAAC,CAACN,CAAC,CAAC,GAAC,CAACA,CAAC,CAAC6C,KAAK,EAAC,sBAAsB,CAAC,GAACrC,CAAC,CAACR,CAAC,CAAC,GAAC,CAAC,CAACA,CAAC,CAACyC,MAAM,CAAC,EAAC,wBAAwB,CAAC,GAAC/B,CAAC,CAACV,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAACA,CAAC,CAACqC,IAAI,EAACrC,CAAC,CAACsC,IAAI,CAAC,EAAC,CAACtC,CAAC,CAACqC,IAAI,EAACrC,CAAC,CAACwC,IAAI,CAAC,EAAC,CAACxC,CAAC,CAACuC,IAAI,EAACvC,CAAC,CAACwC,IAAI,CAAC,EAAC,CAACxC,CAAC,CAACuC,IAAI,EAACvC,CAAC,CAACsC,IAAI,CAAC,EAAC,CAACtC,CAAC,CAACqC,IAAI,EAACrC,CAAC,CAACsC,IAAI,CAAC,CAAC,CAAC,EAAC,sBAAsB,CAAC,GAAC1B,CAAC,CAACZ,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC2F,CAAC,CAAC3F,CAAC,CAAC,CAAC,CAAC,EAAC,mBAAmB,CAAC,GAAC,CAAC,EAAE,EAAC,sBAAsB,CAAC;AAAA;AAAC,MAAMuB,CAAC,SAAST,CAAC;EAACM,UAAUA,CAACpB,CAAC,EAACE,CAAC,EAACE,CAAC,EAACE,CAAC,EAACE,CAAC,EAAC;IAAC,OAAO,IAAI,CAACoF,MAAM,GAAC5F,CAAC,EAAC,IAAI,CAAC8B,YAAY,GAAC5B,CAAC,EAAC,IAAI,CAACoD,IAAI,GAAClD,CAAC,EAAC,IAAI,CAACmD,IAAI,GAACjD,CAAC,EAAC,IAAI,CAACqD,UAAU,GAAC,IAAI,CAACkC,WAAW,GAAC,CAAC,CAAC,EAAC,IAAI,CAAC1C,OAAO,GAAC3C,CAAC,EAAC,IAAI,CAACsF,OAAO,GAAC,IAAI,CAACxC,IAAI,GAAC,CAAC,GAAC,CAAC,EAAC,IAAI;EAAA;EAACQ,KAAKA,CAAA,EAAE;IAAC,IAAI,CAACH,UAAU,GAAC,IAAI,CAACkC,WAAW,GAAC,CAAC,CAAC;EAAA;EAAC9B,QAAQA,CAAC/D,CAAC,EAAC;IAAC,OAAO,IAAI,CAAC2D,UAAU,GAAC3D,CAAC,EAAC,IAAI,CAAC6F,WAAW,GAAC,CAAC,CAAC,EAAC7F,CAAC,IAAE,CAAC,IAAEA,CAAC,GAAC,IAAI,CAACgE,SAAS,KAAG,IAAI,CAAC+B,YAAY,GAAC,IAAI,CAACH,MAAM,CAAC5F,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;EAAA;EAACgD,aAAaA,CAAA,EAAE;IAAC,IAAI,CAAC6C,WAAW,GAAC,CAAC,CAAC;EAAA;EAAC1B,WAAWA,CAAA,EAAE;IAAC,IAAI,CAAC0B,WAAW,GAAC,IAAI,CAACE,YAAY,CAAC9E,MAAM;EAAA;EAACmD,UAAUA,CAACpE,CAAC,EAAC;IAAC,OAAOA,CAAC,IAAE,CAAC,IAAEA,CAAC,GAAC,IAAI,CAAC+F,YAAY,CAAC9E,MAAM,KAAG,IAAI,CAAC4E,WAAW,GAAC7F,CAAC,EAAC,IAAI,CAACgG,aAAa,GAAC,IAAI,CAACD,YAAY,CAAC,IAAI,CAACF,WAAW,CAAC,EAAC,CAAC,CAAC,CAAC;EAAA;EAAC5C,SAASA,CAAA,EAAE;IAAC,OAAO,IAAI,CAAC+C,aAAa,GAAC,IAAI,CAACD,YAAY,CAAC,EAAE,IAAI,CAACF,WAAW,CAAC,EAAC,IAAI,CAACA,WAAW,GAAC,IAAI,CAACE,YAAY,CAAC9E,MAAM;EAAA;EAACoD,SAASA,CAAA,EAAE;IAAC,OAAO,IAAI,CAAC2B,aAAa,GAAC,IAAI,CAACD,YAAY,CAAC,EAAE,IAAI,CAACF,WAAW,CAAC,EAAC,IAAI,CAACA,WAAW,IAAE,CAAC;EAAA;EAAC5B,QAAQA,CAAA,EAAE;IAAC,OAAO,IAAI,CAAC4B,WAAW,GAAC,CAAC,CAAC,EAAC,IAAI,CAACE,YAAY,GAAC,IAAI,CAACH,MAAM,CAAC,EAAE,IAAI,CAACjC,UAAU,CAAC,EAAC,IAAI,CAACA,UAAU,GAAC,IAAI,CAACK,SAAS;EAAA;EAACE,QAAQA,CAAA,EAAE;IAAC,OAAO,IAAI,CAACI,SAAS,GAAC,CAAC,KAAG,IAAI,CAACuB,WAAW,GAAC,CAAC,CAAC,EAAC,IAAI,CAAClC,UAAU,EAAE,EAAC,IAAI,CAACoC,YAAY,GAAC,IAAI,CAACH,MAAM,CAAC,IAAI,CAACjC,UAAU,CAAC,EAAC,CAAC,CAAC,CAAC;EAAA;EAACe,UAAUA,CAAA,EAAE;IAAC,MAAM1E,CAAC,GAAC,IAAI,CAAC+F,YAAY,CAAC9E,MAAM;MAACf,CAAC,GAAC,IAAI,CAAC6F,YAAY;IAAC,IAAI3F,CAAC,GAAC,CAAC;IAAC,KAAI,IAAIE,CAAC,GAAC,CAAC,EAACA,CAAC,GAACN,CAAC,EAACM,CAAC,EAAE,EAAC;MAAC,MAAMN,CAAC,GAACE,CAAC,CAACI,CAAC,GAAC,CAAC,CAAC;QAACE,CAAC,GAACN,CAAC,CAACI,CAAC,CAAC;QAACI,CAAC,GAACV,CAAC,CAAC,CAAC,CAAC;QAACY,CAAC,GAACZ,CAAC,CAAC,CAAC,CAAC;QAACa,CAAC,GAACL,CAAC,CAAC,CAAC,CAAC,GAACE,CAAC;QAACI,CAAC,GAACN,CAAC,CAAC,CAAC,CAAC,GAACI,CAAC;MAACR,CAAC,IAAEuE,IAAI,CAACC,IAAI,CAAC/D,CAAC,GAACA,CAAC,GAACC,CAAC,GAACA,CAAC,CAAC;IAAA;IAAC,OAAOV,CAAC;EAAA;EAACyE,SAASA,CAAA,EAAE;IAAC,IAAI,CAACe,MAAM,CAACb,IAAI,CAAC,EAAE,CAAC;EAAA;EAACR,cAAcA,CAAA,EAAE;IAAC,OAAO,IAAIhD,CAAC,CAAD,CAAC,CAAEH,UAAU,CAAC,CAAC,IAAI,CAAC2E,YAAY,CAAC,EAAC,IAAI,CAACjE,YAAY,EAAC,IAAI,CAACwB,IAAI,EAAC,IAAI,CAACC,IAAI,EAAC,IAAI,CAACJ,OAAO,CAAC;EAAA;EAAC6B,QAAQA,CAAChF,CAAC,EAAC;IAAC,IAAI,CAAC4F,MAAM,CAACb,IAAI,CAAC/E,CAAC,CAAC;EAAA;EAACkF,SAASA,CAAClF,CAAC,EAAC;IAAC,IAAI,CAAC4F,MAAM,CAAC,IAAI,CAAC5B,SAAS,GAAC,CAAC,CAAC,CAACe,IAAI,CAAC/E,CAAC,CAAC;EAAA;EAACmF,MAAMA,CAACnF,CAAC,EAACE,CAAC,EAAC;IAAC,IAAI,CAAC0F,MAAM,CAAC,IAAI,CAAC5B,SAAS,GAAC,CAAC,CAAC,CAACe,IAAI,CAAC,CAAC/E,CAAC,EAACE,CAAC,CAAC,CAAC;EAAA;EAAC+E,UAAUA,CAACjF,CAAC,EAAC;IAAC,IAAI,CAAC4F,MAAM,CAAC,IAAI,CAAC5B,SAAS,GAAC,CAAC,CAAC,CAACe,IAAI,CAAC,GAAG/E,CAAC,CAAC;EAAA;EAACoF,UAAUA,CAACpF,CAAC,EAAC;IAAC,MAAMI,CAAC,GAACF,CAAC,CAACF,CAAC,CAAC;IAAC,KAAI,MAAME,CAAC,IAAIE,CAAC,EAAC,IAAI,CAAC4E,QAAQ,CAAC9E,CAAC,CAAC;EAAA;EAACmF,WAAWA,CAAA,EAAE;IAAC,MAAMrF,CAAC,GAAC,IAAIa,CAAC,CAAD,CAAC;IAAC,IAAG,mBAAmB,KAAG,IAAI,CAACiB,YAAY,EAAC9B,CAAC,CAACwE,MAAM,CAACO,IAAI,CAAC,GAAG,IAAI,CAACa,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC5F,CAAC,CAAC8E,OAAO,CAAC7D,MAAM,GAAC,CAAC,CAAC,KAAK,KAAI,MAAMf,CAAC,IAAI,IAAI,CAAC0F,MAAM,EAAC;MAAC,KAAI,MAAMxF,CAAC,IAAIF,CAAC,EAACF,CAAC,CAACwE,MAAM,CAACO,IAAI,CAAC3E,CAAC,CAAC,CAAC,CAAC,CAAC,EAACJ,CAAC,CAACwE,MAAM,CAACO,IAAI,CAAC3E,CAAC,CAAC,CAAC,CAAC,GAAC,IAAI,CAAC+C,OAAO,CAAC,EAAC,IAAI,CAACG,IAAI,IAAEtD,CAAC,CAACwE,MAAM,CAACO,IAAI,CAAC3E,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,IAAI,CAACmD,IAAI,IAAEvD,CAAC,CAACwE,MAAM,CAACO,IAAI,CAAC3E,CAAC,CAAC,IAAI,CAAC0F,OAAO,CAAC,CAAC;MAAC9F,CAAC,CAAC8E,OAAO,CAACC,IAAI,CAAC7E,CAAC,CAACe,MAAM,CAAC;IAAA;IAAC,OAAOjB,CAAC;EAAA;EAACsF,QAAQA,CAAA,EAAE;IAAC,MAAMtF,CAAC,GAAC,IAAI,CAAC+F,YAAY,CAAC,CAAC,CAAC;MAAC7F,CAAC,GAAC,IAAI,CAAC6F,YAAY,CAAC,IAAI,CAACA,YAAY,CAAC9E,MAAM,GAAC,CAAC,CAAC;IAAC,KAAI,IAAIb,CAAC,GAAC,CAAC,EAACA,CAAC,GAACJ,CAAC,CAACiB,MAAM,EAACb,CAAC,EAAE,EAAC,IAAGJ,CAAC,CAACI,CAAC,CAAC,KAAGF,CAAC,CAACE,CAAC,CAAC,EAAC,OAAM,CAAC,CAAC;IAAC,OAAM,CAAC,CAAC;EAAA;EAACL,KAAKA,CAAA,EAAE;IAAC,OAAO,IAAIwB,CAAC,CAAD,CAAC,CAAEH,UAAU,CAACpB,CAAC,CAAC,IAAI,CAAC4F,MAAM,CAAC,EAAC,IAAI,CAAC9D,YAAY,EAAC,IAAI,CAACwB,IAAI,EAAC,IAAI,CAACC,IAAI,EAAC,IAAI,CAACJ,OAAO,CAAC;EAAA;EAAC,IAAIoC,WAAWA,CAAA,EAAE;IAAC,OAAO,IAAI,CAACK,MAAM,CAACK,GAAG,CAAEjG,CAAC,IAAEA,CAAC,CAACiB,MAAO,CAAC,CAACuE,MAAM,CAAE,CAACxF,CAAC,EAACE,CAAC,KAAGF,CAAC,GAACE,CAAE,CAAC;EAAA;EAAC,IAAI6C,QAAQA,CAAA,EAAE;IAAC,OAAO,IAAI,CAACY,UAAU,GAAC,CAAC,IAAE,IAAI,CAACA,UAAU,GAAC,IAAI,CAACK,SAAS,GAAC,CAAC,GAAC,CAAC,CAAC,GAAC,IAAI,CAAC4B,MAAM,CAAC,IAAI,CAACjC,UAAU,CAAC,CAAC1C,MAAM;EAAA;EAAC,IAAI+C,SAASA,CAAA,EAAE;IAAC,OAAO,IAAI,CAAC4B,MAAM,CAAC3E,MAAM;EAAA;EAAC,IAAI0B,CAACA,CAAA,EAAE;IAAC,OAAO,IAAI,CAACqD,aAAa,CAAC,CAAC,CAAC;EAAA;EAAC,IAAIrD,CAACA,CAAC3C,CAAC,EAAC;IAAC,IAAI,CAACgG,aAAa,CAAC,CAAC,CAAC,GAAChG,CAAC;EAAA;EAAC,IAAIyB,CAACA,CAAA,EAAE;IAAC,OAAO,IAAI,CAAC0B,OAAO,GAAC,IAAI,CAAC6C,aAAa,CAAC,CAAC,CAAC;EAAA;EAAC,IAAIvE,CAACA,CAACzB,CAAC,EAAC;IAAC,IAAI,CAACgG,aAAa,CAAC,CAAC,CAAC,GAAC,IAAI,CAAC7C,OAAO,GAACnD,CAAC;EAAA;EAAC,IAAIyF,CAACA,CAAA,EAAE;IAAC,OAAO,IAAI,CAACO,aAAa,CAAC,CAAC,CAAC;EAAA;EAAC,IAAIP,CAACA,CAACzF,CAAC,EAAC;IAAC,IAAI,CAACgG,aAAa,CAAC,CAAC,CAAC,GAAChG,CAAC;EAAA;EAAC,IAAI2B,CAACA,CAAA,EAAE;IAAC,OAAO,IAAI,CAACqE,aAAa,CAAC,IAAI,CAACF,OAAO,CAAC;EAAA;EAAC,IAAInE,CAACA,CAAC3B,CAAC,EAAC;IAAC,IAAI,CAACgG,aAAa,CAAC,IAAI,CAACF,OAAO,CAAC,GAAC9F,CAAC;EAAA;EAAC,IAAIsE,SAASA,CAAA,EAAE;IAAC,OAAO,IAAI,CAACX,UAAU;EAAA;AAAC;AAAC,MAAMuC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;AAAC,MAAM1E,CAAC,SAASN,CAAC;EAACC,UAAUA,CAACpB,CAAC,EAACE,CAAC,EAACE,CAAC,EAACE,CAAC,EAACE,CAAC,EAAC;IAAC,OAAO,KAAK,CAACY,UAAU,CAACpB,CAAC,EAACE,CAAC,EAACE,CAAC,EAACE,CAAC,EAACE,CAAC,CAAC,EAAC,IAAI,CAAC4F,cAAc,KAAG,IAAI,CAACA,cAAc,GAAC,IAAI,CAACA,cAAc,GAAC,IAAIC,KAAK,CAAC,IAAI,CAACrC,SAAS,CAAC,CAACsC,IAAI,CAAC,KAAK,CAAC,CAAC,CAACL,GAAG,CAAEjG,CAAC,IAAE,IAAIuG,GAAG,CAAD,CAAE,CAAC,CAAC,EAAC,IAAI;EAAA;EAAC1B,SAASA,CAAA,EAAE;IAAC,KAAK,CAACA,SAAS,CAAC,CAAC,EAAC,IAAI,CAACuB,cAAc,CAACrB,IAAI,CAAC,IAAIwB,GAAG,CAAD,CAAC,CAAC;EAAA;EAACxG,KAAKA,CAAA,EAAE;IAAC,MAAMC,CAAC,GAAE,IAAIyB,CAAC,CAAD,CAAC,CAAEL,UAAU,CAAC,IAAI,CAACsC,SAAS,CAAC3D,KAAK,CAAC,CAAC,EAAC,IAAI,CAAC+B,YAAY,EAAC,IAAI,CAACwB,IAAI,EAAC,IAAI,CAACC,IAAI,EAAC,IAAI,CAACJ,OAAO,CAAC;IAAC,OAAOnD,CAAC,CAACoG,cAAc,GAAC,IAAI,CAACA,cAAc,EAACpG,CAAC;EAAA;EAACwG,eAAeA,CAAA,EAAE;IAAC,IAAI,CAACJ,cAAc,CAAC,IAAI,CAAC9B,SAAS,CAAC,CAACmC,GAAG,CAAC,IAAI,CAACf,WAAW,CAAC;EAAA;EAACgB,eAAeA,CAAA,EAAE;IAAC,OAAO,IAAI,CAACN,cAAc,CAAC,IAAI,CAAC9B,SAAS,CAAC,CAACqC,GAAG,CAAC,IAAI,CAACjB,WAAW,CAAC;EAAA;EAACkB,iBAAiBA,CAAC5G,CAAC,EAAC;IAAC,IAAI,CAACoG,cAAc,CAAC,IAAI,CAAC9B,SAAS,CAAC,CAACmC,GAAG,CAACzG,CAAC,CAAC;EAAA;EAAC6G,iBAAiBA,CAAC7G,CAAC,EAAC;IAAC,OAAO,IAAI,CAACoG,cAAc,CAAC,IAAI,CAAC9B,SAAS,CAAC,CAACqC,GAAG,CAAC3G,CAAC,CAAC;EAAA;AAAC;AAAC,MAAM2B,CAAC,SAASJ,CAAC;EAACH,UAAUA,CAACpB,CAAC,EAACE,CAAC,EAACE,CAAC,EAACE,CAAC,EAACE,CAAC,EAAC;IAAC,OAAO,KAAK,CAACY,UAAU,CAACpB,CAAC,EAACE,CAAC,EAACE,CAAC,EAACE,CAAC,EAACE,CAAC,CAAC;EAAA;EAACT,KAAKA,CAAA,EAAE;IAAC,OAAO,IAAI4B,CAAC,CAAD,CAAC,CAAEP,UAAU,CAACpB,CAAC,CAAC,IAAI,CAAC4F,MAAM,CAAC,EAAC,IAAI,CAAC9D,YAAY,EAAC,IAAI,CAACwB,IAAI,EAAC,IAAI,CAACC,IAAI,EAAC,IAAI,CAACJ,OAAO,CAAC;EAAA;EAACqD,eAAeA,CAAA,EAAE;IAAC,IAAI,CAACZ,MAAM,CAAC,IAAI,CAACtB,SAAS,CAAC,CAAC,IAAI,CAACuB,WAAW,CAAC,CAACK,CAAC,CAAC,GAACC,CAAC;EAAA;EAACO,eAAeA,CAAA,EAAE;IAAC,OAAO,IAAI,CAACd,MAAM,CAAC,IAAI,CAACtB,SAAS,CAAC,CAAC,IAAI,CAACuB,WAAW,CAAC,CAACK,CAAC,CAAC,KAAGC,CAAC;EAAA;EAACS,iBAAiBA,CAAC5G,CAAC,EAAC;IAAC,IAAI,CAAC4F,MAAM,CAAC,IAAI,CAACtB,SAAS,CAAC,CAACtE,CAAC,CAAC,CAACkG,CAAC,CAAC,GAACC,CAAC;EAAA;EAACU,iBAAiBA,CAAC7G,CAAC,EAAC;IAAC,OAAO,IAAI,CAAC4F,MAAM,CAAC,IAAI,CAACtB,SAAS,CAAC,CAACtE,CAAC,CAAC,CAACkG,CAAC,CAAC,KAAGC,CAAC;EAAA;AAAC;AAAC,SAAOrF,CAAC,IAAIgG,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}