{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { GeometryCursor as t } from \"../../geometry/GeometryCursor.js\";\nimport { GeometricEffectOffsetMethod as e } from \"./enums.js\";\nconst n = .03;\nclass s {\n  constructor(t = 0, e = !1) {}\n  isEmpty(t) {\n    if (!t.nextPoint()) return !0;\n    let e, n, s, r;\n    for (e = t.x, n = t.y; t.nextPoint(); e = n, n = r) if (s = t.x, r = t.y, s !== e || r !== n) return t.seekPathStart(), !1;\n    return t.seekPathStart(), !0;\n  }\n  normalize(t) {\n    const e = Math.sqrt(t[0] * t[0] + t[1] * t[1]);\n    0 !== e && (t[0] /= e, t[1] /= e);\n  }\n  getLength(t, e, n, s) {\n    const r = n - t,\n      o = s - e;\n    return Math.sqrt(r * r + o * o);\n  }\n  getSegLength(t) {\n    const [[e, n], [s, r]] = t;\n    return this.getLength(e, n, s, r);\n  }\n  getCoord2D(t, e, n, s, r) {\n    return [t + (n - t) * r, e + (s - e) * r];\n  }\n  getSegCoord2D(t, e) {\n    const [[n, s], [r, o]] = t;\n    return this.getCoord2D(n, s, r, o, e);\n  }\n  getAngle(t, e, n, s, r) {\n    const o = n - t,\n      i = s - e;\n    return Math.atan2(i, o);\n  }\n  getAngleCS(t, e, n, s, r) {\n    const o = n - t,\n      i = s - e,\n      u = Math.sqrt(o * o + i * i);\n    return u > 0 ? [o / u, i / u] : [1, 0];\n  }\n  getSegAngleCS(t, e) {\n    const [[n, s], [r, o]] = t;\n    return this.getAngleCS(n, s, r, o, e);\n  }\n  cut(t, e, n, s, r, o) {\n    return [r <= 0 ? [t, e] : this.getCoord2D(t, e, n, s, r), o >= 1 ? [n, s] : this.getCoord2D(t, e, n, s, o)];\n  }\n  getSubCurve(e, n, s) {\n    const r = t.createEmptyOptimizedCIM(\"esriGeometryPolyline\");\n    return this.appendSubCurve(r, e, n, s) ? r : null;\n  }\n  appendSubCurve(t, e, n, s) {\n    t.startPath(), e.seekPathStart();\n    let r = 0,\n      o = !0;\n    if (!e.nextPoint()) return !1;\n    let i = e.x,\n      u = e.y;\n    for (; e.nextPoint();) {\n      const h = this.getLength(i, u, e.x, e.y);\n      if (0 !== h) {\n        if (o) {\n          if (r + h > n) {\n            const l = (n - r) / h;\n            let a = 1,\n              c = !1;\n            r + h >= s && (a = (s - r) / h, c = !0);\n            const f = this.cut(i, u, e.x, e.y, l, a);\n            if (f && t.pushPoints(f), c) break;\n            o = !1;\n          }\n        } else {\n          if (r + h > s) {\n            const n = this.cut(i, u, e.x, e.y, 0, (s - r) / h);\n            n && t.pushPoint(n[1]);\n            break;\n          }\n          t.pushXY(e.x, e.y);\n        }\n        r += h, i = e.x, u = e.y;\n      } else i = e.x, u = e.y;\n    }\n    return !0;\n  }\n  getCIMPointAlong(t, e) {\n    if (!t.nextPoint()) return null;\n    let n,\n      s,\n      r,\n      o,\n      i = 0;\n    for (n = t.x, s = t.y; t.nextPoint(); n = r, s = o) {\n      r = t.x, o = t.y;\n      const u = this.getLength(n, s, r, o);\n      if (0 !== u) {\n        if (i + u > e) {\n          const t = (e - i) / u;\n          return this.getCoord2D(n, s, r, o, t);\n        }\n        i += u;\n      }\n    }\n    return null;\n  }\n  offset(t, n, s, r, o) {\n    if (!t || t.length < 2) return null;\n    let i = 0,\n      u = t[i++],\n      h = i;\n    for (; i < t.length;) {\n      const e = t[i];\n      e[0] === u[0] && e[1] === u[1] || (i !== h && (t[h] = t[i]), u = t[h++]), i++;\n    }\n    const l = t[0][0] === t[h - 1][0] && t[0][1] === t[h - 1][1];\n    if (l && --h, h < (l ? 3 : 2)) return null;\n    const a = [];\n    u = l ? t[h - 1] : null;\n    let c = t[0];\n    for (let f = 0; f < h; f++) {\n      const o = f === h - 1 ? l ? t[0] : null : t[f + 1];\n      if (u) {\n        if (o) {\n          const t = [o[0] - c[0], o[1] - c[1]];\n          this.normalize(t);\n          const i = [c[0] - u[0], c[1] - u[1]];\n          this.normalize(i);\n          const h = i[0] * t[1] - i[1] * t[0],\n            l = i[0] * t[0] + i[1] * t[1];\n          if (0 === h && 1 === l) {\n            c = o;\n            continue;\n          }\n          if (h >= 0 == n <= 0) {\n            if (l < 1) {\n              const e = [t[0] - i[0], t[1] - i[1]];\n              this.normalize(e);\n              const s = Math.sqrt((1 + l) / 2);\n              if (s > 1 / r) {\n                const t = -Math.abs(n) / s;\n                a.push([c[0] - e[0] * t, c[1] - e[1] * t]);\n              }\n            }\n          } else switch (s) {\n            case e.Mitered:\n              {\n                const e = Math.sqrt((1 + l) / 2);\n                if (e > 0 && 1 / e < r) {\n                  const s = [t[0] - i[0], t[1] - i[1]];\n                  this.normalize(s);\n                  const r = Math.abs(n) / e;\n                  a.push([c[0] - s[0] * r, c[1] - s[1] * r]);\n                  break;\n                }\n              }\n            case e.Bevelled:\n              a.push([c[0] + i[1] * n, c[1] - i[0] * n]), a.push([c[0] + t[1] * n, c[1] - t[0] * n]);\n              break;\n            case e.Rounded:\n              if (l < 1) {\n                a.push([c[0] + i[1] * n, c[1] - i[0] * n]);\n                const e = Math.floor(2.5 * (1 - l));\n                if (e > 0) {\n                  const s = 1 / e;\n                  let r = s;\n                  for (let o = 1; o < e; o++, r += s) {\n                    const e = [i[1] * (1 - r) + t[1] * r, -i[0] * (1 - r) - t[0] * r];\n                    this.normalize(e), a.push([c[0] + e[0] * n, c[1] + e[1] * n]);\n                  }\n                }\n                a.push([c[0] + t[1] * n, c[1] - t[0] * n]);\n              }\n              break;\n            case e.Square:\n            default:\n              if (h < 0) a.push([c[0] + (i[1] + i[0]) * n, c[1] + (i[1] - i[0]) * n]), a.push([c[0] + (t[1] - t[0]) * n, c[1] - (t[0] + t[1]) * n]);else {\n                const e = Math.sqrt((1 + Math.abs(l)) / 2),\n                  s = [t[0] - i[0], t[1] - i[1]];\n                this.normalize(s);\n                const r = n / e;\n                a.push([c[0] - s[0] * r, c[1] - s[1] * r]);\n              }\n          }\n        } else {\n          const t = [c[0] - u[0], c[1] - u[1]];\n          this.normalize(t), a.push([c[0] + t[1] * n, c[1] - t[0] * n]);\n        }\n      } else {\n        const t = [o[0] - c[0], o[1] - c[1]];\n        this.normalize(t), a.push([c[0] + t[1] * n, c[1] - t[0] * n]);\n      }\n      u = c, c = o;\n    }\n    return a.length < (l ? 3 : 2) ? null : (l && a.push([a[0][0], a[0][1]]), a);\n  }\n}\nexport { s as CurveHelper, n as pixelTolerance };","map":{"version":3,"names":["GeometryCursor","t","GeometricEffectOffsetMethod","e","n","s","constructor","isEmpty","nextPoint","r","x","y","seekPathStart","normalize","Math","sqrt","getLength","o","getSegLength","getCoord2D","getSegCoord2D","getAngle","i","atan2","getAngleCS","u","getSegAngleCS","cut","getSubCurve","createEmptyOptimizedCIM","appendSubCurve","startPath","h","l","a","c","f","pushPoints","pushPoint","pushXY","getCIMPointAlong","offset","length","abs","push","Mitered","Bevelled","Rounded","floor","Square","CurveHelper","pixelTolerance"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/symbols/cim/CurveHelper.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{GeometryCursor as t}from\"../../geometry/GeometryCursor.js\";import{GeometricEffectOffsetMethod as e}from\"./enums.js\";const n=.03;class s{constructor(t=0,e=!1){}isEmpty(t){if(!t.nextPoint())return!0;let e,n,s,r;for(e=t.x,n=t.y;t.nextPoint();e=n,n=r)if(s=t.x,r=t.y,s!==e||r!==n)return t.seekPathStart(),!1;return t.seekPathStart(),!0}normalize(t){const e=Math.sqrt(t[0]*t[0]+t[1]*t[1]);0!==e&&(t[0]/=e,t[1]/=e)}getLength(t,e,n,s){const r=n-t,o=s-e;return Math.sqrt(r*r+o*o)}getSegLength(t){const[[e,n],[s,r]]=t;return this.getLength(e,n,s,r)}getCoord2D(t,e,n,s,r){return[t+(n-t)*r,e+(s-e)*r]}getSegCoord2D(t,e){const[[n,s],[r,o]]=t;return this.getCoord2D(n,s,r,o,e)}getAngle(t,e,n,s,r){const o=n-t,i=s-e;return Math.atan2(i,o)}getAngleCS(t,e,n,s,r){const o=n-t,i=s-e,u=Math.sqrt(o*o+i*i);return u>0?[o/u,i/u]:[1,0]}getSegAngleCS(t,e){const[[n,s],[r,o]]=t;return this.getAngleCS(n,s,r,o,e)}cut(t,e,n,s,r,o){return[r<=0?[t,e]:this.getCoord2D(t,e,n,s,r),o>=1?[n,s]:this.getCoord2D(t,e,n,s,o)]}getSubCurve(e,n,s){const r=t.createEmptyOptimizedCIM(\"esriGeometryPolyline\");return this.appendSubCurve(r,e,n,s)?r:null}appendSubCurve(t,e,n,s){t.startPath(),e.seekPathStart();let r=0,o=!0;if(!e.nextPoint())return!1;let i=e.x,u=e.y;for(;e.nextPoint();){const h=this.getLength(i,u,e.x,e.y);if(0!==h){if(o){if(r+h>n){const l=(n-r)/h;let a=1,c=!1;r+h>=s&&(a=(s-r)/h,c=!0);const f=this.cut(i,u,e.x,e.y,l,a);if(f&&t.pushPoints(f),c)break;o=!1}}else{if(r+h>s){const n=this.cut(i,u,e.x,e.y,0,(s-r)/h);n&&t.pushPoint(n[1]);break}t.pushXY(e.x,e.y)}r+=h,i=e.x,u=e.y}else i=e.x,u=e.y}return!0}getCIMPointAlong(t,e){if(!t.nextPoint())return null;let n,s,r,o,i=0;for(n=t.x,s=t.y;t.nextPoint();n=r,s=o){r=t.x,o=t.y;const u=this.getLength(n,s,r,o);if(0!==u){if(i+u>e){const t=(e-i)/u;return this.getCoord2D(n,s,r,o,t)}i+=u}}return null}offset(t,n,s,r,o){if(!t||t.length<2)return null;let i=0,u=t[i++],h=i;for(;i<t.length;){const e=t[i];e[0]===u[0]&&e[1]===u[1]||(i!==h&&(t[h]=t[i]),u=t[h++]),i++}const l=t[0][0]===t[h-1][0]&&t[0][1]===t[h-1][1];if(l&&--h,h<(l?3:2))return null;const a=[];u=l?t[h-1]:null;let c=t[0];for(let f=0;f<h;f++){const o=f===h-1?l?t[0]:null:t[f+1];if(u)if(o){const t=[o[0]-c[0],o[1]-c[1]];this.normalize(t);const i=[c[0]-u[0],c[1]-u[1]];this.normalize(i);const h=i[0]*t[1]-i[1]*t[0],l=i[0]*t[0]+i[1]*t[1];if(0===h&&1===l){c=o;continue}if(h>=0==n<=0){if(l<1){const e=[t[0]-i[0],t[1]-i[1]];this.normalize(e);const s=Math.sqrt((1+l)/2);if(s>1/r){const t=-Math.abs(n)/s;a.push([c[0]-e[0]*t,c[1]-e[1]*t])}}}else switch(s){case e.Mitered:{const e=Math.sqrt((1+l)/2);if(e>0&&1/e<r){const s=[t[0]-i[0],t[1]-i[1]];this.normalize(s);const r=Math.abs(n)/e;a.push([c[0]-s[0]*r,c[1]-s[1]*r]);break}}case e.Bevelled:a.push([c[0]+i[1]*n,c[1]-i[0]*n]),a.push([c[0]+t[1]*n,c[1]-t[0]*n]);break;case e.Rounded:if(l<1){a.push([c[0]+i[1]*n,c[1]-i[0]*n]);const e=Math.floor(2.5*(1-l));if(e>0){const s=1/e;let r=s;for(let o=1;o<e;o++,r+=s){const e=[i[1]*(1-r)+t[1]*r,-i[0]*(1-r)-t[0]*r];this.normalize(e),a.push([c[0]+e[0]*n,c[1]+e[1]*n])}}a.push([c[0]+t[1]*n,c[1]-t[0]*n])}break;case e.Square:default:if(h<0)a.push([c[0]+(i[1]+i[0])*n,c[1]+(i[1]-i[0])*n]),a.push([c[0]+(t[1]-t[0])*n,c[1]-(t[0]+t[1])*n]);else{const e=Math.sqrt((1+Math.abs(l))/2),s=[t[0]-i[0],t[1]-i[1]];this.normalize(s);const r=n/e;a.push([c[0]-s[0]*r,c[1]-s[1]*r])}}}else{const t=[c[0]-u[0],c[1]-u[1]];this.normalize(t),a.push([c[0]+t[1]*n,c[1]-t[0]*n])}else{const t=[o[0]-c[0],o[1]-c[1]];this.normalize(t),a.push([c[0]+t[1]*n,c[1]-t[0]*n])}u=c,c=o}return a.length<(l?3:2)?null:(l&&a.push([a[0][0],a[0][1]]),a)}}export{s as CurveHelper,n as pixelTolerance};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,cAAc,IAAIC,CAAC,QAAK,kCAAkC;AAAC,SAAOC,2BAA2B,IAAIC,CAAC,QAAK,YAAY;AAAC,MAAMC,CAAC,GAAC,GAAG;AAAC,MAAMC,CAAC;EAACC,WAAWA,CAACL,CAAC,GAAC,CAAC,EAACE,CAAC,GAAC,CAAC,CAAC,EAAC,CAAC;EAACI,OAAOA,CAACN,CAAC,EAAC;IAAC,IAAG,CAACA,CAAC,CAACO,SAAS,CAAC,CAAC,EAAC,OAAM,CAAC,CAAC;IAAC,IAAIL,CAAC,EAACC,CAAC,EAACC,CAAC,EAACI,CAAC;IAAC,KAAIN,CAAC,GAACF,CAAC,CAACS,CAAC,EAACN,CAAC,GAACH,CAAC,CAACU,CAAC,EAACV,CAAC,CAACO,SAAS,CAAC,CAAC,EAACL,CAAC,GAACC,CAAC,EAACA,CAAC,GAACK,CAAC,EAAC,IAAGJ,CAAC,GAACJ,CAAC,CAACS,CAAC,EAACD,CAAC,GAACR,CAAC,CAACU,CAAC,EAACN,CAAC,KAAGF,CAAC,IAAEM,CAAC,KAAGL,CAAC,EAAC,OAAOH,CAAC,CAACW,aAAa,CAAC,CAAC,EAAC,CAAC,CAAC;IAAC,OAAOX,CAAC,CAACW,aAAa,CAAC,CAAC,EAAC,CAAC,CAAC;EAAA;EAACC,SAASA,CAACZ,CAAC,EAAC;IAAC,MAAME,CAAC,GAACW,IAAI,CAACC,IAAI,CAACd,CAAC,CAAC,CAAC,CAAC,GAACA,CAAC,CAAC,CAAC,CAAC,GAACA,CAAC,CAAC,CAAC,CAAC,GAACA,CAAC,CAAC,CAAC,CAAC,CAAC;IAAC,CAAC,KAAGE,CAAC,KAAGF,CAAC,CAAC,CAAC,CAAC,IAAEE,CAAC,EAACF,CAAC,CAAC,CAAC,CAAC,IAAEE,CAAC,CAAC;EAAA;EAACa,SAASA,CAACf,CAAC,EAACE,CAAC,EAACC,CAAC,EAACC,CAAC,EAAC;IAAC,MAAMI,CAAC,GAACL,CAAC,GAACH,CAAC;MAACgB,CAAC,GAACZ,CAAC,GAACF,CAAC;IAAC,OAAOW,IAAI,CAACC,IAAI,CAACN,CAAC,GAACA,CAAC,GAACQ,CAAC,GAACA,CAAC,CAAC;EAAA;EAACC,YAAYA,CAACjB,CAAC,EAAC;IAAC,MAAK,CAAC,CAACE,CAAC,EAACC,CAAC,CAAC,EAAC,CAACC,CAAC,EAACI,CAAC,CAAC,CAAC,GAACR,CAAC;IAAC,OAAO,IAAI,CAACe,SAAS,CAACb,CAAC,EAACC,CAAC,EAACC,CAAC,EAACI,CAAC,CAAC;EAAA;EAACU,UAAUA,CAAClB,CAAC,EAACE,CAAC,EAACC,CAAC,EAACC,CAAC,EAACI,CAAC,EAAC;IAAC,OAAM,CAACR,CAAC,GAAC,CAACG,CAAC,GAACH,CAAC,IAAEQ,CAAC,EAACN,CAAC,GAAC,CAACE,CAAC,GAACF,CAAC,IAAEM,CAAC,CAAC;EAAA;EAACW,aAAaA,CAACnB,CAAC,EAACE,CAAC,EAAC;IAAC,MAAK,CAAC,CAACC,CAAC,EAACC,CAAC,CAAC,EAAC,CAACI,CAAC,EAACQ,CAAC,CAAC,CAAC,GAAChB,CAAC;IAAC,OAAO,IAAI,CAACkB,UAAU,CAACf,CAAC,EAACC,CAAC,EAACI,CAAC,EAACQ,CAAC,EAACd,CAAC,CAAC;EAAA;EAACkB,QAAQA,CAACpB,CAAC,EAACE,CAAC,EAACC,CAAC,EAACC,CAAC,EAACI,CAAC,EAAC;IAAC,MAAMQ,CAAC,GAACb,CAAC,GAACH,CAAC;MAACqB,CAAC,GAACjB,CAAC,GAACF,CAAC;IAAC,OAAOW,IAAI,CAACS,KAAK,CAACD,CAAC,EAACL,CAAC,CAAC;EAAA;EAACO,UAAUA,CAACvB,CAAC,EAACE,CAAC,EAACC,CAAC,EAACC,CAAC,EAACI,CAAC,EAAC;IAAC,MAAMQ,CAAC,GAACb,CAAC,GAACH,CAAC;MAACqB,CAAC,GAACjB,CAAC,GAACF,CAAC;MAACsB,CAAC,GAACX,IAAI,CAACC,IAAI,CAACE,CAAC,GAACA,CAAC,GAACK,CAAC,GAACA,CAAC,CAAC;IAAC,OAAOG,CAAC,GAAC,CAAC,GAAC,CAACR,CAAC,GAACQ,CAAC,EAACH,CAAC,GAACG,CAAC,CAAC,GAAC,CAAC,CAAC,EAAC,CAAC,CAAC;EAAA;EAACC,aAAaA,CAACzB,CAAC,EAACE,CAAC,EAAC;IAAC,MAAK,CAAC,CAACC,CAAC,EAACC,CAAC,CAAC,EAAC,CAACI,CAAC,EAACQ,CAAC,CAAC,CAAC,GAAChB,CAAC;IAAC,OAAO,IAAI,CAACuB,UAAU,CAACpB,CAAC,EAACC,CAAC,EAACI,CAAC,EAACQ,CAAC,EAACd,CAAC,CAAC;EAAA;EAACwB,GAAGA,CAAC1B,CAAC,EAACE,CAAC,EAACC,CAAC,EAACC,CAAC,EAACI,CAAC,EAACQ,CAAC,EAAC;IAAC,OAAM,CAACR,CAAC,IAAE,CAAC,GAAC,CAACR,CAAC,EAACE,CAAC,CAAC,GAAC,IAAI,CAACgB,UAAU,CAAClB,CAAC,EAACE,CAAC,EAACC,CAAC,EAACC,CAAC,EAACI,CAAC,CAAC,EAACQ,CAAC,IAAE,CAAC,GAAC,CAACb,CAAC,EAACC,CAAC,CAAC,GAAC,IAAI,CAACc,UAAU,CAAClB,CAAC,EAACE,CAAC,EAACC,CAAC,EAACC,CAAC,EAACY,CAAC,CAAC,CAAC;EAAA;EAACW,WAAWA,CAACzB,CAAC,EAACC,CAAC,EAACC,CAAC,EAAC;IAAC,MAAMI,CAAC,GAACR,CAAC,CAAC4B,uBAAuB,CAAC,sBAAsB,CAAC;IAAC,OAAO,IAAI,CAACC,cAAc,CAACrB,CAAC,EAACN,CAAC,EAACC,CAAC,EAACC,CAAC,CAAC,GAACI,CAAC,GAAC,IAAI;EAAA;EAACqB,cAAcA,CAAC7B,CAAC,EAACE,CAAC,EAACC,CAAC,EAACC,CAAC,EAAC;IAACJ,CAAC,CAAC8B,SAAS,CAAC,CAAC,EAAC5B,CAAC,CAACS,aAAa,CAAC,CAAC;IAAC,IAAIH,CAAC,GAAC,CAAC;MAACQ,CAAC,GAAC,CAAC,CAAC;IAAC,IAAG,CAACd,CAAC,CAACK,SAAS,CAAC,CAAC,EAAC,OAAM,CAAC,CAAC;IAAC,IAAIc,CAAC,GAACnB,CAAC,CAACO,CAAC;MAACe,CAAC,GAACtB,CAAC,CAACQ,CAAC;IAAC,OAAKR,CAAC,CAACK,SAAS,CAAC,CAAC,GAAE;MAAC,MAAMwB,CAAC,GAAC,IAAI,CAAChB,SAAS,CAACM,CAAC,EAACG,CAAC,EAACtB,CAAC,CAACO,CAAC,EAACP,CAAC,CAACQ,CAAC,CAAC;MAAC,IAAG,CAAC,KAAGqB,CAAC,EAAC;QAAC,IAAGf,CAAC,EAAC;UAAC,IAAGR,CAAC,GAACuB,CAAC,GAAC5B,CAAC,EAAC;YAAC,MAAM6B,CAAC,GAAC,CAAC7B,CAAC,GAACK,CAAC,IAAEuB,CAAC;YAAC,IAAIE,CAAC,GAAC,CAAC;cAACC,CAAC,GAAC,CAAC,CAAC;YAAC1B,CAAC,GAACuB,CAAC,IAAE3B,CAAC,KAAG6B,CAAC,GAAC,CAAC7B,CAAC,GAACI,CAAC,IAAEuB,CAAC,EAACG,CAAC,GAAC,CAAC,CAAC,CAAC;YAAC,MAAMC,CAAC,GAAC,IAAI,CAACT,GAAG,CAACL,CAAC,EAACG,CAAC,EAACtB,CAAC,CAACO,CAAC,EAACP,CAAC,CAACQ,CAAC,EAACsB,CAAC,EAACC,CAAC,CAAC;YAAC,IAAGE,CAAC,IAAEnC,CAAC,CAACoC,UAAU,CAACD,CAAC,CAAC,EAACD,CAAC,EAAC;YAAMlB,CAAC,GAAC,CAAC,CAAC;UAAA;QAAC,CAAC,MAAI;UAAC,IAAGR,CAAC,GAACuB,CAAC,GAAC3B,CAAC,EAAC;YAAC,MAAMD,CAAC,GAAC,IAAI,CAACuB,GAAG,CAACL,CAAC,EAACG,CAAC,EAACtB,CAAC,CAACO,CAAC,EAACP,CAAC,CAACQ,CAAC,EAAC,CAAC,EAAC,CAACN,CAAC,GAACI,CAAC,IAAEuB,CAAC,CAAC;YAAC5B,CAAC,IAAEH,CAAC,CAACqC,SAAS,CAAClC,CAAC,CAAC,CAAC,CAAC,CAAC;YAAC;UAAK;UAACH,CAAC,CAACsC,MAAM,CAACpC,CAAC,CAACO,CAAC,EAACP,CAAC,CAACQ,CAAC,CAAC;QAAA;QAACF,CAAC,IAAEuB,CAAC,EAACV,CAAC,GAACnB,CAAC,CAACO,CAAC,EAACe,CAAC,GAACtB,CAAC,CAACQ,CAAC;MAAA,CAAC,MAAKW,CAAC,GAACnB,CAAC,CAACO,CAAC,EAACe,CAAC,GAACtB,CAAC,CAACQ,CAAC;IAAA;IAAC,OAAM,CAAC,CAAC;EAAA;EAAC6B,gBAAgBA,CAACvC,CAAC,EAACE,CAAC,EAAC;IAAC,IAAG,CAACF,CAAC,CAACO,SAAS,CAAC,CAAC,EAAC,OAAO,IAAI;IAAC,IAAIJ,CAAC;MAACC,CAAC;MAACI,CAAC;MAACQ,CAAC;MAACK,CAAC,GAAC,CAAC;IAAC,KAAIlB,CAAC,GAACH,CAAC,CAACS,CAAC,EAACL,CAAC,GAACJ,CAAC,CAACU,CAAC,EAACV,CAAC,CAACO,SAAS,CAAC,CAAC,EAACJ,CAAC,GAACK,CAAC,EAACJ,CAAC,GAACY,CAAC,EAAC;MAACR,CAAC,GAACR,CAAC,CAACS,CAAC,EAACO,CAAC,GAAChB,CAAC,CAACU,CAAC;MAAC,MAAMc,CAAC,GAAC,IAAI,CAACT,SAAS,CAACZ,CAAC,EAACC,CAAC,EAACI,CAAC,EAACQ,CAAC,CAAC;MAAC,IAAG,CAAC,KAAGQ,CAAC,EAAC;QAAC,IAAGH,CAAC,GAACG,CAAC,GAACtB,CAAC,EAAC;UAAC,MAAMF,CAAC,GAAC,CAACE,CAAC,GAACmB,CAAC,IAAEG,CAAC;UAAC,OAAO,IAAI,CAACN,UAAU,CAACf,CAAC,EAACC,CAAC,EAACI,CAAC,EAACQ,CAAC,EAAChB,CAAC,CAAC;QAAA;QAACqB,CAAC,IAAEG,CAAC;MAAA;IAAC;IAAC,OAAO,IAAI;EAAA;EAACgB,MAAMA,CAACxC,CAAC,EAACG,CAAC,EAACC,CAAC,EAACI,CAAC,EAACQ,CAAC,EAAC;IAAC,IAAG,CAAChB,CAAC,IAAEA,CAAC,CAACyC,MAAM,GAAC,CAAC,EAAC,OAAO,IAAI;IAAC,IAAIpB,CAAC,GAAC,CAAC;MAACG,CAAC,GAACxB,CAAC,CAACqB,CAAC,EAAE,CAAC;MAACU,CAAC,GAACV,CAAC;IAAC,OAAKA,CAAC,GAACrB,CAAC,CAACyC,MAAM,GAAE;MAAC,MAAMvC,CAAC,GAACF,CAAC,CAACqB,CAAC,CAAC;MAACnB,CAAC,CAAC,CAAC,CAAC,KAAGsB,CAAC,CAAC,CAAC,CAAC,IAAEtB,CAAC,CAAC,CAAC,CAAC,KAAGsB,CAAC,CAAC,CAAC,CAAC,KAAGH,CAAC,KAAGU,CAAC,KAAG/B,CAAC,CAAC+B,CAAC,CAAC,GAAC/B,CAAC,CAACqB,CAAC,CAAC,CAAC,EAACG,CAAC,GAACxB,CAAC,CAAC+B,CAAC,EAAE,CAAC,CAAC,EAACV,CAAC,EAAE;IAAA;IAAC,MAAMW,CAAC,GAAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAGA,CAAC,CAAC+B,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAE/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAGA,CAAC,CAAC+B,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAAC,IAAGC,CAAC,IAAE,EAAED,CAAC,EAACA,CAAC,IAAEC,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,EAAC,OAAO,IAAI;IAAC,MAAMC,CAAC,GAAC,EAAE;IAACT,CAAC,GAACQ,CAAC,GAAChC,CAAC,CAAC+B,CAAC,GAAC,CAAC,CAAC,GAAC,IAAI;IAAC,IAAIG,CAAC,GAAClC,CAAC,CAAC,CAAC,CAAC;IAAC,KAAI,IAAImC,CAAC,GAAC,CAAC,EAACA,CAAC,GAACJ,CAAC,EAACI,CAAC,EAAE,EAAC;MAAC,MAAMnB,CAAC,GAACmB,CAAC,KAAGJ,CAAC,GAAC,CAAC,GAACC,CAAC,GAAChC,CAAC,CAAC,CAAC,CAAC,GAAC,IAAI,GAACA,CAAC,CAACmC,CAAC,GAAC,CAAC,CAAC;MAAC,IAAGX,CAAC;QAAC,IAAGR,CAAC,EAAC;UAAC,MAAMhB,CAAC,GAAC,CAACgB,CAAC,CAAC,CAAC,CAAC,GAACkB,CAAC,CAAC,CAAC,CAAC,EAAClB,CAAC,CAAC,CAAC,CAAC,GAACkB,CAAC,CAAC,CAAC,CAAC,CAAC;UAAC,IAAI,CAACtB,SAAS,CAACZ,CAAC,CAAC;UAAC,MAAMqB,CAAC,GAAC,CAACa,CAAC,CAAC,CAAC,CAAC,GAACV,CAAC,CAAC,CAAC,CAAC,EAACU,CAAC,CAAC,CAAC,CAAC,GAACV,CAAC,CAAC,CAAC,CAAC,CAAC;UAAC,IAAI,CAACZ,SAAS,CAACS,CAAC,CAAC;UAAC,MAAMU,CAAC,GAACV,CAAC,CAAC,CAAC,CAAC,GAACrB,CAAC,CAAC,CAAC,CAAC,GAACqB,CAAC,CAAC,CAAC,CAAC,GAACrB,CAAC,CAAC,CAAC,CAAC;YAACgC,CAAC,GAACX,CAAC,CAAC,CAAC,CAAC,GAACrB,CAAC,CAAC,CAAC,CAAC,GAACqB,CAAC,CAAC,CAAC,CAAC,GAACrB,CAAC,CAAC,CAAC,CAAC;UAAC,IAAG,CAAC,KAAG+B,CAAC,IAAE,CAAC,KAAGC,CAAC,EAAC;YAACE,CAAC,GAAClB,CAAC;YAAC;UAAQ;UAAC,IAAGe,CAAC,IAAE,CAAC,IAAE5B,CAAC,IAAE,CAAC,EAAC;YAAC,IAAG6B,CAAC,GAAC,CAAC,EAAC;cAAC,MAAM9B,CAAC,GAAC,CAACF,CAAC,CAAC,CAAC,CAAC,GAACqB,CAAC,CAAC,CAAC,CAAC,EAACrB,CAAC,CAAC,CAAC,CAAC,GAACqB,CAAC,CAAC,CAAC,CAAC,CAAC;cAAC,IAAI,CAACT,SAAS,CAACV,CAAC,CAAC;cAAC,MAAME,CAAC,GAACS,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,GAACkB,CAAC,IAAE,CAAC,CAAC;cAAC,IAAG5B,CAAC,GAAC,CAAC,GAACI,CAAC,EAAC;gBAAC,MAAMR,CAAC,GAAC,CAACa,IAAI,CAAC6B,GAAG,CAACvC,CAAC,CAAC,GAACC,CAAC;gBAAC6B,CAAC,CAACU,IAAI,CAAC,CAACT,CAAC,CAAC,CAAC,CAAC,GAAChC,CAAC,CAAC,CAAC,CAAC,GAACF,CAAC,EAACkC,CAAC,CAAC,CAAC,CAAC,GAAChC,CAAC,CAAC,CAAC,CAAC,GAACF,CAAC,CAAC,CAAC;cAAA;YAAC;UAAC,CAAC,MAAK,QAAOI,CAAC;YAAE,KAAKF,CAAC,CAAC0C,OAAO;cAAC;gBAAC,MAAM1C,CAAC,GAACW,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,GAACkB,CAAC,IAAE,CAAC,CAAC;gBAAC,IAAG9B,CAAC,GAAC,CAAC,IAAE,CAAC,GAACA,CAAC,GAACM,CAAC,EAAC;kBAAC,MAAMJ,CAAC,GAAC,CAACJ,CAAC,CAAC,CAAC,CAAC,GAACqB,CAAC,CAAC,CAAC,CAAC,EAACrB,CAAC,CAAC,CAAC,CAAC,GAACqB,CAAC,CAAC,CAAC,CAAC,CAAC;kBAAC,IAAI,CAACT,SAAS,CAACR,CAAC,CAAC;kBAAC,MAAMI,CAAC,GAACK,IAAI,CAAC6B,GAAG,CAACvC,CAAC,CAAC,GAACD,CAAC;kBAAC+B,CAAC,CAACU,IAAI,CAAC,CAACT,CAAC,CAAC,CAAC,CAAC,GAAC9B,CAAC,CAAC,CAAC,CAAC,GAACI,CAAC,EAAC0B,CAAC,CAAC,CAAC,CAAC,GAAC9B,CAAC,CAAC,CAAC,CAAC,GAACI,CAAC,CAAC,CAAC;kBAAC;gBAAK;cAAC;YAAC,KAAKN,CAAC,CAAC2C,QAAQ;cAACZ,CAAC,CAACU,IAAI,CAAC,CAACT,CAAC,CAAC,CAAC,CAAC,GAACb,CAAC,CAAC,CAAC,CAAC,GAAClB,CAAC,EAAC+B,CAAC,CAAC,CAAC,CAAC,GAACb,CAAC,CAAC,CAAC,CAAC,GAAClB,CAAC,CAAC,CAAC,EAAC8B,CAAC,CAACU,IAAI,CAAC,CAACT,CAAC,CAAC,CAAC,CAAC,GAAClC,CAAC,CAAC,CAAC,CAAC,GAACG,CAAC,EAAC+B,CAAC,CAAC,CAAC,CAAC,GAAClC,CAAC,CAAC,CAAC,CAAC,GAACG,CAAC,CAAC,CAAC;cAAC;YAAM,KAAKD,CAAC,CAAC4C,OAAO;cAAC,IAAGd,CAAC,GAAC,CAAC,EAAC;gBAACC,CAAC,CAACU,IAAI,CAAC,CAACT,CAAC,CAAC,CAAC,CAAC,GAACb,CAAC,CAAC,CAAC,CAAC,GAAClB,CAAC,EAAC+B,CAAC,CAAC,CAAC,CAAC,GAACb,CAAC,CAAC,CAAC,CAAC,GAAClB,CAAC,CAAC,CAAC;gBAAC,MAAMD,CAAC,GAACW,IAAI,CAACkC,KAAK,CAAC,GAAG,IAAE,CAAC,GAACf,CAAC,CAAC,CAAC;gBAAC,IAAG9B,CAAC,GAAC,CAAC,EAAC;kBAAC,MAAME,CAAC,GAAC,CAAC,GAACF,CAAC;kBAAC,IAAIM,CAAC,GAACJ,CAAC;kBAAC,KAAI,IAAIY,CAAC,GAAC,CAAC,EAACA,CAAC,GAACd,CAAC,EAACc,CAAC,EAAE,EAACR,CAAC,IAAEJ,CAAC,EAAC;oBAAC,MAAMF,CAAC,GAAC,CAACmB,CAAC,CAAC,CAAC,CAAC,IAAE,CAAC,GAACb,CAAC,CAAC,GAACR,CAAC,CAAC,CAAC,CAAC,GAACQ,CAAC,EAAC,CAACa,CAAC,CAAC,CAAC,CAAC,IAAE,CAAC,GAACb,CAAC,CAAC,GAACR,CAAC,CAAC,CAAC,CAAC,GAACQ,CAAC,CAAC;oBAAC,IAAI,CAACI,SAAS,CAACV,CAAC,CAAC,EAAC+B,CAAC,CAACU,IAAI,CAAC,CAACT,CAAC,CAAC,CAAC,CAAC,GAAChC,CAAC,CAAC,CAAC,CAAC,GAACC,CAAC,EAAC+B,CAAC,CAAC,CAAC,CAAC,GAAChC,CAAC,CAAC,CAAC,CAAC,GAACC,CAAC,CAAC,CAAC;kBAAA;gBAAC;gBAAC8B,CAAC,CAACU,IAAI,CAAC,CAACT,CAAC,CAAC,CAAC,CAAC,GAAClC,CAAC,CAAC,CAAC,CAAC,GAACG,CAAC,EAAC+B,CAAC,CAAC,CAAC,CAAC,GAAClC,CAAC,CAAC,CAAC,CAAC,GAACG,CAAC,CAAC,CAAC;cAAA;cAAC;YAAM,KAAKD,CAAC,CAAC8C,MAAM;YAAC;cAAQ,IAAGjB,CAAC,GAAC,CAAC,EAACE,CAAC,CAACU,IAAI,CAAC,CAACT,CAAC,CAAC,CAAC,CAAC,GAAC,CAACb,CAAC,CAAC,CAAC,CAAC,GAACA,CAAC,CAAC,CAAC,CAAC,IAAElB,CAAC,EAAC+B,CAAC,CAAC,CAAC,CAAC,GAAC,CAACb,CAAC,CAAC,CAAC,CAAC,GAACA,CAAC,CAAC,CAAC,CAAC,IAAElB,CAAC,CAAC,CAAC,EAAC8B,CAAC,CAACU,IAAI,CAAC,CAACT,CAAC,CAAC,CAAC,CAAC,GAAC,CAAClC,CAAC,CAAC,CAAC,CAAC,GAACA,CAAC,CAAC,CAAC,CAAC,IAAEG,CAAC,EAAC+B,CAAC,CAAC,CAAC,CAAC,GAAC,CAAClC,CAAC,CAAC,CAAC,CAAC,GAACA,CAAC,CAAC,CAAC,CAAC,IAAEG,CAAC,CAAC,CAAC,CAAC,KAAI;gBAAC,MAAMD,CAAC,GAACW,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,GAACD,IAAI,CAAC6B,GAAG,CAACV,CAAC,CAAC,IAAE,CAAC,CAAC;kBAAC5B,CAAC,GAAC,CAACJ,CAAC,CAAC,CAAC,CAAC,GAACqB,CAAC,CAAC,CAAC,CAAC,EAACrB,CAAC,CAAC,CAAC,CAAC,GAACqB,CAAC,CAAC,CAAC,CAAC,CAAC;gBAAC,IAAI,CAACT,SAAS,CAACR,CAAC,CAAC;gBAAC,MAAMI,CAAC,GAACL,CAAC,GAACD,CAAC;gBAAC+B,CAAC,CAACU,IAAI,CAAC,CAACT,CAAC,CAAC,CAAC,CAAC,GAAC9B,CAAC,CAAC,CAAC,CAAC,GAACI,CAAC,EAAC0B,CAAC,CAAC,CAAC,CAAC,GAAC9B,CAAC,CAAC,CAAC,CAAC,GAACI,CAAC,CAAC,CAAC;cAAA;UAAC;QAAC,CAAC,MAAI;UAAC,MAAMR,CAAC,GAAC,CAACkC,CAAC,CAAC,CAAC,CAAC,GAACV,CAAC,CAAC,CAAC,CAAC,EAACU,CAAC,CAAC,CAAC,CAAC,GAACV,CAAC,CAAC,CAAC,CAAC,CAAC;UAAC,IAAI,CAACZ,SAAS,CAACZ,CAAC,CAAC,EAACiC,CAAC,CAACU,IAAI,CAAC,CAACT,CAAC,CAAC,CAAC,CAAC,GAAClC,CAAC,CAAC,CAAC,CAAC,GAACG,CAAC,EAAC+B,CAAC,CAAC,CAAC,CAAC,GAAClC,CAAC,CAAC,CAAC,CAAC,GAACG,CAAC,CAAC,CAAC;QAAA;MAAC,OAAI;QAAC,MAAMH,CAAC,GAAC,CAACgB,CAAC,CAAC,CAAC,CAAC,GAACkB,CAAC,CAAC,CAAC,CAAC,EAAClB,CAAC,CAAC,CAAC,CAAC,GAACkB,CAAC,CAAC,CAAC,CAAC,CAAC;QAAC,IAAI,CAACtB,SAAS,CAACZ,CAAC,CAAC,EAACiC,CAAC,CAACU,IAAI,CAAC,CAACT,CAAC,CAAC,CAAC,CAAC,GAAClC,CAAC,CAAC,CAAC,CAAC,GAACG,CAAC,EAAC+B,CAAC,CAAC,CAAC,CAAC,GAAClC,CAAC,CAAC,CAAC,CAAC,GAACG,CAAC,CAAC,CAAC;MAAA;MAACqB,CAAC,GAACU,CAAC,EAACA,CAAC,GAAClB,CAAC;IAAA;IAAC,OAAOiB,CAAC,CAACQ,MAAM,IAAET,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,GAAC,IAAI,IAAEA,CAAC,IAAEC,CAAC,CAACU,IAAI,CAAC,CAACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAACA,CAAC,CAAC;EAAA;AAAC;AAAC,SAAO7B,CAAC,IAAI6C,WAAW,EAAC9C,CAAC,IAAI+C,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}