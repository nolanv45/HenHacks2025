{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { clamp as e } from \"../../../../core/mathUtils.js\";\nimport { meterIn as t } from \"../../../../renderers/support/lengthUtils.js\";\nimport { TransformationType as n } from \"../../../../renderers/visualVariables/support/sizeVariableUtils.js\";\nconst r = Math.PI;\nfunction i(e, t) {\n  switch (t.transformationType) {\n    case n.Additive:\n      return s(e, t);\n    case n.Constant:\n      return o(t, e);\n    case n.ClampedLinear:\n      return u(e, t);\n    case n.Proportional:\n      return l(e, t);\n    case n.Stops:\n      return c(e, t);\n    case n.RealWorldSize:\n      return m(e, t);\n    case n.Identity:\n      return e;\n    case n.Unknown:\n      return null;\n  }\n}\nfunction a(e, t) {\n  return \"number\" == typeof e ? e : i(t, e);\n}\nfunction s(e, t) {\n  return e + (a(t.minSize, e) || t.minDataValue);\n}\nfunction o(e, t) {\n  const n = e.stops;\n  let r = n?.length && n[0].size;\n  return null == r && (r = e.minSize), a(r, t);\n}\nfunction u(e, t) {\n  const n = t.minDataValue,\n    r = t.maxDataValue,\n    i = (e - n) / (r - n),\n    s = a(t.minSize, e),\n    o = a(t.maxSize, e);\n  return e <= n ? s : e >= r ? o : s + i * (o - s);\n}\nfunction l(t, n) {\n  const r = t / n.minDataValue,\n    i = a(n.minSize, t),\n    s = a(n.maxSize, t);\n  let o = null;\n  return o = r * i, e(o, i, s);\n}\nfunction c(e, t) {\n  const [n, r, i] = p(e, t.cache.ipData);\n  if (n === r) return a(t.stops[n].size, e);\n  {\n    const s = a(t.stops[n].size, e);\n    return s + (a(t.stops[r].size, e) - s) * i;\n  }\n}\nfunction m(n, i) {\n  const s = t[i.valueUnit],\n    o = a(i.minSize, n),\n    u = a(i.maxSize, n),\n    {\n      valueRepresentation: l\n    } = i;\n  let c = null;\n  return c = \"area\" === l ? 2 * Math.sqrt(n / r) / s : \"radius\" === l || \"distance\" === l ? 2 * n / s : n / s, e(c, o, u);\n}\nfunction p(e, t) {\n  if (!t) return;\n  let n = 0,\n    r = t.length - 1;\n  return t.some((t, i) => e < t ? (r = i, !0) : (n = i, !1)), [n, r, (e - t[n]) / (t[r] - t[n])];\n}\nexport { i as getSizeForValueSimple };","map":{"version":3,"names":["clamp","e","meterIn","t","TransformationType","n","r","Math","PI","i","transformationType","Additive","s","Constant","o","ClampedLinear","u","Proportional","l","Stops","c","RealWorldSize","m","Identity","Unknown","a","minSize","minDataValue","stops","length","size","maxDataValue","maxSize","p","cache","ipData","valueUnit","valueRepresentation","sqrt","some","getSizeForValueSimple"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/2d/layers/support/visualVariableSimpleUtils.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{clamp as e}from\"../../../../core/mathUtils.js\";import{meterIn as t}from\"../../../../renderers/support/lengthUtils.js\";import{TransformationType as n}from\"../../../../renderers/visualVariables/support/sizeVariableUtils.js\";const r=Math.PI;function i(e,t){switch(t.transformationType){case n.Additive:return s(e,t);case n.Constant:return o(t,e);case n.ClampedLinear:return u(e,t);case n.Proportional:return l(e,t);case n.Stops:return c(e,t);case n.RealWorldSize:return m(e,t);case n.Identity:return e;case n.Unknown:return null}}function a(e,t){return\"number\"==typeof e?e:i(t,e)}function s(e,t){return e+(a(t.minSize,e)||t.minDataValue)}function o(e,t){const n=e.stops;let r=n?.length&&n[0].size;return null==r&&(r=e.minSize),a(r,t)}function u(e,t){const n=t.minDataValue,r=t.maxDataValue,i=(e-n)/(r-n),s=a(t.minSize,e),o=a(t.maxSize,e);return e<=n?s:e>=r?o:s+i*(o-s)}function l(t,n){const r=t/n.minDataValue,i=a(n.minSize,t),s=a(n.maxSize,t);let o=null;return o=r*i,e(o,i,s)}function c(e,t){const[n,r,i]=p(e,t.cache.ipData);if(n===r)return a(t.stops[n].size,e);{const s=a(t.stops[n].size,e);return s+(a(t.stops[r].size,e)-s)*i}}function m(n,i){const s=t[i.valueUnit],o=a(i.minSize,n),u=a(i.maxSize,n),{valueRepresentation:l}=i;let c=null;return c=\"area\"===l?2*Math.sqrt(n/r)/s:\"radius\"===l||\"distance\"===l?2*n/s:n/s,e(c,o,u)}function p(e,t){if(!t)return;let n=0,r=t.length-1;return t.some(((t,i)=>e<t?(r=i,!0):(n=i,!1))),[n,r,(e-t[n])/(t[r]-t[n])]}export{i as getSizeForValueSimple};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}