{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { _ as t } from \"../../../chunks/tslib.es6.js\";\nimport e from \"../../../core/Error.js\";\nimport { property as r } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/has.js\";\nimport \"../../../core/Logger.js\";\nimport \"../../../core/RandomLCG.js\";\nimport { subclass as s } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport i from \"../../../geometry/Polygon.js\";\nimport o from \"./BaseRaster.js\";\nimport { clip as n } from \"../rasterFunctions/clipUtils.js\";\nimport { approximateTransform as a } from \"../rasterFunctions/pixelUtils.js\";\nimport { projectPolygon as l } from \"../rasterFunctions/rasterProjectionHelper.js\";\nimport c from \"../../../rest/support/FeatureSet.js\";\nconst p = 40;\nlet m = class extends o {\n  constructor() {\n    super(...arguments), this.datasetFormat = \"Function\", this.tileType = \"Raster\", this.rasterFunction = null, this._clippingGeometry = new Map();\n  }\n  async fetchPixels(t, e, r) {\n    let s = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    const {\n      rasters: i,\n      rasterIds: o\n    } = this.primaryRasters;\n    let l = !1;\n    const {\n        interpolation: c\n      } = s,\n      p = this.rasterFunction.flatWebGLFunctionChain?.hasFocalFunction;\n    !s.requestRawData && p && (l = 1 === i.length && !s.skipRasterFunction, s = {\n      ...s,\n      interpolation: \"bilinear\",\n      requestRawData: l\n    });\n    const m = i.map(i => i.fetchPixels(t, e, r, s)),\n      u = await Promise.all(m),\n      h = u.map(t => t.pixelBlock),\n      f = l || s.requestRawData ? u.map(t => t.srcTilePixelSize) : null;\n    if (s.skipRasterFunction || h.every(t => null == t)) return u[0];\n    const d = u.find(t => null != t.pixelBlock)?.extent ?? t;\n    let y = this.rasterJobHandler ? await this.rasterJobHandler.process({\n      extent: d,\n      primaryPixelBlocks: h,\n      primaryPixelSizes: f,\n      primaryRasterIds: o\n    }) : this.rasterFunction.process({\n      extent: d,\n      primaryPixelBlocks: h,\n      primaryPixelSizes: f,\n      primaryRasterIds: o\n    });\n    const {\n      transformGrid: g\n    } = u[0];\n    if (!l || null == y || null == g) {\n      const t = s.noClip ? null : this.getClippingGeometry(d.spatialReference);\n      return s.noClip || s.requestRawData || null == y || !t || (y = await n(y, d, t)), {\n        ...u[0],\n        pixelBlock: y\n      };\n    }\n    const x = {\n      rows: g.spacing[0],\n      cols: g.spacing[1]\n    };\n    let R;\n    if (this.rasterJobHandler) {\n      R = (await this.rasterJobHandler.mosaicAndTransform({\n        srcPixelBlocks: [y],\n        srcMosaicSize: {\n          width: y.width,\n          height: y.height\n        },\n        destDimension: {\n          width: e,\n          height: r\n        },\n        coefs: g.coefficients,\n        sampleSpacing: x,\n        projectDirections: !1,\n        gcsGrid: null,\n        isUV: !1,\n        interpolation: c,\n        alignmentInfo: void 0,\n        blockWidths: null\n      }, s)).pixelBlock;\n    } else R = a(y, {\n      width: e,\n      height: r\n    }, g.coefficients, x, c);\n    const w = s.noClip ? null : this.getClippingGeometry(t.spatialReference);\n    return s.noClip || s.requestRawData || null == R || null == w || (R = await n(R, t, w)), {\n      extent: t,\n      srcExtent: u[0].srcExtent,\n      pixelBlock: R\n    };\n  }\n  getClippingGeometry(t) {\n    const e = this._clippingGeometry.get(\"0\");\n    if (!t || !e) return e;\n    const r = f(t);\n    let s = this._clippingGeometry.get(r);\n    return null != s || (s = t.equals(e.spatialReference) ? e : l(e, t), this._clippingGeometry.set(r, s)), s;\n  }\n  async _open(t) {\n    const {\n      rasterFunction: r\n    } = this;\n    this.primaryRasters?.rasters?.length ? r.sourceRasters = this.primaryRasters.rasters : (this.primaryRasters = r.getPrimaryRasters(), this.rasterJobHandler && this.primaryRasters.rasters?.forEach(t => t.rasterJobHandler = this.rasterJobHandler));\n    const {\n        rasters: s,\n        rasterIds: i\n      } = this.primaryRasters,\n      o = s.map(e => e.rasterInfo ? void 0 : e.open(t));\n    await Promise.all(o);\n    const n = s.map(_ref => {\n        let {\n          rasterInfo: t\n        } = _ref;\n        return t;\n      }),\n      a = r.bind({\n        rasterInfos: n,\n        rasterIds: i\n      });\n    if (r.rawSourceRasterInfos = n, !a.success || 0 === n.length) throw new e(\"raster-function:open\", `cannot bind the function: ${a.error ?? \"\"}`);\n    const l = \"Table\" === r.functionName ? r : r.functionArguments?.raster;\n    \"Table\" === l?.functionName && (r.rasterInfo.attributeTable = c.fromJSON(l.functionArguments.attributeTableAsRecordSet)), await this.syncJobHandler();\n    const p = n[0];\n    this.hasUniqueSourceStorageInfo = 1 === n.length || n.slice(1).every(t => h(t, p)), this.set(\"sourceJSON\", s[0].sourceJSON), this.set(\"rasterInfo\", r.rasterInfo), await this._updateClipGeometry();\n  }\n  async syncJobHandler() {\n    return this.rasterJobHandler?.updateRasterFunction(this.rasterFunction);\n  }\n  async _updateClipGeometry() {\n    const t = this.rasterFunction.getClippingGeometries()[0];\n    let e = t?.clippingGeometry;\n    if (e && \"inside\" === t.clippingType) {\n      const {\n          extent: t\n        } = this.rasterInfo,\n        {\n          difference: r,\n          densify: s\n        } = await import(\"../../../geometry/geometryEngine.js\");\n      let o = s(i.fromExtent(t), 2 * (t.width + t.height) / p);\n      o = l(o, e.spatialReference), e = r(o, e);\n    }\n    this._clippingGeometry.clear(), e && this._clippingGeometry.set(\"0\", e);\n  }\n};\nt([r({\n  type: String,\n  json: {\n    write: !0\n  }\n})], m.prototype, \"datasetFormat\", void 0), t([r()], m.prototype, \"tileType\", void 0), t([r()], m.prototype, \"rasterFunction\", void 0), t([r()], m.prototype, \"primaryRasters\", void 0), m = t([s(\"esri.layers.support.rasterDatasets.FunctionRaster\")], m);\nconst u = m;\nfunction h(t, e) {\n  const {\n      storageInfo: r,\n      pixelSize: s,\n      spatialReference: i,\n      extent: o\n    } = t,\n    {\n      storageInfo: n,\n      pixelSize: a,\n      spatialReference: l,\n      extent: c\n    } = e;\n  return s.x === a.x && s.y === a.y && i.equals(l) && o.equals(c) && r.blockHeight === n.blockHeight && r.blockWidth === n.blockWidth && r.maximumPyramidLevel === n.maximumPyramidLevel;\n}\nfunction f(t) {\n  return String(t.wkid ?? t.wkt ?? t.wkt2);\n}\nexport { u as default };","map":{"version":3,"names":["_","t","e","property","r","subclass","s","i","o","clip","n","approximateTransform","a","projectPolygon","l","c","p","m","constructor","arguments","datasetFormat","tileType","rasterFunction","_clippingGeometry","Map","fetchPixels","length","undefined","rasters","rasterIds","primaryRasters","interpolation","flatWebGLFunctionChain","hasFocalFunction","requestRawData","skipRasterFunction","map","u","Promise","all","h","pixelBlock","f","srcTilePixelSize","every","d","find","extent","y","rasterJobHandler","process","primaryPixelBlocks","primaryPixelSizes","primaryRasterIds","transformGrid","g","noClip","getClippingGeometry","spatialReference","x","rows","spacing","cols","R","mosaicAndTransform","srcPixelBlocks","srcMosaicSize","width","height","destDimension","coefs","coefficients","sampleSpacing","projectDirections","gcsGrid","isUV","alignmentInfo","blockWidths","w","srcExtent","get","equals","set","_open","sourceRasters","getPrimaryRasters","forEach","rasterInfo","open","_ref","bind","rasterInfos","rawSourceRasterInfos","success","error","functionName","functionArguments","raster","attributeTable","fromJSON","attributeTableAsRecordSet","syncJobHandler","hasUniqueSourceStorageInfo","slice","sourceJSON","_updateClipGeometry","updateRasterFunction","getClippingGeometries","clippingGeometry","clippingType","difference","densify","fromExtent","clear","type","String","json","write","prototype","storageInfo","pixelSize","blockHeight","blockWidth","maximumPyramidLevel","wkid","wkt","wkt2","default"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/layers/support/rasterDatasets/FunctionRaster.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{_ as t}from\"../../../chunks/tslib.es6.js\";import e from\"../../../core/Error.js\";import{property as r}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/has.js\";import\"../../../core/Logger.js\";import\"../../../core/RandomLCG.js\";import{subclass as s}from\"../../../core/accessorSupport/decorators/subclass.js\";import i from\"../../../geometry/Polygon.js\";import o from\"./BaseRaster.js\";import{clip as n}from\"../rasterFunctions/clipUtils.js\";import{approximateTransform as a}from\"../rasterFunctions/pixelUtils.js\";import{projectPolygon as l}from\"../rasterFunctions/rasterProjectionHelper.js\";import c from\"../../../rest/support/FeatureSet.js\";const p=40;let m=class extends o{constructor(){super(...arguments),this.datasetFormat=\"Function\",this.tileType=\"Raster\",this.rasterFunction=null,this._clippingGeometry=new Map}async fetchPixels(t,e,r,s={}){const{rasters:i,rasterIds:o}=this.primaryRasters;let l=!1;const{interpolation:c}=s,p=this.rasterFunction.flatWebGLFunctionChain?.hasFocalFunction;!s.requestRawData&&p&&(l=1===i.length&&!s.skipRasterFunction,s={...s,interpolation:\"bilinear\",requestRawData:l});const m=i.map((i=>i.fetchPixels(t,e,r,s))),u=await Promise.all(m),h=u.map((t=>t.pixelBlock)),f=l||s.requestRawData?u.map((t=>t.srcTilePixelSize)):null;if(s.skipRasterFunction||h.every((t=>null==t)))return u[0];const d=u.find((t=>null!=t.pixelBlock))?.extent??t;let y=this.rasterJobHandler?await this.rasterJobHandler.process({extent:d,primaryPixelBlocks:h,primaryPixelSizes:f,primaryRasterIds:o}):this.rasterFunction.process({extent:d,primaryPixelBlocks:h,primaryPixelSizes:f,primaryRasterIds:o});const{transformGrid:g}=u[0];if(!l||null==y||null==g){const t=s.noClip?null:this.getClippingGeometry(d.spatialReference);return s.noClip||s.requestRawData||null==y||!t||(y=await n(y,d,t)),{...u[0],pixelBlock:y}}const x={rows:g.spacing[0],cols:g.spacing[1]};let R;if(this.rasterJobHandler){R=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:[y],srcMosaicSize:{width:y.width,height:y.height},destDimension:{width:e,height:r},coefs:g.coefficients,sampleSpacing:x,projectDirections:!1,gcsGrid:null,isUV:!1,interpolation:c,alignmentInfo:void 0,blockWidths:null},s)).pixelBlock}else R=a(y,{width:e,height:r},g.coefficients,x,c);const w=s.noClip?null:this.getClippingGeometry(t.spatialReference);return s.noClip||s.requestRawData||null==R||null==w||(R=await n(R,t,w)),{extent:t,srcExtent:u[0].srcExtent,pixelBlock:R}}getClippingGeometry(t){const e=this._clippingGeometry.get(\"0\");if(!t||!e)return e;const r=f(t);let s=this._clippingGeometry.get(r);return null!=s||(s=t.equals(e.spatialReference)?e:l(e,t),this._clippingGeometry.set(r,s)),s}async _open(t){const{rasterFunction:r}=this;this.primaryRasters?.rasters?.length?r.sourceRasters=this.primaryRasters.rasters:(this.primaryRasters=r.getPrimaryRasters(),this.rasterJobHandler&&this.primaryRasters.rasters?.forEach((t=>t.rasterJobHandler=this.rasterJobHandler)));const{rasters:s,rasterIds:i}=this.primaryRasters,o=s.map((e=>e.rasterInfo?void 0:e.open(t)));await Promise.all(o);const n=s.map((({rasterInfo:t})=>t)),a=r.bind({rasterInfos:n,rasterIds:i});if(r.rawSourceRasterInfos=n,!a.success||0===n.length)throw new e(\"raster-function:open\",`cannot bind the function: ${a.error??\"\"}`);const l=\"Table\"===r.functionName?r:r.functionArguments?.raster;\"Table\"===l?.functionName&&(r.rasterInfo.attributeTable=c.fromJSON(l.functionArguments.attributeTableAsRecordSet)),await this.syncJobHandler();const p=n[0];this.hasUniqueSourceStorageInfo=1===n.length||n.slice(1).every((t=>h(t,p))),this.set(\"sourceJSON\",s[0].sourceJSON),this.set(\"rasterInfo\",r.rasterInfo),await this._updateClipGeometry()}async syncJobHandler(){return this.rasterJobHandler?.updateRasterFunction(this.rasterFunction)}async _updateClipGeometry(){const t=this.rasterFunction.getClippingGeometries()[0];let e=t?.clippingGeometry;if(e&&\"inside\"===t.clippingType){const{extent:t}=this.rasterInfo,{difference:r,densify:s}=await import(\"../../../geometry/geometryEngine.js\");let o=s(i.fromExtent(t),2*(t.width+t.height)/p);o=l(o,e.spatialReference),e=r(o,e)}this._clippingGeometry.clear(),e&&this._clippingGeometry.set(\"0\",e)}};t([r({type:String,json:{write:!0}})],m.prototype,\"datasetFormat\",void 0),t([r()],m.prototype,\"tileType\",void 0),t([r()],m.prototype,\"rasterFunction\",void 0),t([r()],m.prototype,\"primaryRasters\",void 0),m=t([s(\"esri.layers.support.rasterDatasets.FunctionRaster\")],m);const u=m;function h(t,e){const{storageInfo:r,pixelSize:s,spatialReference:i,extent:o}=t,{storageInfo:n,pixelSize:a,spatialReference:l,extent:c}=e;return s.x===a.x&&s.y===a.y&&i.equals(l)&&o.equals(c)&&r.blockHeight===n.blockHeight&&r.blockWidth===n.blockWidth&&r.maximumPyramidLevel===n.maximumPyramidLevel}function f(t){return String(t.wkid??t.wkt??t.wkt2)}export{u as default};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}