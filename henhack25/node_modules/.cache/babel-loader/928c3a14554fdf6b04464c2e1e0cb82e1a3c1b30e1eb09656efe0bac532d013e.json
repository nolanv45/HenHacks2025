{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport e from \"../../request.js\";\nimport { deprecatedProperty as t } from \"../../core/deprecate.js\";\nimport r from \"../../core/Logger.js\";\nimport { associationTypeKebabDict as o } from \"../../networks/support/typeUtils.js\";\nimport { parseUrl as s, encode as n, asValidOptions as i } from \"../utils.js\";\nimport c from \"./support/QueryAssociationsResult.js\";\nfunction a(e) {\n  const {\n    returnDeletes: t,\n    elements: r,\n    gdbVersion: s,\n    moment: n\n  } = e.toJSON();\n  return {\n    returnDeletes: t,\n    elements: JSON.stringify(r.map(e => ({\n      globalId: e.globalId,\n      networkSourceId: e.networkSourceId,\n      terminalId: e.terminalId\n    }))),\n    types: JSON.stringify(e.types.map(e => o.toJSON(e))).replaceAll('\"connectivity\"', '\"junctionJunctionConnectivity\"'),\n    gdbVersion: s,\n    moment: n\n  };\n}\nasync function p(o, p, m) {\n  const u = s(o),\n    l = {\n      ...a(p),\n      f: \"json\"\n    },\n    y = n({\n      ...u.query,\n      ...l\n    }),\n    d = i(y, {\n      ...m,\n      method: \"post\"\n    }),\n    f = `${u.path}/associations/query`,\n    {\n      data: g\n    } = await e(f, d),\n    j = c.fromJSON(g);\n  return p.types.includes(\"connectivity\") && t(r.getLogger(\"esri/rest/networks/support/QueryAssociationsParameters\"), \"types\", {\n    replacement: \"Please use 'junction-junction-connectivity' instead of 'connectivity'.\",\n    see: \"https://developers.arcgis.com/javascript/latest/api-reference/esri-rest-networks-support-QueryAssociationsParameters.html#types\",\n    version: \"4.29\",\n    warnOnce: !0\n  }), j;\n}\nexport { p as queryAssociations };","map":{"version":3,"names":["e","deprecatedProperty","t","r","associationTypeKebabDict","o","parseUrl","s","encode","n","asValidOptions","i","c","a","returnDeletes","elements","gdbVersion","moment","toJSON","JSON","stringify","map","globalId","networkSourceId","terminalId","types","replaceAll","p","m","u","l","f","y","query","d","method","path","data","g","j","fromJSON","includes","getLogger","replacement","see","version","warnOnce","queryAssociations"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/rest/networks/queryAssociations.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport e from\"../../request.js\";import{deprecatedProperty as t}from\"../../core/deprecate.js\";import r from\"../../core/Logger.js\";import{associationTypeKebabDict as o}from\"../../networks/support/typeUtils.js\";import{parseUrl as s,encode as n,asValidOptions as i}from\"../utils.js\";import c from\"./support/QueryAssociationsResult.js\";function a(e){const{returnDeletes:t,elements:r,gdbVersion:s,moment:n}=e.toJSON();return{returnDeletes:t,elements:JSON.stringify(r.map((e=>({globalId:e.globalId,networkSourceId:e.networkSourceId,terminalId:e.terminalId})))),types:JSON.stringify(e.types.map((e=>o.toJSON(e)))).replaceAll('\"connectivity\"','\"junctionJunctionConnectivity\"'),gdbVersion:s,moment:n}}async function p(o,p,m){const u=s(o),l={...a(p),f:\"json\"},y=n({...u.query,...l}),d=i(y,{...m,method:\"post\"}),f=`${u.path}/associations/query`,{data:g}=await e(f,d),j=c.fromJSON(g);return p.types.includes(\"connectivity\")&&t(r.getLogger(\"esri/rest/networks/support/QueryAssociationsParameters\"),\"types\",{replacement:\"Please use 'junction-junction-connectivity' instead of 'connectivity'.\",see:\"https://developers.arcgis.com/javascript/latest/api-reference/esri-rest-networks-support-QueryAssociationsParameters.html#types\",version:\"4.29\",warnOnce:!0}),j}export{p as queryAssociations};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAOA,CAAC,MAAK,kBAAkB;AAAC,SAAOC,kBAAkB,IAAIC,CAAC,QAAK,yBAAyB;AAAC,OAAOC,CAAC,MAAK,sBAAsB;AAAC,SAAOC,wBAAwB,IAAIC,CAAC,QAAK,qCAAqC;AAAC,SAAOC,QAAQ,IAAIC,CAAC,EAACC,MAAM,IAAIC,CAAC,EAACC,cAAc,IAAIC,CAAC,QAAK,aAAa;AAAC,OAAOC,CAAC,MAAK,sCAAsC;AAAC,SAASC,CAACA,CAACb,CAAC,EAAC;EAAC,MAAK;IAACc,aAAa,EAACZ,CAAC;IAACa,QAAQ,EAACZ,CAAC;IAACa,UAAU,EAACT,CAAC;IAACU,MAAM,EAACR;EAAC,CAAC,GAACT,CAAC,CAACkB,MAAM,CAAC,CAAC;EAAC,OAAM;IAACJ,aAAa,EAACZ,CAAC;IAACa,QAAQ,EAACI,IAAI,CAACC,SAAS,CAACjB,CAAC,CAACkB,GAAG,CAAErB,CAAC,KAAG;MAACsB,QAAQ,EAACtB,CAAC,CAACsB,QAAQ;MAACC,eAAe,EAACvB,CAAC,CAACuB,eAAe;MAACC,UAAU,EAACxB,CAAC,CAACwB;IAAU,CAAC,CAAE,CAAC,CAAC;IAACC,KAAK,EAACN,IAAI,CAACC,SAAS,CAACpB,CAAC,CAACyB,KAAK,CAACJ,GAAG,CAAErB,CAAC,IAAEK,CAAC,CAACa,MAAM,CAAClB,CAAC,CAAE,CAAC,CAAC,CAAC0B,UAAU,CAAC,gBAAgB,EAAC,gCAAgC,CAAC;IAACV,UAAU,EAACT,CAAC;IAACU,MAAM,EAACR;EAAC,CAAC;AAAA;AAAC,eAAekB,CAACA,CAACtB,CAAC,EAACsB,CAAC,EAACC,CAAC,EAAC;EAAC,MAAMC,CAAC,GAACtB,CAAC,CAACF,CAAC,CAAC;IAACyB,CAAC,GAAC;MAAC,GAAGjB,CAAC,CAACc,CAAC,CAAC;MAACI,CAAC,EAAC;IAAM,CAAC;IAACC,CAAC,GAACvB,CAAC,CAAC;MAAC,GAAGoB,CAAC,CAACI,KAAK;MAAC,GAAGH;IAAC,CAAC,CAAC;IAACI,CAAC,GAACvB,CAAC,CAACqB,CAAC,EAAC;MAAC,GAAGJ,CAAC;MAACO,MAAM,EAAC;IAAM,CAAC,CAAC;IAACJ,CAAC,GAAC,GAAGF,CAAC,CAACO,IAAI,qBAAqB;IAAC;MAACC,IAAI,EAACC;IAAC,CAAC,GAAC,MAAMtC,CAAC,CAAC+B,CAAC,EAACG,CAAC,CAAC;IAACK,CAAC,GAAC3B,CAAC,CAAC4B,QAAQ,CAACF,CAAC,CAAC;EAAC,OAAOX,CAAC,CAACF,KAAK,CAACgB,QAAQ,CAAC,cAAc,CAAC,IAAEvC,CAAC,CAACC,CAAC,CAACuC,SAAS,CAAC,wDAAwD,CAAC,EAAC,OAAO,EAAC;IAACC,WAAW,EAAC,wEAAwE;IAACC,GAAG,EAAC,iIAAiI;IAACC,OAAO,EAAC,MAAM;IAACC,QAAQ,EAAC,CAAC;EAAC,CAAC,CAAC,EAACP,CAAC;AAAA;AAAC,SAAOZ,CAAC,IAAIoB,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}