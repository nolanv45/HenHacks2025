{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { pt2px as e } from \"../../../../../../../core/screenUtils.js\";\nimport { minMaxZoomPrecisionFactor as t, spritePadding as i } from \"../../../definitions.js\";\nimport { AAnimatedMeshWriter as r, packAnimatedBitset as s } from \"./AnimatedMeshWriter.js\";\nimport { getMinMaxZoom as n } from \"../fill/meshWriterUtils.js\";\nimport { c256ToRad as o } from \"../shaders/constants.js\";\nimport { DataType as a } from \"../../../../../../webgl/enums.js\";\nclass c extends r {\n  get vertexSpec() {\n    return {\n      createComputedParams: t => {\n        let {\n          pixelDimensions: i,\n          texelDimensions: r,\n          baseSize: s,\n          referenceSize: n,\n          strokeWidth: o,\n          sizeRatio: a\n        } = t;\n        i || (i = t.sprite.sdf ? [0, 0] : [t.sprite.width, t.sprite.height]), r || (r = t.sprite.sdf ? [0, 0] : i), s = e(s), n = e(n), o = e(o);\n        const c = (t.sprite.sdfDecodeCoeff ?? 1) * a;\n        return {\n          ...t,\n          pixelDimensions: i,\n          texelDimensions: r,\n          baseSize: s,\n          referenceSize: n,\n          strokeWidth: o,\n          sdfDecodeCoeff: c\n        };\n      },\n      optionalAttributes: {\n        zoomRange: {\n          type: a.SHORT,\n          count: 2,\n          packPrecisionFactor: t,\n          pack: ({\n            scaleInfo: e\n          }, {\n            tileInfo: t\n          }) => n(e, t)\n        }\n      },\n      attributes: {\n        id: {\n          type: a.UNSIGNED_BYTE,\n          count: 3,\n          pack: \"id\"\n        },\n        bitset: {\n          type: a.UNSIGNED_BYTE,\n          count: 1,\n          pack: s\n        },\n        pos: {\n          type: a.SHORT,\n          count: 2,\n          pack: \"position\",\n          packPrecisionFactor: 1\n        },\n        offset: {\n          type: a.FLOAT,\n          count: 2,\n          packAlternating: {\n            count: 4,\n            pack: e => {\n              const t = e.texelDimensions;\n              return [[-.5 * t[0], -.5 * t[1]], [.5 * t[0], -.5 * t[1]], [-.5 * t[0], .5 * t[1]], [.5 * t[0], .5 * t[1]]];\n            }\n          }\n        },\n        uv: {\n          type: a.SHORT,\n          count: 2,\n          packPrecisionFactor: 1,\n          packAlternating: {\n            count: 4,\n            packTessellation: ({\n              texXmax: e,\n              texXmin: t,\n              texYmax: i,\n              texYmin: r\n            }) => [[t, r], [e, r], [t, i], [e, i]]\n          }\n        },\n        animationPointerAndBaseSizeAndReferenceSize: {\n          type: a.UNSIGNED_SHORT,\n          count: 4,\n          packPrecisionFactor: 1,\n          pack: ({\n            animations: e,\n            baseSize: t,\n            referenceSize: i\n          }) => [e.dataColumn, e.dataRow, t, i]\n        },\n        sizing: {\n          type: a.UNSIGNED_SHORT,\n          count: 4,\n          packPrecisionFactor: 8,\n          pack: ({\n            strokeWidth: e,\n            pixelDimensions: t,\n            baseSize: i,\n            sprite: r,\n            sizeRatio: s\n          }) => {\n            const n = Math.max(i * r.width / r.height, i),\n              o = r.sdfDecodeCoeff * n * s;\n            return [t[0], t[1], e, o];\n          }\n        },\n        angle: {\n          type: a.BYTE,\n          count: 1,\n          packTessellation: ({\n            angle: e\n          }) => e\n        }\n      }\n    };\n  }\n  _write(e, t) {\n    const i = this.evaluatedMeshParams.sprite,\n      {\n        textureBinding: r\n      } = i;\n    e.recordStart(this.instanceId, this.attributeLayout, r);\n    const s = t.getDisplayId();\n    if (\"esriGeometryPolygon\" === t.geometryType) {\n      const i = t.readCentroidForDisplay();\n      if (!i) return;\n      const [r, n] = i.coords;\n      this._writeQuad(e, s, r, n);\n    } else if (\"esriGeometryPoint\" === t.geometryType) {\n      const i = t.readXForDisplay(),\n        r = t.readYForDisplay();\n      this._writeQuad(e, s, i, r);\n    } else {\n      const i = t.readGeometryForDisplay();\n      if (i) {\n        const {\n          angleToLine: t\n        } = this.evaluatedMeshParams;\n        if (t) {\n          let t = !0,\n            r = null,\n            n = null;\n          i.forEachVertex((i, a) => {\n            if (null != r && null != n) {\n              const c = Math.atan2(a - n, i - r) / o;\n              t && (this._writeQuad(e, s, r, n, c), t = !1), this._writeQuad(e, s, i, a, c);\n            }\n            r = i, n = a;\n          });\n        } else i.forEachVertex((t, i) => {\n          this._writeQuad(e, s, t, i);\n        });\n      }\n    }\n    e.recordEnd();\n  }\n  _writeQuad(e, t, r, s, n = 0) {\n    const o = this.evaluatedMeshParams.sprite,\n      {\n        rect: a\n      } = o,\n      c = a.x + i,\n      d = a.y + i,\n      p = a.x + a.width - i,\n      l = a.y + a.height - i,\n      m = e.vertexCount();\n    e.recordBounds(r, s, 64, 64);\n    const u = {\n      texXmin: c,\n      texYmin: d,\n      texXmax: p,\n      texYmax: l,\n      angle: n\n    };\n    for (let i = 0; i < 4; i++) this._writeVertex(e, t, r, s, u);\n    e.indexEnsureSize(6), e.indexWrite(m), e.indexWrite(m + 1), e.indexWrite(m + 2), e.indexWrite(m + 1), e.indexWrite(m + 3), e.indexWrite(m + 2);\n  }\n}\nexport { c as AnimatedMarkerMeshWriter };","map":{"version":3,"names":["pt2px","e","minMaxZoomPrecisionFactor","t","spritePadding","i","AAnimatedMeshWriter","r","packAnimatedBitset","s","getMinMaxZoom","n","c256ToRad","o","DataType","a","c","vertexSpec","createComputedParams","pixelDimensions","texelDimensions","baseSize","referenceSize","strokeWidth","sizeRatio","sprite","sdf","width","height","sdfDecodeCoeff","optionalAttributes","zoomRange","type","SHORT","count","packPrecisionFactor","pack","scaleInfo","tileInfo","attributes","id","UNSIGNED_BYTE","bitset","pos","offset","FLOAT","packAlternating","uv","packTessellation","texXmax","texXmin","texYmax","texYmin","animationPointerAndBaseSizeAndReferenceSize","UNSIGNED_SHORT","animations","dataColumn","dataRow","sizing","Math","max","angle","BYTE","_write","evaluatedMeshParams","textureBinding","recordStart","instanceId","attributeLayout","getDisplayId","geometryType","readCentroidForDisplay","coords","_writeQuad","readXForDisplay","readYForDisplay","readGeometryForDisplay","angleToLine","forEachVertex","atan2","recordEnd","rect","x","d","y","p","l","m","vertexCount","recordBounds","u","_writeVertex","indexEnsureSize","indexWrite","AnimatedMarkerMeshWriter"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/2d/engine/webgl/shaderGraph/techniques/animated/AnimatedMarkerMeshWriter.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{pt2px as e}from\"../../../../../../../core/screenUtils.js\";import{minMaxZoomPrecisionFactor as t,spritePadding as i}from\"../../../definitions.js\";import{AAnimatedMeshWriter as r,packAnimatedBitset as s}from\"./AnimatedMeshWriter.js\";import{getMinMaxZoom as n}from\"../fill/meshWriterUtils.js\";import{c256ToRad as o}from\"../shaders/constants.js\";import{DataType as a}from\"../../../../../../webgl/enums.js\";class c extends r{get vertexSpec(){return{createComputedParams:t=>{let{pixelDimensions:i,texelDimensions:r,baseSize:s,referenceSize:n,strokeWidth:o,sizeRatio:a}=t;i||(i=t.sprite.sdf?[0,0]:[t.sprite.width,t.sprite.height]),r||(r=t.sprite.sdf?[0,0]:i),s=e(s),n=e(n),o=e(o);const c=(t.sprite.sdfDecodeCoeff??1)*a;return{...t,pixelDimensions:i,texelDimensions:r,baseSize:s,referenceSize:n,strokeWidth:o,sdfDecodeCoeff:c}},optionalAttributes:{zoomRange:{type:a.SHORT,count:2,packPrecisionFactor:t,pack:({scaleInfo:e},{tileInfo:t})=>n(e,t)}},attributes:{id:{type:a.UNSIGNED_BYTE,count:3,pack:\"id\"},bitset:{type:a.UNSIGNED_BYTE,count:1,pack:s},pos:{type:a.SHORT,count:2,pack:\"position\",packPrecisionFactor:1},offset:{type:a.FLOAT,count:2,packAlternating:{count:4,pack:e=>{const t=e.texelDimensions;return[[-.5*t[0],-.5*t[1]],[.5*t[0],-.5*t[1]],[-.5*t[0],.5*t[1]],[.5*t[0],.5*t[1]]]}}},uv:{type:a.SHORT,count:2,packPrecisionFactor:1,packAlternating:{count:4,packTessellation:({texXmax:e,texXmin:t,texYmax:i,texYmin:r})=>[[t,r],[e,r],[t,i],[e,i]]}},animationPointerAndBaseSizeAndReferenceSize:{type:a.UNSIGNED_SHORT,count:4,packPrecisionFactor:1,pack:({animations:e,baseSize:t,referenceSize:i})=>[e.dataColumn,e.dataRow,t,i]},sizing:{type:a.UNSIGNED_SHORT,count:4,packPrecisionFactor:8,pack:({strokeWidth:e,pixelDimensions:t,baseSize:i,sprite:r,sizeRatio:s})=>{const n=Math.max(i*r.width/r.height,i),o=r.sdfDecodeCoeff*n*s;return[t[0],t[1],e,o]}},angle:{type:a.BYTE,count:1,packTessellation:({angle:e})=>e}}}}_write(e,t){const i=this.evaluatedMeshParams.sprite,{textureBinding:r}=i;e.recordStart(this.instanceId,this.attributeLayout,r);const s=t.getDisplayId();if(\"esriGeometryPolygon\"===t.geometryType){const i=t.readCentroidForDisplay();if(!i)return;const[r,n]=i.coords;this._writeQuad(e,s,r,n)}else if(\"esriGeometryPoint\"===t.geometryType){const i=t.readXForDisplay(),r=t.readYForDisplay();this._writeQuad(e,s,i,r)}else{const i=t.readGeometryForDisplay();if(i){const{angleToLine:t}=this.evaluatedMeshParams;if(t){let t=!0,r=null,n=null;i.forEachVertex(((i,a)=>{if(null!=r&&null!=n){const c=Math.atan2(a-n,i-r)/o;t&&(this._writeQuad(e,s,r,n,c),t=!1),this._writeQuad(e,s,i,a,c)}r=i,n=a}))}else i.forEachVertex(((t,i)=>{this._writeQuad(e,s,t,i)}))}}e.recordEnd()}_writeQuad(e,t,r,s,n=0){const o=this.evaluatedMeshParams.sprite,{rect:a}=o,c=a.x+i,d=a.y+i,p=a.x+a.width-i,l=a.y+a.height-i,m=e.vertexCount();e.recordBounds(r,s,64,64);const u={texXmin:c,texYmin:d,texXmax:p,texYmax:l,angle:n};for(let i=0;i<4;i++)this._writeVertex(e,t,r,s,u);e.indexEnsureSize(6),e.indexWrite(m),e.indexWrite(m+1),e.indexWrite(m+2),e.indexWrite(m+1),e.indexWrite(m+3),e.indexWrite(m+2)}}export{c as AnimatedMarkerMeshWriter};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}