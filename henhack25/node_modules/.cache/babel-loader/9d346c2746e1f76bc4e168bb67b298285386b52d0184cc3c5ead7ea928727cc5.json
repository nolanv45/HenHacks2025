{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { S as e, G as t } from \"./SimpleGeometryCursor.js\";\nimport { c as s, b as n, t as i, d as r, i as o, G as m, j as a, f as h, e as c, h as u, k as l } from \"./Geometry.js\";\nimport { Envelope2D as _ } from \"./Envelope2D.js\";\nimport { j as f, p as d, t as g, u as p, v as P, w as x, x as b, y, z as w, A as C, L as v, e as S, h as D, B as I, D as G, P as M, E as T, F as N, G as k, H as A, I as E, J as q, K as R, M as z, N as B } from \"./ProjectionTransformation.js\";\nimport { b as X, c as Y } from \"./tslib.es6.js\";\nimport { a as j, P as O, E as F } from \"./QuadraticBezier.js\";\nimport { d as W, c as J, P as U, b as H, e as L, f as V, s as K } from \"./Envelope.js\";\nimport { T as Q } from \"./Transformation2D.js\";\nimport { d as Z, m as $, P as ee, S as te, k as se, l as ne } from \"./Point2D.js\";\nimport { c as ie } from \"./OperatorClip.js\";\nimport { c as re } from \"./GeometryCleaner-BEJM7I4l.js\";\nimport { O as oe } from \"./OperatorDensify.js\";\nfunction me(e, t, s, n, a, h) {\n  n < Number.MAX_VALUE && n > -Number.MAX_VALUE || i(\"Geodesic_bufferer.buffer - bad distance\"), r(e);\n  const c = re(e),\n    u = c.getGeometryType();\n  if (o(u)) {\n    const e = c.getPointCount(),\n      i = 8e6;\n    if (Math.abs(n) > i && (e > 50 || u !== m.enumMultiPoint && 4 === s && e > 2)) {\n      let e = c;\n      const r = n > 0 ? 1 : -1,\n        o = 7e6;\n      let m = n,\n        u = 1;\n      do {\n        u++, m = (Math.abs(m) - o) * r;\n      } while (Math.abs(m) > i);\n      m = n;\n      for (let n = 0; n < u - 1; n++) e = he(e, t, s, o * r, a, u, h), m = (Math.abs(m) - o) * r;\n      return e = he(e, t, s, m, a, u, h), e;\n    }\n  }\n  return he(c, t, s, n, a, 1, h);\n}\nclass ae {\n  constructor(e) {\n    this.m_sr = null, this.m_gcs = null, this.m_transform = null, this.m_a = 0, this.m_eSquared = 0, this.m_rpu = 0, this.m_radTolerance = 0, this.m_q90 = 0, this.m_gcs90 = 0, this.m_gcs180 = 0, this.m_gcs360 = 0, this.m_gcs60 = 0, this.m_ellipticToGeodesicMaxRatio = 0, this.m_curveType = 0, this.m_bShapePreserving = !1, this.m_distance = 0, this.m_absDistance = 0, this.m_convergenceOffset = 0, this.m_cornerStep = 0, this.m_segmentStep = 0, this.m_progressTracker = e;\n  }\n  bufferPolygon(e) {\n    const t = new j(),\n      s = new we(this, e, t);\n    return this.processGnomonicBufferPiecesCursor(!0, s);\n  }\n  bufferPolyline(e) {\n    const t = new we(this, e, null);\n    return this.processGnomonicBufferPiecesCursor(!0, t);\n  }\n  bufferMultiPoint(e) {\n    const t = new Ce(this, e);\n    return this.processGnomonicBufferPiecesCursor(!1, t);\n  }\n  bufferPoint(e) {\n    const t = e.getXY();\n    t.scale(this.m_rpu);\n    let s = new j();\n    if (this.bufferPoint2D(t, !1, s)) {\n      const e = H(null, s, !0);\n      s = y(s, e, !0, !0, -1, this.m_progressTracker, 0, !1);\n    }\n    return s = new P().foldInto360RangeGeodetic(s, this.m_gcs, 2), s;\n  }\n  processGnomonicBufferPiecesCursor(e, t) {\n    const s = t;\n    let n = s.getGnomonic();\n    const i = w(C());\n    let r = new v(),\n      o = new f().executeMany(r, i, this.m_progressTracker, 2);\n    const m = Z(6, !1),\n      a = $(_, 6);\n    this.initializeGrid(m, a);\n    const h = [null, null, null, null, null, null],\n      c = [null, null, null, null, null, null],\n      u = [null, null, null, null, null, null];\n    let l, d, g;\n    for (; null !== (l = s.next());) {\n      if (d = s.getGnomonic(), d !== n) {\n        if (null !== n) {\n          let t = o.next();\n          if (r = null, o = null, null != t) {\n            const s = H(i, t, !0),\n              r = W(s);\n            t = n.unproject(t, r, this.m_progressTracker), this.putInGridCursors(e, t, i, !0, m, a, h, c, u);\n          }\n        }\n        null !== d && (r = new v(), o = new f().executeMany(r, i, this.m_progressTracker, 2)), n = d;\n      }\n      if (s.isRunningInGnomonic()) {\n        if (d.project(l), s.needsSimplify()) {\n          const e = H(null, l, !0);\n          l = y(l, e, !0, !0, -1, this.m_progressTracker, 0, !1);\n        }\n        r.tick(be(l)), o.tock();\n      } else this.putInGridCursors(e, l, i, !0, m, a, h, c, u);\n    }\n    let p = !1;\n    for (let _ = 0; _ < 6; _++) if (null != u[_]) {\n      p = !0;\n      break;\n    }\n    if (p) {\n      let t = !1;\n      const l = [null, null, null, null, null, null];\n      if (e) {\n        const n = s.m_densified;\n        if (s.m_densified = null, null !== n) {\n          const s = new Q();\n          s.scale(1 / this.m_rpu, 1 / this.m_rpu), n.applyTransformation(s), this.m_distance > 0 ? this.putInGridCursors(e, n, i, !1, m, a, h, c, u) : (this.processInGrid(e, n, !1, m, a, h, l), t = !0);\n        }\n      }\n      const _ = new v(),\n        d = new f().executeMany(_, this.m_gcs, this.m_progressTracker, 2);\n      if (null !== o) {\n        let t = o.next();\n        r = null, o = null;\n        const s = H(i, t, !0),\n          l = W(s);\n        t = n.unproject(t, l, this.m_progressTracker), this.putInGridCursors(e, t, i, !0, m, a, h, c, u);\n      }\n      for (let e = 0; e < 6; e++) if (null != u[e]) {\n        let s = u[e].next();\n        u[e] = null, c[e] = null, t && null !== l[e] && (s = new S().execute(l[e], s, i, this.m_progressTracker));\n        const n = H(i, s, !0),\n          r = W(n);\n        s = h[e].unproject(s, r, this.m_progressTracker), s = new D().execute(s, this.m_gcs, !0, this.m_progressTracker), _.tick(be(s)), d.tock();\n      }\n      g = d.next();\n    } else {\n      let t,\n        m = !1;\n      if (e) {\n        let e = s.m_densified;\n        if (s.m_densified = null, null !== e) {\n          const s = new Q();\n          s.scale(1 / this.m_rpu, 1 / this.m_rpu), e.applyTransformation(s), d.project(e);\n          const n = H(null, e, !0);\n          e = y(e, n, !1, !0, -1, this.m_progressTracker, 0, !1), this.m_distance > 0 ? (r.tick(be(e)), o.tock()) : (t = e, m = !0);\n        }\n      }\n      let a = o.next();\n      r = null, o = null, m && (a = new S().execute(t, a, i, this.m_progressTracker));\n      const h = H(i, a, !0),\n        c = W(h);\n      g = n.unproject(a, c, this.m_progressTracker), g = new D().execute(g, this.m_gcs, !0, this.m_progressTracker);\n    }\n    return g = new P().foldInto360RangeGeodetic(g, this.m_gcs, 2), g;\n  }\n  putInGridCursors(e, t, s, n, i, r, o, m, a) {\n    const h = [null, null, null, null, null, null];\n    this.processInGrid(e, t, n, i, r, o, h);\n    for (let c = 0; c < 6; c++) null !== h[c] && (null === m[c] && (m[c] = new v(), a[c] = new f().executeMany(m[c], s, this.m_progressTracker, 2)), m[c].tick(be(h[c])), a[c].tock());\n  }\n  processInGrid(e, t, s, n, i, r, o) {\n    const m = .01,\n      a = this.insertGeodeticPointsAlongGrid(t, i, m);\n    for (let h = 0; h < 6; h++) {\n      if (n[h]) continue;\n      const e = i[h].clone();\n      e.inflateCoords(m, m);\n      const c = L(t, e),\n        u = J(null, c, !1).total();\n      let l = ie(a, e, u, Number.NaN, this.m_progressTracker);\n      if (null !== l && !l.isEmpty()) {\n        if (l === a && (l = l.clone()), null === r[h]) {\n          const e = new ee();\n          h < 3 ? e.setCoords(0, 1) : e.setCoords(0, -1);\n          const t = new ee();\n          t.setAdd(i[h].getCenter(), e), r[h] = xe(this.m_gcs, t);\n        }\n        r[h].project(l);\n        const e = H(null, l, !0);\n        l = y(l, e, s, !0, -1, this.m_progressTracker, 0, !1), o[h] = l;\n      }\n    }\n  }\n  insertGeodeticPointsAlongGrid(e, t, s) {\n    const n = _.construct(t[3].xmin, t[3].ymin, t[2].xmax, t[2].ymax),\n      i = I(this.m_gcs, n, e, !0, this.m_progressTracker),\n      r = new F(),\n      o = r.addGeometry(i);\n    return G(r, o, this.m_gcs, 0, 2, !0, t[0].xmax + s), G(r, o, this.m_gcs, 0, 2, !0, t[1].xmax + s), G(r, o, this.m_gcs, 0, 2, !1, t[1].ymin + s), 0 !== s && (G(r, o, this.m_gcs, 0, 2, !0, t[0].xmax - s), G(r, o, this.m_gcs, 0, 2, !0, t[1].xmax - s), G(r, o, this.m_gcs, 0, 2, !1, t[1].ymin - s)), r.getGeometry(o);\n  }\n  initializeGrid(e, t) {\n    for (let s = 0; s < 6; s++) e[s] = !1;\n    t[0].setCoords({\n      xmin: -this.m_gcs180,\n      ymin: 0,\n      xmax: -this.m_gcs60,\n      ymax: this.m_gcs90\n    }), t[1].setCoords({\n      xmin: -this.m_gcs60,\n      ymin: 0,\n      xmax: this.m_gcs60,\n      ymax: this.m_gcs90\n    }), t[2].setCoords({\n      xmin: this.m_gcs60,\n      ymin: 0,\n      xmax: this.m_gcs180,\n      ymax: this.m_gcs90\n    }), t[3].setCoords({\n      xmin: -this.m_gcs180,\n      ymin: -this.m_gcs90,\n      xmax: -this.m_gcs60,\n      ymax: 0\n    }), t[4].setCoords({\n      xmin: -this.m_gcs60,\n      ymin: -this.m_gcs90,\n      xmax: this.m_gcs60,\n      ymax: 0\n    }), t[5].setCoords({\n      xmin: this.m_gcs60,\n      ymin: -this.m_gcs90,\n      xmax: this.m_gcs180,\n      ymax: 0\n    });\n  }\n  checkAndPrepSegmentForCrossingAzimuthsOrPoleWrap(e, t, s, n, i, r) {\n    const o = e[0],\n      m = e.at(-1),\n      a = o.y < m.y ? o.y : m.y,\n      h = o.y > m.y ? o.y : m.y,\n      c = g.q(this.m_a, this.m_eSquared, a),\n      u = g.q(this.m_a, this.m_eSquared, h);\n    if (this.m_q90 - (c + t + this.m_absDistance) > .001 && this.m_q90 + (u - t - this.m_absDistance) > .001) return !1;\n    const l = s - ne,\n      _ = n + ne,\n      f = l - Math.PI,\n      d = l + Math.PI,\n      p = _ + Math.PI,\n      P = [Number.NaN],\n      x = [Number.NaN],\n      b = [Number.NaN],\n      y = [Number.NaN];\n    let w = !1;\n    if (le(this.m_a, this.m_eSquared, this.m_rpu, this.m_absDistance, o, l, f, m, _, P, x), le(this.m_a, this.m_eSquared, this.m_rpu, this.m_absDistance, m, p, _, o, f, b, y), (_ < P[0] && P[0] < p || _ < x[0] && x[0] < p) && (w = !0), w || (f < b[0] && b[0] < l || f < y[0] && y[0] < l) && (w = !0), !w && i) return !1;\n    const C = [];\n    for (let g = e.length - 1; g >= 0; g--) C.push(e[g]);\n    r.setEmpty(), r.addPathPoint2D(null, 0, !0);\n    let v = 0;\n    v = ce(this.m_a, this.m_eSquared, this.m_rpu, this.m_absDistance, this.m_curveType, e, l, _, i, v, r), v = ue(this.m_a, this.m_eSquared, this.m_rpu, this.m_absDistance, m, _, p, this.m_cornerStep, i, v, r, P[0], x[0]), v = ce(this.m_a, this.m_eSquared, this.m_rpu, this.m_absDistance, this.m_curveType, C, p, d, i, v, r), v = ue(this.m_a, this.m_eSquared, this.m_rpu, this.m_absDistance, o, f, l, this.m_cornerStep, i, v, r, b[0], y[0]);\n    let S = !1;\n    return i || (S = this.checkAndPrepForPole(r)), w || S;\n  }\n  bufferPoint2D(e, t, s) {\n    s.setEmpty(), s.addPathPoint2D(null, 0, !0);\n    const n = 0;\n    ue(this.m_a, this.m_eSquared, this.m_rpu, this.m_absDistance, e, -this.m_cornerStep, 2 * Math.PI, this.m_cornerStep, t, n, s);\n    let i = !1;\n    return t || (i = this.checkAndPrepForPole(s)), i;\n  }\n  checkAndPrepForPole(e) {\n    const t = this.checkAndPrepForPoleTouch(e),\n      s = this.checkAndPrepForPoleWrap(e);\n    return t || s;\n  }\n  checkAndPrepForPoleTouch(e) {\n    const t = new _();\n    return e.queryEnvelope(t), !(!M(t.ymax, this.m_gcs90) && !M(t.ymin, -this.m_gcs90)) && (this.prepPoleTouch(e), !0);\n  }\n  checkAndPrepForPoleWrap(e) {\n    const t = e.getXY(0),\n      s = e.getXY(e.getPointCount() - 1);\n    return Math.abs(t.x - s.x) > this.m_gcs180 ? (this.prepSinglePoleWrap(e), !0) : this.checkAndPrepForDoublePoleWrap(e);\n  }\n  checkAndPrepForDoublePoleWrap(e) {\n    return e.calculateArea2D() < 0 && (this.prepDoublePoleWrap(e), !0);\n  }\n  prepPoleTouch(e) {\n    const t = new j();\n    t.insertPath2D(-1, null, 0, 0, !0);\n    const s = e.getPathStart(0),\n      n = e.getPathEnd(0),\n      i = n - s;\n    let r = -1;\n    for (r = s; r < n; r++) {\n      const t = e.getXY(r),\n        s = M(t.y, this.m_gcs90),\n        n = M(t.y, -this.m_gcs90);\n      if (!s && !n) break;\n    }\n    let o = r,\n      m = !1,\n      a = Number.NaN;\n    do {\n      const n = e.getXY(o),\n        r = M(n.y, this.m_gcs90),\n        h = M(n.y, -this.m_gcs90),\n        c = s + (o + 1 - s) % i;\n      if (r || h) {\n        let s = ee.construct(a, n.y);\n        t.insertPoint2D(0, -1, s);\n        const i = e.getXY(c),\n          r = M(i.y, this.m_gcs90),\n          o = M(i.y, -this.m_gcs90);\n        r || o || (s = ee.construct(i.x, n.y), m ? t.setXY(t.getPointCount() - 1, s) : t.insertPoint2D(0, -1, s)), m = !0;\n      } else t.insertPoint2D(0, -1, n), a = n.x, m = !1;\n      o = c;\n    } while (o !== r);\n    e.setEmpty(), e.add(t, !1);\n  }\n  prepSinglePoleWrap(e) {\n    const t = new j(),\n      s = new j(),\n      n = new Q(),\n      i = e.getXY(e.getPathStart(0)),\n      r = e.getXY(e.getPathEnd(0) - 1),\n      o = this.m_gcs360,\n      m = this.m_gcs180,\n      a = new _();\n    a.setCoords({\n      xmin: -this.m_gcs180,\n      ymin: -this.m_gcs90,\n      xmax: this.m_gcs180,\n      ymax: this.m_gcs90\n    });\n    const h = new _();\n    e.queryEnvelope(h);\n    const c = Math.ceil(h.width() / o);\n    let u, l;\n    i.x > r.x ? (u = -o, l = this.m_gcs90) : (u = o, l = -this.m_gcs90), n.setShiftCoords(u, 0), t.addPath(e, 0, !0), s.add(t, !1);\n    const f = new U();\n    for (let _ = 0; _ < c; _++) s.applyTransformation(n), s.getPointByVal(0, f), t.lineToPoint(f), t.addSegmentsFromPath(s, 0, 0, s.getSegmentCount() - 1, !1);\n    const d = t.getXY(0),\n      g = t.getXY(t.getPointCount() - 1);\n    d.y = l, g.y = l, t.lineTo(g);\n    const p = new ee();\n    for (p.setCoordsPoint2D(g), p.x -= .5 * u; Math.abs(p.x - d.x) > m;) t.lineTo(p), p.x -= .5 * u;\n    t.lineTo(d);\n    const P = a.getCenterX(),\n      x = new _();\n    t.queryEnvelope(x);\n    let b = 0;\n    const y = x.getCenter().x;\n    y - P > m ? b = -Math.ceil((y - P - m) / o) : P - y > m && (b = Math.ceil((P - y - m) / o)), 0 !== b && (n.setShiftCoords(b * o, 0), t.applyTransformation(n));\n    const w = new F(),\n      C = w.addGeometry(t);\n    G(w, C, this.m_gcs, 0, 2, !0, a.xmin), G(w, C, this.m_gcs, 0, 2, !0, a.xmax);\n    const v = w.getGeometry(C),\n      S = L(v, a);\n    S.inflateCoords(0, 1);\n    const D = J(null, S, !0).total(),\n      I = ie(v, a, D, Number.NaN, this.m_progressTracker);\n    e.setEmpty(), e.add(I, !1);\n  }\n  prepDoublePoleWrap(e) {\n    const t = this.m_gcs360,\n      s = this.m_gcs180,\n      n = new _();\n    n.setCoords({\n      xmin: -this.m_gcs180,\n      ymin: -this.m_gcs90,\n      xmax: this.m_gcs180,\n      ymax: this.m_gcs90\n    });\n    const i = n.getCenter().x,\n      r = new _();\n    e.queryPathEnvelope(0, r);\n    let o,\n      m = 0,\n      a = r.getCenter().x;\n    if (a - i > s ? m = -Math.ceil((a - i - s) / t) : i - a > s && (m = Math.ceil((i - a - s) / t)), 0 !== m) {\n      const s = new Q();\n      s.setShiftCoords(m * t, 0), e.getImpl().applyTransformationToPath(s, 0), e.queryPathEnvelope(0, r), a = r.getCenter().x;\n    }\n    const h = new _();\n    n.containsExclusiveEnvelope(r) ? (o = !1, h.setCoords({\n      env2D: n\n    })) : (o = !0, h.setCoords({\n      env2D: n\n    }), h.xmin -= t, h.xmax += t);\n    let c = e.createInstance();\n    c.addPathPoint2D(null, 0, !0);\n    const u = new ee();\n    if (u.setCoords(h.xmin, h.ymin), c.insertPoint2D(0, -1, u), u.setCoords(h.xmin, h.ymax), c.insertPoint2D(0, -1, u), u.setCoords(.5 * (h.xmin + h.xmax), h.ymax), c.insertPoint2D(0, -1, u), u.setCoords(h.xmax, h.ymax), c.insertPoint2D(0, -1, u), u.setCoords(h.xmax, h.ymin), c.insertPoint2D(0, -1, u), u.setCoords(.5 * (h.xmin + h.xmax), h.ymin), c.insertPoint2D(0, -1, u), o) {\n      c.addPath(e, 0, !0);\n      const s = new Q();\n      a < i ? s.setShiftCoords(t, 0) : s.setShiftCoords(-t, 0), e.getImpl().applyTransformationToPath(s, 0), c.addPath(e, 0, !0);\n      const r = new F(),\n        o = r.addGeometry(c);\n      G(r, o, this.m_gcs, 0, 2, !0, n.xmin), G(r, o, this.m_gcs, 0, 2, !0, n.xmax), c = r.getGeometry(o);\n      const m = L(c, n);\n      m.inflateCoords(0, 1);\n      const h = J(null, m, !0).total();\n      c = ie(c, n, h, Number.NaN, this.m_progressTracker);\n    } else c.addPath(e, 0, !0);\n    e.setEmpty(), e.add(c, !1);\n  }\n  setMinCornerStep() {\n    const e = {\n      stack: [],\n      error: void 0,\n      hasError: !1\n    };\n    try {\n      let s = Math.min(Math.PI * this.m_a - this.m_absDistance, this.m_absDistance);\n      s = Math.min(s, .125 * this.m_a * Math.PI);\n      const n = new ee();\n      n.setCoords(0, 10 * this.m_rpu);\n      const i = 0;\n      let r = 45 * this.m_rpu;\n      const o = X(e, new te(new T(), new T()), !1),\n        m = X(e, new te(new T(), new T()), !1),\n        a = X(e, new te(new T(), new T()), !1),\n        h = X(e, new te(new T(), new T()), !1),\n        c = new ee(),\n        u = new ee(),\n        l = new ee(),\n        _ = new ee();\n      for (N.geodesicCoordinate(this.m_a, this.m_eSquared, n.x, n.y, s, i, o.at(0), o.at(1)), c.setCoords(o.at(0).val, o.at(1).val), N.geodesicCoordinate(this.m_a, this.m_eSquared, n.x, n.y, s, r, m.at(0), m.at(1)), u.setCoords(m.at(0).val, m.at(1).val);;) {\n        const e = {\n          stack: [],\n          error: void 0,\n          hasError: !1\n        };\n        try {\n          const t = .5 * (i + r);\n          N.geodesicCoordinate(this.m_a, this.m_eSquared, n.x, n.y, s, t, a.at(0), a.at(1)), l.setCoords(a.at(0).val, a.at(1).val);\n          const o = X(e, new T(), !1),\n            f = X(e, new T(), !1);\n          N.geodeticDistance(this.m_a, this.m_eSquared, c.x, c.y, u.x, u.y, o, f, null, 2), N.geodeticCoordinate(this.m_a, this.m_eSquared, c.x, c.y, .5 * o.val, f.val, h.at(0), h.at(1), 2), _.setCoords(h.at(0).val, h.at(1).val);\n          const d = X(e, new T(), !1);\n          N.geodeticDistance(this.m_a, this.m_eSquared, l.x, l.y, _.x, _.y, d, null, null, 2);\n          if (d.val <= this.m_convergenceOffset) break;\n          r *= .9, N.geodesicCoordinate(this.m_a, this.m_eSquared, n.x, n.y, s, r, m.at(0), m.at(1)), u.setCoords(m.at(0).val, m.at(1).val);\n        } catch (t) {\n          e.error = t, e.hasError = !0;\n        } finally {\n          Y(e);\n        }\n      }\n      const f = r - i,\n        d = 2 * Math.PI / Math.ceil(2 * Math.PI / f);\n      this.m_cornerStep = d;\n    } catch (s) {\n      e.error = s, e.hasError = !0;\n    } finally {\n      Y(e);\n    }\n  }\n  setMinSegmentStep() {\n    const e = {\n      stack: [],\n      error: void 0,\n      hasError: !1\n    };\n    try {\n      let n = Math.min(Math.PI * this.m_a - this.m_absDistance, this.m_absDistance);\n      n = Math.min(n, .125 * this.m_a * Math.PI);\n      const i = new ee(),\n        r = new ee();\n      i.setCoords(0, 10 * this.m_rpu), r.setCoords(10 * this.m_rpu, 10 * this.m_rpu);\n      const o = X(e, new T(), !1),\n        m = X(e, new T(), !1),\n        a = X(e, new T(), !1);\n      N.geodeticDistance(this.m_a, this.m_eSquared, i.x, i.y, r.x, r.y, a, o, m, this.m_curveType);\n      const h = X(e, new te(new T(), new T()), !1),\n        c = X(e, new te(new T(), new T()), !1),\n        u = new ee(),\n        l = X(e, new T(), !1),\n        _ = X(e, new te(new T(), new T()), !1),\n        f = X(e, new te(new T(), new T()), !1),\n        d = X(e, new te(new T(), new T()), !1),\n        g = X(e, new te(new T(), new T()), !1),\n        p = new ee(),\n        P = new ee(),\n        x = new ee(),\n        b = new ee(),\n        y = 0;\n      let w = 1;\n      const C = o.val,\n        v = m.val,\n        S = C - .5 * Math.PI,\n        D = v + .5 * Math.PI,\n        I = a.val;\n      for (N.geodesicCoordinate(this.m_a, this.m_eSquared, i.x, i.y, n, S, _.at(0), _.at(1)), p.setCoords(_.at(0).val, _.at(1).val), N.geodesicCoordinate(this.m_a, this.m_eSquared, r.x, r.y, n, D, f.at(0), f.at(1)), P.setCoords(f.at(0).val, f.at(1).val);;) {\n        const e = {\n          stack: [],\n          error: void 0,\n          hasError: !1\n        };\n        try {\n          const s = .5 * (y + w);\n          N.geodeticCoordinate(this.m_a, this.m_eSquared, i.x, i.y, s * I, C, h.at(0), h.at(1), this.m_curveType), u.setCoords(h.at(0).val, h.at(1).val), N.geodeticDistance(this.m_a, this.m_eSquared, i.x, i.y, u.x, u.y, null, null, l, this.m_curveType);\n          const o = l.val + .5 * Math.PI;\n          N.geodesicCoordinate(this.m_a, this.m_eSquared, u.x, u.y, n, o, d.at(0), d.at(1)), x.setCoords(d.at(0).val, d.at(1).val);\n          const m = X(e, new T(), !1),\n            a = X(e, new T(), !1);\n          N.geodeticDistance(this.m_a, this.m_eSquared, p.x, p.y, P.x, P.y, m, a, null, 2), N.geodeticCoordinate(this.m_a, this.m_eSquared, p.x, p.y, .5 * m.val, a.val, g.at(0), g.at(1), 2), b.setCoords(g.at(0).val, g.at(1).val);\n          const _ = X(e, new T(), !1);\n          N.geodeticDistance(this.m_a, this.m_eSquared, x.x, x.y, b.x, b.y, _, null, null, 2);\n          if (_.val <= this.m_convergenceOffset) break;\n          {\n            const e = {\n              stack: [],\n              error: void 0,\n              hasError: !1\n            };\n            try {\n              w *= .9, N.geodeticCoordinate(this.m_a, this.m_eSquared, i.x, i.y, w * I, C, c.at(0), c.at(1), this.m_curveType), r.setCoords(c.at(0).val, c.at(1).val);\n              const t = X(e, new T(), !1);\n              N.geodeticDistance(this.m_a, this.m_eSquared, i.x, i.y, r.x, r.y, null, null, t, this.m_curveType);\n              const s = t.val + .5 * Math.PI;\n              N.geodesicCoordinate(this.m_a, this.m_eSquared, r.x, r.y, n, s, f.at(0), f.at(1)), P.setCoords(f.at(0).val, f.at(1).val);\n            } catch (t) {\n              e.error = t, e.hasError = !0;\n            } finally {\n              Y(e);\n            }\n          }\n        } catch (s) {\n          e.error = s, e.hasError = !0;\n        } finally {\n          Y(e);\n        }\n      }\n      let G = w * I;\n      G > 1e5 && (G = 1e5), this.m_segmentStep = G;\n    } catch (n) {\n      e.error = n, e.hasError = !0;\n    } finally {\n      Y(e);\n    }\n  }\n  setConvergenceOffset() {\n    let e;\n    e = this.m_absDistance > 5e4 ? 100 : this.m_absDistance > 1e4 ? 10 : 1, this.m_absDistance / e < 500 && (e = this.m_absDistance / 500), e < .01 && (e = .01), this.m_convergenceOffset = e;\n  }\n}\nfunction he(e, t, s, n, i, r, o) {\n  if (e.isEmpty()) return new j({\n    vd: e.getDescription()\n  });\n  let f = e;\n  if (a(f)) {\n    const e = 10 * t.getTolerance(0);\n    f = new oe().execute(f, 0, e, 0, o, 12e3);\n  }\n  const y = new ae(o);\n  y.m_sr = t, y.m_gcs = t.getGCS(), y.m_transform = d(t, y.m_gcs, null);\n  const w = k();\n  y.m_gcs.querySpheroidData(w);\n  const C = new _();\n  f.queryEnvelope(C), y.m_a = w.majorSemiAxis, y.m_eSquared = w.e2, y.m_rpu = y.m_gcs.getUnit().getUnitToBaseFactor(), y.m_gcs90 = .5 * Math.PI / y.m_rpu, y.m_gcs180 = Math.PI / y.m_rpu, y.m_gcs360 = 2 * Math.PI / y.m_rpu, y.m_gcs60 = y.m_gcs360 / 6, y.m_q90 = g.q90(y.m_a, y.m_eSquared), y.m_ellipticToGeodesicMaxRatio = .5 * y.m_a * Math.PI / y.m_q90;\n  const v = y.m_gcs.getTolerance(0);\n  y.m_radTolerance = v * y.m_rpu, 4 === s ? (y.m_curveType = 2, y.m_bShapePreserving = !0) : (y.m_curveType = s, y.m_bShapePreserving = !1), y.m_distance = n, y.m_absDistance = Math.abs(n), Number.isNaN(i) || i <= 0 ? y.setConvergenceOffset() : y.m_convergenceOffset = Math.max(i, .001), y.m_convergenceOffset /= r;\n  let S,\n    D = f.getGeometryType();\n  if (h(D)) {\n    const e = new O({\n      vd: f.getDescription()\n    });\n    e.addSegment(f, !0), S = e, D = m.enumPolyline;\n  } else if (D === m.enumEnvelope) {\n    const e = f,\n      t = new _();\n    e.queryEnvelope(t);\n    const s = W(J(y.m_sr, C, !0));\n    if (t.minDimension() <= s) {\n      if (0 === t.maxDimension()) {\n        const t = new U({\n          vd: f.getDescription()\n        });\n        e.getCenter(t), S = t, D = m.enumPoint;\n      } else {\n        const t = new O({\n          vd: f.getDescription()\n        });\n        t.addEnvelope(e, !1), S = t, D = m.enumPolyline;\n      }\n    } else {\n      const t = new j({\n        vd: f.getDescription()\n      });\n      t.addEnvelope(e, !1), S = t, D = m.enumPolygon;\n    }\n  } else S = f;\n  if (y.setMinCornerStep(), c(D) || y.setMinSegmentStep(), y.m_absDistance <= .5 * y.m_convergenceOffset) return D !== m.enumPolygon ? new j({\n    vd: S.getDescription()\n  }) : y.m_bShapePreserving ? S : p(S, y.m_sr, y.m_curveType, y.m_segmentStep, -1, o);\n  if (y.m_distance < 0 && D !== m.enumPolygon) return new j({\n    vd: S.getDescription()\n  });\n  if (y.m_bShapePreserving && u(D)) {\n    const e = p(S, t, 4, Number.NaN, y.m_convergenceOffset, o);\n    S = new P().execute(e, y.m_transform, o);\n  } else S = new P().execute(S, y.m_transform, o);\n  if (S = x(S, y.m_gcs), S.isEmpty()) return new j({\n    vd: S.getDescription()\n  });\n  !y.m_bShapePreserving && u(D) && (S = b(y.m_rpu, S)), S = fe(S, y.m_gcs);\n  let I = new j();\n  switch (D) {\n    case m.enumPolygon:\n      I = y.bufferPolygon(S);\n      break;\n    case m.enumPolyline:\n      I = y.bufferPolyline(S);\n      break;\n    case m.enumMultiPoint:\n      I = y.bufferMultiPoint(S);\n      break;\n    case m.enumPoint:\n      I = y.bufferPoint(S);\n      break;\n    default:\n      l(\"\");\n  }\n  const G = new P().execute(I, y.m_transform.getInverse(), o);\n  return G.mergeVertexDescription(S.getDescription()), G;\n}\nfunction ce(e, t, s, n, i, r, o, m, a, h, c) {\n  const u = {\n    stack: [],\n    error: void 0,\n    hasError: !1\n  };\n  try {\n    const l = new ee();\n    l.setNAN(), a || c.getPointCount() > 0 && (l.setCoordsPoint2D(c.getXY(c.getPointCount() - 1)), l.scale(s));\n    const _ = X(u, new T(), !1),\n      f = X(u, new te(new T(), new T()), !1),\n      d = new ee(),\n      g = new ee(),\n      p = r.at(-1),\n      P = 1 / s;\n    for (let s = 0; s < r.length; s++) {\n      const u = r[s];\n      let x;\n      0 === s ? x = o : s === r.length - 1 ? x = m : (N.geodeticDistance(e, t, p.x, p.y, u.x, u.y, null, null, _, i), x = _.val - .5 * Math.PI), N.geodesicCoordinate(e, t, u.x, u.y, n, x, f.at(0), f.at(1)), a ? g.setCoords(f.at(0).val, f.at(1).val) : (d.setCoords(f.at(0).val, f.at(1).val), h = _e(u.x, d.x, l.x, h), g.setCoords(h + d.x, d.y), l.setCoordsPoint2D(g)), g.scale(P), c.insertPoint2D(0, -1, g);\n    }\n    return h;\n  } catch (l) {\n    u.error = l, u.hasError = !0;\n  } finally {\n    Y(u);\n  }\n}\nfunction ue(e, t, s, n, i, r, o, m, a, h, c, u = Number.NaN, l = Number.NaN) {\n  const _ = {\n    stack: [],\n    error: void 0,\n    hasError: !1\n  };\n  try {\n    if (o - r < m) return h;\n    const f = X(_, new te(new T(), new T()), !1),\n      d = new ee(),\n      g = new ee(),\n      p = new ee();\n    g.setNAN(), a || c.getPointCount() > 0 && (g.setCoordsPoint2D(c.getXY(c.getPointCount() - 1)), g.scale(s));\n    let P = Math.ceil(r / m),\n      x = P++ * m;\n    x === r && (x = P++ * m);\n    let b = r;\n    const y = 1 / s;\n    for (; x < o + m && (b < u && u < x ? (x = u, P--) : b < l && l < x && (x = l, P--), !(x >= o));) N.geodesicCoordinate(e, t, i.x, i.y, n, x, f.at(0), f.at(1)), a ? p.setCoords(f.at(0).val, f.at(1).val) : (d.setCoords(f.at(0).val, f.at(1).val), h = _e(i.x, d.x, g.x, h), p.setCoords(h + d.x, d.y), g.setCoordsPoint2D(p)), p.scale(y), c.insertPoint2D(0, -1, p), b = x, x = P++ * m;\n    return h;\n  } catch (f) {\n    _.error = f, _.hasError = !0;\n  } finally {\n    Y(_);\n  }\n}\nfunction le(e, t, s, n, i, r, o, m, a, h, c) {\n  const u = {\n    stack: [],\n    error: void 0,\n    hasError: !1\n  };\n  try {\n    const s = new ee(),\n      l = new ee(),\n      _ = X(u, new te(new T(), new T()), !1);\n    N.geodesicCoordinate(e, t, i.x, i.y, n, r, _.at(0), _.at(1)), s.setCoords(_.at(0).val, _.at(1).val), N.geodesicCoordinate(e, t, i.x, i.y, n, o, _.at(0), _.at(1)), l.setCoords(_.at(0).val, _.at(1).val);\n    const f = X(u, new T(), !1);\n    for (N.geodeticDistance(e, t, m.x, m.y, s.x, s.y, null, f, null, 0), h[0] = f.val, N.geodeticDistance(e, t, m.x, m.y, l.x, l.y, null, f, null, 0), c[0] = f.val; h[0] <= c[0];) h[0] += se;\n    for (; h[0] > c[0];) h[0] -= se;\n    for (; h[0] >= a;) h[0] -= se, c[0] -= se;\n    for (; h[0] < a;) h[0] += se, c[0] += se;\n  } catch (l) {\n    u.error = l, u.hasError = !0;\n  } finally {\n    Y(u);\n  }\n}\nfunction _e(e, t, s, n) {\n  if (Number.isNaN(s)) {\n    for (; n + t - e > Math.PI;) n -= se;\n    for (; e - (n + t) > Math.PI;) n += se;\n    return n;\n  }\n  return n + t - s > Math.PI ? n -= se : s - (n + t) > Math.PI && (n += se), n;\n}\nfunction fe(e, t) {\n  const s = e.getGeometryType();\n  let n;\n  if (n = u(s) ? e.getPathCount() : s === m.enumMultiPoint ? e.getPointCount() : 1, 1 === n) return e;\n  const i = [],\n    r = [];\n  for (let m = 0; m < n; m++) {\n    i.push(m);\n    const n = new ee();\n    if (u(s)) {\n      const t = new _();\n      e.queryPathEnvelope(m, t), n.assign(t.getCenter());\n    } else n.assign(e.getXY(m));\n    const o = t.toGeohash(n);\n    r.push(o);\n  }\n  i.sort((e, t) => r[e] < r[t] ? -1 : r[e] > r[t] ? 1 : 0);\n  const o = e.createInstance();\n  for (let m = 0; m < n; m++) {\n    const t = i[m];\n    u(s) ? o.addPath(e, t, !0) : o.addPoints(e, t, t + 1);\n  }\n  return o;\n}\nfunction de(e, t, s, n, i, r) {\n  const o = {\n    stack: [],\n    error: void 0,\n    hasError: !1\n  };\n  try {\n    if (n >= r) return !1;\n    const m = s[0],\n      a = s.at(-1),\n      h = X(o, new T(), !1),\n      c = X(o, new T(), !1),\n      u = X(o, new T(), !1);\n    N.greatEllipticDistance(e, t, i.x, i.y, m.x, m.y, h, null, null), N.greatEllipticDistance(e, t, i.x, i.y, a.x, a.y, c, null, null), N.greatEllipticDistance(e, t, m.x, m.y, a.x, a.y, u, null, null);\n    let l = Math.min(h.val, c.val) + u.val,\n      _ = l + n;\n    if (_ < r) return !0;\n    const f = X(o, new T(), !1);\n    l = Math.max(h.val, c.val);\n    for (let n = 1; n < s.length - 1; n++) {\n      const r = s[n];\n      N.greatEllipticDistance(e, t, i.x, i.y, r.x, r.y, f, null, null), f.val > l && (l = f.val);\n    }\n    return _ = l + n, _ < r;\n  } catch (m) {\n    o.error = m, o.hasError = !0;\n  } finally {\n    Y(o);\n  }\n}\nfunction ge(e, t, s, n, i, r, o, m) {\n  let a;\n  if (n.length % 2 == 0) {\n    const e = n.length >> 1,\n      t = n[e],\n      s = n[e - 1];\n    a = ee.lerp(t, s, .5);\n  } else {\n    a = n[n.length - 1 >> 1].clone();\n  }\n  const h = a.clone(),\n    c = E(e, t, h, 75 / 180 * Math.PI);\n  return !!de(e, t, n, i, h, c) && (null !== r && (r.setCoordsPoint2D(a), r.scale(1 / s)), null !== o && o.setCoordsPoint2D(h), null !== m && (m[0] = c), !0);\n}\nfunction pe(e, t, s, n, i, r) {\n  const o = {\n    stack: [],\n    error: void 0,\n    hasError: !1\n  };\n  try {\n    if (n >= r) return !1;\n    const m = X(o, new T(), !1);\n    N.greatEllipticDistance(e, t, i.x, i.y, s.x, s.y, m, null, null);\n    return m.val + n < r;\n  } catch (m) {\n    o.error = m, o.hasError = !0;\n  } finally {\n    Y(o);\n  }\n}\nfunction Pe(e, t, s, n, i, r, o, m) {\n  const a = E(e, t, n, 75 / 180 * Math.PI);\n  return !!pe(e, t, n, i, n, a) && (null !== r && (r.setCoordsPoint2D(n), r.scale(1 / s)), null !== o && o.setCoordsPoint2D(n), null !== m && (m[0] = a), !0);\n}\nfunction xe(e, t) {\n  return new A(e, t);\n}\nfunction be(e) {\n  return V(e, 0) || K(e, 0), e;\n}\nclass ye {\n  constructor(e) {\n    this.m_bRunningInGnomonic = !1, this.m_bNeedsSimplify = !1, this.m_gnomonic = null, this.m_gnomonicCenterRad = new ee(), this.m_minGnomonicRadius = Number.NaN, this.m_progressTracker = e;\n  }\n  isRunningInGnomonic() {\n    return this.m_bRunningInGnomonic;\n  }\n  needsSimplify() {\n    return this.m_bNeedsSimplify;\n  }\n  getGnomonic() {\n    return this.m_gnomonic;\n  }\n}\nclass we extends ye {\n  constructor(e, t, s) {\n    super(e.m_progressTracker), this.m_segIter = null, this.m_bNextSegmentCannotJoin = !1, this.m_currentDensifiedDelta = [0], this.m_currentBufferedDelta = 0, this.m_lastAzimuth = 0, this.m_startAzimuth = [0], this.m_endAzimuth = [0], this.m_numWinds = 0, this.m_debugCounter = 0, this.m_bufferHelper = new j(), this.m_densifiedPoints = [], this.m_bufferer = e, this.m_multiPath = t, this.m_densified = s, this.m_bNeedsSimplify = !0;\n    const n = new _();\n    this.m_multiPath.queryEnvelope(n);\n    const i = n.getCenter(),\n      r = i.clone();\n    r.scale(this.m_bufferer.m_rpu), this.m_gnomonic = xe(this.m_bufferer.m_gcs, i), this.m_gnomonicCenterRad = r.clone(), this.m_minGnomonicRadius = E(this.m_bufferer.m_a, this.m_bufferer.m_eSquared, r, 75 / 180 * Math.PI);\n  }\n  next() {\n    let e;\n    if (this.m_bNextSegmentCannotJoin) return this.m_bNextSegmentCannotJoin = !1, this.m_segIter.nextSegment(), e = this.m_bufferHelper.clone(), e;\n    if (null === this.m_segIter) {\n      if (this.m_segIter = this.m_multiPath.getImpl().querySegmentIterator(), !this.m_segIter.nextPath()) return null;\n      null !== this.m_densified && this.m_densified.addPathPoint2D(null, 0, !0);\n    }\n    if (!this.m_segIter.hasNextSegment()) {\n      if (!this.m_segIter.nextPath()) return null;\n      null != this.m_densified && this.m_densified.addPathPoint2D(null, 0, !0);\n    }\n    let t = null;\n    this.m_currentBufferedDelta = 0, this.m_currentDensifiedDelta = [0], this.m_numWinds = 0, this.m_lastAzimuth = Number.NaN, this.m_bNextSegmentCannotJoin = !1, this.m_densifiedPoints.length = 0;\n    const s = 16;\n    let n = 0;\n    const i = new ee(),\n      r = new ee();\n    for (; this.m_segIter.hasNextSegment() && this.m_numWinds < s;) {\n      const e = this.m_segIter.nextSegment();\n      if (i.setCoordsPoint2D(e.getStartXY()), r.setCoordsPoint2D(e.getEndXY()), i.scale(this.m_bufferer.m_rpu), r.scale(this.m_bufferer.m_rpu), q(i, r)) i.x = r.x;else if (R(i, r)) r.x = i.x;else {\n        let e = -1,\n          t = -1;\n        const s = this.m_segIter.getPathIndex(),\n          n = this.m_multiPath.getPathStart(s),\n          o = this.m_multiPath.getPathEnd(s);\n        if (e = this.m_segIter.getStartPointIndex() - 1, t = this.m_segIter.getEndPointIndex() + 1, e < n && (e = this.m_multiPath.isClosedPath(s) ? o - 1 : -1), t > o - 1 && (t = this.m_multiPath.isClosedPath(s) ? n : -1), -1 !== e) {\n          const t = this.m_multiPath.getXY(e);\n          t.scale(this.m_bufferer.m_rpu), R(t, i) && (i.x = t.x);\n        }\n        if (-1 !== t) {\n          const e = this.m_multiPath.getXY(t);\n          e.scale(this.m_bufferer.m_rpu), q(r, e) && (r.x = e.x);\n        }\n      }\n      this.m_densifiedPoints.length = 0;\n      const s = z(this.m_bufferer.m_a, this.m_bufferer.m_eSquared, this.m_bufferer.m_curveType, i, r, this.m_bufferer.m_segmentStep, Number.NaN, this.m_bufferer.m_radTolerance, this.m_startAzimuth, this.m_endAzimuth, this.m_densifiedPoints, this.m_currentDensifiedDelta);\n      if (0 === n) this.m_bRunningInGnomonic = this.isSegmentBufferInCurrentGnomonic(this.m_densifiedPoints), this.m_bRunningInGnomonic || (this.m_bRunningInGnomonic = this.tryUpdateGnomonic(this.m_densifiedPoints));else if (this.m_bRunningInGnomonic) {\n        if (!this.isSegmentBufferInCurrentGnomonic(this.m_densifiedPoints)) {\n          this.m_segIter.previousSegment(), this.m_segIter.previousSegment(), this.m_segIter.nextSegment();\n          break;\n        }\n      } else {\n        if (ge(this.m_bufferer.m_a, this.m_bufferer.m_eSquared, this.m_bufferer.m_rpu, this.m_densifiedPoints, this.m_bufferer.m_absDistance * this.m_bufferer.m_ellipticToGeodesicMaxRatio, null, null, null)) {\n          this.m_segIter.previousSegment(), this.m_segIter.previousSegment(), this.m_segIter.nextSegment();\n          break;\n        }\n      }\n      if (0 === s || B(i, r) ? (this.m_bufferHelper.setEmpty(), this.m_bufferer.bufferPoint2D(i, this.m_bRunningInGnomonic, this.m_bufferHelper), this.m_bNextSegmentCannotJoin = !0) : (this.m_bufferHelper.setEmpty(), this.m_bNextSegmentCannotJoin = this.checkAndPrepSegmentForCrossingAzimuthsOrPoleWrap(s, this.m_bufferHelper)), this.m_bNextSegmentCannotJoin) {\n        this.m_segIter.previousSegment(), this.m_segIter.hasPreviousSegment() ? (this.m_segIter.previousSegment(), this.m_segIter.nextSegment()) : this.m_segIter.resetToFirstSegment(), null != this.m_densified && this.m_densified.insertPointsFromPoints(this.m_densified.getPathCount() - 1, -1, this.m_densifiedPoints, 0, this.m_densifiedPoints.length - 1, !0);\n        break;\n      }\n      null != this.m_densified && this.m_densified.insertPointsFromPoints(this.m_densified.getPathCount() - 1, -1, this.m_densifiedPoints, 0, this.m_densifiedPoints.length - 1, !0), null === t && (t = new j(), t.addPathPoint2D(null, 0, !0)), this.addJoinAndBufferLeftSide(t), n++;\n    }\n    if (this.m_currentDensifiedDelta = [0], n > 0) {\n      const e = this.m_segIter.getStartPointIndex(),\n        s = this.m_segIter.getPathIndex();\n      for (; n > 0;) {\n        if (this.m_segIter.previousSegment(), i.setCoordsPoint2D(this.m_multiPath.getXY(this.m_segIter.getStartPointIndex())), r.setCoordsPoint2D(this.m_multiPath.getXY(this.m_segIter.getEndPointIndex())), i.scale(this.m_bufferer.m_rpu), r.scale(this.m_bufferer.m_rpu), this.m_bRunningInGnomonic) if (q(i, r)) i.x = r.x;else if (R(i, r)) r.x = i.x;else {\n          let e = -1,\n            t = -1;\n          const s = this.m_segIter.getPathIndex(),\n            n = this.m_multiPath.getPathStart(s),\n            o = this.m_multiPath.getPathEnd(s);\n          if (e = this.m_segIter.getStartPointIndex() - 1, t = this.m_segIter.getEndPointIndex() + 1, e < n && (e = this.m_multiPath.isClosedPath(s) ? o - 1 : -1), t > o - 1 && (t = this.m_multiPath.isClosedPath(s) ? n : -1), -1 !== e) {\n            const t = this.m_multiPath.getXY(e);\n            t.scale(this.m_bufferer.m_rpu), R(t, i) && (i.x = t.x);\n          }\n          if (-1 !== t) {\n            const e = this.m_multiPath.getXY(t);\n            e.scale(this.m_bufferer.m_rpu), q(r, e) && (r.x = e.x);\n          }\n        }\n        this.m_densifiedPoints.length = 0, z(this.m_bufferer.m_a, this.m_bufferer.m_eSquared, this.m_bufferer.m_curveType, r, i, this.m_bufferer.m_segmentStep, Number.NaN, this.m_bufferer.m_radTolerance, this.m_startAzimuth, this.m_endAzimuth, this.m_densifiedPoints, this.m_currentDensifiedDelta), this.addJoinAndBufferLeftSide(t), n--;\n      }\n      return i.setCoordsPoint2D(this.m_multiPath.getXY(this.m_segIter.getStartPointIndex())), i.scale(this.m_bufferer.m_rpu), this.m_currentBufferedDelta = ue(this.m_bufferer.m_a, this.m_bufferer.m_eSquared, this.m_bufferer.m_rpu, this.m_bufferer.m_absDistance, i, this.m_lastAzimuth + .5 * Math.PI, this.m_lastAzimuth + 1.5 * Math.PI, this.m_bufferer.m_cornerStep, this.m_bRunningInGnomonic, this.m_currentBufferedDelta, t), this.m_segIter.resetToVertex(e, s), this.m_segIter.nextSegment(), t;\n    }\n    return this.m_bNextSegmentCannotJoin = !1, this.m_segIter.nextSegment(), e = this.m_bufferHelper.clone(), e;\n  }\n  isSegmentBufferInCurrentGnomonic(e) {\n    return null !== this.m_gnomonic && de(this.m_bufferer.m_a, this.m_bufferer.m_eSquared, e, this.m_bufferer.m_absDistance * this.m_bufferer.m_ellipticToGeodesicMaxRatio, this.m_gnomonicCenterRad, this.m_minGnomonicRadius);\n  }\n  tryUpdateGnomonic(e) {\n    const t = new ee(),\n      s = new ee(),\n      n = [0];\n    return ge(this.m_bufferer.m_a, this.m_bufferer.m_eSquared, this.m_bufferer.m_rpu, e, this.m_bufferer.m_absDistance * this.m_bufferer.m_ellipticToGeodesicMaxRatio, t, s, n) ? (this.m_gnomonicCenterRad.setCoordsPoint2D(s), this.m_minGnomonicRadius = n[0], this.m_gnomonic = xe(this.m_bufferer.m_gcs, t), !0) : (this.m_gnomonic = null, !1);\n  }\n  checkAndPrepSegmentForCrossingAzimuthsOrPoleWrap(e, t) {\n    return this.m_bufferer.checkAndPrepSegmentForCrossingAzimuthsOrPoleWrap(this.m_densifiedPoints, e, this.m_startAzimuth[0], this.m_endAzimuth[0], this.m_bRunningInGnomonic, t);\n  }\n  addJoinAndBufferLeftSide(e) {\n    const t = this.m_densifiedPoints[0];\n    let s = Number.NaN,\n      n = this.m_startAzimuth[0] - ne;\n    const i = this.m_endAzimuth[0] + ne;\n    let r = !1;\n    if (!Number.isNaN(this.m_lastAzimuth)) {\n      this.m_lastAzimuth >= this.m_startAzimuth[0] ? (s = this.m_lastAzimuth + ne, n = s + Math.PI - (this.m_lastAzimuth - this.m_startAzimuth[0])) : (s = this.m_lastAzimuth + ne, n = s + Math.PI - (se - (this.m_startAzimuth[0] - this.m_lastAzimuth))), r = !(this.m_lastAzimuth >= this.m_startAzimuth[0] && this.m_lastAzimuth - this.m_startAzimuth[0] <= Math.PI) && !(this.m_lastAzimuth < this.m_startAzimuth[0] && this.m_startAzimuth[0] - this.m_lastAzimuth >= Math.PI);\n      let i = !1;\n      if (Math.abs(n - s) <= .5 * this.m_bufferer.m_cornerStep && (r || (i = !0)), i) {\n        if (e.removePointFromPath(0, e.getPointCount() - 1), !this.m_bRunningInGnomonic) {\n          const t = new ee();\n          t.setCoordsPoint2D(e.getXY(e.getPointCount() - 1)), t.scale(this.m_bufferer.m_rpu), t.x - this.m_currentBufferedDelta < -Math.PI ? this.m_currentBufferedDelta -= se : t.x - this.m_currentBufferedDelta > Math.PI && (this.m_currentBufferedDelta += se);\n        }\n        n = .5 * (n + s);\n      } else if (r) {\n        const s = new ee();\n        s.setCoordsPoint2D(t), s.scale(1 / this.m_bufferer.m_rpu), e.insertPoint2D(0, -1, s);\n      } else ue(this.m_bufferer.m_a, this.m_bufferer.m_eSquared, this.m_bufferer.m_rpu, this.m_bufferer.m_absDistance, this.m_densifiedPoints[0], s, n, this.m_bufferer.m_cornerStep, this.m_bRunningInGnomonic, this.m_currentBufferedDelta, e);\n    }\n    this.m_startAzimuth[0] !== this.m_lastAzimuth && this.m_numWinds++, ce(this.m_bufferer.m_a, this.m_bufferer.m_eSquared, this.m_bufferer.m_rpu, this.m_bufferer.m_absDistance, this.m_bufferer.m_curveType, this.m_densifiedPoints, n, i, this.m_bRunningInGnomonic, this.m_currentBufferedDelta, e), this.m_lastAzimuth = this.m_endAzimuth[0];\n  }\n}\nclass Ce extends ye {\n  constructor(e, t) {\n    super(e.m_progressTracker), this.m_pointIndex = -1, this.m_bufferer = e, this.m_multiPoint = t, this.m_bNeedsSimplify = !1;\n    const s = new _();\n    this.m_multiPoint.queryEnvelope(s);\n    const n = s.getCenter(),\n      i = n.clone();\n    i.scale(this.m_bufferer.m_rpu), this.m_gnomonic = xe(this.m_bufferer.m_gcs, n), this.m_gnomonicCenterRad = i.clone(), this.m_minGnomonicRadius = E(this.m_bufferer.m_a, this.m_bufferer.m_eSquared, i, 75 / 180 * Math.PI);\n  }\n  next() {\n    if (this.m_bNeedsSimplify = !1, ++this.m_pointIndex === this.m_multiPoint.getPointCount()) return null;\n    const e = this.m_multiPoint.getXY(this.m_pointIndex);\n    e.scale(this.m_bufferer.m_rpu), this.m_bRunningInGnomonic = this.isPointBufferInCurrentGnomonic(e), this.m_bRunningInGnomonic || (this.m_bRunningInGnomonic = this.tryUpdateGnomonic(e));\n    const t = new j(),\n      s = this.m_bufferer.bufferPoint2D(e, this.m_bRunningInGnomonic, t);\n    return this.m_bNeedsSimplify = s, t;\n  }\n  isPointBufferInCurrentGnomonic(e) {\n    return null !== this.m_gnomonic && pe(this.m_bufferer.m_a, this.m_bufferer.m_eSquared, e, this.m_bufferer.m_absDistance * this.m_bufferer.m_ellipticToGeodesicMaxRatio, this.m_gnomonicCenterRad, this.m_minGnomonicRadius);\n  }\n  tryUpdateGnomonic(e) {\n    const t = new ee(),\n      s = new ee(),\n      n = [0];\n    return Pe(this.m_bufferer.m_a, this.m_bufferer.m_eSquared, this.m_bufferer.m_rpu, e, this.m_bufferer.m_absDistance * this.m_bufferer.m_ellipticToGeodesicMaxRatio, t, s, n) ? (this.m_gnomonicCenterRad.setCoordsPoint2D(s), this.m_minGnomonicRadius = n[0], this.m_gnomonic = xe(this.m_bufferer.m_gcs, t), !0) : (this.m_gnomonic = null, !1);\n  }\n}\nclass ve {\n  getOperatorType() {\n    return 10110;\n  }\n  supportsCurves() {\n    return !0;\n  }\n  accelerateGeometry(e, t, s) {\n    return !1;\n  }\n  canAccelerateGeometry(e) {\n    return !1;\n  }\n  executeMany(e, t, s, n, i, r, o, m) {\n    if (o) {\n      const o = new Se(e, t, s, n, i, !1, r, m);\n      return new f().executeMany(o, t, m);\n    }\n    return new Se(e, t, s, n, i, !1, r, m);\n  }\n  execute(t, n, i, r, o, m, a) {\n    const h = new e([t]),\n      c = [r],\n      u = this.executeMany(h, n, i, c, o, !1, m, a).next();\n    return u || s(\"geodesic buffer null output\"), u;\n  }\n}\nclass Se extends t {\n  constructor(e, t, s, r, o, m, a, h) {\n    super(), this.m_currentUnionEnvelope2D = new _(), this.m_index = -1, this.m_dindex = -1, this.m_progressTracker = h, m && n(\"\"), t || i(\"\");\n    0 === t.getCoordinateSystemType() && i(\"\"), this.m_inputGeoms = e, this.m_spatialReference = t, this.m_curveType = s, this.m_distances = r, this.m_convergenceOffset = o, this.m_bOutlineOnly = m, this.m_bUnion = a;\n  }\n  next() {\n    let e;\n    for (; e = this.m_inputGeoms.next();) return r(e), this.m_index = this.m_inputGeoms.getGeometryID(), this.m_dindex + 1 < this.m_distances.length && this.m_dindex++, this.geodesicBuffer(e, this.m_distances[this.m_dindex]);\n    return null;\n  }\n  getGeometryID() {\n    return this.m_index;\n  }\n  tock() {\n    return !0;\n  }\n  getRank() {\n    return 1;\n  }\n  geodesicBuffer(e, t) {\n    return me(e, this.m_spatialReference, this.m_curveType, t, this.m_convergenceOffset, this.m_progressTracker);\n  }\n}\nexport { ve as OperatorGeodesicBuffer };","map":{"version":3,"names":["S","e","G","t","c","s","b","n","i","d","r","o","m","j","a","f","h","u","k","l","Envelope2D","_","p","g","v","P","w","x","y","z","A","C","L","D","B","I","M","E","T","F","N","H","J","q","K","R","X","Y","O","W","U","V","Q","Z","$","ee","te","se","ne","ie","re","oe","me","Number","MAX_VALUE","getGeometryType","getPointCount","Math","abs","enumMultiPoint","he","ae","constructor","m_sr","m_gcs","m_transform","m_a","m_eSquared","m_rpu","m_radTolerance","m_q90","m_gcs90","m_gcs180","m_gcs360","m_gcs60","m_ellipticToGeodesicMaxRatio","m_curveType","m_bShapePreserving","m_distance","m_absDistance","m_convergenceOffset","m_cornerStep","m_segmentStep","m_progressTracker","bufferPolygon","we","processGnomonicBufferPiecesCursor","bufferPolyline","bufferMultiPoint","Ce","bufferPoint","getXY","scale","bufferPoint2D","foldInto360RangeGeodetic","getGnomonic","executeMany","initializeGrid","next","unproject","putInGridCursors","isRunningInGnomonic","project","needsSimplify","tick","be","tock","m_densified","applyTransformation","processInGrid","execute","insertGeodeticPointsAlongGrid","clone","inflateCoords","total","NaN","isEmpty","setCoords","setAdd","getCenter","xe","construct","xmin","ymin","xmax","ymax","addGeometry","getGeometry","checkAndPrepSegmentForCrossingAzimuthsOrPoleWrap","at","PI","le","length","push","setEmpty","addPathPoint2D","ce","ue","checkAndPrepForPole","checkAndPrepForPoleTouch","checkAndPrepForPoleWrap","queryEnvelope","prepPoleTouch","prepSinglePoleWrap","checkAndPrepForDoublePoleWrap","calculateArea2D","prepDoublePoleWrap","insertPath2D","getPathStart","getPathEnd","insertPoint2D","setXY","add","ceil","width","setShiftCoords","addPath","getPointByVal","lineToPoint","addSegmentsFromPath","getSegmentCount","lineTo","setCoordsPoint2D","getCenterX","queryPathEnvelope","getImpl","applyTransformationToPath","containsExclusiveEnvelope","env2D","createInstance","setMinCornerStep","stack","error","hasError","min","geodesicCoordinate","val","geodeticDistance","geodeticCoordinate","setMinSegmentStep","setConvergenceOffset","vd","getDescription","getTolerance","getGCS","querySpheroidData","majorSemiAxis","e2","getUnit","getUnitToBaseFactor","q90","isNaN","max","addSegment","enumPolyline","enumEnvelope","minDimension","maxDimension","enumPoint","addEnvelope","enumPolygon","fe","getInverse","mergeVertexDescription","setNAN","_e","getPathCount","assign","toGeohash","sort","addPoints","de","greatEllipticDistance","ge","lerp","pe","Pe","ye","m_bRunningInGnomonic","m_bNeedsSimplify","m_gnomonic","m_gnomonicCenterRad","m_minGnomonicRadius","m_segIter","m_bNextSegmentCannotJoin","m_currentDensifiedDelta","m_currentBufferedDelta","m_lastAzimuth","m_startAzimuth","m_endAzimuth","m_numWinds","m_debugCounter","m_bufferHelper","m_densifiedPoints","m_bufferer","m_multiPath","nextSegment","querySegmentIterator","nextPath","hasNextSegment","getStartXY","getEndXY","getPathIndex","getStartPointIndex","getEndPointIndex","isClosedPath","isSegmentBufferInCurrentGnomonic","tryUpdateGnomonic","previousSegment","hasPreviousSegment","resetToFirstSegment","insertPointsFromPoints","addJoinAndBufferLeftSide","resetToVertex","removePointFromPath","m_pointIndex","m_multiPoint","isPointBufferInCurrentGnomonic","ve","getOperatorType","supportsCurves","accelerateGeometry","canAccelerateGeometry","Se","m_currentUnionEnvelope2D","m_index","m_dindex","getCoordinateSystemType","m_inputGeoms","m_spatialReference","m_distances","m_bOutlineOnly","m_bUnion","getGeometryID","geodesicBuffer","getRank","OperatorGeodesicBuffer"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/chunks/OperatorGeodesicBuffer.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{S as e,G as t}from\"./SimpleGeometryCursor.js\";import{c as s,b as n,t as i,d as r,i as o,G as m,j as a,f as h,e as c,h as u,k as l}from\"./Geometry.js\";import{Envelope2D as _}from\"./Envelope2D.js\";import{j as f,p as d,t as g,u as p,v as P,w as x,x as b,y,z as w,A as C,L as v,e as S,h as D,B as I,D as G,P as M,E as T,F as N,G as k,H as A,I as E,J as q,K as R,M as z,N as B}from\"./ProjectionTransformation.js\";import{b as X,c as Y}from\"./tslib.es6.js\";import{a as j,P as O,E as F}from\"./QuadraticBezier.js\";import{d as W,c as J,P as U,b as H,e as L,f as V,s as K}from\"./Envelope.js\";import{T as Q}from\"./Transformation2D.js\";import{d as Z,m as $,P as ee,S as te,k as se,l as ne}from\"./Point2D.js\";import{c as ie}from\"./OperatorClip.js\";import{c as re}from\"./GeometryCleaner-BEJM7I4l.js\";import{O as oe}from\"./OperatorDensify.js\";function me(e,t,s,n,a,h){n<Number.MAX_VALUE&&n>-Number.MAX_VALUE||i(\"Geodesic_bufferer.buffer - bad distance\"),r(e);const c=re(e),u=c.getGeometryType();if(o(u)){const e=c.getPointCount(),i=8e6;if(Math.abs(n)>i&&(e>50||u!==m.enumMultiPoint&&4===s&&e>2)){let e=c;const r=n>0?1:-1,o=7e6;let m=n,u=1;do{u++,m=(Math.abs(m)-o)*r}while(Math.abs(m)>i);m=n;for(let n=0;n<u-1;n++)e=he(e,t,s,o*r,a,u,h),m=(Math.abs(m)-o)*r;return e=he(e,t,s,m,a,u,h),e}}return he(c,t,s,n,a,1,h)}class ae{constructor(e){this.m_sr=null,this.m_gcs=null,this.m_transform=null,this.m_a=0,this.m_eSquared=0,this.m_rpu=0,this.m_radTolerance=0,this.m_q90=0,this.m_gcs90=0,this.m_gcs180=0,this.m_gcs360=0,this.m_gcs60=0,this.m_ellipticToGeodesicMaxRatio=0,this.m_curveType=0,this.m_bShapePreserving=!1,this.m_distance=0,this.m_absDistance=0,this.m_convergenceOffset=0,this.m_cornerStep=0,this.m_segmentStep=0,this.m_progressTracker=e}bufferPolygon(e){const t=new j,s=new we(this,e,t);return this.processGnomonicBufferPiecesCursor(!0,s)}bufferPolyline(e){const t=new we(this,e,null);return this.processGnomonicBufferPiecesCursor(!0,t)}bufferMultiPoint(e){const t=new Ce(this,e);return this.processGnomonicBufferPiecesCursor(!1,t)}bufferPoint(e){const t=e.getXY();t.scale(this.m_rpu);let s=new j;if(this.bufferPoint2D(t,!1,s)){const e=H(null,s,!0);s=y(s,e,!0,!0,-1,this.m_progressTracker,0,!1)}return s=(new P).foldInto360RangeGeodetic(s,this.m_gcs,2),s}processGnomonicBufferPiecesCursor(e,t){const s=t;let n=s.getGnomonic();const i=w(C());let r=new v,o=(new f).executeMany(r,i,this.m_progressTracker,2);const m=Z(6,!1),a=$(_,6);this.initializeGrid(m,a);const h=[null,null,null,null,null,null],c=[null,null,null,null,null,null],u=[null,null,null,null,null,null];let l,d,g;for(;null!==(l=s.next());){if(d=s.getGnomonic(),d!==n){if(null!==n){let t=o.next();if(r=null,o=null,null!=t){const s=H(i,t,!0),r=W(s);t=n.unproject(t,r,this.m_progressTracker),this.putInGridCursors(e,t,i,!0,m,a,h,c,u)}}null!==d&&(r=new v,o=(new f).executeMany(r,i,this.m_progressTracker,2)),n=d}if(s.isRunningInGnomonic()){if(d.project(l),s.needsSimplify()){const e=H(null,l,!0);l=y(l,e,!0,!0,-1,this.m_progressTracker,0,!1)}r.tick(be(l)),o.tock()}else this.putInGridCursors(e,l,i,!0,m,a,h,c,u)}let p=!1;for(let _=0;_<6;_++)if(null!=u[_]){p=!0;break}if(p){let t=!1;const l=[null,null,null,null,null,null];if(e){const n=s.m_densified;if(s.m_densified=null,null!==n){const s=new Q;s.scale(1/this.m_rpu,1/this.m_rpu),n.applyTransformation(s),this.m_distance>0?this.putInGridCursors(e,n,i,!1,m,a,h,c,u):(this.processInGrid(e,n,!1,m,a,h,l),t=!0)}}const _=new v,d=(new f).executeMany(_,this.m_gcs,this.m_progressTracker,2);if(null!==o){let t=o.next();r=null,o=null;const s=H(i,t,!0),l=W(s);t=n.unproject(t,l,this.m_progressTracker),this.putInGridCursors(e,t,i,!0,m,a,h,c,u)}for(let e=0;e<6;e++)if(null!=u[e]){let s=u[e].next();u[e]=null,c[e]=null,t&&null!==l[e]&&(s=(new S).execute(l[e],s,i,this.m_progressTracker));const n=H(i,s,!0),r=W(n);s=h[e].unproject(s,r,this.m_progressTracker),s=(new D).execute(s,this.m_gcs,!0,this.m_progressTracker),_.tick(be(s)),d.tock()}g=d.next()}else{let t,m=!1;if(e){let e=s.m_densified;if(s.m_densified=null,null!==e){const s=new Q;s.scale(1/this.m_rpu,1/this.m_rpu),e.applyTransformation(s),d.project(e);const n=H(null,e,!0);e=y(e,n,!1,!0,-1,this.m_progressTracker,0,!1),this.m_distance>0?(r.tick(be(e)),o.tock()):(t=e,m=!0)}}let a=o.next();r=null,o=null,m&&(a=(new S).execute(t,a,i,this.m_progressTracker));const h=H(i,a,!0),c=W(h);g=n.unproject(a,c,this.m_progressTracker),g=(new D).execute(g,this.m_gcs,!0,this.m_progressTracker)}return g=(new P).foldInto360RangeGeodetic(g,this.m_gcs,2),g}putInGridCursors(e,t,s,n,i,r,o,m,a){const h=[null,null,null,null,null,null];this.processInGrid(e,t,n,i,r,o,h);for(let c=0;c<6;c++)null!==h[c]&&(null===m[c]&&(m[c]=new v,a[c]=(new f).executeMany(m[c],s,this.m_progressTracker,2)),m[c].tick(be(h[c])),a[c].tock())}processInGrid(e,t,s,n,i,r,o){const m=.01,a=this.insertGeodeticPointsAlongGrid(t,i,m);for(let h=0;h<6;h++){if(n[h])continue;const e=i[h].clone();e.inflateCoords(m,m);const c=L(t,e),u=J(null,c,!1).total();let l=ie(a,e,u,Number.NaN,this.m_progressTracker);if(null!==l&&!l.isEmpty()){if(l===a&&(l=l.clone()),null===r[h]){const e=new ee;h<3?e.setCoords(0,1):e.setCoords(0,-1);const t=new ee;t.setAdd(i[h].getCenter(),e),r[h]=xe(this.m_gcs,t)}r[h].project(l);const e=H(null,l,!0);l=y(l,e,s,!0,-1,this.m_progressTracker,0,!1),o[h]=l}}}insertGeodeticPointsAlongGrid(e,t,s){const n=_.construct(t[3].xmin,t[3].ymin,t[2].xmax,t[2].ymax),i=I(this.m_gcs,n,e,!0,this.m_progressTracker),r=new F,o=r.addGeometry(i);return G(r,o,this.m_gcs,0,2,!0,t[0].xmax+s),G(r,o,this.m_gcs,0,2,!0,t[1].xmax+s),G(r,o,this.m_gcs,0,2,!1,t[1].ymin+s),0!==s&&(G(r,o,this.m_gcs,0,2,!0,t[0].xmax-s),G(r,o,this.m_gcs,0,2,!0,t[1].xmax-s),G(r,o,this.m_gcs,0,2,!1,t[1].ymin-s)),r.getGeometry(o)}initializeGrid(e,t){for(let s=0;s<6;s++)e[s]=!1;t[0].setCoords({xmin:-this.m_gcs180,ymin:0,xmax:-this.m_gcs60,ymax:this.m_gcs90}),t[1].setCoords({xmin:-this.m_gcs60,ymin:0,xmax:this.m_gcs60,ymax:this.m_gcs90}),t[2].setCoords({xmin:this.m_gcs60,ymin:0,xmax:this.m_gcs180,ymax:this.m_gcs90}),t[3].setCoords({xmin:-this.m_gcs180,ymin:-this.m_gcs90,xmax:-this.m_gcs60,ymax:0}),t[4].setCoords({xmin:-this.m_gcs60,ymin:-this.m_gcs90,xmax:this.m_gcs60,ymax:0}),t[5].setCoords({xmin:this.m_gcs60,ymin:-this.m_gcs90,xmax:this.m_gcs180,ymax:0})}checkAndPrepSegmentForCrossingAzimuthsOrPoleWrap(e,t,s,n,i,r){const o=e[0],m=e.at(-1),a=o.y<m.y?o.y:m.y,h=o.y>m.y?o.y:m.y,c=g.q(this.m_a,this.m_eSquared,a),u=g.q(this.m_a,this.m_eSquared,h);if(this.m_q90-(c+t+this.m_absDistance)>.001&&this.m_q90+(u-t-this.m_absDistance)>.001)return!1;const l=s-ne,_=n+ne,f=l-Math.PI,d=l+Math.PI,p=_+Math.PI,P=[Number.NaN],x=[Number.NaN],b=[Number.NaN],y=[Number.NaN];let w=!1;if(le(this.m_a,this.m_eSquared,this.m_rpu,this.m_absDistance,o,l,f,m,_,P,x),le(this.m_a,this.m_eSquared,this.m_rpu,this.m_absDistance,m,p,_,o,f,b,y),(_<P[0]&&P[0]<p||_<x[0]&&x[0]<p)&&(w=!0),w||(f<b[0]&&b[0]<l||f<y[0]&&y[0]<l)&&(w=!0),!w&&i)return!1;const C=[];for(let g=e.length-1;g>=0;g--)C.push(e[g]);r.setEmpty(),r.addPathPoint2D(null,0,!0);let v=0;v=ce(this.m_a,this.m_eSquared,this.m_rpu,this.m_absDistance,this.m_curveType,e,l,_,i,v,r),v=ue(this.m_a,this.m_eSquared,this.m_rpu,this.m_absDistance,m,_,p,this.m_cornerStep,i,v,r,P[0],x[0]),v=ce(this.m_a,this.m_eSquared,this.m_rpu,this.m_absDistance,this.m_curveType,C,p,d,i,v,r),v=ue(this.m_a,this.m_eSquared,this.m_rpu,this.m_absDistance,o,f,l,this.m_cornerStep,i,v,r,b[0],y[0]);let S=!1;return i||(S=this.checkAndPrepForPole(r)),w||S}bufferPoint2D(e,t,s){s.setEmpty(),s.addPathPoint2D(null,0,!0);const n=0;ue(this.m_a,this.m_eSquared,this.m_rpu,this.m_absDistance,e,-this.m_cornerStep,2*Math.PI,this.m_cornerStep,t,n,s);let i=!1;return t||(i=this.checkAndPrepForPole(s)),i}checkAndPrepForPole(e){const t=this.checkAndPrepForPoleTouch(e),s=this.checkAndPrepForPoleWrap(e);return t||s}checkAndPrepForPoleTouch(e){const t=new _;return e.queryEnvelope(t),!(!M(t.ymax,this.m_gcs90)&&!M(t.ymin,-this.m_gcs90))&&(this.prepPoleTouch(e),!0)}checkAndPrepForPoleWrap(e){const t=e.getXY(0),s=e.getXY(e.getPointCount()-1);return Math.abs(t.x-s.x)>this.m_gcs180?(this.prepSinglePoleWrap(e),!0):this.checkAndPrepForDoublePoleWrap(e)}checkAndPrepForDoublePoleWrap(e){return e.calculateArea2D()<0&&(this.prepDoublePoleWrap(e),!0)}prepPoleTouch(e){const t=new j;t.insertPath2D(-1,null,0,0,!0);const s=e.getPathStart(0),n=e.getPathEnd(0),i=n-s;let r=-1;for(r=s;r<n;r++){const t=e.getXY(r),s=M(t.y,this.m_gcs90),n=M(t.y,-this.m_gcs90);if(!s&&!n)break}let o=r,m=!1,a=Number.NaN;do{const n=e.getXY(o),r=M(n.y,this.m_gcs90),h=M(n.y,-this.m_gcs90),c=s+(o+1-s)%i;if(r||h){let s=ee.construct(a,n.y);t.insertPoint2D(0,-1,s);const i=e.getXY(c),r=M(i.y,this.m_gcs90),o=M(i.y,-this.m_gcs90);r||o||(s=ee.construct(i.x,n.y),m?t.setXY(t.getPointCount()-1,s):t.insertPoint2D(0,-1,s)),m=!0}else t.insertPoint2D(0,-1,n),a=n.x,m=!1;o=c}while(o!==r);e.setEmpty(),e.add(t,!1)}prepSinglePoleWrap(e){const t=new j,s=new j,n=new Q,i=e.getXY(e.getPathStart(0)),r=e.getXY(e.getPathEnd(0)-1),o=this.m_gcs360,m=this.m_gcs180,a=new _;a.setCoords({xmin:-this.m_gcs180,ymin:-this.m_gcs90,xmax:this.m_gcs180,ymax:this.m_gcs90});const h=new _;e.queryEnvelope(h);const c=Math.ceil(h.width()/o);let u,l;i.x>r.x?(u=-o,l=this.m_gcs90):(u=o,l=-this.m_gcs90),n.setShiftCoords(u,0),t.addPath(e,0,!0),s.add(t,!1);const f=new U;for(let _=0;_<c;_++)s.applyTransformation(n),s.getPointByVal(0,f),t.lineToPoint(f),t.addSegmentsFromPath(s,0,0,s.getSegmentCount()-1,!1);const d=t.getXY(0),g=t.getXY(t.getPointCount()-1);d.y=l,g.y=l,t.lineTo(g);const p=new ee;for(p.setCoordsPoint2D(g),p.x-=.5*u;Math.abs(p.x-d.x)>m;)t.lineTo(p),p.x-=.5*u;t.lineTo(d);const P=a.getCenterX(),x=new _;t.queryEnvelope(x);let b=0;const y=x.getCenter().x;y-P>m?b=-Math.ceil((y-P-m)/o):P-y>m&&(b=Math.ceil((P-y-m)/o)),0!==b&&(n.setShiftCoords(b*o,0),t.applyTransformation(n));const w=new F,C=w.addGeometry(t);G(w,C,this.m_gcs,0,2,!0,a.xmin),G(w,C,this.m_gcs,0,2,!0,a.xmax);const v=w.getGeometry(C),S=L(v,a);S.inflateCoords(0,1);const D=J(null,S,!0).total(),I=ie(v,a,D,Number.NaN,this.m_progressTracker);e.setEmpty(),e.add(I,!1)}prepDoublePoleWrap(e){const t=this.m_gcs360,s=this.m_gcs180,n=new _;n.setCoords({xmin:-this.m_gcs180,ymin:-this.m_gcs90,xmax:this.m_gcs180,ymax:this.m_gcs90});const i=n.getCenter().x,r=new _;e.queryPathEnvelope(0,r);let o,m=0,a=r.getCenter().x;if(a-i>s?m=-Math.ceil((a-i-s)/t):i-a>s&&(m=Math.ceil((i-a-s)/t)),0!==m){const s=new Q;s.setShiftCoords(m*t,0),e.getImpl().applyTransformationToPath(s,0),e.queryPathEnvelope(0,r),a=r.getCenter().x}const h=new _;n.containsExclusiveEnvelope(r)?(o=!1,h.setCoords({env2D:n})):(o=!0,h.setCoords({env2D:n}),h.xmin-=t,h.xmax+=t);let c=e.createInstance();c.addPathPoint2D(null,0,!0);const u=new ee;if(u.setCoords(h.xmin,h.ymin),c.insertPoint2D(0,-1,u),u.setCoords(h.xmin,h.ymax),c.insertPoint2D(0,-1,u),u.setCoords(.5*(h.xmin+h.xmax),h.ymax),c.insertPoint2D(0,-1,u),u.setCoords(h.xmax,h.ymax),c.insertPoint2D(0,-1,u),u.setCoords(h.xmax,h.ymin),c.insertPoint2D(0,-1,u),u.setCoords(.5*(h.xmin+h.xmax),h.ymin),c.insertPoint2D(0,-1,u),o){c.addPath(e,0,!0);const s=new Q;a<i?s.setShiftCoords(t,0):s.setShiftCoords(-t,0),e.getImpl().applyTransformationToPath(s,0),c.addPath(e,0,!0);const r=new F,o=r.addGeometry(c);G(r,o,this.m_gcs,0,2,!0,n.xmin),G(r,o,this.m_gcs,0,2,!0,n.xmax),c=r.getGeometry(o);const m=L(c,n);m.inflateCoords(0,1);const h=J(null,m,!0).total();c=ie(c,n,h,Number.NaN,this.m_progressTracker)}else c.addPath(e,0,!0);e.setEmpty(),e.add(c,!1)}setMinCornerStep(){const e={stack:[],error:void 0,hasError:!1};try{let s=Math.min(Math.PI*this.m_a-this.m_absDistance,this.m_absDistance);s=Math.min(s,.125*this.m_a*Math.PI);const n=new ee;n.setCoords(0,10*this.m_rpu);const i=0;let r=45*this.m_rpu;const o=X(e,new te(new T,new T),!1),m=X(e,new te(new T,new T),!1),a=X(e,new te(new T,new T),!1),h=X(e,new te(new T,new T),!1),c=new ee,u=new ee,l=new ee,_=new ee;for(N.geodesicCoordinate(this.m_a,this.m_eSquared,n.x,n.y,s,i,o.at(0),o.at(1)),c.setCoords(o.at(0).val,o.at(1).val),N.geodesicCoordinate(this.m_a,this.m_eSquared,n.x,n.y,s,r,m.at(0),m.at(1)),u.setCoords(m.at(0).val,m.at(1).val);;){const e={stack:[],error:void 0,hasError:!1};try{const t=.5*(i+r);N.geodesicCoordinate(this.m_a,this.m_eSquared,n.x,n.y,s,t,a.at(0),a.at(1)),l.setCoords(a.at(0).val,a.at(1).val);const o=X(e,new T,!1),f=X(e,new T,!1);N.geodeticDistance(this.m_a,this.m_eSquared,c.x,c.y,u.x,u.y,o,f,null,2),N.geodeticCoordinate(this.m_a,this.m_eSquared,c.x,c.y,.5*o.val,f.val,h.at(0),h.at(1),2),_.setCoords(h.at(0).val,h.at(1).val);const d=X(e,new T,!1);N.geodeticDistance(this.m_a,this.m_eSquared,l.x,l.y,_.x,_.y,d,null,null,2);if(d.val<=this.m_convergenceOffset)break;r*=.9,N.geodesicCoordinate(this.m_a,this.m_eSquared,n.x,n.y,s,r,m.at(0),m.at(1)),u.setCoords(m.at(0).val,m.at(1).val)}catch(t){e.error=t,e.hasError=!0}finally{Y(e)}}const f=r-i,d=2*Math.PI/Math.ceil(2*Math.PI/f);this.m_cornerStep=d}catch(s){e.error=s,e.hasError=!0}finally{Y(e)}}setMinSegmentStep(){const e={stack:[],error:void 0,hasError:!1};try{let n=Math.min(Math.PI*this.m_a-this.m_absDistance,this.m_absDistance);n=Math.min(n,.125*this.m_a*Math.PI);const i=new ee,r=new ee;i.setCoords(0,10*this.m_rpu),r.setCoords(10*this.m_rpu,10*this.m_rpu);const o=X(e,new T,!1),m=X(e,new T,!1),a=X(e,new T,!1);N.geodeticDistance(this.m_a,this.m_eSquared,i.x,i.y,r.x,r.y,a,o,m,this.m_curveType);const h=X(e,new te(new T,new T),!1),c=X(e,new te(new T,new T),!1),u=new ee,l=X(e,new T,!1),_=X(e,new te(new T,new T),!1),f=X(e,new te(new T,new T),!1),d=X(e,new te(new T,new T),!1),g=X(e,new te(new T,new T),!1),p=new ee,P=new ee,x=new ee,b=new ee,y=0;let w=1;const C=o.val,v=m.val,S=C-.5*Math.PI,D=v+.5*Math.PI,I=a.val;for(N.geodesicCoordinate(this.m_a,this.m_eSquared,i.x,i.y,n,S,_.at(0),_.at(1)),p.setCoords(_.at(0).val,_.at(1).val),N.geodesicCoordinate(this.m_a,this.m_eSquared,r.x,r.y,n,D,f.at(0),f.at(1)),P.setCoords(f.at(0).val,f.at(1).val);;){const e={stack:[],error:void 0,hasError:!1};try{const s=.5*(y+w);N.geodeticCoordinate(this.m_a,this.m_eSquared,i.x,i.y,s*I,C,h.at(0),h.at(1),this.m_curveType),u.setCoords(h.at(0).val,h.at(1).val),N.geodeticDistance(this.m_a,this.m_eSquared,i.x,i.y,u.x,u.y,null,null,l,this.m_curveType);const o=l.val+.5*Math.PI;N.geodesicCoordinate(this.m_a,this.m_eSquared,u.x,u.y,n,o,d.at(0),d.at(1)),x.setCoords(d.at(0).val,d.at(1).val);const m=X(e,new T,!1),a=X(e,new T,!1);N.geodeticDistance(this.m_a,this.m_eSquared,p.x,p.y,P.x,P.y,m,a,null,2),N.geodeticCoordinate(this.m_a,this.m_eSquared,p.x,p.y,.5*m.val,a.val,g.at(0),g.at(1),2),b.setCoords(g.at(0).val,g.at(1).val);const _=X(e,new T,!1);N.geodeticDistance(this.m_a,this.m_eSquared,x.x,x.y,b.x,b.y,_,null,null,2);if(_.val<=this.m_convergenceOffset)break;{const e={stack:[],error:void 0,hasError:!1};try{w*=.9,N.geodeticCoordinate(this.m_a,this.m_eSquared,i.x,i.y,w*I,C,c.at(0),c.at(1),this.m_curveType),r.setCoords(c.at(0).val,c.at(1).val);const t=X(e,new T,!1);N.geodeticDistance(this.m_a,this.m_eSquared,i.x,i.y,r.x,r.y,null,null,t,this.m_curveType);const s=t.val+.5*Math.PI;N.geodesicCoordinate(this.m_a,this.m_eSquared,r.x,r.y,n,s,f.at(0),f.at(1)),P.setCoords(f.at(0).val,f.at(1).val)}catch(t){e.error=t,e.hasError=!0}finally{Y(e)}}}catch(s){e.error=s,e.hasError=!0}finally{Y(e)}}let G=w*I;G>1e5&&(G=1e5),this.m_segmentStep=G}catch(n){e.error=n,e.hasError=!0}finally{Y(e)}}setConvergenceOffset(){let e;e=this.m_absDistance>5e4?100:this.m_absDistance>1e4?10:1,this.m_absDistance/e<500&&(e=this.m_absDistance/500),e<.01&&(e=.01),this.m_convergenceOffset=e}}function he(e,t,s,n,i,r,o){if(e.isEmpty())return new j({vd:e.getDescription()});let f=e;if(a(f)){const e=10*t.getTolerance(0);f=(new oe).execute(f,0,e,0,o,12e3)}const y=new ae(o);y.m_sr=t,y.m_gcs=t.getGCS(),y.m_transform=d(t,y.m_gcs,null);const w=k();y.m_gcs.querySpheroidData(w);const C=new _;f.queryEnvelope(C),y.m_a=w.majorSemiAxis,y.m_eSquared=w.e2,y.m_rpu=y.m_gcs.getUnit().getUnitToBaseFactor(),y.m_gcs90=.5*Math.PI/y.m_rpu,y.m_gcs180=Math.PI/y.m_rpu,y.m_gcs360=2*Math.PI/y.m_rpu,y.m_gcs60=y.m_gcs360/6,y.m_q90=g.q90(y.m_a,y.m_eSquared),y.m_ellipticToGeodesicMaxRatio=.5*y.m_a*Math.PI/y.m_q90;const v=y.m_gcs.getTolerance(0);y.m_radTolerance=v*y.m_rpu,4===s?(y.m_curveType=2,y.m_bShapePreserving=!0):(y.m_curveType=s,y.m_bShapePreserving=!1),y.m_distance=n,y.m_absDistance=Math.abs(n),Number.isNaN(i)||i<=0?y.setConvergenceOffset():y.m_convergenceOffset=Math.max(i,.001),y.m_convergenceOffset/=r;let S,D=f.getGeometryType();if(h(D)){const e=new O({vd:f.getDescription()});e.addSegment(f,!0),S=e,D=m.enumPolyline}else if(D===m.enumEnvelope){const e=f,t=new _;e.queryEnvelope(t);const s=W(J(y.m_sr,C,!0));if(t.minDimension()<=s)if(0===t.maxDimension()){const t=new U({vd:f.getDescription()});e.getCenter(t),S=t,D=m.enumPoint}else{const t=new O({vd:f.getDescription()});t.addEnvelope(e,!1),S=t,D=m.enumPolyline}else{const t=new j({vd:f.getDescription()});t.addEnvelope(e,!1),S=t,D=m.enumPolygon}}else S=f;if(y.setMinCornerStep(),c(D)||y.setMinSegmentStep(),y.m_absDistance<=.5*y.m_convergenceOffset)return D!==m.enumPolygon?new j({vd:S.getDescription()}):y.m_bShapePreserving?S:p(S,y.m_sr,y.m_curveType,y.m_segmentStep,-1,o);if(y.m_distance<0&&D!==m.enumPolygon)return new j({vd:S.getDescription()});if(y.m_bShapePreserving&&u(D)){const e=p(S,t,4,Number.NaN,y.m_convergenceOffset,o);S=(new P).execute(e,y.m_transform,o)}else S=(new P).execute(S,y.m_transform,o);if(S=x(S,y.m_gcs),S.isEmpty())return new j({vd:S.getDescription()});!y.m_bShapePreserving&&u(D)&&(S=b(y.m_rpu,S)),S=fe(S,y.m_gcs);let I=new j;switch(D){case m.enumPolygon:I=y.bufferPolygon(S);break;case m.enumPolyline:I=y.bufferPolyline(S);break;case m.enumMultiPoint:I=y.bufferMultiPoint(S);break;case m.enumPoint:I=y.bufferPoint(S);break;default:l(\"\")}const G=(new P).execute(I,y.m_transform.getInverse(),o);return G.mergeVertexDescription(S.getDescription()),G}function ce(e,t,s,n,i,r,o,m,a,h,c){const u={stack:[],error:void 0,hasError:!1};try{const l=new ee;l.setNAN(),a||c.getPointCount()>0&&(l.setCoordsPoint2D(c.getXY(c.getPointCount()-1)),l.scale(s));const _=X(u,new T,!1),f=X(u,new te(new T,new T),!1),d=new ee,g=new ee,p=r.at(-1),P=1/s;for(let s=0;s<r.length;s++){const u=r[s];let x;0===s?x=o:s===r.length-1?x=m:(N.geodeticDistance(e,t,p.x,p.y,u.x,u.y,null,null,_,i),x=_.val-.5*Math.PI),N.geodesicCoordinate(e,t,u.x,u.y,n,x,f.at(0),f.at(1)),a?g.setCoords(f.at(0).val,f.at(1).val):(d.setCoords(f.at(0).val,f.at(1).val),h=_e(u.x,d.x,l.x,h),g.setCoords(h+d.x,d.y),l.setCoordsPoint2D(g)),g.scale(P),c.insertPoint2D(0,-1,g)}return h}catch(l){u.error=l,u.hasError=!0}finally{Y(u)}}function ue(e,t,s,n,i,r,o,m,a,h,c,u=Number.NaN,l=Number.NaN){const _={stack:[],error:void 0,hasError:!1};try{if(o-r<m)return h;const f=X(_,new te(new T,new T),!1),d=new ee,g=new ee,p=new ee;g.setNAN(),a||c.getPointCount()>0&&(g.setCoordsPoint2D(c.getXY(c.getPointCount()-1)),g.scale(s));let P=Math.ceil(r/m),x=P++*m;x===r&&(x=P++*m);let b=r;const y=1/s;for(;x<o+m&&(b<u&&u<x?(x=u,P--):b<l&&l<x&&(x=l,P--),!(x>=o));)N.geodesicCoordinate(e,t,i.x,i.y,n,x,f.at(0),f.at(1)),a?p.setCoords(f.at(0).val,f.at(1).val):(d.setCoords(f.at(0).val,f.at(1).val),h=_e(i.x,d.x,g.x,h),p.setCoords(h+d.x,d.y),g.setCoordsPoint2D(p)),p.scale(y),c.insertPoint2D(0,-1,p),b=x,x=P++*m;return h}catch(f){_.error=f,_.hasError=!0}finally{Y(_)}}function le(e,t,s,n,i,r,o,m,a,h,c){const u={stack:[],error:void 0,hasError:!1};try{const s=new ee,l=new ee,_=X(u,new te(new T,new T),!1);N.geodesicCoordinate(e,t,i.x,i.y,n,r,_.at(0),_.at(1)),s.setCoords(_.at(0).val,_.at(1).val),N.geodesicCoordinate(e,t,i.x,i.y,n,o,_.at(0),_.at(1)),l.setCoords(_.at(0).val,_.at(1).val);const f=X(u,new T,!1);for(N.geodeticDistance(e,t,m.x,m.y,s.x,s.y,null,f,null,0),h[0]=f.val,N.geodeticDistance(e,t,m.x,m.y,l.x,l.y,null,f,null,0),c[0]=f.val;h[0]<=c[0];)h[0]+=se;for(;h[0]>c[0];)h[0]-=se;for(;h[0]>=a;)h[0]-=se,c[0]-=se;for(;h[0]<a;)h[0]+=se,c[0]+=se}catch(l){u.error=l,u.hasError=!0}finally{Y(u)}}function _e(e,t,s,n){if(Number.isNaN(s)){for(;n+t-e>Math.PI;)n-=se;for(;e-(n+t)>Math.PI;)n+=se;return n}return n+t-s>Math.PI?n-=se:s-(n+t)>Math.PI&&(n+=se),n}function fe(e,t){const s=e.getGeometryType();let n;if(n=u(s)?e.getPathCount():s===m.enumMultiPoint?e.getPointCount():1,1===n)return e;const i=[],r=[];for(let m=0;m<n;m++){i.push(m);const n=new ee;if(u(s)){const t=new _;e.queryPathEnvelope(m,t),n.assign(t.getCenter())}else n.assign(e.getXY(m));const o=t.toGeohash(n);r.push(o)}i.sort(((e,t)=>r[e]<r[t]?-1:r[e]>r[t]?1:0));const o=e.createInstance();for(let m=0;m<n;m++){const t=i[m];u(s)?o.addPath(e,t,!0):o.addPoints(e,t,t+1)}return o}function de(e,t,s,n,i,r){const o={stack:[],error:void 0,hasError:!1};try{if(n>=r)return!1;const m=s[0],a=s.at(-1),h=X(o,new T,!1),c=X(o,new T,!1),u=X(o,new T,!1);N.greatEllipticDistance(e,t,i.x,i.y,m.x,m.y,h,null,null),N.greatEllipticDistance(e,t,i.x,i.y,a.x,a.y,c,null,null),N.greatEllipticDistance(e,t,m.x,m.y,a.x,a.y,u,null,null);let l=Math.min(h.val,c.val)+u.val,_=l+n;if(_<r)return!0;const f=X(o,new T,!1);l=Math.max(h.val,c.val);for(let n=1;n<s.length-1;n++){const r=s[n];N.greatEllipticDistance(e,t,i.x,i.y,r.x,r.y,f,null,null),f.val>l&&(l=f.val)}return _=l+n,_<r}catch(m){o.error=m,o.hasError=!0}finally{Y(o)}}function ge(e,t,s,n,i,r,o,m){let a;if(n.length%2==0){const e=n.length>>1,t=n[e],s=n[e-1];a=ee.lerp(t,s,.5)}else{a=n[n.length-1>>1].clone()}const h=a.clone(),c=E(e,t,h,75/180*Math.PI);return!!de(e,t,n,i,h,c)&&(null!==r&&(r.setCoordsPoint2D(a),r.scale(1/s)),null!==o&&o.setCoordsPoint2D(h),null!==m&&(m[0]=c),!0)}function pe(e,t,s,n,i,r){const o={stack:[],error:void 0,hasError:!1};try{if(n>=r)return!1;const m=X(o,new T,!1);N.greatEllipticDistance(e,t,i.x,i.y,s.x,s.y,m,null,null);return m.val+n<r}catch(m){o.error=m,o.hasError=!0}finally{Y(o)}}function Pe(e,t,s,n,i,r,o,m){const a=E(e,t,n,75/180*Math.PI);return!!pe(e,t,n,i,n,a)&&(null!==r&&(r.setCoordsPoint2D(n),r.scale(1/s)),null!==o&&o.setCoordsPoint2D(n),null!==m&&(m[0]=a),!0)}function xe(e,t){return new A(e,t)}function be(e){return V(e,0)||K(e,0),e}class ye{constructor(e){this.m_bRunningInGnomonic=!1,this.m_bNeedsSimplify=!1,this.m_gnomonic=null,this.m_gnomonicCenterRad=new ee,this.m_minGnomonicRadius=Number.NaN,this.m_progressTracker=e}isRunningInGnomonic(){return this.m_bRunningInGnomonic}needsSimplify(){return this.m_bNeedsSimplify}getGnomonic(){return this.m_gnomonic}}class we extends ye{constructor(e,t,s){super(e.m_progressTracker),this.m_segIter=null,this.m_bNextSegmentCannotJoin=!1,this.m_currentDensifiedDelta=[0],this.m_currentBufferedDelta=0,this.m_lastAzimuth=0,this.m_startAzimuth=[0],this.m_endAzimuth=[0],this.m_numWinds=0,this.m_debugCounter=0,this.m_bufferHelper=new j,this.m_densifiedPoints=[],this.m_bufferer=e,this.m_multiPath=t,this.m_densified=s,this.m_bNeedsSimplify=!0;const n=new _;this.m_multiPath.queryEnvelope(n);const i=n.getCenter(),r=i.clone();r.scale(this.m_bufferer.m_rpu),this.m_gnomonic=xe(this.m_bufferer.m_gcs,i),this.m_gnomonicCenterRad=r.clone(),this.m_minGnomonicRadius=E(this.m_bufferer.m_a,this.m_bufferer.m_eSquared,r,75/180*Math.PI)}next(){let e;if(this.m_bNextSegmentCannotJoin)return this.m_bNextSegmentCannotJoin=!1,this.m_segIter.nextSegment(),e=this.m_bufferHelper.clone(),e;if(null===this.m_segIter){if(this.m_segIter=this.m_multiPath.getImpl().querySegmentIterator(),!this.m_segIter.nextPath())return null;null!==this.m_densified&&this.m_densified.addPathPoint2D(null,0,!0)}if(!this.m_segIter.hasNextSegment()){if(!this.m_segIter.nextPath())return null;null!=this.m_densified&&this.m_densified.addPathPoint2D(null,0,!0)}let t=null;this.m_currentBufferedDelta=0,this.m_currentDensifiedDelta=[0],this.m_numWinds=0,this.m_lastAzimuth=Number.NaN,this.m_bNextSegmentCannotJoin=!1,this.m_densifiedPoints.length=0;const s=16;let n=0;const i=new ee,r=new ee;for(;this.m_segIter.hasNextSegment()&&this.m_numWinds<s;){const e=this.m_segIter.nextSegment();if(i.setCoordsPoint2D(e.getStartXY()),r.setCoordsPoint2D(e.getEndXY()),i.scale(this.m_bufferer.m_rpu),r.scale(this.m_bufferer.m_rpu),q(i,r))i.x=r.x;else if(R(i,r))r.x=i.x;else{let e=-1,t=-1;const s=this.m_segIter.getPathIndex(),n=this.m_multiPath.getPathStart(s),o=this.m_multiPath.getPathEnd(s);if(e=this.m_segIter.getStartPointIndex()-1,t=this.m_segIter.getEndPointIndex()+1,e<n&&(e=this.m_multiPath.isClosedPath(s)?o-1:-1),t>o-1&&(t=this.m_multiPath.isClosedPath(s)?n:-1),-1!==e){const t=this.m_multiPath.getXY(e);t.scale(this.m_bufferer.m_rpu),R(t,i)&&(i.x=t.x)}if(-1!==t){const e=this.m_multiPath.getXY(t);e.scale(this.m_bufferer.m_rpu),q(r,e)&&(r.x=e.x)}}this.m_densifiedPoints.length=0;const s=z(this.m_bufferer.m_a,this.m_bufferer.m_eSquared,this.m_bufferer.m_curveType,i,r,this.m_bufferer.m_segmentStep,Number.NaN,this.m_bufferer.m_radTolerance,this.m_startAzimuth,this.m_endAzimuth,this.m_densifiedPoints,this.m_currentDensifiedDelta);if(0===n)this.m_bRunningInGnomonic=this.isSegmentBufferInCurrentGnomonic(this.m_densifiedPoints),this.m_bRunningInGnomonic||(this.m_bRunningInGnomonic=this.tryUpdateGnomonic(this.m_densifiedPoints));else if(this.m_bRunningInGnomonic){if(!this.isSegmentBufferInCurrentGnomonic(this.m_densifiedPoints)){this.m_segIter.previousSegment(),this.m_segIter.previousSegment(),this.m_segIter.nextSegment();break}}else{if(ge(this.m_bufferer.m_a,this.m_bufferer.m_eSquared,this.m_bufferer.m_rpu,this.m_densifiedPoints,this.m_bufferer.m_absDistance*this.m_bufferer.m_ellipticToGeodesicMaxRatio,null,null,null)){this.m_segIter.previousSegment(),this.m_segIter.previousSegment(),this.m_segIter.nextSegment();break}}if(0===s||B(i,r)?(this.m_bufferHelper.setEmpty(),this.m_bufferer.bufferPoint2D(i,this.m_bRunningInGnomonic,this.m_bufferHelper),this.m_bNextSegmentCannotJoin=!0):(this.m_bufferHelper.setEmpty(),this.m_bNextSegmentCannotJoin=this.checkAndPrepSegmentForCrossingAzimuthsOrPoleWrap(s,this.m_bufferHelper)),this.m_bNextSegmentCannotJoin){this.m_segIter.previousSegment(),this.m_segIter.hasPreviousSegment()?(this.m_segIter.previousSegment(),this.m_segIter.nextSegment()):this.m_segIter.resetToFirstSegment(),null!=this.m_densified&&this.m_densified.insertPointsFromPoints(this.m_densified.getPathCount()-1,-1,this.m_densifiedPoints,0,this.m_densifiedPoints.length-1,!0);break}null!=this.m_densified&&this.m_densified.insertPointsFromPoints(this.m_densified.getPathCount()-1,-1,this.m_densifiedPoints,0,this.m_densifiedPoints.length-1,!0),null===t&&(t=new j,t.addPathPoint2D(null,0,!0)),this.addJoinAndBufferLeftSide(t),n++}if(this.m_currentDensifiedDelta=[0],n>0){const e=this.m_segIter.getStartPointIndex(),s=this.m_segIter.getPathIndex();for(;n>0;){if(this.m_segIter.previousSegment(),i.setCoordsPoint2D(this.m_multiPath.getXY(this.m_segIter.getStartPointIndex())),r.setCoordsPoint2D(this.m_multiPath.getXY(this.m_segIter.getEndPointIndex())),i.scale(this.m_bufferer.m_rpu),r.scale(this.m_bufferer.m_rpu),this.m_bRunningInGnomonic)if(q(i,r))i.x=r.x;else if(R(i,r))r.x=i.x;else{let e=-1,t=-1;const s=this.m_segIter.getPathIndex(),n=this.m_multiPath.getPathStart(s),o=this.m_multiPath.getPathEnd(s);if(e=this.m_segIter.getStartPointIndex()-1,t=this.m_segIter.getEndPointIndex()+1,e<n&&(e=this.m_multiPath.isClosedPath(s)?o-1:-1),t>o-1&&(t=this.m_multiPath.isClosedPath(s)?n:-1),-1!==e){const t=this.m_multiPath.getXY(e);t.scale(this.m_bufferer.m_rpu),R(t,i)&&(i.x=t.x)}if(-1!==t){const e=this.m_multiPath.getXY(t);e.scale(this.m_bufferer.m_rpu),q(r,e)&&(r.x=e.x)}}this.m_densifiedPoints.length=0,z(this.m_bufferer.m_a,this.m_bufferer.m_eSquared,this.m_bufferer.m_curveType,r,i,this.m_bufferer.m_segmentStep,Number.NaN,this.m_bufferer.m_radTolerance,this.m_startAzimuth,this.m_endAzimuth,this.m_densifiedPoints,this.m_currentDensifiedDelta),this.addJoinAndBufferLeftSide(t),n--}return i.setCoordsPoint2D(this.m_multiPath.getXY(this.m_segIter.getStartPointIndex())),i.scale(this.m_bufferer.m_rpu),this.m_currentBufferedDelta=ue(this.m_bufferer.m_a,this.m_bufferer.m_eSquared,this.m_bufferer.m_rpu,this.m_bufferer.m_absDistance,i,this.m_lastAzimuth+.5*Math.PI,this.m_lastAzimuth+1.5*Math.PI,this.m_bufferer.m_cornerStep,this.m_bRunningInGnomonic,this.m_currentBufferedDelta,t),this.m_segIter.resetToVertex(e,s),this.m_segIter.nextSegment(),t}return this.m_bNextSegmentCannotJoin=!1,this.m_segIter.nextSegment(),e=this.m_bufferHelper.clone(),e}isSegmentBufferInCurrentGnomonic(e){return null!==this.m_gnomonic&&de(this.m_bufferer.m_a,this.m_bufferer.m_eSquared,e,this.m_bufferer.m_absDistance*this.m_bufferer.m_ellipticToGeodesicMaxRatio,this.m_gnomonicCenterRad,this.m_minGnomonicRadius)}tryUpdateGnomonic(e){const t=new ee,s=new ee,n=[0];return ge(this.m_bufferer.m_a,this.m_bufferer.m_eSquared,this.m_bufferer.m_rpu,e,this.m_bufferer.m_absDistance*this.m_bufferer.m_ellipticToGeodesicMaxRatio,t,s,n)?(this.m_gnomonicCenterRad.setCoordsPoint2D(s),this.m_minGnomonicRadius=n[0],this.m_gnomonic=xe(this.m_bufferer.m_gcs,t),!0):(this.m_gnomonic=null,!1)}checkAndPrepSegmentForCrossingAzimuthsOrPoleWrap(e,t){return this.m_bufferer.checkAndPrepSegmentForCrossingAzimuthsOrPoleWrap(this.m_densifiedPoints,e,this.m_startAzimuth[0],this.m_endAzimuth[0],this.m_bRunningInGnomonic,t)}addJoinAndBufferLeftSide(e){const t=this.m_densifiedPoints[0];let s=Number.NaN,n=this.m_startAzimuth[0]-ne;const i=this.m_endAzimuth[0]+ne;let r=!1;if(!Number.isNaN(this.m_lastAzimuth)){this.m_lastAzimuth>=this.m_startAzimuth[0]?(s=this.m_lastAzimuth+ne,n=s+Math.PI-(this.m_lastAzimuth-this.m_startAzimuth[0])):(s=this.m_lastAzimuth+ne,n=s+Math.PI-(se-(this.m_startAzimuth[0]-this.m_lastAzimuth))),r=!(this.m_lastAzimuth>=this.m_startAzimuth[0]&&this.m_lastAzimuth-this.m_startAzimuth[0]<=Math.PI)&&!(this.m_lastAzimuth<this.m_startAzimuth[0]&&this.m_startAzimuth[0]-this.m_lastAzimuth>=Math.PI);let i=!1;if(Math.abs(n-s)<=.5*this.m_bufferer.m_cornerStep&&(r||(i=!0)),i){if(e.removePointFromPath(0,e.getPointCount()-1),!this.m_bRunningInGnomonic){const t=new ee;t.setCoordsPoint2D(e.getXY(e.getPointCount()-1)),t.scale(this.m_bufferer.m_rpu),t.x-this.m_currentBufferedDelta<-Math.PI?this.m_currentBufferedDelta-=se:t.x-this.m_currentBufferedDelta>Math.PI&&(this.m_currentBufferedDelta+=se)}n=.5*(n+s)}else if(r){const s=new ee;s.setCoordsPoint2D(t),s.scale(1/this.m_bufferer.m_rpu),e.insertPoint2D(0,-1,s)}else ue(this.m_bufferer.m_a,this.m_bufferer.m_eSquared,this.m_bufferer.m_rpu,this.m_bufferer.m_absDistance,this.m_densifiedPoints[0],s,n,this.m_bufferer.m_cornerStep,this.m_bRunningInGnomonic,this.m_currentBufferedDelta,e)}this.m_startAzimuth[0]!==this.m_lastAzimuth&&this.m_numWinds++,ce(this.m_bufferer.m_a,this.m_bufferer.m_eSquared,this.m_bufferer.m_rpu,this.m_bufferer.m_absDistance,this.m_bufferer.m_curveType,this.m_densifiedPoints,n,i,this.m_bRunningInGnomonic,this.m_currentBufferedDelta,e),this.m_lastAzimuth=this.m_endAzimuth[0]}}class Ce extends ye{constructor(e,t){super(e.m_progressTracker),this.m_pointIndex=-1,this.m_bufferer=e,this.m_multiPoint=t,this.m_bNeedsSimplify=!1;const s=new _;this.m_multiPoint.queryEnvelope(s);const n=s.getCenter(),i=n.clone();i.scale(this.m_bufferer.m_rpu),this.m_gnomonic=xe(this.m_bufferer.m_gcs,n),this.m_gnomonicCenterRad=i.clone(),this.m_minGnomonicRadius=E(this.m_bufferer.m_a,this.m_bufferer.m_eSquared,i,75/180*Math.PI)}next(){if(this.m_bNeedsSimplify=!1,++this.m_pointIndex===this.m_multiPoint.getPointCount())return null;const e=this.m_multiPoint.getXY(this.m_pointIndex);e.scale(this.m_bufferer.m_rpu),this.m_bRunningInGnomonic=this.isPointBufferInCurrentGnomonic(e),this.m_bRunningInGnomonic||(this.m_bRunningInGnomonic=this.tryUpdateGnomonic(e));const t=new j,s=this.m_bufferer.bufferPoint2D(e,this.m_bRunningInGnomonic,t);return this.m_bNeedsSimplify=s,t}isPointBufferInCurrentGnomonic(e){return null!==this.m_gnomonic&&pe(this.m_bufferer.m_a,this.m_bufferer.m_eSquared,e,this.m_bufferer.m_absDistance*this.m_bufferer.m_ellipticToGeodesicMaxRatio,this.m_gnomonicCenterRad,this.m_minGnomonicRadius)}tryUpdateGnomonic(e){const t=new ee,s=new ee,n=[0];return Pe(this.m_bufferer.m_a,this.m_bufferer.m_eSquared,this.m_bufferer.m_rpu,e,this.m_bufferer.m_absDistance*this.m_bufferer.m_ellipticToGeodesicMaxRatio,t,s,n)?(this.m_gnomonicCenterRad.setCoordsPoint2D(s),this.m_minGnomonicRadius=n[0],this.m_gnomonic=xe(this.m_bufferer.m_gcs,t),!0):(this.m_gnomonic=null,!1)}}class ve{getOperatorType(){return 10110}supportsCurves(){return!0}accelerateGeometry(e,t,s){return!1}canAccelerateGeometry(e){return!1}executeMany(e,t,s,n,i,r,o,m){if(o){const o=new Se(e,t,s,n,i,!1,r,m);return(new f).executeMany(o,t,m)}return new Se(e,t,s,n,i,!1,r,m)}execute(t,n,i,r,o,m,a){const h=new e([t]),c=[r],u=this.executeMany(h,n,i,c,o,!1,m,a).next();return u||s(\"geodesic buffer null output\"),u}}class Se extends t{constructor(e,t,s,r,o,m,a,h){super(),this.m_currentUnionEnvelope2D=new _,this.m_index=-1,this.m_dindex=-1,this.m_progressTracker=h,m&&n(\"\"),t||i(\"\");0===t.getCoordinateSystemType()&&i(\"\"),this.m_inputGeoms=e,this.m_spatialReference=t,this.m_curveType=s,this.m_distances=r,this.m_convergenceOffset=o,this.m_bOutlineOnly=m,this.m_bUnion=a}next(){let e;for(;e=this.m_inputGeoms.next();)return r(e),this.m_index=this.m_inputGeoms.getGeometryID(),this.m_dindex+1<this.m_distances.length&&this.m_dindex++,this.geodesicBuffer(e,this.m_distances[this.m_dindex]);return null}getGeometryID(){return this.m_index}tock(){return!0}getRank(){return 1}geodesicBuffer(e,t){return me(e,this.m_spatialReference,this.m_curveType,t,this.m_convergenceOffset,this.m_progressTracker)}}export{ve as OperatorGeodesicBuffer};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}