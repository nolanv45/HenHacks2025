{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { _ as t, a as e } from \"../../../../../../../chunks/tslib.es6.js\";\nimport { tileSize as o } from \"../../../definitions.js\";\nimport { uniform as s, location as i, UniformGroup as r, define as l, FragmentOutput as d, input as n } from \"../../GraphShaderModule.js\";\nimport { FixedArray as a, Vec4 as p, Mat3 as h, Vec3 as c, texture2D as u, Mat4 as m, step as y, Float as v, dot as w, max as x, Sampler2D as f } from \"../../graph/glsl.js\";\nimport { FeatureVertexInput as g, FeatureFragmentInput as A, AFeatureShader as D } from \"../shaders/AFeatureShader.js\";\nimport { failHittest as T } from \"../shaders/hittestUtils.js\";\nimport { max4 as b } from \"../shaders/utils.js\";\nclass j extends g {}\nt([i(3, v)], j.prototype, \"inverseArea\", void 0);\nclass C extends A {}\nclass V extends r {}\nt([s(a.ofType(p, 2))], V.prototype, \"isActive\", void 0), t([s(a.ofType(p, 8))], V.prototype, \"colors\", void 0), t([s(v)], V.prototype, \"dotValue\", void 0);\nclass _ extends r {}\nt([s(f)], _.prototype, \"dotTexture0\", void 0), t([s(f)], _.prototype, \"dotTexture1\", void 0), t([s(v)], _.prototype, \"tileZoomFactor\", void 0), t([s(v)], _.prototype, \"pixelRatio\", void 0), t([s(v)], _.prototype, \"tileDotsOverArea\", void 0);\nclass F extends D {\n  constructor() {\n    super(...arguments), this.type = \"DotDensityPolygonShader\";\n  }\n  _dotThreshold(t, e, o) {\n    return t.divide(e).divide(o);\n  }\n  vertex(t) {\n    const e = new h(2 / o, 0, 0, 0, -2 / o, 0, -1, 1, 1).multiply(new c(t.pos, 1)),\n      s = this.clip(t.id),\n      i = new p(e.xy, s, 1),\n      r = this.storage.getVVData(t.id).multiply(this.instance.isActive.get(0)).multiply(t.inverseArea),\n      l = this.storage.getDataDrivenData0(t.id).multiply(this.instance.isActive.get(1)).multiply(t.inverseArea),\n      d = this.draw.tileZoomFactor.multiply(o).divide(this.draw.pixelRatio),\n      n = this._dotThreshold(r, this.instance.dotValue, this.draw.tileDotsOverArea),\n      a = this._dotThreshold(l, this.instance.dotValue, this.draw.tileDotsOverArea),\n      u = t.pos.add(.5).divide(d);\n    return {\n      glPosition: i,\n      color: new p(0, 0, 0, 0),\n      textureCoords: u,\n      thresholds0: n,\n      thresholds1: a\n    };\n  }\n  fragment(t) {\n    const e = new d(),\n      o = u(this.draw.dotTexture0, t.textureCoords),\n      s = u(this.draw.dotTexture1, t.textureCoords),\n      i = t.thresholds0.subtract(o),\n      r = t.thresholds1.subtract(s);\n    let l;\n    const n = m.fromColumns(this.instance.colors[0], this.instance.colors[1], this.instance.colors[2], this.instance.colors[3]),\n      a = m.fromColumns(this.instance.colors[4], this.instance.colors[5], this.instance.colors[6], this.instance.colors[7]);\n    if (this.blending) {\n      const t = y(new v(0), i),\n        e = y(new v(0), r),\n        o = w(t, i).add(w(e, r)),\n        s = y(o, new v(0)),\n        d = new v(1).subtract(s),\n        p = o.add(s),\n        h = i.multiply(t).divide(p),\n        c = r.multiply(e).divide(p),\n        u = n.multiply(h).add(a.multiply(c));\n      l = d.multiply(u);\n    } else {\n      const t = x(b(i), b(r)),\n        e = y(t, new v(0)),\n        o = new v(1).subtract(e),\n        s = y(t, i),\n        d = y(t, r),\n        p = n.multiply(s).add(a.multiply(d));\n      l = o.multiply(p);\n    }\n    return e.fragColor = l, e;\n  }\n  hittest(t) {\n    return T(this.hittestRequest);\n  }\n}\nt([l], F.prototype, \"blending\", void 0), t([s(V)], F.prototype, \"instance\", void 0), t([s(_)], F.prototype, \"draw\", void 0), t([e(0, n(j))], F.prototype, \"vertex\", null), t([e(0, n(A))], F.prototype, \"fragment\", null);\nexport { _ as DotDensityPolygonDrawUniforms, C as DotDensityPolygonFragmentInput, V as DotDensityPolygonInstanceUniforms, F as DotDensityPolygonShader, j as DotDensityPolygonVertexInput };","map":{"version":3,"names":["_","t","a","e","tileSize","o","uniform","s","location","i","UniformGroup","r","define","l","FragmentOutput","d","input","n","FixedArray","Vec4","p","Mat3","h","Vec3","c","texture2D","u","Mat4","m","step","y","Float","v","dot","w","max","x","Sampler2D","f","FeatureVertexInput","g","FeatureFragmentInput","A","AFeatureShader","D","failHittest","T","max4","b","j","prototype","C","V","ofType","F","constructor","arguments","type","_dotThreshold","divide","vertex","multiply","pos","clip","id","xy","storage","getVVData","instance","isActive","get","inverseArea","getDataDrivenData0","draw","tileZoomFactor","pixelRatio","dotValue","tileDotsOverArea","add","glPosition","color","textureCoords","thresholds0","thresholds1","fragment","dotTexture0","dotTexture1","subtract","fromColumns","colors","blending","fragColor","hittest","hittestRequest","DotDensityPolygonDrawUniforms","DotDensityPolygonFragmentInput","DotDensityPolygonInstanceUniforms","DotDensityPolygonShader","DotDensityPolygonVertexInput"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/2d/engine/webgl/shaderGraph/techniques/dotDensity/DotDensityPolygonShader.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{_ as t,a as e}from\"../../../../../../../chunks/tslib.es6.js\";import{tileSize as o}from\"../../../definitions.js\";import{uniform as s,location as i,UniformGroup as r,define as l,FragmentOutput as d,input as n}from\"../../GraphShaderModule.js\";import{FixedArray as a,Vec4 as p,Mat3 as h,Vec3 as c,texture2D as u,Mat4 as m,step as y,Float as v,dot as w,max as x,Sampler2D as f}from\"../../graph/glsl.js\";import{FeatureVertexInput as g,FeatureFragmentInput as A,AFeatureShader as D}from\"../shaders/AFeatureShader.js\";import{failHittest as T}from\"../shaders/hittestUtils.js\";import{max4 as b}from\"../shaders/utils.js\";class j extends g{}t([i(3,v)],j.prototype,\"inverseArea\",void 0);class C extends A{}class V extends r{}t([s(a.ofType(p,2))],V.prototype,\"isActive\",void 0),t([s(a.ofType(p,8))],V.prototype,\"colors\",void 0),t([s(v)],V.prototype,\"dotValue\",void 0);class _ extends r{}t([s(f)],_.prototype,\"dotTexture0\",void 0),t([s(f)],_.prototype,\"dotTexture1\",void 0),t([s(v)],_.prototype,\"tileZoomFactor\",void 0),t([s(v)],_.prototype,\"pixelRatio\",void 0),t([s(v)],_.prototype,\"tileDotsOverArea\",void 0);class F extends D{constructor(){super(...arguments),this.type=\"DotDensityPolygonShader\"}_dotThreshold(t,e,o){return t.divide(e).divide(o)}vertex(t){const e=new h(2/o,0,0,0,-2/o,0,-1,1,1).multiply(new c(t.pos,1)),s=this.clip(t.id),i=new p(e.xy,s,1),r=this.storage.getVVData(t.id).multiply(this.instance.isActive.get(0)).multiply(t.inverseArea),l=this.storage.getDataDrivenData0(t.id).multiply(this.instance.isActive.get(1)).multiply(t.inverseArea),d=this.draw.tileZoomFactor.multiply(o).divide(this.draw.pixelRatio),n=this._dotThreshold(r,this.instance.dotValue,this.draw.tileDotsOverArea),a=this._dotThreshold(l,this.instance.dotValue,this.draw.tileDotsOverArea),u=t.pos.add(.5).divide(d);return{glPosition:i,color:new p(0,0,0,0),textureCoords:u,thresholds0:n,thresholds1:a}}fragment(t){const e=new d,o=u(this.draw.dotTexture0,t.textureCoords),s=u(this.draw.dotTexture1,t.textureCoords),i=t.thresholds0.subtract(o),r=t.thresholds1.subtract(s);let l;const n=m.fromColumns(this.instance.colors[0],this.instance.colors[1],this.instance.colors[2],this.instance.colors[3]),a=m.fromColumns(this.instance.colors[4],this.instance.colors[5],this.instance.colors[6],this.instance.colors[7]);if(this.blending){const t=y(new v(0),i),e=y(new v(0),r),o=w(t,i).add(w(e,r)),s=y(o,new v(0)),d=new v(1).subtract(s),p=o.add(s),h=i.multiply(t).divide(p),c=r.multiply(e).divide(p),u=n.multiply(h).add(a.multiply(c));l=d.multiply(u)}else{const t=x(b(i),b(r)),e=y(t,new v(0)),o=new v(1).subtract(e),s=y(t,i),d=y(t,r),p=n.multiply(s).add(a.multiply(d));l=o.multiply(p)}return e.fragColor=l,e}hittest(t){return T(this.hittestRequest)}}t([l],F.prototype,\"blending\",void 0),t([s(V)],F.prototype,\"instance\",void 0),t([s(_)],F.prototype,\"draw\",void 0),t([e(0,n(j))],F.prototype,\"vertex\",null),t([e(0,n(A))],F.prototype,\"fragment\",null);export{_ as DotDensityPolygonDrawUniforms,C as DotDensityPolygonFragmentInput,V as DotDensityPolygonInstanceUniforms,F as DotDensityPolygonShader,j as DotDensityPolygonVertexInput};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}