{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport t from \"../../../../core/ObjectPool.js\";\nimport e from \"../../../../core/PooledArray.js\";\nimport { c as n, m as o, h as i, g as r, s } from \"../../../../chunks/vec32.js\";\nimport { create as h, fromValues as a } from \"../../../../core/libs/gl-matrix-2/factories/vec3f64.js\";\nimport { intersectsSphere as l } from \"../../../../geometry/support/frustum.js\";\nimport { wrap as d } from \"../../../../geometry/support/ray.js\";\nimport { e as u, g as c, i as f, a as m, c as _ } from \"../../../../chunks/sphere.js\";\nimport { rayBoxTest as p } from \"./Util.js\";\nclass b {\n  get bounds() {\n    return this._root.bounds;\n  }\n  get halfSize() {\n    return this._root.halfSize;\n  }\n  get root() {\n    return this._root.node;\n  }\n  get maximumObjectsPerNode() {\n    return this._maximumObjectsPerNode;\n  }\n  get maximumDepth() {\n    return this._maximumDepth;\n  }\n  get objectCount() {\n    return this._objectCount;\n  }\n  constructor(t, e) {\n    this.objectToBoundingSphere = t, this._maximumObjectsPerNode = 10, this._maximumDepth = 20, this._degenerateObjects = new Set(), this._root = new g(), this._objectCount = 0, e && (void 0 !== e.maximumObjectsPerNode && (this._maximumObjectsPerNode = e.maximumObjectsPerNode), void 0 !== e.maximumDepth && (this._maximumDepth = e.maximumDepth));\n  }\n  destroy() {\n    this._degenerateObjects.clear(), g.clearPool(), q[0] = null, K.prune(), Q.prune();\n  }\n  add(t) {\n    let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : t.length;\n    this._objectCount += e, this._grow(t, e);\n    const n = g.acquire();\n    for (let o = 0; o < e; o++) {\n      const e = t[o];\n      this._isDegenerate(e) ? this._degenerateObjects.add(e) : (n.init(this._root), this._add(e, n));\n    }\n    g.release(n);\n  }\n  remove(t) {\n    let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    this._objectCount -= t.length;\n    const n = g.acquire();\n    for (const o of t) {\n      const t = e ?? u(this.objectToBoundingSphere(o), J);\n      C(t[3]) ? (n.init(this._root), O(o, t, n)) : this._degenerateObjects.delete(o);\n    }\n    g.release(n), this._shrink();\n  }\n  update(t, e) {\n    if (!C(e[3]) && this._isDegenerate(t)) return;\n    const n = y(t);\n    this.remove(n, e), this.add(n);\n  }\n  forEachAlongRay(t, e, n) {\n    const o = d(t, e);\n    S(this._root, t => {\n      if (!T(o, t)) return !1;\n      const e = t.node;\n      return e.terminals.forAll(t => {\n        this._intersectsObject(o, t) && n(t);\n      }), null !== e.residents && e.residents.forAll(t => {\n        this._intersectsObject(o, t) && n(t);\n      }), !0;\n    });\n  }\n  forEachAlongRayWithVerticalOffset(t, e, n, o) {\n    const i = d(t, e);\n    S(this._root, t => {\n      if (!z(i, t, o)) return !1;\n      const e = t.node;\n      return e.terminals.forAll(t => {\n        this._intersectsObjectWithOffset(i, t, o) && n(t);\n      }), null !== e.residents && e.residents.forAll(t => {\n        this._intersectsObjectWithOffset(i, t, o) && n(t);\n      }), !0;\n    });\n  }\n  forEach(t) {\n    S(this._root, e => {\n      const n = e.node;\n      return n.terminals.forAll(t), null !== n.residents && n.residents.forAll(t), !0;\n    }), this._degenerateObjects.forEach(t);\n  }\n  forEachDegenerateObject(t) {\n    this._degenerateObjects.forEach(t);\n  }\n  findClosest(t, e, n) {\n    let o = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : () => !0;\n    let s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1 / 0;\n    let h = 1 / 0,\n      a = 1 / 0,\n      d = null;\n    const u = F(t, e),\n      c = i => {\n        if (--s, !o(i)) return;\n        const r = this.objectToBoundingSphere(i);\n        if (!l(n, r)) return;\n        const u = v(t, e, m(r)),\n          c = u - r[3],\n          f = u + r[3];\n        c < h && (h = c, a = f, d = i);\n      };\n    return j(this._root, o => {\n      if (s <= 0 || !l(n, o.bounds)) return !1;\n      i(I, u, o.halfSize), r(I, I, m(o.bounds));\n      if (v(t, e, I) > a) return !1;\n      const h = o.node;\n      return h.terminals.forAll(t => c(t)), null !== h.residents && h.residents.forAll(t => c(t)), !0;\n    }, t, e), d;\n  }\n  forEachInDepthRange(t, e, n, o, s, h, a) {\n    let d = -1 / 0,\n      u = 1 / 0;\n    const c = {\n      setRange: t => {\n        n === b.DepthOrder.FRONT_TO_BACK ? (d = Math.max(d, t.near), u = Math.min(u, t.far)) : (d = Math.max(d, -t.far), u = Math.min(u, -t.near));\n      }\n    };\n    c.setRange(o);\n    const f = v(e, n, t),\n      _ = F(e, n),\n      p = F(e, -n),\n      g = t => {\n        if (!a(t)) return;\n        const o = this.objectToBoundingSphere(t),\n          i = m(o),\n          r = v(e, n, i) - f,\n          _ = r - o[3],\n          p = r + o[3];\n        _ > u || p < d || !l(h, o) || s(t, c);\n      };\n    j(this._root, t => {\n      if (!l(h, t.bounds)) return !1;\n      i(I, _, t.halfSize), r(I, I, m(t.bounds));\n      if (v(e, n, I) - f > u) return !1;\n      i(I, p, t.halfSize), r(I, I, m(t.bounds));\n      if (v(e, n, I) - f < d) return !1;\n      const o = t.node;\n      return o.terminals.forAll(t => g(t)), null !== o.residents && o.residents.forAll(t => g(t)), !0;\n    }, e, n);\n  }\n  forEachNode(t) {\n    S(this._root, e => t(e.node, e.bounds, e.halfSize, e.depth));\n  }\n  forEachNeighbor(t, e) {\n    const n = c(e),\n      o = m(e),\n      i = e => {\n        const i = this.objectToBoundingSphere(e),\n          r = c(i),\n          h = n + r;\n        return !(s(m(i), o) - h * h <= 0) || t(e);\n      };\n    let r = !0;\n    const h = t => {\n      r && (r = i(t));\n    };\n    S(this._root, t => {\n      const e = c(t.bounds),\n        i = n + e;\n      if (s(m(t.bounds), o) - i * i > 0) return !1;\n      const a = t.node;\n      return a.terminals.forAll(h), r && null !== a.residents && a.residents.forAll(h), r;\n    }), r && this.forEachDegenerateObject(h);\n  }\n  _intersectsObject(t, e) {\n    const n = this.objectToBoundingSphere(e);\n    return !(n[3] > 0) || f(n, t);\n  }\n  _intersectsObjectWithOffset(t, e, n) {\n    const o = this.objectToBoundingSphere(e);\n    return !(o[3] > 0) || f(n.applyToBoundingSphere(o), t);\n  }\n  _add(t, e) {\n    e.advanceTo(this.objectToBoundingSphere(t)) ? e.node.terminals.push(t) : (e.node.residents.push(t), e.node.residents.length > this._maximumObjectsPerNode && e.depth < this._maximumDepth && this._split(e));\n  }\n  _split(t) {\n    const e = t.node.residents;\n    t.node.residents = null;\n    for (let n = 0; n < e.length; n++) {\n      const o = g.acquire().init(t);\n      this._add(e.at(n), o), g.release(o);\n    }\n  }\n  _grow(t, e) {\n    if (0 !== e && (D(t, e, t => this.objectToBoundingSphere(t), W), C(W[3]) && !this._fitsInsideTree(W))) if (N(this._root.node)) u(W, this._root.bounds), this._root.halfSize = 1.25 * this._root.bounds[3], this._root.updateBoundsRadiusFromHalfSize();else {\n      const t = this._rootBoundsForRootAsSubNode(W);\n      this._placingRootViolatesMaxDepth(t) ? this._rebuildTree(W, t) : this._growRootAsSubNode(t), g.release(t);\n    }\n  }\n  _rebuildTree(t, e) {\n    n(m(V), m(e.bounds)), V[3] = e.halfSize, D([t, V], 2, t => t, G);\n    const o = g.acquire().init(this._root);\n    this._root.initFrom(null, G, G[3]), this._root.increaseHalfSize(1.25), S(o, t => (this.add(t.node.terminals.data, t.node.terminals.length), null !== t.node.residents && this.add(t.node.residents.data, t.node.residents.length), !0)), g.release(o);\n  }\n  _placingRootViolatesMaxDepth(t) {\n    const e = Math.log(t.halfSize / this._root.halfSize) * Math.LOG2E;\n    let n = 0;\n    return S(this._root, t => (n = Math.max(n, t.depth), n + e <= this._maximumDepth)), n + e > this._maximumDepth;\n  }\n  _rootBoundsForRootAsSubNode(t) {\n    const e = t[3],\n      n = t;\n    let o = -1 / 0;\n    const i = this._root.bounds,\n      r = this._root.halfSize;\n    for (let h = 0; h < 3; h++) {\n      const t = i[h] - r - (n[h] - e),\n        s = n[h] + e - (i[h] + r),\n        a = Math.max(0, Math.ceil(t / (2 * r))),\n        l = Math.max(0, Math.ceil(s / (2 * r))) + 1,\n        d = 2 ** Math.ceil(Math.log(a + l) * Math.LOG2E);\n      o = Math.max(o, d), U[h].min = a, U[h].max = l;\n    }\n    for (let h = 0; h < 3; h++) {\n      let t = U[h].min,\n        e = U[h].max;\n      const n = (o - (t + e)) / 2;\n      t += Math.ceil(n), e += Math.floor(n);\n      const s = i[h] - r - t * r * 2;\n      k[h] = s + (e + t) * r;\n    }\n    const s = o * r;\n    return k[3] = s * w, g.acquire().initFrom(null, k, s, 0);\n  }\n  _growRootAsSubNode(t) {\n    const e = this._root.node;\n    n(m(W), m(this._root.bounds)), W[3] = this._root.halfSize, this._root.init(t), t.advanceTo(W, null, !0), t.node.children = e.children, t.node.residents = e.residents, t.node.terminals = e.terminals;\n  }\n  _shrink() {\n    for (;;) {\n      const t = this._findShrinkIndex();\n      if (-1 === t) break;\n      this._root.advance(t), this._root.depth = 0;\n    }\n  }\n  _findShrinkIndex() {\n    if (0 !== this._root.node.terminals.length || this._root.isLeaf()) return -1;\n    let t = null;\n    const e = this._root.node.children;\n    let n = 0,\n      o = 0;\n    for (; o < e.length && null == t;) n = o++, t = e[n];\n    for (; o < e.length;) if (e[o++]) return -1;\n    return n;\n  }\n  _isDegenerate(t) {\n    return !C(this.objectToBoundingSphere(t)[3]);\n  }\n  _fitsInsideTree(t) {\n    const e = this._root.bounds,\n      n = this._root.halfSize;\n    return t[3] <= n && t[0] >= e[0] - n && t[0] <= e[0] + n && t[1] >= e[1] - n && t[1] <= e[1] + n && t[2] >= e[2] - n && t[2] <= e[2] + n;\n  }\n  toJSON() {\n    const {\n        maximumDepth: t,\n        maximumObjectsPerNode: e,\n        _objectCount: n\n      } = this,\n      o = this._nodeToJSON(this._root.node);\n    return {\n      maximumDepth: t,\n      maximumObjectsPerNode: e,\n      objectCount: n,\n      root: {\n        bounds: this._root.bounds,\n        halfSize: this._root.halfSize,\n        depth: this._root.depth,\n        node: o\n      }\n    };\n  }\n  _nodeToJSON(t) {\n    const e = t.children.map(t => t ? this._nodeToJSON(t) : null),\n      n = t.residents?.map(t => this.objectToBoundingSphere(t)),\n      o = t.terminals?.map(t => this.objectToBoundingSphere(t));\n    return {\n      children: e,\n      residents: n,\n      terminals: o\n    };\n  }\n  static fromJSON(t) {\n    const e = new b(t => t, {\n      maximumDepth: t.maximumDepth,\n      maximumObjectsPerNode: t.maximumObjectsPerNode\n    });\n    return e._objectCount = t.objectCount, e._root.initFrom(t.root.node, t.root.bounds, t.root.halfSize, t.root.depth), e;\n  }\n}\nclass g {\n  constructor() {\n    this.bounds = _(), this.halfSize = 0, this.initFrom(null, null, 0, 0);\n  }\n  init(t) {\n    return this.initFrom(t.node, t.bounds, t.halfSize, t.depth);\n  }\n  initFrom(t, e, n) {\n    let o = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : this.depth;\n    return this.node = null != t ? t : g.createEmptyNode(), e && u(e, this.bounds), this.halfSize = n, this.depth = o, this;\n  }\n  increaseHalfSize(t) {\n    this.halfSize *= t, this.updateBoundsRadiusFromHalfSize();\n  }\n  updateBoundsRadiusFromHalfSize() {\n    this.bounds[3] = this.halfSize * w;\n  }\n  advance(t) {\n    let e = this.node.children[t];\n    e || (e = g.createEmptyNode(), this.node.children[t] = e), this.node = e, this.halfSize /= 2, this.depth++;\n    const n = E[t];\n    return this.bounds[0] += n[0] * this.halfSize, this.bounds[1] += n[1] * this.halfSize, this.bounds[2] += n[2] * this.halfSize, this.updateBoundsRadiusFromHalfSize(), this;\n  }\n  advanceTo(t, e) {\n    let n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;\n    for (;;) {\n      if (this.isTerminalFor(t)) return e && e(this, -1), !0;\n      if (this.isLeaf()) {\n        if (!n) return e && e(this, -1), !1;\n        this.node.residents = null;\n      }\n      const o = this._childIndex(t);\n      e && e(this, o), this.advance(o);\n    }\n  }\n  isLeaf() {\n    return null != this.node.residents;\n  }\n  isTerminalFor(t) {\n    return t[3] > this.halfSize / 2;\n  }\n  _childIndex(t) {\n    const e = this.bounds;\n    return (e[0] < t[0] ? 1 : 0) + (e[1] < t[1] ? 2 : 0) + (e[2] < t[2] ? 4 : 0);\n  }\n  static createEmptyNode() {\n    return {\n      children: [null, null, null, null, null, null, null, null],\n      terminals: new e({\n        shrink: !0\n      }),\n      residents: new e({\n        shrink: !0\n      })\n    };\n  }\n  static acquire() {\n    return g._pool.acquire();\n  }\n  static release(t) {\n    g._pool.release(t);\n  }\n  static clearPool() {\n    g._pool.prune();\n  }\n}\nfunction S(t, e) {\n  let n = g.acquire().init(t);\n  const o = [n];\n  for (; 0 !== o.length;) {\n    if (n = o.pop(), e(n) && !n.isLeaf()) for (let t = 0; t < n.node.children.length; t++) {\n      n.node.children[t] && o.push(g.acquire().init(n).advance(t));\n    }\n    g.release(n);\n  }\n}\nfunction j(t, e, n) {\n  let o = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : b.DepthOrder.FRONT_TO_BACK;\n  let i = g.acquire().init(t);\n  const r = [i];\n  for (R(n, o, X); 0 !== r.length;) {\n    if (i = r.pop(), e(i) && !i.isLeaf()) for (let t = 7; t >= 0; --t) {\n      const e = X[t];\n      i.node.children[e] && r.push(g.acquire().init(i).advance(e));\n    }\n    g.release(i);\n  }\n}\nfunction O(t, e, n) {\n  K.clear();\n  const o = n.advanceTo(e, (t, e) => {\n    K.push(t.node), K.push(e);\n  }) ? n.node.terminals : n.node.residents;\n  if (o.removeUnordered(t), 0 === o.length) for (let i = K.length - 2; i >= 0; i -= 2) {\n    if (!x(K.data[i], K.data[i + 1])) break;\n  }\n}\nfunction x(t, n) {\n  return n >= 0 && (t.children[n] = null), !!N(t) && (null === t.residents && (t.residents = new e({\n    shrink: !0\n  })), !0);\n}\nfunction T(t, e) {\n  return B(m(e.bounds), 2 * -e.halfSize, L), B(m(e.bounds), 2 * e.halfSize, H), p(t.origin, t.direction, L, H);\n}\nfunction z(t, e, n) {\n  return B(m(e.bounds), 2 * -e.halfSize, L), B(m(e.bounds), 2 * e.halfSize, H), n.applyToMinMax(L, H), p(t.origin, t.direction, L, H);\n}\nfunction N(t) {\n  if (0 !== t.terminals.length) return !1;\n  if (null !== t.residents) return 0 === t.residents.length;\n  for (let e = 0; e < t.children.length; e++) if (t.children[e]) return !1;\n  return !0;\n}\nfunction M(t, e) {\n  t[0] = Math.min(t[0], e[0] - e[3]), t[1] = Math.min(t[1], e[1] - e[3]), t[2] = Math.min(t[2], e[2] - e[3]);\n}\nfunction A(t, e) {\n  t[0] = Math.max(t[0], e[0] + e[3]), t[1] = Math.max(t[1], e[1] + e[3]), t[2] = Math.max(t[2], e[2] + e[3]);\n}\nfunction B(t, e, n) {\n  n[0] = t[0] + e, n[1] = t[1] + e, n[2] = t[2] + e;\n}\nfunction D(t, e, n, i) {\n  if (1 === e) {\n    const e = n(t[0]);\n    u(e, i);\n  } else {\n    L[0] = 1 / 0, L[1] = 1 / 0, L[2] = 1 / 0, H[0] = -1 / 0, H[1] = -1 / 0, H[2] = -1 / 0;\n    for (let o = 0; o < e; o++) {\n      const e = n(t[o]);\n      C(e[3]) && (M(L, e), A(H, e));\n    }\n    o(m(i), L, H, .5), i[3] = Math.max(H[0] - L[0], H[1] - L[1], H[2] - L[2]) / 2;\n  }\n}\nfunction R(t, e, n) {\n  if (!Q.length) for (let o = 0; o < 8; ++o) Q.push({\n    index: 0,\n    distance: 0\n  });\n  for (let o = 0; o < 8; ++o) {\n    const n = E[o];\n    Q.data[o].index = o, Q.data[o].distance = v(t, e, n);\n  }\n  Q.sort((t, e) => t.distance - e.distance);\n  for (let o = 0; o < 8; ++o) n[o] = Q.data[o].index;\n}\nfunction F(t, e) {\n  let n,\n    o = 1 / 0;\n  for (let i = 0; i < 8; ++i) {\n    const r = v(t, e, P[i]);\n    r < o && (o = r, n = P[i]);\n  }\n  return n;\n}\nfunction v(t, e, n) {\n  return e * (t[0] * n[0] + t[1] * n[1] + t[2] * n[2]);\n}\nfunction C(t) {\n  return !isNaN(t) && t !== -1 / 0 && t !== 1 / 0 && t > 0;\n}\ng._pool = new t(g), function (t) {\n  var e;\n  (e = t.DepthOrder || (t.DepthOrder = {}))[e.FRONT_TO_BACK = 1] = \"FRONT_TO_BACK\", e[e.BACK_TO_FRONT = -1] = \"BACK_TO_FRONT\";\n}(b);\nconst E = [a(-1, -1, -1), a(1, -1, -1), a(-1, 1, -1), a(1, 1, -1), a(-1, -1, 1), a(1, -1, 1), a(-1, 1, 1), a(1, 1, 1)],\n  P = [a(-1, -1, -1), a(-1, -1, 1), a(-1, 1, -1), a(-1, 1, 1), a(1, -1, -1), a(1, -1, 1), a(1, 1, -1), a(1, 1, 1)],\n  w = Math.sqrt(3),\n  q = [null];\nfunction y(t) {\n  return q[0] = t, q;\n}\nconst k = _(),\n  I = h(),\n  L = h(),\n  H = h(),\n  K = new e(),\n  J = _(),\n  W = _(),\n  V = _(),\n  G = _(),\n  U = [{\n    min: 0,\n    max: 0\n  }, {\n    min: 0,\n    max: 0\n  }, {\n    min: 0,\n    max: 0\n  }],\n  Q = new e(),\n  X = [0, 0, 0, 0, 0, 0, 0, 0];\nexport { b as default };","map":{"version":3,"names":["t","e","c","n","m","o","h","i","g","r","s","create","fromValues","a","intersectsSphere","l","wrap","d","u","f","_","rayBoxTest","p","b","bounds","_root","halfSize","root","node","maximumObjectsPerNode","_maximumObjectsPerNode","maximumDepth","_maximumDepth","objectCount","_objectCount","constructor","objectToBoundingSphere","_degenerateObjects","Set","destroy","clear","clearPool","q","K","prune","Q","add","arguments","length","undefined","_grow","acquire","_isDegenerate","init","_add","release","remove","J","C","O","delete","_shrink","update","y","forEachAlongRay","S","T","terminals","forAll","_intersectsObject","residents","forEachAlongRayWithVerticalOffset","z","_intersectsObjectWithOffset","forEach","forEachDegenerateObject","findClosest","F","v","j","I","forEachInDepthRange","setRange","DepthOrder","FRONT_TO_BACK","Math","max","near","min","far","forEachNode","depth","forEachNeighbor","applyToBoundingSphere","advanceTo","push","_split","at","D","W","_fitsInsideTree","N","updateBoundsRadiusFromHalfSize","_rootBoundsForRootAsSubNode","_placingRootViolatesMaxDepth","_rebuildTree","_growRootAsSubNode","V","G","initFrom","increaseHalfSize","data","log","LOG2E","ceil","U","floor","k","w","children","_findShrinkIndex","advance","isLeaf","toJSON","_nodeToJSON","map","fromJSON","createEmptyNode","E","isTerminalFor","_childIndex","shrink","_pool","pop","R","X","removeUnordered","x","B","L","H","origin","direction","applyToMinMax","M","A","index","distance","sort","P","isNaN","BACK_TO_FRONT","sqrt","default"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/3d/webgl-engine/lib/Octree.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport t from\"../../../../core/ObjectPool.js\";import e from\"../../../../core/PooledArray.js\";import{c as n,m as o,h as i,g as r,s}from\"../../../../chunks/vec32.js\";import{create as h,fromValues as a}from\"../../../../core/libs/gl-matrix-2/factories/vec3f64.js\";import{intersectsSphere as l}from\"../../../../geometry/support/frustum.js\";import{wrap as d}from\"../../../../geometry/support/ray.js\";import{e as u,g as c,i as f,a as m,c as _}from\"../../../../chunks/sphere.js\";import{rayBoxTest as p}from\"./Util.js\";class b{get bounds(){return this._root.bounds}get halfSize(){return this._root.halfSize}get root(){return this._root.node}get maximumObjectsPerNode(){return this._maximumObjectsPerNode}get maximumDepth(){return this._maximumDepth}get objectCount(){return this._objectCount}constructor(t,e){this.objectToBoundingSphere=t,this._maximumObjectsPerNode=10,this._maximumDepth=20,this._degenerateObjects=new Set,this._root=new g,this._objectCount=0,e&&(void 0!==e.maximumObjectsPerNode&&(this._maximumObjectsPerNode=e.maximumObjectsPerNode),void 0!==e.maximumDepth&&(this._maximumDepth=e.maximumDepth))}destroy(){this._degenerateObjects.clear(),g.clearPool(),q[0]=null,K.prune(),Q.prune()}add(t,e=t.length){this._objectCount+=e,this._grow(t,e);const n=g.acquire();for(let o=0;o<e;o++){const e=t[o];this._isDegenerate(e)?this._degenerateObjects.add(e):(n.init(this._root),this._add(e,n))}g.release(n)}remove(t,e=null){this._objectCount-=t.length;const n=g.acquire();for(const o of t){const t=e??u(this.objectToBoundingSphere(o),J);C(t[3])?(n.init(this._root),O(o,t,n)):this._degenerateObjects.delete(o)}g.release(n),this._shrink()}update(t,e){if(!C(e[3])&&this._isDegenerate(t))return;const n=y(t);this.remove(n,e),this.add(n)}forEachAlongRay(t,e,n){const o=d(t,e);S(this._root,(t=>{if(!T(o,t))return!1;const e=t.node;return e.terminals.forAll((t=>{this._intersectsObject(o,t)&&n(t)})),null!==e.residents&&e.residents.forAll((t=>{this._intersectsObject(o,t)&&n(t)})),!0}))}forEachAlongRayWithVerticalOffset(t,e,n,o){const i=d(t,e);S(this._root,(t=>{if(!z(i,t,o))return!1;const e=t.node;return e.terminals.forAll((t=>{this._intersectsObjectWithOffset(i,t,o)&&n(t)})),null!==e.residents&&e.residents.forAll((t=>{this._intersectsObjectWithOffset(i,t,o)&&n(t)})),!0}))}forEach(t){S(this._root,(e=>{const n=e.node;return n.terminals.forAll(t),null!==n.residents&&n.residents.forAll(t),!0})),this._degenerateObjects.forEach(t)}forEachDegenerateObject(t){this._degenerateObjects.forEach(t)}findClosest(t,e,n,o=()=>!0,s=1/0){let h=1/0,a=1/0,d=null;const u=F(t,e),c=i=>{if(--s,!o(i))return;const r=this.objectToBoundingSphere(i);if(!l(n,r))return;const u=v(t,e,m(r)),c=u-r[3],f=u+r[3];c<h&&(h=c,a=f,d=i)};return j(this._root,(o=>{if(s<=0||!l(n,o.bounds))return!1;i(I,u,o.halfSize),r(I,I,m(o.bounds));if(v(t,e,I)>a)return!1;const h=o.node;return h.terminals.forAll((t=>c(t))),null!==h.residents&&h.residents.forAll((t=>c(t))),!0}),t,e),d}forEachInDepthRange(t,e,n,o,s,h,a){let d=-1/0,u=1/0;const c={setRange:t=>{n===b.DepthOrder.FRONT_TO_BACK?(d=Math.max(d,t.near),u=Math.min(u,t.far)):(d=Math.max(d,-t.far),u=Math.min(u,-t.near))}};c.setRange(o);const f=v(e,n,t),_=F(e,n),p=F(e,-n),g=t=>{if(!a(t))return;const o=this.objectToBoundingSphere(t),i=m(o),r=v(e,n,i)-f,_=r-o[3],p=r+o[3];_>u||p<d||!l(h,o)||s(t,c)};j(this._root,(t=>{if(!l(h,t.bounds))return!1;i(I,_,t.halfSize),r(I,I,m(t.bounds));if(v(e,n,I)-f>u)return!1;i(I,p,t.halfSize),r(I,I,m(t.bounds));if(v(e,n,I)-f<d)return!1;const o=t.node;return o.terminals.forAll((t=>g(t))),null!==o.residents&&o.residents.forAll((t=>g(t))),!0}),e,n)}forEachNode(t){S(this._root,(e=>t(e.node,e.bounds,e.halfSize,e.depth)))}forEachNeighbor(t,e){const n=c(e),o=m(e),i=e=>{const i=this.objectToBoundingSphere(e),r=c(i),h=n+r;return!(s(m(i),o)-h*h<=0)||t(e)};let r=!0;const h=t=>{r&&(r=i(t))};S(this._root,(t=>{const e=c(t.bounds),i=n+e;if(s(m(t.bounds),o)-i*i>0)return!1;const a=t.node;return a.terminals.forAll(h),r&&null!==a.residents&&a.residents.forAll(h),r})),r&&this.forEachDegenerateObject(h)}_intersectsObject(t,e){const n=this.objectToBoundingSphere(e);return!(n[3]>0)||f(n,t)}_intersectsObjectWithOffset(t,e,n){const o=this.objectToBoundingSphere(e);return!(o[3]>0)||f(n.applyToBoundingSphere(o),t)}_add(t,e){e.advanceTo(this.objectToBoundingSphere(t))?e.node.terminals.push(t):(e.node.residents.push(t),e.node.residents.length>this._maximumObjectsPerNode&&e.depth<this._maximumDepth&&this._split(e))}_split(t){const e=t.node.residents;t.node.residents=null;for(let n=0;n<e.length;n++){const o=g.acquire().init(t);this._add(e.at(n),o),g.release(o)}}_grow(t,e){if(0!==e&&(D(t,e,(t=>this.objectToBoundingSphere(t)),W),C(W[3])&&!this._fitsInsideTree(W)))if(N(this._root.node))u(W,this._root.bounds),this._root.halfSize=1.25*this._root.bounds[3],this._root.updateBoundsRadiusFromHalfSize();else{const t=this._rootBoundsForRootAsSubNode(W);this._placingRootViolatesMaxDepth(t)?this._rebuildTree(W,t):this._growRootAsSubNode(t),g.release(t)}}_rebuildTree(t,e){n(m(V),m(e.bounds)),V[3]=e.halfSize,D([t,V],2,(t=>t),G);const o=g.acquire().init(this._root);this._root.initFrom(null,G,G[3]),this._root.increaseHalfSize(1.25),S(o,(t=>(this.add(t.node.terminals.data,t.node.terminals.length),null!==t.node.residents&&this.add(t.node.residents.data,t.node.residents.length),!0))),g.release(o)}_placingRootViolatesMaxDepth(t){const e=Math.log(t.halfSize/this._root.halfSize)*Math.LOG2E;let n=0;return S(this._root,(t=>(n=Math.max(n,t.depth),n+e<=this._maximumDepth))),n+e>this._maximumDepth}_rootBoundsForRootAsSubNode(t){const e=t[3],n=t;let o=-1/0;const i=this._root.bounds,r=this._root.halfSize;for(let h=0;h<3;h++){const t=i[h]-r-(n[h]-e),s=n[h]+e-(i[h]+r),a=Math.max(0,Math.ceil(t/(2*r))),l=Math.max(0,Math.ceil(s/(2*r)))+1,d=2**Math.ceil(Math.log(a+l)*Math.LOG2E);o=Math.max(o,d),U[h].min=a,U[h].max=l}for(let h=0;h<3;h++){let t=U[h].min,e=U[h].max;const n=(o-(t+e))/2;t+=Math.ceil(n),e+=Math.floor(n);const s=i[h]-r-t*r*2;k[h]=s+(e+t)*r}const s=o*r;return k[3]=s*w,g.acquire().initFrom(null,k,s,0)}_growRootAsSubNode(t){const e=this._root.node;n(m(W),m(this._root.bounds)),W[3]=this._root.halfSize,this._root.init(t),t.advanceTo(W,null,!0),t.node.children=e.children,t.node.residents=e.residents,t.node.terminals=e.terminals}_shrink(){for(;;){const t=this._findShrinkIndex();if(-1===t)break;this._root.advance(t),this._root.depth=0}}_findShrinkIndex(){if(0!==this._root.node.terminals.length||this._root.isLeaf())return-1;let t=null;const e=this._root.node.children;let n=0,o=0;for(;o<e.length&&null==t;)n=o++,t=e[n];for(;o<e.length;)if(e[o++])return-1;return n}_isDegenerate(t){return!C(this.objectToBoundingSphere(t)[3])}_fitsInsideTree(t){const e=this._root.bounds,n=this._root.halfSize;return t[3]<=n&&t[0]>=e[0]-n&&t[0]<=e[0]+n&&t[1]>=e[1]-n&&t[1]<=e[1]+n&&t[2]>=e[2]-n&&t[2]<=e[2]+n}toJSON(){const{maximumDepth:t,maximumObjectsPerNode:e,_objectCount:n}=this,o=this._nodeToJSON(this._root.node);return{maximumDepth:t,maximumObjectsPerNode:e,objectCount:n,root:{bounds:this._root.bounds,halfSize:this._root.halfSize,depth:this._root.depth,node:o}}}_nodeToJSON(t){const e=t.children.map((t=>t?this._nodeToJSON(t):null)),n=t.residents?.map((t=>this.objectToBoundingSphere(t))),o=t.terminals?.map((t=>this.objectToBoundingSphere(t)));return{children:e,residents:n,terminals:o}}static fromJSON(t){const e=new b((t=>t),{maximumDepth:t.maximumDepth,maximumObjectsPerNode:t.maximumObjectsPerNode});return e._objectCount=t.objectCount,e._root.initFrom(t.root.node,t.root.bounds,t.root.halfSize,t.root.depth),e}}class g{constructor(){this.bounds=_(),this.halfSize=0,this.initFrom(null,null,0,0)}init(t){return this.initFrom(t.node,t.bounds,t.halfSize,t.depth)}initFrom(t,e,n,o=this.depth){return this.node=null!=t?t:g.createEmptyNode(),e&&u(e,this.bounds),this.halfSize=n,this.depth=o,this}increaseHalfSize(t){this.halfSize*=t,this.updateBoundsRadiusFromHalfSize()}updateBoundsRadiusFromHalfSize(){this.bounds[3]=this.halfSize*w}advance(t){let e=this.node.children[t];e||(e=g.createEmptyNode(),this.node.children[t]=e),this.node=e,this.halfSize/=2,this.depth++;const n=E[t];return this.bounds[0]+=n[0]*this.halfSize,this.bounds[1]+=n[1]*this.halfSize,this.bounds[2]+=n[2]*this.halfSize,this.updateBoundsRadiusFromHalfSize(),this}advanceTo(t,e,n=!1){for(;;){if(this.isTerminalFor(t))return e&&e(this,-1),!0;if(this.isLeaf()){if(!n)return e&&e(this,-1),!1;this.node.residents=null}const o=this._childIndex(t);e&&e(this,o),this.advance(o)}}isLeaf(){return null!=this.node.residents}isTerminalFor(t){return t[3]>this.halfSize/2}_childIndex(t){const e=this.bounds;return(e[0]<t[0]?1:0)+(e[1]<t[1]?2:0)+(e[2]<t[2]?4:0)}static createEmptyNode(){return{children:[null,null,null,null,null,null,null,null],terminals:new e({shrink:!0}),residents:new e({shrink:!0})}}static acquire(){return g._pool.acquire()}static release(t){g._pool.release(t)}static clearPool(){g._pool.prune()}}function S(t,e){let n=g.acquire().init(t);const o=[n];for(;0!==o.length;){if(n=o.pop(),e(n)&&!n.isLeaf())for(let t=0;t<n.node.children.length;t++){n.node.children[t]&&o.push(g.acquire().init(n).advance(t))}g.release(n)}}function j(t,e,n,o=b.DepthOrder.FRONT_TO_BACK){let i=g.acquire().init(t);const r=[i];for(R(n,o,X);0!==r.length;){if(i=r.pop(),e(i)&&!i.isLeaf())for(let t=7;t>=0;--t){const e=X[t];i.node.children[e]&&r.push(g.acquire().init(i).advance(e))}g.release(i)}}function O(t,e,n){K.clear();const o=n.advanceTo(e,((t,e)=>{K.push(t.node),K.push(e)}))?n.node.terminals:n.node.residents;if(o.removeUnordered(t),0===o.length)for(let i=K.length-2;i>=0;i-=2){if(!x(K.data[i],K.data[i+1]))break}}function x(t,n){return n>=0&&(t.children[n]=null),!!N(t)&&(null===t.residents&&(t.residents=new e({shrink:!0})),!0)}function T(t,e){return B(m(e.bounds),2*-e.halfSize,L),B(m(e.bounds),2*e.halfSize,H),p(t.origin,t.direction,L,H)}function z(t,e,n){return B(m(e.bounds),2*-e.halfSize,L),B(m(e.bounds),2*e.halfSize,H),n.applyToMinMax(L,H),p(t.origin,t.direction,L,H)}function N(t){if(0!==t.terminals.length)return!1;if(null!==t.residents)return 0===t.residents.length;for(let e=0;e<t.children.length;e++)if(t.children[e])return!1;return!0}function M(t,e){t[0]=Math.min(t[0],e[0]-e[3]),t[1]=Math.min(t[1],e[1]-e[3]),t[2]=Math.min(t[2],e[2]-e[3])}function A(t,e){t[0]=Math.max(t[0],e[0]+e[3]),t[1]=Math.max(t[1],e[1]+e[3]),t[2]=Math.max(t[2],e[2]+e[3])}function B(t,e,n){n[0]=t[0]+e,n[1]=t[1]+e,n[2]=t[2]+e}function D(t,e,n,i){if(1===e){const e=n(t[0]);u(e,i)}else{L[0]=1/0,L[1]=1/0,L[2]=1/0,H[0]=-1/0,H[1]=-1/0,H[2]=-1/0;for(let o=0;o<e;o++){const e=n(t[o]);C(e[3])&&(M(L,e),A(H,e))}o(m(i),L,H,.5),i[3]=Math.max(H[0]-L[0],H[1]-L[1],H[2]-L[2])/2}}function R(t,e,n){if(!Q.length)for(let o=0;o<8;++o)Q.push({index:0,distance:0});for(let o=0;o<8;++o){const n=E[o];Q.data[o].index=o,Q.data[o].distance=v(t,e,n)}Q.sort(((t,e)=>t.distance-e.distance));for(let o=0;o<8;++o)n[o]=Q.data[o].index}function F(t,e){let n,o=1/0;for(let i=0;i<8;++i){const r=v(t,e,P[i]);r<o&&(o=r,n=P[i])}return n}function v(t,e,n){return e*(t[0]*n[0]+t[1]*n[1]+t[2]*n[2])}function C(t){return!isNaN(t)&&t!==-1/0&&t!==1/0&&t>0}g._pool=new t(g),function(t){var e;(e=t.DepthOrder||(t.DepthOrder={}))[e.FRONT_TO_BACK=1]=\"FRONT_TO_BACK\",e[e.BACK_TO_FRONT=-1]=\"BACK_TO_FRONT\"}(b);const E=[a(-1,-1,-1),a(1,-1,-1),a(-1,1,-1),a(1,1,-1),a(-1,-1,1),a(1,-1,1),a(-1,1,1),a(1,1,1)],P=[a(-1,-1,-1),a(-1,-1,1),a(-1,1,-1),a(-1,1,1),a(1,-1,-1),a(1,-1,1),a(1,1,-1),a(1,1,1)],w=Math.sqrt(3),q=[null];function y(t){return q[0]=t,q}const k=_(),I=h(),L=h(),H=h(),K=new e,J=_(),W=_(),V=_(),G=_(),U=[{min:0,max:0},{min:0,max:0},{min:0,max:0}],Q=new e,X=[0,0,0,0,0,0,0,0];export{b as default};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}