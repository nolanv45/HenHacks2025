{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport e from \"../../../../../request.js\";\nimport has from \"../../../../../core/has.js\";\nimport { ignoreAbortErrors as t, throwIfNotAbortError as s } from \"../../../../../core/promiseUtils.js\";\nimport { diff as r, hasRootDiffOnly as a, hasRootDiff as i } from \"../../../../../core/accessorSupport/diffUtils.js\";\nimport { OptimizedFeature as n } from \"../../../../../layers/graphics/OptimizedFeature.js\";\nimport { QueryEngine as o } from \"../../../../../layers/graphics/data/QueryEngine.js\";\nimport { executeQueryForCount as d } from \"../../../../../rest/query/operations/query.js\";\nimport { FeatureStoreStatistics as h } from \"../FeatureStoreStatistics.js\";\nimport { FeatureSourceQueryInfo as c } from \"./FeatureSourceQueryInfo.js\";\nimport { StreamMessenger as u } from \"./StreamMessenger.js\";\nimport { DrillDownTileLoadStrategy as p } from \"./strategies/DrillDownTileLoadStrategy.js\";\nimport { PagedTileLoadStrategy as l } from \"./strategies/PagedTileLoadStrategy.js\";\nimport { ParquetLoadStrategy as m } from \"./strategies/ParquetLoadStrategy.js\";\nimport { SnapshotLoadStrategy as y } from \"./strategies/SnapshotLoadStrategy.js\";\nimport { StreamLoadStrategy as _ } from \"./strategies/StreamLoadStrategy.js\";\nimport { FeatureSourceChunkStore as g } from \"./strategies/chunks/SourceChunkStore.js\";\nimport { FeatureMetadata as f } from \"../support/FeatureMetadata.js\";\nimport { UpdateTracking2D as S } from \"../../support/UpdateTracking2D.js\";\nclass v {\n  constructor(e, t, s, r, a) {\n    this.service = e, this._aggregateAdapter = t, this._subscriptions = s, this._connection = r, this._cachedObjectIds = a, this._updateTracking = new S({\n      debugName: \"FeatureSource\"\n    }), this._didInvalidateData = !1, this._metadata = f.createFeature(e.metadata), this._store = new g(this._metadata);\n  }\n  destroy() {\n    this._strategy?.destroy(), this._store.destroy(), this._streamMessenger?.destroy(), \"memory\" === this.service.type && this.service.source.map(e => e.close());\n  }\n  get metadata() {\n    if (!this._metadata) throw new Error(\"InternalError: Metadata not defined. Was update called?\");\n    return this._metadata;\n  }\n  get store() {\n    return this._store;\n  }\n  get streamMessenger() {\n    return null == this._streamMessenger && this._initStreamMessenger(), this._streamMessenger;\n  }\n  get statistics() {\n    return h.from(this._store);\n  }\n  get updateTracking() {\n    return this._updateTracking;\n  }\n  get queryEngine() {\n    if (!this._queryEngine) {\n      if (!this._schema) return null;\n      const {\n          dataFilter: e\n        } = this._schema.mutable,\n        t = this._schema.mutable.availableFields,\n        s = this._metadata;\n      this._queryEngine = new o({\n        featureStore: this._store,\n        fieldsIndex: s.fieldsIndex,\n        geometryType: s.geometryType,\n        objectIdField: s.objectIdField,\n        hasM: !1,\n        hasZ: !1,\n        spatialReference: this.service.outSpatialReference,\n        aggregateAdapter: this._aggregateAdapter,\n        timeInfo: s.timeInfo,\n        definitionExpression: e.definitionExpression,\n        availableFields: t\n      });\n    }\n    return this._queryEngine;\n  }\n  get isStream() {\n    return \"stream\" === this._schema.type;\n  }\n  get hasDisplayFilter() {\n    return !!this._schema && \"displayFilterInfo\" in this._schema.mutable && null != this._schema.mutable.displayFilterInfo;\n  }\n  chunks() {\n    return Array.from(this._store.chunks());\n  }\n  prepareCacheUpdate(e, t) {\n    const s = new Set(),\n      r = new Set();\n    for (const a of e) this._cachedObjectIds.has(a) || (this._cachedObjectIds.add(a), s.add(a));\n    for (const a of t) this._cachedObjectIds.delete(a), r.add(a);\n    this.hasDisplayFilter && this._strategy.prepareCacheUpdate(s, r);\n  }\n  async applyCacheUpdate() {\n    this.hasDisplayFilter && (await this._updateTracking.addPromise(this._strategy.applyCacheUpdate()));\n  }\n  cleanup() {\n    return this._store.cleanup();\n  }\n  onSubscribe(e) {\n    this._connection.onEvent({\n      type: \"subscribe\",\n      tile: e.tile.id\n    });\n    const t = this._strategy?.load(e);\n    t && (t.then(() => this._connection.onEvent({\n      type: \"loaded\",\n      tile: e.tile.id\n    })).catch(t => this._connection.onEvent({\n      type: \"error\",\n      tile: e.tile.id,\n      error: t\n    })), this._updateTracking.addPromise(t));\n  }\n  onResume(e) {\n    this._updateTracking.addPromise(t(this._strategy?.load(e)));\n  }\n  onUnsubscribe(e) {\n    this._connection.onEvent({\n      type: \"unsubscribe\",\n      tile: e.tile.id\n    }), this._strategy?.unload(e);\n  }\n  applyOverride(e) {\n    this._didInvalidateData = !0, this._store.applyOverride(e);\n  }\n  takeOverrideUpdate() {\n    return this._store.takeOverrideUpdate();\n  }\n  async update(e, t) {\n    const s = e.source,\n      n = r(this._schema?.mutable, s.mutable);\n    if (!n) return !1;\n    if (has(\"esri-2d-update-debug\") && console.debug(`Version[${t}] FeatureSource.update`, {\n      changes: n\n    }), this._schema = s, this._queryEngine?.destroy(), this._queryEngine = null, \"feature-service\" === this.service.type && null != this.service.queryMetadata.lastEditDate && (this._lastEditDate = this.service.queryMetadata.lastEditDate), null == this._streamMessenger && \"stream\" === this._schema.type && this._initStreamMessenger(), a(n, \"sourceRefreshVersion\") && this._strategy?.refresh) return await this._strategy.refresh(), !0;\n    if ((\"feature\" === s.type || \"parquet\" === s.type) && a(n, \"availableFields\")) {\n      if ((await this._queryLastEditDateChanged()) || this._didInvalidateData) this._didInvalidateData = !1, await this._updateStrategy(t);else {\n        this._connection.onEvent({\n          type: \"updateFieldsStart\"\n        });\n        try {\n          await this._strategy.updateFields(s.mutable.availableFields), this._connection.onEvent({\n            type: \"updateFieldsEnd\"\n          });\n        } catch (o) {\n          this._connection.onEvent({\n            type: \"updateFieldsError\",\n            error: o\n          });\n        }\n      }\n      return !1;\n    }\n    return !!(i(n, \"dataFilter\") || i(n, \"sourceRefreshVersion\") || this._strategy.about.supportsDisplayFilter && i(n, \"displayFilterInfo\")) && (await this._updateStrategy(t), !0);\n  }\n  async addParquetFile(e) {\n    this._strategy.addParquetFile(e);\n  }\n  unsafeSetQueryHistoricMoment(e) {\n    \"feature\" === this._schema.type && (this._schema.mutable.dataFilter.historicMoment = e, this._strategy.unsafeSetQueryHistoricMoment(new Date(e)));\n  }\n  _initStreamMessenger() {\n    null == this._streamMessenger && (this._streamMessenger = new u(this._connection));\n  }\n  async normalizeOverrides(e) {\n    const t = {\n        historicMoment: e.historicMoment,\n        commands: {\n          updateWeak: e.commands.updateWeak.map(n.fromJSON),\n          removeWeak: e.commands.removeWeak,\n          update: e.commands.update.map(n.fromJSON),\n          remove: e.commands.remove,\n          release: e.commands.release\n        }\n      },\n      s = e.commands.updateByIdWeak,\n      r = await this._queryOptimizedFeatures(s);\n    return t.commands.updateWeak.push(...r), t;\n  }\n  async _queryOptimizedFeatures(e) {\n    if (0 === e.length) return [];\n    const t = [],\n      s = (await this._strategy.queryByObjectId(e)).getCursor();\n    for (; s.next();) t.push(s.readOptimizedFeatureWorldSpace());\n    return t;\n  }\n  getObjectIdsFromGlobalIds(e) {\n    const t = new Set(e),\n      s = this.metadata.globalIdField;\n    if (null == s) throw new Error(\"InternalError: Recieved an edit with globalIds, but not supported by the service\");\n    const r = [];\n    return this._store.forEachUnsafe(e => {\n      const a = e.readAttribute(s);\n      if (t.has(a)) {\n        const t = e.getObjectId();\n        null != t && r.push(t);\n      }\n    }), r;\n  }\n  async _queryLastEditDateChanged() {\n    if (null == this._lastEditDate) return !1;\n    const t = this.service.source,\n      s = {\n        ...t.query,\n        f: \"json\"\n      },\n      r = (await e(t.path, {\n        query: s,\n        responseType: \"json\"\n      })).data.editingInfo.lastEditDate;\n    return r !== this._lastEditDate && (this._lastEditDate = r, !0);\n  }\n  async _createStrategy() {\n    const e = \"isSourceHosted\" in this.service && this.service.isSourceHosted,\n      t = Array.isArray(this.service.source),\n      s = this.service.source && \"collection\" in this.service.source,\n      r = e || t || s;\n    if (\"stream\" === this._schema.type) {\n      const e = new _(this.service, this._schema.mutable.dataFilter, this._store, {\n        outSR: this.service.outSpatialReference\n      }, this.metadata);\n      return this._streamMessenger.strategy = e, e;\n    }\n    if (\"parquet\" === this._schema.type) {\n      const e = this.service;\n      return new m(e, this._metadata, this._schema, this._store);\n    }\n    const a = this.service,\n      i = c.fromSchema(a, this._schema, this._metadata),\n      n = await this._supportSnapshotMode(a, i);\n    return n ? new y(a, i, this._store, n.featureCount, this.metadata, this._connection) : r ? new l(a, i, this._store, this.metadata, this._connection) : new p(a, i, this._store, this.metadata, this._connection);\n  }\n  async _updateStrategy(e) {\n    const t = await this._createStrategy();\n    this._connection.onEvent({\n      type: \"updateStrategyStart\",\n      about: t.about\n    });\n    const r = !!this._strategy;\n    this._store.clear(), this._strategy?.destroy(), this._strategy = t, has(\"esri-2d-update-debug\") && console.debug(`Version[${e}] FeatureSource.updateStrategy`, {\n      strategy: t\n    });\n    const a = Array.from(this._subscriptions.values());\n    if (!a.length) return void this._connection.onEvent({\n      type: \"updateStrategyEnd\"\n    });\n    const i = Promise.all(a.map(e => this._strategy.load(e).then(() => this._connection.onEvent({\n      type: \"loaded\",\n      tile: e.tile.id\n    })).catch(t => this._connection.onEvent({\n      type: \"error\",\n      tile: e.tile.id,\n      error: t\n    }))));\n    this._updateTracking.addPromise(i), this._strategy.prepareCacheUpdate(this._cachedObjectIds);\n    try {\n      r && (await i);\n    } catch (n) {\n      s(n);\n    }\n    this._connection.onEvent({\n      type: \"updateStrategyEnd\"\n    }), has(\"esri-2d-update-debug\") && console.debug(`Version[${e}] FeatureSource.updateStrategyEnd`, {\n      strategy: t\n    });\n  }\n  async _supportSnapshotMode(e, t) {\n    const {\n        queryMetadata: s\n      } = e,\n      r = s.snapshotInfo;\n    if (!r || !r.supportsSnapshotMinThreshold || !r.snapshotCountThresholds) return null;\n    const a = e.source,\n      i = t.createQuery();\n    i.inner.orderByFields = [], i.inner.returnGeometry = !1;\n    const n = (await d(a, i.inner, {\n        query: i.customParameters\n      })).data.count,\n      {\n        min: o,\n        max: h\n      } = r.snapshotCountThresholds;\n    return n <= o || r.supportsSnapshotMaxThreshold && n < h ? {\n      featureCount: n\n    } : null;\n  }\n}\nexport { v as FeatureSource };","map":{"version":3,"names":["e","has","ignoreAbortErrors","t","throwIfNotAbortError","s","diff","r","hasRootDiffOnly","a","hasRootDiff","i","OptimizedFeature","n","QueryEngine","o","executeQueryForCount","d","FeatureStoreStatistics","h","FeatureSourceQueryInfo","c","StreamMessenger","u","DrillDownTileLoadStrategy","p","PagedTileLoadStrategy","l","ParquetLoadStrategy","m","SnapshotLoadStrategy","y","StreamLoadStrategy","_","FeatureSourceChunkStore","g","FeatureMetadata","f","UpdateTracking2D","S","v","constructor","service","_aggregateAdapter","_subscriptions","_connection","_cachedObjectIds","_updateTracking","debugName","_didInvalidateData","_metadata","createFeature","metadata","_store","destroy","_strategy","_streamMessenger","type","source","map","close","Error","store","streamMessenger","_initStreamMessenger","statistics","from","updateTracking","queryEngine","_queryEngine","_schema","dataFilter","mutable","availableFields","featureStore","fieldsIndex","geometryType","objectIdField","hasM","hasZ","spatialReference","outSpatialReference","aggregateAdapter","timeInfo","definitionExpression","isStream","hasDisplayFilter","displayFilterInfo","chunks","Array","prepareCacheUpdate","Set","add","delete","applyCacheUpdate","addPromise","cleanup","onSubscribe","onEvent","tile","id","load","then","catch","error","onResume","onUnsubscribe","unload","applyOverride","takeOverrideUpdate","update","console","debug","changes","queryMetadata","lastEditDate","_lastEditDate","refresh","_queryLastEditDateChanged","_updateStrategy","updateFields","about","supportsDisplayFilter","addParquetFile","unsafeSetQueryHistoricMoment","historicMoment","Date","normalizeOverrides","commands","updateWeak","fromJSON","removeWeak","remove","release","updateByIdWeak","_queryOptimizedFeatures","push","length","queryByObjectId","getCursor","next","readOptimizedFeatureWorldSpace","getObjectIdsFromGlobalIds","globalIdField","forEachUnsafe","readAttribute","getObjectId","query","path","responseType","data","editingInfo","_createStrategy","isSourceHosted","isArray","outSR","strategy","fromSchema","_supportSnapshotMode","featureCount","clear","values","Promise","all","snapshotInfo","supportsSnapshotMinThreshold","snapshotCountThresholds","createQuery","inner","orderByFields","returnGeometry","customParameters","count","min","max","supportsSnapshotMaxThreshold","FeatureSource"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/2d/layers/features/sources/FeatureSource.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport e from\"../../../../../request.js\";import has from\"../../../../../core/has.js\";import{ignoreAbortErrors as t,throwIfNotAbortError as s}from\"../../../../../core/promiseUtils.js\";import{diff as r,hasRootDiffOnly as a,hasRootDiff as i}from\"../../../../../core/accessorSupport/diffUtils.js\";import{OptimizedFeature as n}from\"../../../../../layers/graphics/OptimizedFeature.js\";import{QueryEngine as o}from\"../../../../../layers/graphics/data/QueryEngine.js\";import{executeQueryForCount as d}from\"../../../../../rest/query/operations/query.js\";import{FeatureStoreStatistics as h}from\"../FeatureStoreStatistics.js\";import{FeatureSourceQueryInfo as c}from\"./FeatureSourceQueryInfo.js\";import{StreamMessenger as u}from\"./StreamMessenger.js\";import{DrillDownTileLoadStrategy as p}from\"./strategies/DrillDownTileLoadStrategy.js\";import{PagedTileLoadStrategy as l}from\"./strategies/PagedTileLoadStrategy.js\";import{ParquetLoadStrategy as m}from\"./strategies/ParquetLoadStrategy.js\";import{SnapshotLoadStrategy as y}from\"./strategies/SnapshotLoadStrategy.js\";import{StreamLoadStrategy as _}from\"./strategies/StreamLoadStrategy.js\";import{FeatureSourceChunkStore as g}from\"./strategies/chunks/SourceChunkStore.js\";import{FeatureMetadata as f}from\"../support/FeatureMetadata.js\";import{UpdateTracking2D as S}from\"../../support/UpdateTracking2D.js\";class v{constructor(e,t,s,r,a){this.service=e,this._aggregateAdapter=t,this._subscriptions=s,this._connection=r,this._cachedObjectIds=a,this._updateTracking=new S({debugName:\"FeatureSource\"}),this._didInvalidateData=!1,this._metadata=f.createFeature(e.metadata),this._store=new g(this._metadata)}destroy(){this._strategy?.destroy(),this._store.destroy(),this._streamMessenger?.destroy(),\"memory\"===this.service.type&&this.service.source.map((e=>e.close()))}get metadata(){if(!this._metadata)throw new Error(\"InternalError: Metadata not defined. Was update called?\");return this._metadata}get store(){return this._store}get streamMessenger(){return null==this._streamMessenger&&this._initStreamMessenger(),this._streamMessenger}get statistics(){return h.from(this._store)}get updateTracking(){return this._updateTracking}get queryEngine(){if(!this._queryEngine){if(!this._schema)return null;const{dataFilter:e}=this._schema.mutable,t=this._schema.mutable.availableFields,s=this._metadata;this._queryEngine=new o({featureStore:this._store,fieldsIndex:s.fieldsIndex,geometryType:s.geometryType,objectIdField:s.objectIdField,hasM:!1,hasZ:!1,spatialReference:this.service.outSpatialReference,aggregateAdapter:this._aggregateAdapter,timeInfo:s.timeInfo,definitionExpression:e.definitionExpression,availableFields:t})}return this._queryEngine}get isStream(){return\"stream\"===this._schema.type}get hasDisplayFilter(){return!!this._schema&&(\"displayFilterInfo\"in this._schema.mutable&&null!=this._schema.mutable.displayFilterInfo)}chunks(){return Array.from(this._store.chunks())}prepareCacheUpdate(e,t){const s=new Set,r=new Set;for(const a of e)this._cachedObjectIds.has(a)||(this._cachedObjectIds.add(a),s.add(a));for(const a of t)this._cachedObjectIds.delete(a),r.add(a);this.hasDisplayFilter&&this._strategy.prepareCacheUpdate(s,r)}async applyCacheUpdate(){this.hasDisplayFilter&&await this._updateTracking.addPromise(this._strategy.applyCacheUpdate())}cleanup(){return this._store.cleanup()}onSubscribe(e){this._connection.onEvent({type:\"subscribe\",tile:e.tile.id});const t=this._strategy?.load(e);t&&(t.then((()=>this._connection.onEvent({type:\"loaded\",tile:e.tile.id}))).catch((t=>this._connection.onEvent({type:\"error\",tile:e.tile.id,error:t}))),this._updateTracking.addPromise(t))}onResume(e){this._updateTracking.addPromise(t(this._strategy?.load(e)))}onUnsubscribe(e){this._connection.onEvent({type:\"unsubscribe\",tile:e.tile.id}),this._strategy?.unload(e)}applyOverride(e){this._didInvalidateData=!0,this._store.applyOverride(e)}takeOverrideUpdate(){return this._store.takeOverrideUpdate()}async update(e,t){const s=e.source,n=r(this._schema?.mutable,s.mutable);if(!n)return!1;if(has(\"esri-2d-update-debug\")&&console.debug(`Version[${t}] FeatureSource.update`,{changes:n}),this._schema=s,this._queryEngine?.destroy(),this._queryEngine=null,\"feature-service\"===this.service.type&&null!=this.service.queryMetadata.lastEditDate&&(this._lastEditDate=this.service.queryMetadata.lastEditDate),null==this._streamMessenger&&\"stream\"===this._schema.type&&this._initStreamMessenger(),a(n,\"sourceRefreshVersion\")&&this._strategy?.refresh)return await this._strategy.refresh(),!0;if((\"feature\"===s.type||\"parquet\"===s.type)&&a(n,\"availableFields\")){if(await this._queryLastEditDateChanged()||this._didInvalidateData)this._didInvalidateData=!1,await this._updateStrategy(t);else{this._connection.onEvent({type:\"updateFieldsStart\"});try{await this._strategy.updateFields(s.mutable.availableFields),this._connection.onEvent({type:\"updateFieldsEnd\"})}catch(o){this._connection.onEvent({type:\"updateFieldsError\",error:o})}}return!1}return!!(i(n,\"dataFilter\")||i(n,\"sourceRefreshVersion\")||this._strategy.about.supportsDisplayFilter&&i(n,\"displayFilterInfo\"))&&(await this._updateStrategy(t),!0)}async addParquetFile(e){this._strategy.addParquetFile(e)}unsafeSetQueryHistoricMoment(e){\"feature\"===this._schema.type&&(this._schema.mutable.dataFilter.historicMoment=e,this._strategy.unsafeSetQueryHistoricMoment(new Date(e)))}_initStreamMessenger(){null==this._streamMessenger&&(this._streamMessenger=new u(this._connection))}async normalizeOverrides(e){const t={historicMoment:e.historicMoment,commands:{updateWeak:e.commands.updateWeak.map(n.fromJSON),removeWeak:e.commands.removeWeak,update:e.commands.update.map(n.fromJSON),remove:e.commands.remove,release:e.commands.release}},s=e.commands.updateByIdWeak,r=await this._queryOptimizedFeatures(s);return t.commands.updateWeak.push(...r),t}async _queryOptimizedFeatures(e){if(0===e.length)return[];const t=[],s=(await this._strategy.queryByObjectId(e)).getCursor();for(;s.next();)t.push(s.readOptimizedFeatureWorldSpace());return t}getObjectIdsFromGlobalIds(e){const t=new Set(e),s=this.metadata.globalIdField;if(null==s)throw new Error(\"InternalError: Recieved an edit with globalIds, but not supported by the service\");const r=[];return this._store.forEachUnsafe((e=>{const a=e.readAttribute(s);if(t.has(a)){const t=e.getObjectId();null!=t&&r.push(t)}})),r}async _queryLastEditDateChanged(){if(null==this._lastEditDate)return!1;const t=this.service.source,s={...t.query,f:\"json\"},r=(await e(t.path,{query:s,responseType:\"json\"})).data.editingInfo.lastEditDate;return r!==this._lastEditDate&&(this._lastEditDate=r,!0)}async _createStrategy(){const e=\"isSourceHosted\"in this.service&&this.service.isSourceHosted,t=Array.isArray(this.service.source),s=this.service.source&&\"collection\"in this.service.source,r=e||t||s;if(\"stream\"===this._schema.type){const e=new _(this.service,this._schema.mutable.dataFilter,this._store,{outSR:this.service.outSpatialReference},this.metadata);return this._streamMessenger.strategy=e,e}if(\"parquet\"===this._schema.type){const e=this.service;return new m(e,this._metadata,this._schema,this._store)}const a=this.service,i=c.fromSchema(a,this._schema,this._metadata),n=await this._supportSnapshotMode(a,i);return n?new y(a,i,this._store,n.featureCount,this.metadata,this._connection):r?new l(a,i,this._store,this.metadata,this._connection):new p(a,i,this._store,this.metadata,this._connection)}async _updateStrategy(e){const t=await this._createStrategy();this._connection.onEvent({type:\"updateStrategyStart\",about:t.about});const r=!!this._strategy;this._store.clear(),this._strategy?.destroy(),this._strategy=t,has(\"esri-2d-update-debug\")&&console.debug(`Version[${e}] FeatureSource.updateStrategy`,{strategy:t});const a=Array.from(this._subscriptions.values());if(!a.length)return void this._connection.onEvent({type:\"updateStrategyEnd\"});const i=Promise.all(a.map((e=>this._strategy.load(e).then((()=>this._connection.onEvent({type:\"loaded\",tile:e.tile.id}))).catch((t=>this._connection.onEvent({type:\"error\",tile:e.tile.id,error:t}))))));this._updateTracking.addPromise(i),this._strategy.prepareCacheUpdate(this._cachedObjectIds);try{r&&await i}catch(n){s(n)}this._connection.onEvent({type:\"updateStrategyEnd\"}),has(\"esri-2d-update-debug\")&&console.debug(`Version[${e}] FeatureSource.updateStrategyEnd`,{strategy:t})}async _supportSnapshotMode(e,t){const{queryMetadata:s}=e,r=s.snapshotInfo;if(!r||!r.supportsSnapshotMinThreshold||!r.snapshotCountThresholds)return null;const a=e.source,i=t.createQuery();i.inner.orderByFields=[],i.inner.returnGeometry=!1;const n=(await d(a,i.inner,{query:i.customParameters})).data.count,{min:o,max:h}=r.snapshotCountThresholds;return n<=o||r.supportsSnapshotMaxThreshold&&n<h?{featureCount:n}:null}}export{v as FeatureSource};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}