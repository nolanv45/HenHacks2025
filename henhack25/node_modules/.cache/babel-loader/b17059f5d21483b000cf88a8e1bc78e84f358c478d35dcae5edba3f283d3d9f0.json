{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { cloneShaderNode as e } from \"./ShaderGraphNode.js\";\nclass t {\n  constructor(e, t, d) {\n    this.variableName = e, this.variableInputType = t, this.node = d, this.type = \"shader-input\", this.isUsed = !1;\n  }\n  clone() {\n    return new t(this.variableName, this.variableInputType, e(this.node));\n  }\n}\nclass d {\n  constructor(e, t, d) {\n    this.outVariableName = e, this.outVariableType = t, this.node = d, this.type = \"shader-output\";\n  }\n  clone() {\n    const t = new d(this.outVariableName, this.outVariableType, e(this.node));\n    return t.variableName = this.variableName, t;\n  }\n}\nclass o {\n  static createVertex(e, a, n, i, r, s) {\n    const u = [];\n    for (const d in e) {\n      const o = e[d],\n        a = n.get(d);\n      a ? u.push(new t(a, \"builtin\", o)) : u.push(new t(\"a_\" + d, \"in\", o));\n    }\n    for (const d of i) {\n      const e = d.uniformHydrated;\n      u.push(new t(d.uniformName, \"uniform\", e));\n    }\n    const p = [];\n    for (const t in a) {\n      const e = a[t];\n      \"glPosition\" === t ? p.push(new d(\"gl_Position\", \"builtin\", e)) : \"glPointSize\" === t ? p.push(new d(\"gl_PointSize\", \"builtin\", e)) : p.push(new d(\"v_\" + t, \"out\", e));\n    }\n    return new o(u, p, r, s);\n  }\n  static createFragment(e, a, n, i, r, s) {\n    const u = [],\n      p = Array.from(r.rootOutputNodes());\n    for (const d in e) {\n      const o = e[d],\n        a = n.get(d);\n      if (a) {\n        u.push(new t(a, \"builtin\", o));\n        continue;\n      }\n      const i = p.find(e => e.node === o);\n      i && u.push(new t(i.outVariableName, \"in\", o));\n    }\n    for (const d of i) {\n      const e = d.uniformHydrated;\n      u.push(new t(d.uniformName, \"uniform\", e));\n    }\n    const h = [];\n    for (const t in a) {\n      const e = a[t],\n        o = n.get(t);\n      \"discard\" === t ? h.push(new d(null, \"discard\", e)) : o ? h.push(new d(o, \"builtin\", e)) : h.push(new d(t, \"out\", e));\n    }\n    return new o(u, h, s);\n  }\n  constructor(e, t, d, o) {\n    this.type = \"shader-graph-context\", this.indent = 0, this.body = \"\", this.varCount = 0, this._inputShaderTypesByNodeUid = new Map(), this._nodeEmitMap = new Map();\n    for (const a of e) this._inputShaderTypesByNodeUid.set(a.node.uid, a);\n    this._outputShaderTypes = t, this._transformFeedbackBindings = d, this._transformFeedbackNames = new Set(d.map(e => \"v_\" + e.propertyKey)), this._usedInFragmentShader = o;\n  }\n  shouldPruneOutputNode(e) {\n    return !!this._usedInFragmentShader && \"builtin\" !== e.outVariableType && !this._transformFeedbackNames.has(e.outVariableName) && !this._usedInFragmentShader.has(e.node.uid);\n  }\n  setEmit(e, t) {\n    this._nodeEmitMap.set(e.uid, t);\n  }\n  getEmit(e) {\n    return this._nodeEmitMap.get(e.uid);\n  }\n  inputs() {\n    return this._inputShaderTypesByNodeUid.values();\n  }\n  getInput(e) {\n    return this._inputShaderTypesByNodeUid.get(e.uid);\n  }\n  *rootOutputNodes() {\n    for (const e of this._outputShaderTypes) yield e;\n  }\n  *nodes() {\n    const e = [];\n    for (const t of this._outputShaderTypes.values()) e.push(t.node);\n    for (; e.length;) {\n      const t = e.pop();\n      \"number\" != typeof t && \"boolean\" != typeof t && e.push(...t.children.filter(Boolean)), yield t;\n    }\n  }\n  *nodesOfTypeOrFunction() {\n    for (const e of this.nodes()) \"number\" != typeof e && \"boolean\" != typeof e && (yield e);\n  }\n  createSubgraphContext() {\n    const e = this.clone();\n    return e.body = \"\", e.indent = this.indent + 2, e._nodeEmitMap = new Map(this._nodeEmitMap), e;\n  }\n  clone() {\n    const e = new o([], this._outputShaderTypes, this._transformFeedbackBindings, this._usedInFragmentShader);\n    return e._inputShaderTypesByNodeUid = this._inputShaderTypesByNodeUid, e.indent = this.indent, e.body = this.body, e.varCount = this.varCount, e._nodeEmitMap = this._nodeEmitMap, e;\n  }\n  insertVertexShader(e) {\n    e.vertex.code.add(\"\"), this._insertInputs(e, \"vertex\"), e.vertex.code.add(\"\"), e.vertex.code.add(\"// OUTPUTS: \"), e.vertex.code.add(\"// --------------------------------------------------------- \");\n    for (const t of this.rootOutputNodes()) {\n      const d = \"builtin\" === t.outVariableType;\n      this.shouldPruneOutputNode(t) || (d ? e.vertex.code.add(`// ${t.outVariableType.padEnd(7)} ${t.node.type.padEnd(9)} ${t.outVariableName};`) : e.vertex.code.add(`${t.outVariableType.padEnd(10)} ${t.node.type.padEnd(9)} ${t.outVariableName};`));\n    }\n    e.vertex.code.add(\"\"), e.vertex.code.add(\"void main() {\"), e.vertex.code.add(\"  \" + this.body.split(\"\\n\").join(\"\\n  \"));\n    for (const t of this.rootOutputNodes()) this.shouldPruneOutputNode(t) || e.vertex.code.add(`  ${t.outVariableName} = ${t.variableName};`);\n    e.vertex.code.add(\"}\");\n  }\n  insertFragmentShader(e) {\n    this._insertInputs(e, \"fragment\"), e.fragment.code.add(\"\"), e.fragment.code.add(\"// OUTPUTS: \"), e.fragment.code.add(\"// --------------------------------------------------------- \");\n    let t = 0;\n    for (const d of this.rootOutputNodes()) {\n      \"builtin\" === d.outVariableType ? e.fragment.code.add(`// ${d.outVariableType.padEnd(7)} ${d.node.type.padEnd(9)} ${d.outVariableName};`) : e.outputs.add(d.outVariableName, d.node.type, t++);\n    }\n    e.fragment.code.add(\"\"), e.fragment.code.add(\"void main() {\"), e.fragment.code.add(\"  \" + this.body.split(\"\\n\").join(\"\\n  \"));\n    for (const d of this.rootOutputNodes()) \"discard\" === d.outVariableType ? (e.fragment.code.add(\"  // TODO: Should ensure codegen for discard appears first in fragment shader\"), e.fragment.code.add(`  if (${d.variableName}) {`), e.fragment.code.add(\"    discard;\"), e.fragment.code.add(\"  }\"), e.fragment.code.add(\"  \")) : e.fragment.code.add(`  ${d.outVariableName} = ${d.variableName};`);\n    e.fragment.code.add(\"}\");\n  }\n  _insertInputs(e, t) {\n    e[t].code.add(\"// INPUTS: \"), e[t].code.add(\"// --------------------------------------------------------- \");\n    for (const d of this.inputs()) d.isUsed && \"builtin\" !== d.variableInputType && (\"array\" === d.node.type ? e[t].code.add(`${d.variableInputType.padEnd(10)} ${d.node.elementType.type.padEnd(9)} ${d.variableName}[${d.node.size}];`) : \"array-2d\" === d.node.type ? e[t].code.add(`${d.variableInputType.padEnd(10)} ${d.node.elementType.type.padEnd(9)} ${d.variableName}[${d.node.size}]; // Emulated 2D Array. Not supported by ES3.0`) : e[t].code.add(`${d.variableInputType.padEnd(10)} ${d.node.type.padEnd(9)} ${d.variableName};`));\n  }\n}\nexport { o as ShaderGraphContext, t as ShaderInput, d as ShaderOutput };","map":{"version":3,"names":["cloneShaderNode","e","t","constructor","d","variableName","variableInputType","node","type","isUsed","clone","outVariableName","outVariableType","o","createVertex","a","n","i","r","s","u","get","push","uniformHydrated","uniformName","p","createFragment","Array","from","rootOutputNodes","find","h","indent","body","varCount","_inputShaderTypesByNodeUid","Map","_nodeEmitMap","set","uid","_outputShaderTypes","_transformFeedbackBindings","_transformFeedbackNames","Set","map","propertyKey","_usedInFragmentShader","shouldPruneOutputNode","has","setEmit","getEmit","inputs","values","getInput","nodes","length","pop","children","filter","Boolean","nodesOfTypeOrFunction","createSubgraphContext","insertVertexShader","vertex","code","add","_insertInputs","padEnd","split","join","insertFragmentShader","fragment","outputs","elementType","size","ShaderGraphContext","ShaderInput","ShaderOutput"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/2d/engine/webgl/shaderGraph/graph/ShaderGraphContext.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{cloneShaderNode as e}from\"./ShaderGraphNode.js\";class t{constructor(e,t,d){this.variableName=e,this.variableInputType=t,this.node=d,this.type=\"shader-input\",this.isUsed=!1}clone(){return new t(this.variableName,this.variableInputType,e(this.node))}}class d{constructor(e,t,d){this.outVariableName=e,this.outVariableType=t,this.node=d,this.type=\"shader-output\"}clone(){const t=new d(this.outVariableName,this.outVariableType,e(this.node));return t.variableName=this.variableName,t}}class o{static createVertex(e,a,n,i,r,s){const u=[];for(const d in e){const o=e[d],a=n.get(d);a?u.push(new t(a,\"builtin\",o)):u.push(new t(\"a_\"+d,\"in\",o))}for(const d of i){const e=d.uniformHydrated;u.push(new t(d.uniformName,\"uniform\",e))}const p=[];for(const t in a){const e=a[t];\"glPosition\"===t?p.push(new d(\"gl_Position\",\"builtin\",e)):\"glPointSize\"===t?p.push(new d(\"gl_PointSize\",\"builtin\",e)):p.push(new d(\"v_\"+t,\"out\",e))}return new o(u,p,r,s)}static createFragment(e,a,n,i,r,s){const u=[],p=Array.from(r.rootOutputNodes());for(const d in e){const o=e[d],a=n.get(d);if(a){u.push(new t(a,\"builtin\",o));continue}const i=p.find((e=>e.node===o));i&&u.push(new t(i.outVariableName,\"in\",o))}for(const d of i){const e=d.uniformHydrated;u.push(new t(d.uniformName,\"uniform\",e))}const h=[];for(const t in a){const e=a[t],o=n.get(t);\"discard\"===t?h.push(new d(null,\"discard\",e)):o?h.push(new d(o,\"builtin\",e)):h.push(new d(t,\"out\",e))}return new o(u,h,s)}constructor(e,t,d,o){this.type=\"shader-graph-context\",this.indent=0,this.body=\"\",this.varCount=0,this._inputShaderTypesByNodeUid=new Map,this._nodeEmitMap=new Map;for(const a of e)this._inputShaderTypesByNodeUid.set(a.node.uid,a);this._outputShaderTypes=t,this._transformFeedbackBindings=d,this._transformFeedbackNames=new Set(d.map((e=>\"v_\"+e.propertyKey))),this._usedInFragmentShader=o}shouldPruneOutputNode(e){return!!this._usedInFragmentShader&&(\"builtin\"!==e.outVariableType&&(!this._transformFeedbackNames.has(e.outVariableName)&&!this._usedInFragmentShader.has(e.node.uid)))}setEmit(e,t){this._nodeEmitMap.set(e.uid,t)}getEmit(e){return this._nodeEmitMap.get(e.uid)}inputs(){return this._inputShaderTypesByNodeUid.values()}getInput(e){return this._inputShaderTypesByNodeUid.get(e.uid)}*rootOutputNodes(){for(const e of this._outputShaderTypes)yield e}*nodes(){const e=[];for(const t of this._outputShaderTypes.values())e.push(t.node);for(;e.length;){const t=e.pop();\"number\"!=typeof t&&\"boolean\"!=typeof t&&e.push(...t.children.filter(Boolean)),yield t}}*nodesOfTypeOrFunction(){for(const e of this.nodes())\"number\"!=typeof e&&\"boolean\"!=typeof e&&(yield e)}createSubgraphContext(){const e=this.clone();return e.body=\"\",e.indent=this.indent+2,e._nodeEmitMap=new Map(this._nodeEmitMap),e}clone(){const e=new o([],this._outputShaderTypes,this._transformFeedbackBindings,this._usedInFragmentShader);return e._inputShaderTypesByNodeUid=this._inputShaderTypesByNodeUid,e.indent=this.indent,e.body=this.body,e.varCount=this.varCount,e._nodeEmitMap=this._nodeEmitMap,e}insertVertexShader(e){e.vertex.code.add(\"\"),this._insertInputs(e,\"vertex\"),e.vertex.code.add(\"\"),e.vertex.code.add(\"// OUTPUTS: \"),e.vertex.code.add(\"// --------------------------------------------------------- \");for(const t of this.rootOutputNodes()){const d=\"builtin\"===t.outVariableType;this.shouldPruneOutputNode(t)||(d?e.vertex.code.add(`// ${t.outVariableType.padEnd(7)} ${t.node.type.padEnd(9)} ${t.outVariableName};`):e.vertex.code.add(`${t.outVariableType.padEnd(10)} ${t.node.type.padEnd(9)} ${t.outVariableName};`))}e.vertex.code.add(\"\"),e.vertex.code.add(\"void main() {\"),e.vertex.code.add(\"  \"+this.body.split(\"\\n\").join(\"\\n  \"));for(const t of this.rootOutputNodes())this.shouldPruneOutputNode(t)||e.vertex.code.add(`  ${t.outVariableName} = ${t.variableName};`);e.vertex.code.add(\"}\")}insertFragmentShader(e){this._insertInputs(e,\"fragment\"),e.fragment.code.add(\"\"),e.fragment.code.add(\"// OUTPUTS: \"),e.fragment.code.add(\"// --------------------------------------------------------- \");let t=0;for(const d of this.rootOutputNodes()){\"builtin\"===d.outVariableType?e.fragment.code.add(`// ${d.outVariableType.padEnd(7)} ${d.node.type.padEnd(9)} ${d.outVariableName};`):e.outputs.add(d.outVariableName,d.node.type,t++)}e.fragment.code.add(\"\"),e.fragment.code.add(\"void main() {\"),e.fragment.code.add(\"  \"+this.body.split(\"\\n\").join(\"\\n  \"));for(const d of this.rootOutputNodes())\"discard\"===d.outVariableType?(e.fragment.code.add(\"  // TODO: Should ensure codegen for discard appears first in fragment shader\"),e.fragment.code.add(`  if (${d.variableName}) {`),e.fragment.code.add(\"    discard;\"),e.fragment.code.add(\"  }\"),e.fragment.code.add(\"  \")):e.fragment.code.add(`  ${d.outVariableName} = ${d.variableName};`);e.fragment.code.add(\"}\")}_insertInputs(e,t){e[t].code.add(\"// INPUTS: \"),e[t].code.add(\"// --------------------------------------------------------- \");for(const d of this.inputs())d.isUsed&&\"builtin\"!==d.variableInputType&&(\"array\"===d.node.type?e[t].code.add(`${d.variableInputType.padEnd(10)} ${d.node.elementType.type.padEnd(9)} ${d.variableName}[${d.node.size}];`):\"array-2d\"===d.node.type?e[t].code.add(`${d.variableInputType.padEnd(10)} ${d.node.elementType.type.padEnd(9)} ${d.variableName}[${d.node.size}]; // Emulated 2D Array. Not supported by ES3.0`):e[t].code.add(`${d.variableInputType.padEnd(10)} ${d.node.type.padEnd(9)} ${d.variableName};`))}}export{o as ShaderGraphContext,t as ShaderInput,d as ShaderOutput};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}