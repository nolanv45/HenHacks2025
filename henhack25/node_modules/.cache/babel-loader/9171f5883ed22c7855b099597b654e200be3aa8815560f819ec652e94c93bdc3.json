{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { _ as t } from \"../../../chunks/tslib.es6.js\";\nimport { property as s } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/has.js\";\nimport \"../../../core/Logger.js\";\nimport \"../../../core/RandomLCG.js\";\nimport { subclass as e } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport { isIntegerPixelType as r } from \"../rasterFormats/pixelRangeUtils.js\";\nimport o from \"./BaseRasterFunction.js\";\nimport i from \"./HillshadeFunctionArguments.js\";\nimport { getHillshadeOptions as n, hillshade as u, calculateHillshadeParams as p, gcsFactor as a } from \"./surfaceUtils.js\";\nlet c = class extends o {\n  constructor() {\n    super(...arguments), this.functionName = \"Hillshade\", this.functionArguments = null, this.rasterArgumentNames = [\"raster\"], this.isGCS = !1;\n  }\n  _bindSourceRasters() {\n    const t = this.sourceRasterInfos[0];\n    if (t.bandCount > 1) return {\n      success: !1,\n      supportsGPU: !1,\n      error: \"hillshade-function: source data must be single band\"\n    };\n    this.outputPixelType = this._getOutputPixelType(\"u8\");\n    const s = t.clone();\n    return this._removeStatsHistColormapVAT(s), s.pixelType = this.outputPixelType, s.bandCount = 1, s.statistics = [{\n      min: 0,\n      max: 255,\n      avg: 60,\n      stddev: 10\n    }], this.rasterInfo = s, this.isGCS = s.spatialReference?.isGeographic ?? !1, {\n      success: !0,\n      supportsGPU: !0\n    };\n  }\n  _processPixels(t) {\n    const s = t.pixelBlocks?.[0];\n    if (!s) return null;\n    const {\n        extent: e,\n        primaryPixelSizes: r\n      } = t,\n      o = r?.[0],\n      i = o ?? (e ? {\n        x: e.width / s.width,\n        y: e.height / s.height\n      } : {\n        x: 1,\n        y: 1\n      }),\n      p = n(this.functionArguments, i, this.isGCS),\n      a = u(s, p);\n    return a.pixelType = this.outputPixelType, a;\n  }\n  _getWebGLParameters() {\n    const t = n(this.functionArguments, {\n        x: 1,\n        y: 1\n      }, this.isGCS),\n      s = p(t),\n      {\n        slopeType: e,\n        zFactor: o,\n        pixelSizeFactor: i,\n        pixelSizePower: u\n      } = this.functionArguments,\n      c = \"scaled\" === e,\n      l = r(this.outputPixelType);\n    return {\n      ...s,\n      zFactor: o,\n      gcsFactor: this.isGCS ? a : 1,\n      pixelSizeFactor: c ? i : 0,\n      pixelSizePower: c ? u : 0,\n      isOutputRounded: l\n    };\n  }\n};\nt([s({\n  json: {\n    write: !0,\n    name: \"rasterFunction\"\n  }\n})], c.prototype, \"functionName\", void 0), t([s({\n  type: i,\n  json: {\n    write: !0,\n    name: \"rasterFunctionArguments\"\n  }\n})], c.prototype, \"functionArguments\", void 0), t([s()], c.prototype, \"rasterArgumentNames\", void 0), t([s({\n  json: {\n    write: !0\n  }\n})], c.prototype, \"isGCS\", void 0), c = t([e(\"esri.layers.support.rasterFunctions.HillshadeFunction\")], c);\nconst l = c;\nexport { l as default };","map":{"version":3,"names":["_","t","property","s","subclass","e","isIntegerPixelType","r","o","i","getHillshadeOptions","n","hillshade","u","calculateHillshadeParams","p","gcsFactor","a","c","constructor","arguments","functionName","functionArguments","rasterArgumentNames","isGCS","_bindSourceRasters","sourceRasterInfos","bandCount","success","supportsGPU","error","outputPixelType","_getOutputPixelType","clone","_removeStatsHistColormapVAT","pixelType","statistics","min","max","avg","stddev","rasterInfo","spatialReference","isGeographic","_processPixels","pixelBlocks","extent","primaryPixelSizes","x","width","y","height","_getWebGLParameters","slopeType","zFactor","pixelSizeFactor","pixelSizePower","l","isOutputRounded","json","write","name","prototype","type","default"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/layers/support/rasterFunctions/HillshadeFunction.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{_ as t}from\"../../../chunks/tslib.es6.js\";import{property as s}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/has.js\";import\"../../../core/Logger.js\";import\"../../../core/RandomLCG.js\";import{subclass as e}from\"../../../core/accessorSupport/decorators/subclass.js\";import{isIntegerPixelType as r}from\"../rasterFormats/pixelRangeUtils.js\";import o from\"./BaseRasterFunction.js\";import i from\"./HillshadeFunctionArguments.js\";import{getHillshadeOptions as n,hillshade as u,calculateHillshadeParams as p,gcsFactor as a}from\"./surfaceUtils.js\";let c=class extends o{constructor(){super(...arguments),this.functionName=\"Hillshade\",this.functionArguments=null,this.rasterArgumentNames=[\"raster\"],this.isGCS=!1}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:\"hillshade-function: source data must be single band\"};this.outputPixelType=this._getOutputPixelType(\"u8\");const s=t.clone();return this._removeStatsHistColormapVAT(s),s.pixelType=this.outputPixelType,s.bandCount=1,s.statistics=[{min:0,max:255,avg:60,stddev:10}],this.rasterInfo=s,this.isGCS=s.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const s=t.pixelBlocks?.[0];if(!s)return null;const{extent:e,primaryPixelSizes:r}=t,o=r?.[0],i=o??(e?{x:e.width/s.width,y:e.height/s.height}:{x:1,y:1}),p=n(this.functionArguments,i,this.isGCS),a=u(s,p);return a.pixelType=this.outputPixelType,a}_getWebGLParameters(){const t=n(this.functionArguments,{x:1,y:1},this.isGCS),s=p(t),{slopeType:e,zFactor:o,pixelSizeFactor:i,pixelSizePower:u}=this.functionArguments,c=\"scaled\"===e,l=r(this.outputPixelType);return{...s,zFactor:o,gcsFactor:this.isGCS?a:1,pixelSizeFactor:c?i:0,pixelSizePower:c?u:0,isOutputRounded:l}}};t([s({json:{write:!0,name:\"rasterFunction\"}})],c.prototype,\"functionName\",void 0),t([s({type:i,json:{write:!0,name:\"rasterFunctionArguments\"}})],c.prototype,\"functionArguments\",void 0),t([s()],c.prototype,\"rasterArgumentNames\",void 0),t([s({json:{write:!0}})],c.prototype,\"isGCS\",void 0),c=t([e(\"esri.layers.support.rasterFunctions.HillshadeFunction\")],c);const l=c;export{l as default};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}