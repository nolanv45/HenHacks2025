{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../chunks/tslib.es6.js\";\nimport t from \"../../../core/Error.js\";\nimport i from \"../../../core/Logger.js\";\nimport { property as n } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/has.js\";\nimport \"../../../core/RandomLCG.js\";\nimport { subclass as s } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport o from \"../../../geometry/Extent.js\";\nimport { isAxesOrderReversedForWkid as r } from \"../../ogc/crsUtils.js\";\nimport { getCapabilities as a, describeCoverage as l } from \"../../ogc/wcsUtils.js\";\nimport c from \"../DimensionalDefinition.js\";\nimport d from \"./BaseRaster.js\";\nimport { convertOleDateTimeToEpoch as f } from \"./multidimensionalUtils.js\";\nimport { parse as p } from \"./multipartParser.js\";\nimport { standardizeInterpolations as u } from \"./wcsCoverageParser.js\";\nimport { getFormat as h } from \"../rasterFormats/RasterCodec.js\";\nimport { clip as m } from \"../rasterFunctions/pixelUtils.js\";\nconst g = [\"nearest neighbor\", \"bilinear\", \"bicubic\"],\n  w = [\"nearest\", \"linear\", \"cubic\"],\n  v = \"response is not a supported multipart/related mediaType with inline tiff,  switching to compatibility mode\",\n  y = \"response is not a supported multipart mediaType with inline tiff\",\n  x = \"response is base64 encoded which may impact layer display performance\",\n  I = \"server returns an exception\",\n  C = new Set([\"1.0.0\", \"1.1.0\", \"1.1.1\", \"1.1.2\", \"2.0.1\"]);\nlet b = class extends d {\n  constructor() {\n    super(...arguments), this.datasetFormat = \"WCSServer\", this.tileType = \"Raster\";\n  }\n  get rasterId() {\n    return `${this.url}-${this.coverageId}-${this.version}`;\n  }\n  async fetchRawTile(e, i, n) {\n    let s = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    if (this.isBlockOutside(e, i, n)) return null;\n    const {\n        nativePixelSize: o,\n        spatialReference: r\n      } = this.rasterInfo,\n      a = 2 ** e,\n      l = o.x * a,\n      c = o.y * a,\n      {\n        blockWidth: d,\n        blockHeight: f\n      } = this.getBlockWidthHeight(e),\n      {\n        origin: p\n      } = this.rasterInfo.storageInfo.tileInfo,\n      u = this.getTileExtent({\n        x: l,\n        y: c\n      }, i, n, p, r, [d, f]),\n      h = this.rasterInfo.extent,\n      g = u.xmax > h.xmax,\n      w = u.ymin < h.ymin,\n      v = g || w;\n    let y = u,\n      x = d,\n      I = f;\n    if (v && (y = u.clone().intersection(h), null != y && (g && (x = Math.floor((y.xmax - y.xmin) / l), y.xmax = y.xmin + l * x), w && (I = Math.floor((y.ymax - y.ymin) / c), y.ymin = y.ymax - c * I))), null == y || x <= 1 || I <= 1) return null;\n    const C = await this._getCoverage(y, x, I, a, s);\n    if (!C) return null;\n    const {\n        coverageDescription: b\n      } = this.coverageInfo,\n      {\n        noDataValue: $,\n        multidimensionalInfo: S\n      } = this.rasterInfo,\n      {\n        multidimensionalDefinition: j\n      } = s;\n    let T;\n    if (null != S && null != j && j.length) {\n      const e = j[0].variableName;\n      if (\"2.0\" === b.version) {\n        const t = b.rangeType[0].find(t => t.name === e);\n        T = t?.nilValue;\n      } else if (\"1.1\" === b.version) {\n        const t = b.range.find(t => t.identifier === e);\n        T = t?.nullValues;\n      }\n    }\n    const L = T ?? $,\n      P = await this.decodePixelBlock(C, {\n        width: x,\n        height: I,\n        planes: null,\n        pixelType: null,\n        tiffNoDataValue: Array.isArray(L) ? L[0] : L,\n        matchAllNoData: !0\n      });\n    if (null == P) return null;\n    if (P && (P.width !== x || P.height !== I)) throw new t(\"wcsraster-fetch\", `the response has unexpected dimension width: ${P.width}, height: {pixelBlock.height}`);\n    return v ? m(P, {\n      x: 0,\n      y: 0\n    }, {\n      width: f,\n      height: f\n    }) : P;\n  }\n  async _open(e) {\n    const {\n        customFetchParameters: i\n      } = this.ioConfig,\n      n = e?.signal,\n      s = await a(this.url, {\n        version: i?.version ?? this.version,\n        customParameters: i,\n        signal: n\n      });\n    if (this.capabilities = s, !this.version) {\n      let e = s.version.slice(0, 3);\n      \"2.0\" === e || \"1.1\" === e || \"1.0\" === e ? this.version = s.version : (e = s.supportedVersions.find(e => \"2.0.1\" === e) || s.supportedVersions.find(e => \"2.0\" === e.slice(0, 3)) || s.supportedVersions.find(e => \"1.1\" === e.slice(0, 3)) || s.supportedVersions.find(e => \"1.0\" === e.slice(0, 3)) || \"1.0.0\", this.version = e);\n    }\n    const {\n      version: o\n    } = this;\n    if (!C.has(o)) throw new t(\"wcsraster-open\", `unsupported WCS version ${o}`);\n    const {\n      gridCoverages: r\n    } = s;\n    if (!r.length) throw new t(\"wcsraster-open\", \"cannot find rectified grid coverages\");\n    this.coverageId ??= r[0].id;\n    const {\n        coverageId: c\n      } = this,\n      d = r.find(e => e.id === c);\n    if (null == d) throw new t(\"wcsraster-open\", `the coverageId ${c} does not exist in capabilities`);\n    const f = await l(this.url, {\n      coverageIds: [c],\n      version: o,\n      customParameters: i,\n      signal: n\n    });\n    if (this.coverageInfo = f[0], \"2.0\" === o.slice(0, 3)) {\n      const {\n        coverageInfo: e\n      } = this;\n      e.lonLatEnvelope = d.lonLatEnvelope, e.supportedInterpolations = u(s.supportedInterpolations), this._patchDimensionValues201(c, n);\n    }\n    this.datasetName = this.coverageInfo.title;\n    const {\n      rasterInfo: p\n    } = this.coverageInfo;\n    if (this.createRemoteDatasetStorageInfo(p, 512, 512), this._set(\"rasterInfo\", p), null == p.spatialReference) throw new t(\"wcsraster-open\", `coverage without spatial reference is not supported: ${c}`);\n    const {\n      pixelType: h,\n      bandCount: m\n    } = await this._getPixelTypeAndBandCount(n);\n    p.pixelType = h, 1 === p.bandCount && m > 1 && (p.bandCount = m), this.updateTileInfo();\n  }\n  async _patchDimensionValues201(e, t) {\n    const {\n        coverageInfo: i\n      } = this,\n      n = i.rasterInfo.multidimensionalInfo?.variables,\n      s = C.has(\"1.1.2\") ? \"1.1.2\" : C.has(\"1.1.1\") ? \"1.1.1\" : C.has(\"1.1.0\") ? \"1.1.0\" : null,\n      {\n        customFetchParameters: o\n      } = this.ioConfig;\n    if (n && s) try {\n      const i = this.url.includes(\"/ImageServer/\"),\n        r = e.length > 8 && e.startsWith(\"Coverage\") && i ? e.slice(8) : e,\n        a = await l(this.url, {\n          coverageIds: [r ?? e],\n          version: s,\n          customParameters: o,\n          signal: t\n        }).catch(() => {\n          if (r) return l(this.url, {\n            coverageIds: [e],\n            version: s,\n            customParameters: o,\n            signal: t\n          });\n        }),\n        c = a?.[0].rasterInfo.multidimensionalInfo?.variables;\n      if (c) for (const e of n) {\n        const t = c.find(_ref => {\n          let {\n            name: t\n          } = _ref;\n          return t === e.name;\n        });\n        if (t?.dimensions?.length) for (let n = e.dimensions.length - 1; n >= 0; n--) {\n          const s = e.dimensions[n],\n            o = t.dimensions.find(_ref2 => {\n              let {\n                name: e\n              } = _ref2;\n              return e === s.name;\n            });\n          o ? o.values && o.extent?.join(\",\") === s.extent?.join(\",\") && (e.dimensions[n] = {\n            ...s,\n            values: o.values\n          }) : i && e.dimensions.splice(n, 1);\n        }\n      }\n    } catch {}\n  }\n  async _getPixelTypeAndBandCount(e) {\n    const {\n        pixelSize: n,\n        extent: s,\n        multidimensionalInfo: r\n      } = this.rasterInfo,\n      a = s.center,\n      l = new o({\n        xmin: a.x - n.x,\n        xmax: a.x + n.x,\n        ymin: a.y - n.y,\n        ymax: a.y + n.y,\n        spatialReference: s.spatialReference\n      });\n    let d = [];\n    if (null != r) {\n      const e = r.variables[0];\n      d = [], e.dimensions.forEach(t => {\n        d.push(new c({\n          variableName: e.name,\n          dimensionName: t.name,\n          values: t.hasRegularIntervals ? t.extent?.[0] : t.values?.[0],\n          isSlice: !0\n        }));\n      });\n    }\n    const {\n        coverageDescription: f\n      } = this.coverageInfo,\n      p = {\n        interpolation: \"nearest\",\n        multidimensionalDefinition: d,\n        signal: e\n      },\n      {\n        version: u\n      } = f,\n      {\n        ioConfig: h\n      } = this,\n      m = \"2.0\" === u && null == h.allowAnyMediaType || \"1.1\" === u && null == h.use2GridOffsets;\n    let g;\n    try {\n      g = await this._getCoverage(l, 2, 2, 1, p, !0);\n    } catch (y) {\n      if (!m) throw y;\n      if (\"1.1\" === u) {\n        if (!y.details?.isResolutionMismatch) throw y;\n        h.use2GridOffsets = !0;\n      }\n    }\n    if (!g && m && (\"2.0\" === u && (h.allowAnyMediaType = !0), g = await this._getCoverage(l, 2, 2, 1, p), g && i.getLogger(this).warn(\"wcsraster:getcoverage\", v)), !g) throw new t(\"wcsraster-open\", \"unable to determine pixel type\");\n    const w = await this.decodePixelBlock(g, {\n      width: 2,\n      height: 2,\n      planes: null,\n      pixelType: null\n    });\n    if (null == w) throw new t(\"wcsraster-open\", \"unable to determine pixel type\");\n    return {\n      pixelType: w.pixelType,\n      bandCount: w.getPlaneCount() ?? 0\n    };\n  }\n  async _getCoverage(e, n, s, o, r) {\n    let a = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : !1;\n    const {\n        coverageDescription: l\n      } = this.coverageInfo,\n      {\n        version: c\n      } = l,\n      d = \"2.0\" === c ? this._getCoverage201Parameters(e, n, s, o, r, l) : \"1.1\" === c ? this._getCoverage110Parameters(e, n, s, r, l) : this._getCoverage100Parameters(e, n, s, r),\n      f = \"2.0\" === c ? await this.request(this._constructWCS201Url(d), {\n        signal: r.signal,\n        responseType: \"array-buffer\"\n      }) : await this.request(this.url, {\n        query: d,\n        signal: r.signal,\n        responseType: \"array-buffer\"\n      });\n    if (\"1.0\" === c) return f.data;\n    if (\"2.0\" === c && !1 !== this.ioConfig.allowAnyMediaType) {\n      if (\"tiff\" === h(f.data)) return a && (this.ioConfig.allowAnyMediaType = !0, i.getLogger(this).warn(\"wcsraster:getcoverage\", v)), f.data;\n    }\n    const u = p(f);\n    if (u.isMultipart && u.data) {\n      const e = u.data.find(e => e.isValidImage);\n      return a && \"base64\" === e?.contentTransferEncoding && i.getLogger(this).warn(\"wcsraster:getcoverage\", x), e?.contentData;\n    }\n    const m = new Uint8Array(f.data, 0, Math.min(f.data.byteLength, 2e3)),\n      g = String.fromCharCode.apply(null, m).toLowerCase().includes(\"exception\"),\n      w = g && String.fromCharCode.apply(null, m).includes(\"A non-zero RESX/RESY or WIDTH/HEIGHT is required but neither was provided\");\n    if (g) throw new t(\"wcsraster:getcoverage\", I, {\n      isResolutionMismatch: w\n    });\n    throw new t(\"wcsraster:getcoverage\", y);\n  }\n  _getInterpolationIndex(e) {\n    return e && this.coverageInfo.supportedInterpolations?.includes(e) ? \"nearest\" === e ? 0 : \"bilinear\" === e ? 1 : \"cubic\" === e ? 2 : 0 : 0;\n  }\n  _getCoverage100Parameters(e, t, i, n) {\n    const s = `${e.xmin},${e.ymin},${e.xmax},${e.ymax}`,\n      o = e.spatialReference.wkid,\n      r = (this.coverageInfo.supportedFormats || []).find(e => e.toLowerCase().includes(\"tiff\")) || \"GEOTIFF\",\n      {\n        bandIds: a,\n        interpolation: l\n      } = n,\n      c = this._getInterpolationIndex(l),\n      d = a ? a.map(e => this.coverageInfo.bandNames[e]) : null,\n      f = g[c],\n      {\n        multidimensionalDefinition: p\n      } = n;\n    let u;\n    if (null != p && null != this.rasterInfo.multidimensionalInfo) {\n      const e = p.find(e => \"StdTime\" === e.dimensionName);\n      let t = e?.values;\n      t && t.length > 0 && (Array.isArray(t[0]) && (t = t[0]), u = t.map(e => $(e)).join(\",\"));\n    }\n    return {\n      service: \"WCS\",\n      request: \"GetCoverage\",\n      version: this.version,\n      coverage: this.coverageId,\n      format: r,\n      crs: `EPSG:${o}`,\n      bbox: s,\n      width: t,\n      height: i,\n      time: u,\n      interpolation: f,\n      band: d?.join(\",\")\n    };\n  }\n  _getCoverage110Parameters(e, t, i, n, s) {\n    const {\n        multidimensionalDefinition: o,\n        bandIds: a,\n        interpolation: l\n      } = n,\n      c = e.spatialReference.wkid,\n      d = `urn:ogc:def:crs:EPSG::${c}`,\n      f = (this.coverageInfo.supportedFormats || []).find(e => e.toLowerCase().includes(\"tiff\")) || \"image/tiff\",\n      p = this._getInterpolationIndex(l),\n      u = w[p],\n      h = null == l || 0 === this.coverageInfo.supportedInterpolations?.indexOf(l),\n      m = s.domain.spatialDomain,\n      g = m.origin.x <= m.envelope.xmin && m.origin.y <= m.envelope.ymin,\n      v = e.width / t,\n      y = e.height / i * (g ? 1 : -1),\n      x = g ? [e.xmin, e.ymin] : [e.xmin, e.ymax],\n      I = m.useEPSGAxis && r(c),\n      C = I ? `${x[1]},${x[0]}` : `${x[0]},${x[1]}`,\n      b = this.ioConfig.use2GridOffsets,\n      S = I ? b ? `${y},${v}` : `${y},0,0,${v}` : b ? `${v},${y}` : `${v},0,0,${y}`,\n      j = v / 2,\n      T = e.xmin + j,\n      L = e.xmax - j,\n      P = Math.abs(y) / 2,\n      R = e.ymin + P,\n      _ = e.ymax - P,\n      D = I ? `${R},${T},${_},${L},${d}` : `${T},${R},${L},${_},${d}`,\n      A = s.range.find(e => e.axis.some(e => e.identifier.toLowerCase().includes(\"band\")));\n    let E,\n      G = A && u && a ? h ? `${A.identifier}[${A.axis[0].identifier}[${a.join(\",\")}]]` : `${A.identifier}:${u}[${A.axis[0].identifier}[${a.join(\",\")}]]` : null;\n    if (null != o && o.length) for (let r = 0; r < o.length; r++) {\n      let e = o[r].values;\n      const t = o[r].dimensionName?.toLowerCase(),\n        i = o[r].variableName?.toLowerCase(),\n        n = s.range.find(e => e.identifier.toLowerCase() === i);\n      if (e.length > 0) if (Array.isArray(e[0]) && (e = e[0]), \"stdtime\" === t) E = e.map(e => $(e)).join(\",\");else if (n) {\n        const i = n.axis.find(e => e.identifier.toLowerCase() === t);\n        i && (G = h ? n.identifier + \"[\" + i.identifier + \"[\" + e.join(\",\") + \"]]\" : n.identifier + \":\" + u + \"[\" + i.identifier + \"[\" + e.join(\",\") + \"]]\");\n      }\n      r === o.length - 1 && n && !G && (G = h ? n.identifier : n.identifier + \":\" + u);\n    }\n    return {\n      service: \"WCS\",\n      request: \"GetCoverage\",\n      version: this.version,\n      identifier: this.coverageId,\n      format: f,\n      crs: `EPSG:${c}`,\n      boundingbox: D,\n      gridCS: \"urn:ogc:def:cs:OGC:0.0:Grid2dSquareCS\",\n      gridType: \"urn:ogc:def:method:WCS:1.1:2dGridIn2dCrs\",\n      gridOrigin: C,\n      gridOffsets: S,\n      gridBaseCRS: d,\n      timeSequence: E,\n      rangeSubset: G\n    };\n  }\n  _getCoverage201Parameters(e, t, i, n, s, o) {\n    const {\n        multidimensionalDefinition: r,\n        interpolation: a\n      } = s,\n      l = this._getInterpolationIndex(a);\n    let c = null;\n    const {\n      supportedInterpolations: d\n    } = this.capabilities;\n    if (d?.length) switch (l) {\n      case 0:\n        c = d.find(e => e.toLowerCase().includes(\"nearest\"));\n        break;\n      case 1:\n        c = d.find(e => e.toLowerCase().includes(\"linear\"));\n        break;\n      case 2:\n        c = d.find(e => e.toLowerCase().includes(\"cubic\") || e.toLowerCase().includes(\"quadratic\"));\n    }\n    const f = (this.coverageInfo.supportedFormats || []).find(e => e.toLowerCase().includes(\"tiff\")) || \"image/tiff\",\n      {\n        bandNames: p\n      } = this.coverageInfo,\n      {\n        boundedBy: u,\n        domainSet: h,\n        rangeType: m\n      } = o,\n      g = u.isEastFirst ? 0 : 1,\n      w = 1 - g,\n      {\n        axisLabels: v\n      } = u,\n      y = v[g],\n      x = v[w],\n      I = `http://www.opengis.net/def/crs/EPSG/0/${e.spatialReference.wkid}`,\n      C = I,\n      b = [];\n    b.push(`${y}(${e.xmin},${e.xmax})`), b.push(`${x}(${e.ymin},${e.ymax})`);\n    const S = [];\n    if (v.length > 2) for (let _ = 2; _ < v.length; _++) {\n      const e = h.origin[_];\n      if (v[_].toLowerCase().includes(\"time\")) {\n        let t = e.toString();\n        u.uomLabels?.[_].toLowerCase().includes(\"ole\") && (S.push(v[_]), t = $(e, !0)), b.push(v[_] + \",http://www.opengis.net(\" + t + \")\");\n      } else b.push(v[_] + \",http://www.opengis.net(\" + e + \")\");\n    }\n    let j = null;\n    if (null != r && r.length) {\n      const e = [];\n      m.forEach(t => t.forEach(t => e.push(t.name)));\n      const t = [];\n      for (let i = 0; i < r.length; i++) {\n        const n = v.find(e => e === r[i].dimensionName),\n          s = e.find(e => e === r[i].variableName);\n        if (t.includes(s) || t.push(s), n) {\n          let e = r[i].values;\n          if (e.length > 0) {\n            Array.isArray(e[0]) && (e = e[0]);\n            let t = \"\";\n            t = n.toLowerCase().includes(\"time\") ? e.map(e => $(e)).join(\",\") : e.join(\",\");\n            const i = b.findIndex(e => 0 === e.indexOf(n + \",http://www.opengis.net\"));\n            -1 === i && b.push(n + \",http://www.opengis.net(\" + t + \")\"), -1 === i || b[i].includes(\"(\" + t + \")\") || b.splice(i, 1, n + \",http://www.opengis.net(\" + t + \")\");\n          }\n        }\n      }\n      t.length && (j = t.join(\",\"));\n    } else if (p?.length >= 2) {\n      j = (s.bandIds ? s.bandIds.map(e => p[e]) : p).join(\",\");\n    }\n    const T = b.join(\"&subset=\"),\n      L = !o.domainSet.hasSameAxisLabelsAsBoundedBy && !1 !== this.ioConfig.allowScaleFactor,\n      P = L ? null : `${y}(${t}),${x}(${i})`,\n      R = L ? 1 / n : null;\n    return {\n      service: \"WCS\",\n      request: \"GetCoverage\",\n      version: this.version,\n      coverageId: this.coverageId,\n      rangesubset: j,\n      interpolation: c,\n      scaleSize: P,\n      scaleFactor: R,\n      subset: T,\n      format: f,\n      mediaType: this.ioConfig.allowAnyMediaType ? null : \"multipart/related\",\n      outputcrs: I,\n      subsettingcrs: C\n    };\n  }\n  _constructWCS201Url(e) {\n    const t = {\n        ...this.ioConfig.customFetchParameters,\n        ...e\n      },\n      i = [];\n    Object.keys(t).forEach(e => {\n      const n = t[e];\n      null != n && (\"subset\" === e ? \"string\" == typeof n && n.split(\"&subset=\").forEach(e => {\n        e && i.push(`subset=${encodeURIComponent(e)}`);\n      }) : i.push(`${e}=${encodeURIComponent(n)}`));\n    });\n    return `${encodeURI(this.url)}?${i.join(\"&\")}`;\n  }\n};\nfunction $(e) {\n  let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;\n  return (t ? new Date(f(e)) : new Date(e)).toISOString();\n}\ne([n({\n  type: String,\n  json: {\n    write: !0\n  }\n})], b.prototype, \"datasetFormat\", void 0), e([n({\n  readOnly: !0\n})], b.prototype, \"tileType\", void 0), e([n({\n  type: String,\n  json: {\n    write: !0\n  }\n})], b.prototype, \"version\", void 0), e([n({\n  type: String,\n  json: {\n    write: !0\n  }\n})], b.prototype, \"coverageId\", void 0), e([n({\n  readOnly: !0\n})], b.prototype, \"rasterId\", null), b = e([s(\"esri.layers.support.rasterDatasets.WCSRaster\")], b);\nconst S = b;\nexport { S as default };","map":{"version":3,"names":["_","e","t","i","property","n","subclass","s","o","isAxesOrderReversedForWkid","r","getCapabilities","a","describeCoverage","l","c","d","convertOleDateTimeToEpoch","f","parse","p","standardizeInterpolations","u","getFormat","h","clip","m","g","w","v","y","x","I","C","Set","b","constructor","arguments","datasetFormat","tileType","rasterId","url","coverageId","version","fetchRawTile","length","undefined","isBlockOutside","nativePixelSize","spatialReference","rasterInfo","blockWidth","blockHeight","getBlockWidthHeight","origin","storageInfo","tileInfo","getTileExtent","extent","xmax","ymin","clone","intersection","Math","floor","xmin","ymax","_getCoverage","coverageDescription","coverageInfo","noDataValue","$","multidimensionalInfo","S","multidimensionalDefinition","j","T","variableName","rangeType","find","name","nilValue","range","identifier","nullValues","L","P","decodePixelBlock","width","height","planes","pixelType","tiffNoDataValue","Array","isArray","matchAllNoData","_open","customFetchParameters","ioConfig","signal","customParameters","capabilities","slice","supportedVersions","has","gridCoverages","id","coverageIds","lonLatEnvelope","supportedInterpolations","_patchDimensionValues201","datasetName","title","createRemoteDatasetStorageInfo","_set","bandCount","_getPixelTypeAndBandCount","updateTileInfo","variables","includes","startsWith","catch","_ref","dimensions","_ref2","values","join","splice","pixelSize","center","forEach","push","dimensionName","hasRegularIntervals","isSlice","interpolation","allowAnyMediaType","use2GridOffsets","details","isResolutionMismatch","getLogger","warn","getPlaneCount","_getCoverage201Parameters","_getCoverage110Parameters","_getCoverage100Parameters","request","_constructWCS201Url","responseType","query","data","isMultipart","isValidImage","contentTransferEncoding","contentData","Uint8Array","min","byteLength","String","fromCharCode","apply","toLowerCase","_getInterpolationIndex","wkid","supportedFormats","bandIds","map","bandNames","service","coverage","format","crs","bbox","time","band","indexOf","domain","spatialDomain","envelope","useEPSGAxis","abs","R","D","A","axis","some","E","G","boundingbox","gridCS","gridType","gridOrigin","gridOffsets","gridBaseCRS","timeSequence","rangeSubset","boundedBy","domainSet","isEastFirst","axisLabels","toString","uomLabels","findIndex","hasSameAxisLabelsAsBoundedBy","allowScaleFactor","rangesubset","scaleSize","scaleFactor","subset","mediaType","outputcrs","subsettingcrs","Object","keys","split","encodeURIComponent","encodeURI","Date","toISOString","type","json","write","prototype","readOnly","default"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/layers/support/rasterDatasets/WCSRaster.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../chunks/tslib.es6.js\";import t from\"../../../core/Error.js\";import i from\"../../../core/Logger.js\";import{property as n}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/has.js\";import\"../../../core/RandomLCG.js\";import{subclass as s}from\"../../../core/accessorSupport/decorators/subclass.js\";import o from\"../../../geometry/Extent.js\";import{isAxesOrderReversedForWkid as r}from\"../../ogc/crsUtils.js\";import{getCapabilities as a,describeCoverage as l}from\"../../ogc/wcsUtils.js\";import c from\"../DimensionalDefinition.js\";import d from\"./BaseRaster.js\";import{convertOleDateTimeToEpoch as f}from\"./multidimensionalUtils.js\";import{parse as p}from\"./multipartParser.js\";import{standardizeInterpolations as u}from\"./wcsCoverageParser.js\";import{getFormat as h}from\"../rasterFormats/RasterCodec.js\";import{clip as m}from\"../rasterFunctions/pixelUtils.js\";const g=[\"nearest neighbor\",\"bilinear\",\"bicubic\"],w=[\"nearest\",\"linear\",\"cubic\"],v=\"response is not a supported multipart/related mediaType with inline tiff,  switching to compatibility mode\",y=\"response is not a supported multipart mediaType with inline tiff\",x=\"response is base64 encoded which may impact layer display performance\",I=\"server returns an exception\",C=new Set([\"1.0.0\",\"1.1.0\",\"1.1.1\",\"1.1.2\",\"2.0.1\"]);let b=class extends d{constructor(){super(...arguments),this.datasetFormat=\"WCSServer\",this.tileType=\"Raster\"}get rasterId(){return`${this.url}-${this.coverageId}-${this.version}`}async fetchRawTile(e,i,n,s={}){if(this.isBlockOutside(e,i,n))return null;const{nativePixelSize:o,spatialReference:r}=this.rasterInfo,a=2**e,l=o.x*a,c=o.y*a,{blockWidth:d,blockHeight:f}=this.getBlockWidthHeight(e),{origin:p}=this.rasterInfo.storageInfo.tileInfo,u=this.getTileExtent({x:l,y:c},i,n,p,r,[d,f]),h=this.rasterInfo.extent,g=u.xmax>h.xmax,w=u.ymin<h.ymin,v=g||w;let y=u,x=d,I=f;if(v&&(y=u.clone().intersection(h),null!=y&&(g&&(x=Math.floor((y.xmax-y.xmin)/l),y.xmax=y.xmin+l*x),w&&(I=Math.floor((y.ymax-y.ymin)/c),y.ymin=y.ymax-c*I))),null==y||x<=1||I<=1)return null;const C=await this._getCoverage(y,x,I,a,s);if(!C)return null;const{coverageDescription:b}=this.coverageInfo,{noDataValue:$,multidimensionalInfo:S}=this.rasterInfo,{multidimensionalDefinition:j}=s;let T;if(null!=S&&null!=j&&j.length){const e=j[0].variableName;if(\"2.0\"===b.version){const t=b.rangeType[0].find((t=>t.name===e));T=t?.nilValue}else if(\"1.1\"===b.version){const t=b.range.find((t=>t.identifier===e));T=t?.nullValues}}const L=T??$,P=await this.decodePixelBlock(C,{width:x,height:I,planes:null,pixelType:null,tiffNoDataValue:Array.isArray(L)?L[0]:L,matchAllNoData:!0});if(null==P)return null;if(P&&(P.width!==x||P.height!==I))throw new t(\"wcsraster-fetch\",`the response has unexpected dimension width: ${P.width}, height: {pixelBlock.height}`);return v?m(P,{x:0,y:0},{width:f,height:f}):P}async _open(e){const{customFetchParameters:i}=this.ioConfig,n=e?.signal,s=await a(this.url,{version:i?.version??this.version,customParameters:i,signal:n});if(this.capabilities=s,!this.version){let e=s.version.slice(0,3);\"2.0\"===e||\"1.1\"===e||\"1.0\"===e?this.version=s.version:(e=s.supportedVersions.find((e=>\"2.0.1\"===e))||s.supportedVersions.find((e=>\"2.0\"===e.slice(0,3)))||s.supportedVersions.find((e=>\"1.1\"===e.slice(0,3)))||s.supportedVersions.find((e=>\"1.0\"===e.slice(0,3)))||\"1.0.0\",this.version=e)}const{version:o}=this;if(!C.has(o))throw new t(\"wcsraster-open\",`unsupported WCS version ${o}`);const{gridCoverages:r}=s;if(!r.length)throw new t(\"wcsraster-open\",\"cannot find rectified grid coverages\");this.coverageId??=r[0].id;const{coverageId:c}=this,d=r.find((e=>e.id===c));if(null==d)throw new t(\"wcsraster-open\",`the coverageId ${c} does not exist in capabilities`);const f=await l(this.url,{coverageIds:[c],version:o,customParameters:i,signal:n});if(this.coverageInfo=f[0],\"2.0\"===o.slice(0,3)){const{coverageInfo:e}=this;e.lonLatEnvelope=d.lonLatEnvelope,e.supportedInterpolations=u(s.supportedInterpolations),this._patchDimensionValues201(c,n)}this.datasetName=this.coverageInfo.title;const{rasterInfo:p}=this.coverageInfo;if(this.createRemoteDatasetStorageInfo(p,512,512),this._set(\"rasterInfo\",p),null==p.spatialReference)throw new t(\"wcsraster-open\",`coverage without spatial reference is not supported: ${c}`);const{pixelType:h,bandCount:m}=await this._getPixelTypeAndBandCount(n);p.pixelType=h,1===p.bandCount&&m>1&&(p.bandCount=m),this.updateTileInfo()}async _patchDimensionValues201(e,t){const{coverageInfo:i}=this,n=i.rasterInfo.multidimensionalInfo?.variables,s=C.has(\"1.1.2\")?\"1.1.2\":C.has(\"1.1.1\")?\"1.1.1\":C.has(\"1.1.0\")?\"1.1.0\":null,{customFetchParameters:o}=this.ioConfig;if(n&&s)try{const i=this.url.includes(\"/ImageServer/\"),r=e.length>8&&e.startsWith(\"Coverage\")&&i?e.slice(8):e,a=await l(this.url,{coverageIds:[r??e],version:s,customParameters:o,signal:t}).catch((()=>{if(r)return l(this.url,{coverageIds:[e],version:s,customParameters:o,signal:t})})),c=a?.[0].rasterInfo.multidimensionalInfo?.variables;if(c)for(const e of n){const t=c.find((({name:t})=>t===e.name));if(t?.dimensions?.length)for(let n=e.dimensions.length-1;n>=0;n--){const s=e.dimensions[n],o=t.dimensions.find((({name:e})=>e===s.name));o?o.values&&o.extent?.join(\",\")===s.extent?.join(\",\")&&(e.dimensions[n]={...s,values:o.values}):i&&e.dimensions.splice(n,1)}}}catch{}}async _getPixelTypeAndBandCount(e){const{pixelSize:n,extent:s,multidimensionalInfo:r}=this.rasterInfo,a=s.center,l=new o({xmin:a.x-n.x,xmax:a.x+n.x,ymin:a.y-n.y,ymax:a.y+n.y,spatialReference:s.spatialReference});let d=[];if(null!=r){const e=r.variables[0];d=[],e.dimensions.forEach((t=>{d.push(new c({variableName:e.name,dimensionName:t.name,values:t.hasRegularIntervals?t.extent?.[0]:t.values?.[0],isSlice:!0}))}))}const{coverageDescription:f}=this.coverageInfo,p={interpolation:\"nearest\",multidimensionalDefinition:d,signal:e},{version:u}=f,{ioConfig:h}=this,m=\"2.0\"===u&&null==h.allowAnyMediaType||\"1.1\"===u&&null==h.use2GridOffsets;let g;try{g=await this._getCoverage(l,2,2,1,p,!0)}catch(y){if(!m)throw y;if(\"1.1\"===u){if(!y.details?.isResolutionMismatch)throw y;h.use2GridOffsets=!0}}if(!g&&m&&(\"2.0\"===u&&(h.allowAnyMediaType=!0),g=await this._getCoverage(l,2,2,1,p),g&&i.getLogger(this).warn(\"wcsraster:getcoverage\",v)),!g)throw new t(\"wcsraster-open\",\"unable to determine pixel type\");const w=await this.decodePixelBlock(g,{width:2,height:2,planes:null,pixelType:null});if(null==w)throw new t(\"wcsraster-open\",\"unable to determine pixel type\");return{pixelType:w.pixelType,bandCount:w.getPlaneCount()??0}}async _getCoverage(e,n,s,o,r,a=!1){const{coverageDescription:l}=this.coverageInfo,{version:c}=l,d=\"2.0\"===c?this._getCoverage201Parameters(e,n,s,o,r,l):\"1.1\"===c?this._getCoverage110Parameters(e,n,s,r,l):this._getCoverage100Parameters(e,n,s,r),f=\"2.0\"===c?await this.request(this._constructWCS201Url(d),{signal:r.signal,responseType:\"array-buffer\"}):await this.request(this.url,{query:d,signal:r.signal,responseType:\"array-buffer\"});if(\"1.0\"===c)return f.data;if(\"2.0\"===c&&!1!==this.ioConfig.allowAnyMediaType){if(\"tiff\"===h(f.data))return a&&(this.ioConfig.allowAnyMediaType=!0,i.getLogger(this).warn(\"wcsraster:getcoverage\",v)),f.data}const u=p(f);if(u.isMultipart&&u.data){const e=u.data.find((e=>e.isValidImage));return a&&\"base64\"===e?.contentTransferEncoding&&i.getLogger(this).warn(\"wcsraster:getcoverage\",x),e?.contentData}const m=new Uint8Array(f.data,0,Math.min(f.data.byteLength,2e3)),g=String.fromCharCode.apply(null,m).toLowerCase().includes(\"exception\"),w=g&&String.fromCharCode.apply(null,m).includes(\"A non-zero RESX/RESY or WIDTH/HEIGHT is required but neither was provided\");if(g)throw new t(\"wcsraster:getcoverage\",I,{isResolutionMismatch:w});throw new t(\"wcsraster:getcoverage\",y)}_getInterpolationIndex(e){return e&&this.coverageInfo.supportedInterpolations?.includes(e)?\"nearest\"===e?0:\"bilinear\"===e?1:\"cubic\"===e?2:0:0}_getCoverage100Parameters(e,t,i,n){const s=`${e.xmin},${e.ymin},${e.xmax},${e.ymax}`,o=e.spatialReference.wkid,r=(this.coverageInfo.supportedFormats||[]).find((e=>e.toLowerCase().includes(\"tiff\")))||\"GEOTIFF\",{bandIds:a,interpolation:l}=n,c=this._getInterpolationIndex(l),d=a?a.map((e=>this.coverageInfo.bandNames[e])):null,f=g[c],{multidimensionalDefinition:p}=n;let u;if(null!=p&&null!=this.rasterInfo.multidimensionalInfo){const e=p.find((e=>\"StdTime\"===e.dimensionName));let t=e?.values;t&&t.length>0&&(Array.isArray(t[0])&&(t=t[0]),u=t.map((e=>$(e))).join(\",\"))}return{service:\"WCS\",request:\"GetCoverage\",version:this.version,coverage:this.coverageId,format:r,crs:`EPSG:${o}`,bbox:s,width:t,height:i,time:u,interpolation:f,band:d?.join(\",\")}}_getCoverage110Parameters(e,t,i,n,s){const{multidimensionalDefinition:o,bandIds:a,interpolation:l}=n,c=e.spatialReference.wkid,d=`urn:ogc:def:crs:EPSG::${c}`,f=(this.coverageInfo.supportedFormats||[]).find((e=>e.toLowerCase().includes(\"tiff\")))||\"image/tiff\",p=this._getInterpolationIndex(l),u=w[p],h=null==l||0===this.coverageInfo.supportedInterpolations?.indexOf(l),m=s.domain.spatialDomain,g=m.origin.x<=m.envelope.xmin&&m.origin.y<=m.envelope.ymin,v=e.width/t,y=e.height/i*(g?1:-1),x=g?[e.xmin,e.ymin]:[e.xmin,e.ymax],I=m.useEPSGAxis&&r(c),C=I?`${x[1]},${x[0]}`:`${x[0]},${x[1]}`,b=this.ioConfig.use2GridOffsets,S=I?b?`${y},${v}`:`${y},0,0,${v}`:b?`${v},${y}`:`${v},0,0,${y}`,j=v/2,T=e.xmin+j,L=e.xmax-j,P=Math.abs(y)/2,R=e.ymin+P,_=e.ymax-P,D=I?`${R},${T},${_},${L},${d}`:`${T},${R},${L},${_},${d}`,A=s.range.find((e=>e.axis.some((e=>e.identifier.toLowerCase().includes(\"band\")))));let E,G=A&&u&&a?h?`${A.identifier}[${A.axis[0].identifier}[${a.join(\",\")}]]`:`${A.identifier}:${u}[${A.axis[0].identifier}[${a.join(\",\")}]]`:null;if(null!=o&&o.length)for(let r=0;r<o.length;r++){let e=o[r].values;const t=o[r].dimensionName?.toLowerCase(),i=o[r].variableName?.toLowerCase(),n=s.range.find((e=>e.identifier.toLowerCase()===i));if(e.length>0)if(Array.isArray(e[0])&&(e=e[0]),\"stdtime\"===t)E=e.map((e=>$(e))).join(\",\");else if(n){const i=n.axis.find((e=>e.identifier.toLowerCase()===t));i&&(G=h?n.identifier+\"[\"+i.identifier+\"[\"+e.join(\",\")+\"]]\":n.identifier+\":\"+u+\"[\"+i.identifier+\"[\"+e.join(\",\")+\"]]\")}r===o.length-1&&n&&!G&&(G=h?n.identifier:n.identifier+\":\"+u)}return{service:\"WCS\",request:\"GetCoverage\",version:this.version,identifier:this.coverageId,format:f,crs:`EPSG:${c}`,boundingbox:D,gridCS:\"urn:ogc:def:cs:OGC:0.0:Grid2dSquareCS\",gridType:\"urn:ogc:def:method:WCS:1.1:2dGridIn2dCrs\",gridOrigin:C,gridOffsets:S,gridBaseCRS:d,timeSequence:E,rangeSubset:G}}_getCoverage201Parameters(e,t,i,n,s,o){const{multidimensionalDefinition:r,interpolation:a}=s,l=this._getInterpolationIndex(a);let c=null;const{supportedInterpolations:d}=this.capabilities;if(d?.length)switch(l){case 0:c=d.find((e=>e.toLowerCase().includes(\"nearest\")));break;case 1:c=d.find((e=>e.toLowerCase().includes(\"linear\")));break;case 2:c=d.find((e=>e.toLowerCase().includes(\"cubic\")||e.toLowerCase().includes(\"quadratic\")))}const f=(this.coverageInfo.supportedFormats||[]).find((e=>e.toLowerCase().includes(\"tiff\")))||\"image/tiff\",{bandNames:p}=this.coverageInfo,{boundedBy:u,domainSet:h,rangeType:m}=o,g=u.isEastFirst?0:1,w=1-g,{axisLabels:v}=u,y=v[g],x=v[w],I=`http://www.opengis.net/def/crs/EPSG/0/${e.spatialReference.wkid}`,C=I,b=[];b.push(`${y}(${e.xmin},${e.xmax})`),b.push(`${x}(${e.ymin},${e.ymax})`);const S=[];if(v.length>2)for(let _=2;_<v.length;_++){const e=h.origin[_];if(v[_].toLowerCase().includes(\"time\")){let t=e.toString();u.uomLabels?.[_].toLowerCase().includes(\"ole\")&&(S.push(v[_]),t=$(e,!0)),b.push(v[_]+\",http://www.opengis.net(\"+t+\")\")}else b.push(v[_]+\",http://www.opengis.net(\"+e+\")\")}let j=null;if(null!=r&&r.length){const e=[];m.forEach((t=>t.forEach((t=>e.push(t.name)))));const t=[];for(let i=0;i<r.length;i++){const n=v.find((e=>e===r[i].dimensionName)),s=e.find((e=>e===r[i].variableName));if(t.includes(s)||t.push(s),n){let e=r[i].values;if(e.length>0){Array.isArray(e[0])&&(e=e[0]);let t=\"\";t=n.toLowerCase().includes(\"time\")?e.map((e=>$(e))).join(\",\"):e.join(\",\");const i=b.findIndex((e=>0===e.indexOf(n+\",http://www.opengis.net\")));-1===i&&b.push(n+\",http://www.opengis.net(\"+t+\")\"),-1===i||b[i].includes(\"(\"+t+\")\")||b.splice(i,1,n+\",http://www.opengis.net(\"+t+\")\")}}}t.length&&(j=t.join(\",\"))}else if(p?.length>=2){j=(s.bandIds?s.bandIds.map((e=>p[e])):p).join(\",\")}const T=b.join(\"&subset=\"),L=!o.domainSet.hasSameAxisLabelsAsBoundedBy&&!1!==this.ioConfig.allowScaleFactor,P=L?null:`${y}(${t}),${x}(${i})`,R=L?1/n:null;return{service:\"WCS\",request:\"GetCoverage\",version:this.version,coverageId:this.coverageId,rangesubset:j,interpolation:c,scaleSize:P,scaleFactor:R,subset:T,format:f,mediaType:this.ioConfig.allowAnyMediaType?null:\"multipart/related\",outputcrs:I,subsettingcrs:C}}_constructWCS201Url(e){const t={...this.ioConfig.customFetchParameters,...e},i=[];Object.keys(t).forEach((e=>{const n=t[e];null!=n&&(\"subset\"===e?\"string\"==typeof n&&n.split(\"&subset=\").forEach((e=>{e&&i.push(`subset=${encodeURIComponent(e)}`)})):i.push(`${e}=${encodeURIComponent(n)}`))}));return`${encodeURI(this.url)}?${i.join(\"&\")}`}};function $(e,t=!1){return(t?new Date(f(e)):new Date(e)).toISOString()}e([n({type:String,json:{write:!0}})],b.prototype,\"datasetFormat\",void 0),e([n({readOnly:!0})],b.prototype,\"tileType\",void 0),e([n({type:String,json:{write:!0}})],b.prototype,\"version\",void 0),e([n({type:String,json:{write:!0}})],b.prototype,\"coverageId\",void 0),e([n({readOnly:!0})],b.prototype,\"rasterId\",null),b=e([s(\"esri.layers.support.rasterDatasets.WCSRaster\")],b);const S=b;export{S as default};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}