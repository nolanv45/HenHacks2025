{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport has from \"../../../../../core/has.js\";\nimport { effectFlag0 as e, filterFlag0 as t, labelPlacementOffsetPadding as o } from \"../definitions.js\";\nimport { VVBinding as n } from \"../enums.js\";\nimport { CollisionBitsetGrid as i, none as s, hasCollision as l, outsideExtent as r } from \"./CollisionGrid.js\";\nconst a = 254,\n  c = 255,\n  f = 0;\nfunction d(e, t) {\n  const o = e.children.slice();\n  o.sort((e, t) => e.tileAge - t.tileAge), o.forEach(e => {\n    null != e.labelMetrics && e.isReady && t(e, e.labelMetrics);\n  });\n}\nfunction u(e, t) {\n  return (!e.minScale || e.minScale >= t) && (!e.maxScale || e.maxScale <= t);\n}\nclass b {\n  run(e, t, o, n) {\n    const i = [];\n    for (let s = e.length - 1; s >= 0; s--) {\n      const t = e[s];\n      t.labelingCollisionInfos?.length && i.push(...t.labelingCollisionInfos);\n    }\n    has(\"esri-2d-update-debug\") && i.length && console.debug(\"CollisionEngine.run\"), this._transformMetrics(i), this._runCollision(i, t, o, n);\n    for (const s of i) s.container.requestRender();\n  }\n  _runCollision(e, t, o, n) {\n    const [s, l] = t.state.size,\n      r = new i(s, l, t.pixelRatio);\n    for (const {\n      container: i,\n      deconflictionEnabled: b,\n      visible: m\n    } of e) {\n      const e = i.attributeView;\n      b ? m ? (this._prepare(i), this._collideVisible(r, i, o, n), this._collideInvisible(r, i)) : d(i, (t, o) => {\n        for (const n of o) e.setLabelMinZoom(n.entityTexel, c);\n      }) : d(i, (t, n) => {\n        for (const i of n) u(i, o) ? (e.setLabelMinZoom(i.entityTexel, f), m && r.insertMetrics(i)) : e.setLabelMinZoom(i.entityTexel, a);\n      });\n    }\n  }\n  _isFiltered(o, n, i) {\n    const s = n.getFilterFlags(o),\n      l = s & t,\n      r = null == i.featureEffect || i.featureEffect.excludedLabelsVisible || s & e;\n    return !(l && r);\n  }\n  _prepare(e) {\n    const t = e.attributeView,\n      o = new Set();\n    d(e, (n, i) => {\n      for (const s of i) {\n        const n = s.entityTexel;\n        if (o.has(n)) continue;\n        if (o.add(n), this._isFiltered(n, t, e.layerView)) {\n          t.setLabelMinZoom(n, a);\n          continue;\n        }\n        t.getLabelMinZoom(n) !== f ? t.setLabelMinZoom(n, c) : t.setLabelMinZoom(n, f);\n      }\n    });\n  }\n  _collideVisible(e, t, o, n) {\n    const i = t.attributeView,\n      c = new Set();\n    d(t, (t, d) => {\n      for (let b = 0; b < d.length; b++) {\n        const m = d[b].entityTexel;\n        if (c.has(m)) continue;\n        if (t.key.level !== n) {\n          i.setLabelMinZoom(m, a), c.add(m);\n          continue;\n        }\n        if (!u(d[b], o)) {\n          i.setLabelMinZoom(m, a), c.add(m);\n          continue;\n        }\n        if (0 !== i.getLabelMinZoom(m)) {\n          c.add(m);\n          continue;\n        }\n        let h = !1,\n          M = !0;\n        const g = b;\n        let y = b;\n        for (; y < d.length; y++) {\n          const t = d[y];\n          if (t.entityTexel !== m) break;\n          if (h) continue;\n          switch (e.hasCollision(t)) {\n            case r:\n              break;\n            case l:\n              h = !0, M = !1;\n              break;\n            case s:\n              M = !1;\n          }\n        }\n        if (!h) for (let t = g; t < y; t++) e.insertMetrics(d[t]);\n        b = y - 1, M || (c.add(m), i.setLabelMinZoom(m, h ? a : f));\n      }\n    });\n  }\n  _collideInvisible(e, t) {\n    const o = t.attributeView,\n      n = new Set();\n    d(t, (t, i) => {\n      for (let a = 0; a < i.length; a++) {\n        const t = i[a].entityTexel;\n        if (n.has(t)) continue;\n        if (o.getLabelMinZoom(t) !== c) {\n          n.add(t);\n          continue;\n        }\n        let d = !1,\n          u = !0;\n        const b = a;\n        let m = a;\n        for (; m < i.length; m++) {\n          const o = i[m];\n          if (o.entityTexel !== t) break;\n          if (d) continue;\n          switch (e.hasCollision(o)) {\n            case r:\n              break;\n            case l:\n              d = !0, u = !1;\n              break;\n            case s:\n              u = !1;\n          }\n        }\n        if (!d) for (let o = b; o < m; o++) e.insertMetrics(i[o]);\n        a = m - 1, u || (n.add(t), o.setLabelMinZoom(t, d ? c : f));\n      }\n    });\n  }\n  _transformMetrics(e) {\n    for (const {\n      container: t,\n      geometryType: i,\n      vvEvaluators: s\n    } of e) d(t, (e, l) => {\n      const r = t.attributeView,\n        a = e.transforms.labelMat2d;\n      a[4] = Math.round(a[4]), a[5] = Math.round(a[5]);\n      const c = \"polyline\" === i;\n      for (const t of l) {\n        const {\n          entityTexel: e,\n          anchorX: i,\n          anchorY: l\n        } = t;\n        let f = t.referenceBounds?.size ?? 0;\n        const d = s[0];\n        if (null != d) {\n          const t = d(r.getVisualVariableData(e, n.SIZE));\n          f = isNaN(t) || null == t || t === 1 / 0 ? f : t;\n        }\n        const u = o + f / 2,\n          b = t.directionX * u,\n          m = t.directionY * u;\n        for (const o of t.bounds) {\n          let e = i,\n            t = l;\n          if (c) {\n            const n = i + o.x + b,\n              s = l + o.y + m;\n            e = a[0] * n + a[2] * s + a[4], t = a[1] * n + a[3] * s + a[5];\n            const r = e,\n              c = t;\n            o.transformedX = Math.floor(r), o.transformedY = Math.floor(c);\n          } else {\n            e = a[0] * i + a[2] * l + a[4], t = a[1] * i + a[3] * l + a[5];\n            const n = e + o.x + b,\n              s = t + o.y + m;\n            o.transformedX = n, o.transformedY = s;\n          }\n        }\n      }\n    });\n  }\n}\nexport { b as CollisionEngine };","map":{"version":3,"names":["has","effectFlag0","e","filterFlag0","t","labelPlacementOffsetPadding","o","VVBinding","n","CollisionBitsetGrid","i","none","s","hasCollision","l","outsideExtent","r","a","c","f","d","children","slice","sort","tileAge","forEach","labelMetrics","isReady","u","minScale","maxScale","b","run","length","labelingCollisionInfos","push","console","debug","_transformMetrics","_runCollision","container","requestRender","state","size","pixelRatio","deconflictionEnabled","visible","m","attributeView","_prepare","_collideVisible","_collideInvisible","setLabelMinZoom","entityTexel","insertMetrics","_isFiltered","getFilterFlags","featureEffect","excludedLabelsVisible","Set","add","layerView","getLabelMinZoom","key","level","h","M","g","y","geometryType","vvEvaluators","transforms","labelMat2d","Math","round","anchorX","anchorY","referenceBounds","getVisualVariableData","SIZE","isNaN","directionX","directionY","bounds","x","transformedX","floor","transformedY","CollisionEngine"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/2d/engine/webgl/collisions/CollisionEngine.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport has from\"../../../../../core/has.js\";import{effectFlag0 as e,filterFlag0 as t,labelPlacementOffsetPadding as o}from\"../definitions.js\";import{VVBinding as n}from\"../enums.js\";import{CollisionBitsetGrid as i,none as s,hasCollision as l,outsideExtent as r}from\"./CollisionGrid.js\";const a=254,c=255,f=0;function d(e,t){const o=e.children.slice();o.sort(((e,t)=>e.tileAge-t.tileAge)),o.forEach((e=>{null!=e.labelMetrics&&e.isReady&&t(e,e.labelMetrics)}))}function u(e,t){return(!e.minScale||e.minScale>=t)&&(!e.maxScale||e.maxScale<=t)}class b{run(e,t,o,n){const i=[];for(let s=e.length-1;s>=0;s--){const t=e[s];t.labelingCollisionInfos?.length&&i.push(...t.labelingCollisionInfos)}has(\"esri-2d-update-debug\")&&i.length&&console.debug(\"CollisionEngine.run\"),this._transformMetrics(i),this._runCollision(i,t,o,n);for(const s of i)s.container.requestRender()}_runCollision(e,t,o,n){const[s,l]=t.state.size,r=new i(s,l,t.pixelRatio);for(const{container:i,deconflictionEnabled:b,visible:m}of e){const e=i.attributeView;b?m?(this._prepare(i),this._collideVisible(r,i,o,n),this._collideInvisible(r,i)):d(i,((t,o)=>{for(const n of o)e.setLabelMinZoom(n.entityTexel,c)})):d(i,((t,n)=>{for(const i of n)u(i,o)?(e.setLabelMinZoom(i.entityTexel,f),m&&r.insertMetrics(i)):e.setLabelMinZoom(i.entityTexel,a)}))}}_isFiltered(o,n,i){const s=n.getFilterFlags(o),l=s&t,r=null==i.featureEffect||i.featureEffect.excludedLabelsVisible||s&e;return!(l&&r)}_prepare(e){const t=e.attributeView,o=new Set;d(e,((n,i)=>{for(const s of i){const n=s.entityTexel;if(o.has(n))continue;if(o.add(n),this._isFiltered(n,t,e.layerView)){t.setLabelMinZoom(n,a);continue}t.getLabelMinZoom(n)!==f?t.setLabelMinZoom(n,c):t.setLabelMinZoom(n,f)}}))}_collideVisible(e,t,o,n){const i=t.attributeView,c=new Set;d(t,((t,d)=>{for(let b=0;b<d.length;b++){const m=d[b].entityTexel;if(c.has(m))continue;if(t.key.level!==n){i.setLabelMinZoom(m,a),c.add(m);continue}if(!u(d[b],o)){i.setLabelMinZoom(m,a),c.add(m);continue}if(0!==i.getLabelMinZoom(m)){c.add(m);continue}let h=!1,M=!0;const g=b;let y=b;for(;y<d.length;y++){const t=d[y];if(t.entityTexel!==m)break;if(h)continue;switch(e.hasCollision(t)){case r:break;case l:h=!0,M=!1;break;case s:M=!1}}if(!h)for(let t=g;t<y;t++)e.insertMetrics(d[t]);b=y-1,M||(c.add(m),i.setLabelMinZoom(m,h?a:f))}}))}_collideInvisible(e,t){const o=t.attributeView,n=new Set;d(t,((t,i)=>{for(let a=0;a<i.length;a++){const t=i[a].entityTexel;if(n.has(t))continue;if(o.getLabelMinZoom(t)!==c){n.add(t);continue}let d=!1,u=!0;const b=a;let m=a;for(;m<i.length;m++){const o=i[m];if(o.entityTexel!==t)break;if(d)continue;switch(e.hasCollision(o)){case r:break;case l:d=!0,u=!1;break;case s:u=!1}}if(!d)for(let o=b;o<m;o++)e.insertMetrics(i[o]);a=m-1,u||(n.add(t),o.setLabelMinZoom(t,d?c:f))}}))}_transformMetrics(e){for(const{container:t,geometryType:i,vvEvaluators:s}of e)d(t,((e,l)=>{const r=t.attributeView,a=e.transforms.labelMat2d;a[4]=Math.round(a[4]),a[5]=Math.round(a[5]);const c=\"polyline\"===i;for(const t of l){const{entityTexel:e,anchorX:i,anchorY:l}=t;let f=t.referenceBounds?.size??0;const d=s[0];if(null!=d){const t=d(r.getVisualVariableData(e,n.SIZE));f=isNaN(t)||null==t||t===1/0?f:t}const u=o+f/2,b=t.directionX*u,m=t.directionY*u;for(const o of t.bounds){let e=i,t=l;if(c){const n=i+o.x+b,s=l+o.y+m;e=a[0]*n+a[2]*s+a[4],t=a[1]*n+a[3]*s+a[5];const r=e,c=t;o.transformedX=Math.floor(r),o.transformedY=Math.floor(c)}else{e=a[0]*i+a[2]*l+a[4],t=a[1]*i+a[3]*l+a[5];const n=e+o.x+b,s=t+o.y+m;o.transformedX=n,o.transformedY=s}}}}))}}export{b as CollisionEngine};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}