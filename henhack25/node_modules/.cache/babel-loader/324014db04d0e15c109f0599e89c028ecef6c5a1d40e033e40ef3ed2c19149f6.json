{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { assertIsSome as t } from \"../../../core/maybe.js\";\nimport n from \"../PixelBlock.js\";\nimport { getPixelValueRange as e } from \"../rasterFormats/pixelRangeUtils.js\";\nimport { stretchTypeFunctionEnum as s } from \"../../../renderers/support/stretchRendererUtils.js\";\nconst i = 1,\n  o = [.299, .587, .114];\nfunction r(t, n = 256) {\n  n = Math.min(n, 256);\n  const {\n      size: e,\n      counts: s\n    } = t,\n    i = new Uint8Array(e),\n    o = s.reduce((t, e) => t + e / n, 0);\n  let r = 0,\n    a = 0,\n    l = 0,\n    u = o;\n  for (let f = 0; f < e; f++) if (l += s[f], !(f < e - 1 && l + s[f + 1] < u)) {\n    for (; r < n - 1 && u < l;) r++, u += o;\n    for (let t = a; t <= f; t++) i[t] = r;\n    a = f + 1;\n  }\n  for (let f = a; f < e; f++) i[f] = n - 1;\n  return i;\n}\nfunction a(t) {\n  const {\n    minCutOff: n,\n    maxCutOff: e,\n    gamma: s,\n    pixelType: i,\n    rounding: o\n  } = t;\n  if (![\"u8\", \"u16\", \"s8\", \"s16\"].includes(i)) return null;\n  const r = n.length,\n    a = \"s8\" === i ? -127 : \"s16\" === i ? -32767 : 0,\n    u = [\"u16\", \"s16\"].includes(i) ? 65536 : 256,\n    f = [],\n    c = [],\n    {\n      minOutput: m = 0,\n      maxOutput: h = 255\n    } = t,\n    p = h - m;\n  for (let l = 0; l < r; l++) c[l] = e[l] - n[l], f[l] = 0 === c[l] ? 0 : p / c[l];\n  const g = [];\n  if (s && s.length >= r) {\n    const t = x(r, s);\n    for (let i = 0; i < r; i++) {\n      const r = [];\n      for (let l = 0; l < u; l++) {\n        if (0 === c[i]) {\n          r[l] = m;\n          continue;\n        }\n        const u = l + a,\n          f = (u - n[i]) / c[i];\n        let g = 1;\n        if (s[i] > 1 && (g -= (1 / p) ** (f * t[i])), u < e[i] && u > n[i]) {\n          const t = g * p * f ** (1 / s[i]) + m;\n          r[l] = \"floor\" === o ? Math.floor(t) : \"round\" === o ? Math.round(t) : t;\n        } else u >= e[i] ? r[l] = h : r[l] = m;\n      }\n      g[i] = r;\n    }\n  } else for (let l = 0; l < r; l++) {\n    const t = [];\n    for (let s = 0; s < u; s++) {\n      const i = s + a;\n      if (i <= n[l]) t[s] = m;else if (i >= e[l]) t[s] = h;else {\n        const e = (i - n[l]) * f[l] + m;\n        t[s] = \"floor\" === o ? Math.floor(e) : \"round\" === o ? Math.round(e) : e;\n      }\n    }\n    g[l] = t;\n  }\n  if (null != t.contrastOffset) {\n    const n = l(t.contrastOffset, t.brightnessOffset);\n    for (let t = 0; t < r; t++) {\n      const e = g[t];\n      for (let t = 0; t < u; t++) e[t] = n[e[t]];\n    }\n  }\n  return {\n    lut: g,\n    offset: a\n  };\n}\nfunction l(t, n) {\n  const e = Math.min(Math.max(t, -100), 100),\n    s = Math.min(Math.max(n ?? 0, -100), 100),\n    i = 255,\n    o = 128,\n    r = new Uint8Array(256);\n  for (let a = 0; a < 256; a++) {\n    let t = 0;\n    e > 0 && e < 100 ? t = (200 * a - 100 * i + 2 * i * s) / (2 * (100 - e)) + o : e <= 0 && e > -100 ? t = (200 * a - 100 * i + 2 * i * s) * (100 + e) / 2e4 + o : 100 === e ? (t = 200 * a - 100 * i + (i + 1) * (100 - e) + 2 * i * s, t = t > 0 ? i : 0) : -100 === e && (t = o), r[a] = t > i ? i : t < 0 ? 0 : t;\n  }\n  return r;\n}\nfunction u(t, n, e) {\n  const s = [];\n  for (let i = 0; i < n.length; i++) {\n    let r = 0,\n      a = 0,\n      l = 0;\n    \"min\" in n[i] ? {\n      min: r,\n      max: a,\n      avg: l\n    } = n[i] : [r, a, l] = n[i];\n    let u = l ?? 0;\n    \"u8\" !== t && (u = 255 * (u - r) / (a - r)), e && (u *= o[i]), s.push(f(u));\n  }\n  return s;\n}\nfunction f(t) {\n  if (t <= 0 || t >= 255) return i;\n  const n = 255,\n    e = t + (150 === t ? 0 : t < 150 ? 45 * Math.cos(.01047 * t) : 17 * Math.sin(.021 * t)),\n    s = Math.log(t / n),\n    o = Math.log(e / n);\n  if (0 === o) return i;\n  const r = s / o;\n  return isNaN(r) ? i : Math.min(9.9, Math.max(.01, r));\n}\nfunction c(t, n, e, s) {\n  let i = 1 / 0,\n    o = -1 / 0,\n    r = 0,\n    a = 0,\n    l = 0,\n    u = 0;\n  const f = t.length,\n    c = new Map(),\n    m = [];\n  for (let v = 0; v < f; v++) {\n    const e = t[v];\n    if (!n || n[v]) {\n      m.push(e);\n      const t = (c.get(e) ?? 0) + 1;\n      c.set(e, t), t > u && (u = t, l = e), i = e < i ? e : i, o = e > o ? e : o, r += e, a++;\n    }\n  }\n  if (0 === a) return {\n    statistics: {\n      min: 0,\n      max: 0,\n      avg: 0,\n      stddev: 0,\n      mode: 0,\n      median: 0\n    },\n    histogram: null\n  };\n  const h = r / a;\n  let p = 0;\n  for (let v = 0; v < f; v++) n && !n[v] || (p += (t[v] - h) ** 2);\n  const g = n ? n.filter(t => t).length : f,\n    d = g <= 1 ? 0 : Math.sqrt(p / (g - 1));\n  m.sort((t, n) => t - n);\n  const x = a >>> 1,\n    M = {\n      min: i,\n      max: o,\n      avg: h,\n      stddev: d,\n      mode: l,\n      median: a % 2 ? m[Math.floor(x)] : (m[x - 1] + m[x]) / 2\n    };\n  if ([\"u8\", \"s8\", \"u4\", \"u2\", \"u1\"].includes(e)) {\n    const e = o - i + 1,\n      s = new Uint32Array(e);\n    for (let o = 0; o < f; o++) n && !n[o] || s[t[o] - i]++;\n    return {\n      statistics: M,\n      histogram: {\n        min: i - .5,\n        max: o + .5,\n        size: e,\n        counts: s\n      }\n    };\n  }\n  const O = 256,\n    y = new Uint32Array(O),\n    b = (o - i) / O;\n  if (0 === b) return {\n    statistics: M,\n    histogram: {\n      min: i,\n      max: o,\n      size: 1,\n      counts: new Uint32Array(1).fill(a)\n    }\n  };\n  const k = new Uint32Array(O + 1);\n  for (let v = 0; v < f; v++) n && !n[v] || k[Math.floor((t[v] - i) / b)]++;\n  for (let v = 0; v < O - 1; v++) y[v] = k[v];\n  return y[O - 1] = k[O - 1] + k[O], {\n    statistics: M,\n    histogram: {\n      min: i,\n      max: o,\n      size: O,\n      counts: y\n    }\n  };\n}\nfunction m(t) {\n  const {\n      pixels: n,\n      mask: e,\n      pixelType: s,\n      bandMasks: i\n    } = t,\n    o = n.map((t, n) => c(t, i?.[n] ?? e, s));\n  return {\n    statistics: o.map(({\n      statistics: t\n    }) => t),\n    histograms: o.map(({\n      histogram: t\n    }) => t)\n  };\n}\nfunction h(t) {\n  if (!t?.pixels?.length) return null;\n  const {\n      pixels: n,\n      mask: e,\n      bandMasks: s,\n      pixelType: i\n    } = t,\n    o = t.width * t.height,\n    r = n.length,\n    a = [],\n    l = [],\n    u = 256;\n  let f, c;\n  for (let m = 0; m < r; m++) {\n    let r = new Uint32Array(u);\n    const h = n[m],\n      p = s?.[m] ?? e;\n    if (\"u8\" === i) {\n      if (f = 255, c = 0, p) {\n        for (let t = 0; t < o; t++) if (p[t]) {\n          const n = h[t];\n          f = n < f ? n : f, c = n > c ? n : c, r[n]++;\n        }\n      } else for (let t = 0; t < o; t++) {\n        const n = h[t];\n        f = n < f ? n : f, c = n > c ? n : c, r[n]++;\n      }\n      r = r.slice(f, c + 1);\n    } else {\n      let n = !1;\n      t.statistics || (t.updateStatistics(), n = !0);\n      const e = t.statistics;\n      f = e[m].minValue, c = e[m].maxValue;\n      const s = (c - f) / u;\n      if (0 === s) {\n        !e || t.validPixelCount || n || t.updateStatistics();\n        const s = (t.validPixelCount || t.width * t.height) / u;\n        for (let t = 0; t < u; t++) r[t] = Math.round(s * (t + 1)) - Math.round(s * t);\n      } else {\n        const t = new Uint32Array(u + 1);\n        for (let n = 0; n < o; n++) p && !p[n] || t[Math.floor((h[n] - f) / s)]++;\n        for (let n = 0; n < u - 1; n++) r[n] = t[n];\n        r[u - 1] = t[u - 1] + t[u];\n      }\n    }\n    const g = \"u8\" === i ? f - .5 : f,\n      d = \"u8\" === i ? c + .5 : c;\n    a.push({\n      min: g,\n      max: d,\n      size: r.length,\n      counts: r\n    });\n    let x = 0,\n      M = 0,\n      O = 0;\n    for (let t = 0; t < r.length; t++) x += r[t], M += t * r[t];\n    const y = M / x;\n    for (let t = 0; t < r.length; t++) O += r[t] * (t - y) ** 2;\n    const b = Math.sqrt(O / (x - 1)),\n      k = (d - g) / r.length,\n      v = (y + (\"u8\" === i ? 0 : .5)) * k + f,\n      w = b * k;\n    l.push({\n      min: f,\n      max: c,\n      avg: v,\n      stddev: w\n    });\n  }\n  return {\n    statistics: l,\n    histograms: a\n  };\n}\nfunction p(t) {\n  const n = [];\n  for (let e = 0; e < t.length; e++) {\n    const {\n      min: s,\n      max: i,\n      size: o,\n      counts: r\n    } = t[e];\n    let a = 0,\n      l = 0;\n    for (let t = 0; t < o; t++) a += r[t], l += t * r[t];\n    const u = l / a;\n    let f = 0;\n    for (let t = 0; t < o; t++) f += r[t] * (t - u) ** 2;\n    const c = (i - s) / o,\n      m = (u + .5) * c + s,\n      h = Math.sqrt(f / (a - 1)) * c;\n    n.push({\n      min: s,\n      max: i,\n      avg: m,\n      stddev: h\n    });\n  }\n  return n;\n}\nfunction g(n, i) {\n  const {\n    pixelBlock: o,\n    bandIds: a,\n    returnHistogramLut: l,\n    rasterInfo: u\n  } = i;\n  let f = null,\n    c = null,\n    m = n.stretchType;\n  if (\"number\" == typeof m && (m = s[m]), n.dra) {\n    if (\"minMax\" === m && o?.statistics) f = o.statistics.map(t => [t.minValue, t.maxValue, 0, 0]);else {\n      const t = h(o);\n      f = null != t ? t.statistics : null, c = null != t ? t.histograms : null;\n    }\n  } else f = n.statistics?.length ? n.statistics : u.statistics, c = \"histograms\" in n ? n.histograms : void 0, c || (c = u.histograms);\n  \"percentClip\" !== m && \"histogramEqualization\" !== m || c?.length || (m = \"minMax\");\n  const p = f?.length || c?.length || u.bandCount,\n    g = [],\n    x = [];\n  f && !Array.isArray(f[0]) && (f = f.map(t => [t.min, t.max, t.avg, t.stddev]));\n  const [M, O] = e(u.pixelType);\n  if (!f?.length) {\n    f = [];\n    for (let t = 0; t < p; t++) f.push([M, O, 1, 1]);\n    \"standardDeviation\" === m && (m = \"minMax\");\n  }\n  switch (m) {\n    case \"none\":\n      for (let t = 0; t < p; t++) g[t] = M, x[t] = O;\n      break;\n    case \"minMax\":\n      for (let t = 0; t < p; t++) {\n        const n = f[t];\n        g[t] = n[0], x[t] = n[1];\n      }\n      break;\n    case \"standardDeviation\":\n      {\n        const {\n          numberOfStandardDeviations: t = 2\n        } = n;\n        for (let n = 0; n < p; n++) {\n          const e = f[n];\n          g[n] = e[2] - t * e[3], x[n] = e[2] + t * e[3], g[n] < e[0] && (g[n] = e[0]), x[n] > e[1] && (x[n] = e[1]);\n        }\n      }\n      break;\n    case \"histogramEqualization\":\n      t(c);\n      for (let t = 0; t < p; t++) g[t] = c[t].min, x[t] = c[t].max;\n      break;\n    case \"percentClip\":\n      t(c);\n      for (let t = 0; t < c.length; t++) {\n        const e = c[t],\n          s = new Uint32Array(e.size),\n          i = [...e.counts];\n        i.length >= 20 && (i[0] = i[1] = i[2] = i[i.length - 1] = i[i.length - 2] = 0);\n        let o = 0;\n        const r = (e.max - e.min) / e.size,\n          a = -.5 === e.min && 1 === r ? .5 : 0;\n        for (let t = 0; t < e.size; t++) o += i[t], s[t] = o;\n        let l = (n.minPercent || 0) * o / 100;\n        g[t] = e.min + a;\n        for (let n = 0; n < e.size; n++) if (s[n] > l) {\n          g[t] = e.min + r * (n + a);\n          break;\n        }\n        l = (1 - (n.maxPercent || 0) / 100) * o, x[t] = e.max + a;\n        for (let n = e.size - 2; n >= 0; n--) if (s[n] < l) {\n          x[t] = e.min + r * (n + 2 - a);\n          break;\n        }\n        if (x[t] < g[t]) {\n          const n = g[t];\n          g[t] = x[t], x[t] = n;\n        }\n      }\n      break;\n    default:\n      for (let t = 0; t < p; t++) {\n        const n = f[t];\n        g[t] = n[0], x[t] = n[1];\n      }\n  }\n  let y, b, k;\n  \"histogramEqualization\" === m ? (t(c), b = c[0].size || 256, y = 0, l && (k = c.map(t => r(t)))) : (b = n.max || 255, y = n.min || 0);\n  return d({\n    minCutOff: g,\n    maxCutOff: x,\n    maxOutput: b,\n    minOutput: y,\n    histogramLut: k\n  }, a);\n}\nfunction d(t, n) {\n  if (null == n || 0 === n.length) return t;\n  const e = Math.max.apply(null, n),\n    {\n      minCutOff: s,\n      maxCutOff: i,\n      minOutput: o,\n      maxOutput: r,\n      histogramLut: a\n    } = t;\n  return s.length === n.length || s.length <= e ? t : {\n    minCutOff: n.map(t => s[t]),\n    maxCutOff: n.map(t => i[t]),\n    histogramLut: a ? n.map(t => a[t]) : null,\n    minOutput: o,\n    maxOutput: r\n  };\n}\nfunction x(t, n) {\n  const e = new Float32Array(t);\n  for (let s = 0; s < t; s++) n[s] > 1 ? n[s] > 2 ? e[s] = 6.5 + (n[s] - 2) ** 2.5 : e[s] = 6.5 + 100 * (2 - n[s]) ** 4 : e[s] = 1;\n  return e;\n}\nfunction M(t, e) {\n  if (!t?.pixels?.length) return t;\n  const {\n      mask: s,\n      bandMasks: i,\n      width: o,\n      height: r,\n      pixels: a\n    } = t,\n    {\n      minCutOff: l,\n      maxCutOff: u,\n      minOutput: f,\n      maxOutput: c,\n      gamma: m\n    } = e,\n    h = o * r,\n    p = e.outputPixelType || \"u8\",\n    g = t.pixels.map(() => n.createEmptyBand(p, h)),\n    d = g.length,\n    M = c - f,\n    O = [],\n    y = [];\n  for (let n = 0; n < d; n++) y[n] = u[n] - l[n], O[n] = 0 === y[n] ? 0 : M / y[n];\n  const b = p.startsWith(\"u\") || p.startsWith(\"s\"),\n    k = m && m.length >= d,\n    v = !!e.isRenderer;\n  if (k) {\n    const t = x(d, m);\n    for (let n = 0; n < d; n++) {\n      const e = i?.[n] ?? s;\n      for (let s = 0; s < h; s++) if (null == e || e[s]) {\n        if (0 === y[n]) {\n          g[n][s] = f;\n          continue;\n        }\n        const e = a[n][s],\n          i = (e - l[n]) / y[n];\n        let o = 1;\n        if (m[n] > 1 && (o -= (1 / M) ** (i * t[n])), e < u[n] && e > l[n]) {\n          const t = o * M * i ** (1 / m[n]) + f;\n          g[n][s] = v ? Math.floor(t) : b ? Math.round(t) : t;\n        } else e >= u[n] ? g[n][s] = c : g[n][s] = f;\n      }\n    }\n  } else for (let n = 0; n < d; n++) {\n    const t = i?.[n] ?? s;\n    for (let e = 0; e < h; e++) if (null == t || t[e]) {\n      const t = a[n][e];\n      if (t < u[n] && t > l[n]) {\n        const s = (t - l[n]) * O[n] + f;\n        g[n][e] = v ? Math.floor(s) : b ? Math.round(s) : s;\n      } else t >= u[n] ? g[n][e] = c : g[n][e] = f;\n    }\n  }\n  const w = new n({\n    width: o,\n    height: r,\n    mask: s,\n    bandMasks: i,\n    pixels: g,\n    pixelType: p\n  });\n  return w.updateStatistics(), w;\n}\nexport { x as computeGammaCorrection, u as computeGammaValues, m as computeStatisticsHistograms, l as createContrastBrightnessLUT, r as createHistogramEqualizationLUT, a as createStretchLUT, p as estimateStatisticsFromHistograms, h as estimateStatisticsHistograms, g as getStretchCutoff, M as stretch };","map":{"version":3,"names":["assertIsSome","t","n","getPixelValueRange","e","stretchTypeFunctionEnum","s","i","o","r","Math","min","size","counts","Uint8Array","reduce","a","l","u","f","minCutOff","maxCutOff","gamma","pixelType","rounding","includes","length","c","minOutput","m","maxOutput","h","p","g","x","floor","round","contrastOffset","brightnessOffset","lut","offset","max","avg","push","cos","sin","log","isNaN","Map","v","get","set","statistics","stddev","mode","median","histogram","filter","d","sqrt","sort","M","Uint32Array","O","y","b","fill","k","pixels","mask","bandMasks","map","histograms","width","height","slice","updateStatistics","minValue","maxValue","validPixelCount","w","pixelBlock","bandIds","returnHistogramLut","rasterInfo","stretchType","dra","bandCount","Array","isArray","numberOfStandardDeviations","minPercent","maxPercent","histogramLut","apply","Float32Array","outputPixelType","createEmptyBand","startsWith","isRenderer","computeGammaCorrection","computeGammaValues","computeStatisticsHistograms","createContrastBrightnessLUT","createHistogramEqualizationLUT","createStretchLUT","estimateStatisticsFromHistograms","estimateStatisticsHistograms","getStretchCutoff","stretch"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/layers/support/rasterFunctions/stretchUtils.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{assertIsSome as t}from\"../../../core/maybe.js\";import n from\"../PixelBlock.js\";import{getPixelValueRange as e}from\"../rasterFormats/pixelRangeUtils.js\";import{stretchTypeFunctionEnum as s}from\"../../../renderers/support/stretchRendererUtils.js\";const i=1,o=[.299,.587,.114];function r(t,n=256){n=Math.min(n,256);const{size:e,counts:s}=t,i=new Uint8Array(e),o=s.reduce(((t,e)=>t+e/n),0);let r=0,a=0,l=0,u=o;for(let f=0;f<e;f++)if(l+=s[f],!(f<e-1&&l+s[f+1]<u)){for(;r<n-1&&u<l;)r++,u+=o;for(let t=a;t<=f;t++)i[t]=r;a=f+1}for(let f=a;f<e;f++)i[f]=n-1;return i}function a(t){const{minCutOff:n,maxCutOff:e,gamma:s,pixelType:i,rounding:o}=t;if(![\"u8\",\"u16\",\"s8\",\"s16\"].includes(i))return null;const r=n.length,a=\"s8\"===i?-127:\"s16\"===i?-32767:0,u=[\"u16\",\"s16\"].includes(i)?65536:256,f=[],c=[],{minOutput:m=0,maxOutput:h=255}=t,p=h-m;for(let l=0;l<r;l++)c[l]=e[l]-n[l],f[l]=0===c[l]?0:p/c[l];const g=[];if(s&&s.length>=r){const t=x(r,s);for(let i=0;i<r;i++){const r=[];for(let l=0;l<u;l++){if(0===c[i]){r[l]=m;continue}const u=l+a,f=(u-n[i])/c[i];let g=1;if(s[i]>1&&(g-=(1/p)**(f*t[i])),u<e[i]&&u>n[i]){const t=g*p*f**(1/s[i])+m;r[l]=\"floor\"===o?Math.floor(t):\"round\"===o?Math.round(t):t}else u>=e[i]?r[l]=h:r[l]=m}g[i]=r}}else for(let l=0;l<r;l++){const t=[];for(let s=0;s<u;s++){const i=s+a;if(i<=n[l])t[s]=m;else if(i>=e[l])t[s]=h;else{const e=(i-n[l])*f[l]+m;t[s]=\"floor\"===o?Math.floor(e):\"round\"===o?Math.round(e):e}}g[l]=t}if(null!=t.contrastOffset){const n=l(t.contrastOffset,t.brightnessOffset);for(let t=0;t<r;t++){const e=g[t];for(let t=0;t<u;t++)e[t]=n[e[t]]}}return{lut:g,offset:a}}function l(t,n){const e=Math.min(Math.max(t,-100),100),s=Math.min(Math.max(n??0,-100),100),i=255,o=128,r=new Uint8Array(256);for(let a=0;a<256;a++){let t=0;e>0&&e<100?t=(200*a-100*i+2*i*s)/(2*(100-e))+o:e<=0&&e>-100?t=(200*a-100*i+2*i*s)*(100+e)/2e4+o:100===e?(t=200*a-100*i+(i+1)*(100-e)+2*i*s,t=t>0?i:0):-100===e&&(t=o),r[a]=t>i?i:t<0?0:t}return r}function u(t,n,e){const s=[];for(let i=0;i<n.length;i++){let r=0,a=0,l=0;\"min\"in n[i]?({min:r,max:a,avg:l}=n[i]):[r,a,l]=n[i];let u=l??0;\"u8\"!==t&&(u=255*(u-r)/(a-r)),e&&(u*=o[i]),s.push(f(u))}return s}function f(t){if(t<=0||t>=255)return i;const n=255,e=t+(150===t?0:t<150?45*Math.cos(.01047*t):17*Math.sin(.021*t)),s=Math.log(t/n),o=Math.log(e/n);if(0===o)return i;const r=s/o;return isNaN(r)?i:Math.min(9.9,Math.max(.01,r))}function c(t,n,e,s){let i=1/0,o=-1/0,r=0,a=0,l=0,u=0;const f=t.length,c=new Map,m=[];for(let v=0;v<f;v++){const e=t[v];if(!n||n[v]){m.push(e);const t=(c.get(e)??0)+1;c.set(e,t),t>u&&(u=t,l=e),i=e<i?e:i,o=e>o?e:o,r+=e,a++}}if(0===a)return{statistics:{min:0,max:0,avg:0,stddev:0,mode:0,median:0},histogram:null};const h=r/a;let p=0;for(let v=0;v<f;v++)n&&!n[v]||(p+=(t[v]-h)**2);const g=n?n.filter((t=>t)).length:f,d=g<=1?0:Math.sqrt(p/(g-1));m.sort(((t,n)=>t-n));const x=a>>>1,M={min:i,max:o,avg:h,stddev:d,mode:l,median:a%2?m[Math.floor(x)]:(m[x-1]+m[x])/2};if([\"u8\",\"s8\",\"u4\",\"u2\",\"u1\"].includes(e)){const e=o-i+1,s=new Uint32Array(e);for(let o=0;o<f;o++)n&&!n[o]||s[t[o]-i]++;return{statistics:M,histogram:{min:i-.5,max:o+.5,size:e,counts:s}}}const O=256,y=new Uint32Array(O),b=(o-i)/O;if(0===b)return{statistics:M,histogram:{min:i,max:o,size:1,counts:new Uint32Array(1).fill(a)}};const k=new Uint32Array(O+1);for(let v=0;v<f;v++)n&&!n[v]||k[Math.floor((t[v]-i)/b)]++;for(let v=0;v<O-1;v++)y[v]=k[v];return y[O-1]=k[O-1]+k[O],{statistics:M,histogram:{min:i,max:o,size:O,counts:y}}}function m(t){const{pixels:n,mask:e,pixelType:s,bandMasks:i}=t,o=n.map(((t,n)=>c(t,i?.[n]??e,s)));return{statistics:o.map((({statistics:t})=>t)),histograms:o.map((({histogram:t})=>t))}}function h(t){if(!t?.pixels?.length)return null;const{pixels:n,mask:e,bandMasks:s,pixelType:i}=t,o=t.width*t.height,r=n.length,a=[],l=[],u=256;let f,c;for(let m=0;m<r;m++){let r=new Uint32Array(u);const h=n[m],p=s?.[m]??e;if(\"u8\"===i){if(f=255,c=0,p){for(let t=0;t<o;t++)if(p[t]){const n=h[t];f=n<f?n:f,c=n>c?n:c,r[n]++}}else for(let t=0;t<o;t++){const n=h[t];f=n<f?n:f,c=n>c?n:c,r[n]++}r=r.slice(f,c+1)}else{let n=!1;t.statistics||(t.updateStatistics(),n=!0);const e=t.statistics;f=e[m].minValue,c=e[m].maxValue;const s=(c-f)/u;if(0===s){!e||t.validPixelCount||n||t.updateStatistics();const s=(t.validPixelCount||t.width*t.height)/u;for(let t=0;t<u;t++)r[t]=Math.round(s*(t+1))-Math.round(s*t)}else{const t=new Uint32Array(u+1);for(let n=0;n<o;n++)p&&!p[n]||t[Math.floor((h[n]-f)/s)]++;for(let n=0;n<u-1;n++)r[n]=t[n];r[u-1]=t[u-1]+t[u]}}const g=\"u8\"===i?f-.5:f,d=\"u8\"===i?c+.5:c;a.push({min:g,max:d,size:r.length,counts:r});let x=0,M=0,O=0;for(let t=0;t<r.length;t++)x+=r[t],M+=t*r[t];const y=M/x;for(let t=0;t<r.length;t++)O+=r[t]*(t-y)**2;const b=Math.sqrt(O/(x-1)),k=(d-g)/r.length,v=(y+(\"u8\"===i?0:.5))*k+f,w=b*k;l.push({min:f,max:c,avg:v,stddev:w})}return{statistics:l,histograms:a}}function p(t){const n=[];for(let e=0;e<t.length;e++){const{min:s,max:i,size:o,counts:r}=t[e];let a=0,l=0;for(let t=0;t<o;t++)a+=r[t],l+=t*r[t];const u=l/a;let f=0;for(let t=0;t<o;t++)f+=r[t]*(t-u)**2;const c=(i-s)/o,m=(u+.5)*c+s,h=Math.sqrt(f/(a-1))*c;n.push({min:s,max:i,avg:m,stddev:h})}return n}function g(n,i){const{pixelBlock:o,bandIds:a,returnHistogramLut:l,rasterInfo:u}=i;let f=null,c=null,m=n.stretchType;if(\"number\"==typeof m&&(m=s[m]),n.dra)if(\"minMax\"===m&&o?.statistics)f=o.statistics.map((t=>[t.minValue,t.maxValue,0,0]));else{const t=h(o);f=null!=t?t.statistics:null,c=null!=t?t.histograms:null}else f=n.statistics?.length?n.statistics:u.statistics,c=\"histograms\"in n?n.histograms:void 0,c||(c=u.histograms);\"percentClip\"!==m&&\"histogramEqualization\"!==m||c?.length||(m=\"minMax\");const p=f?.length||c?.length||u.bandCount,g=[],x=[];f&&!Array.isArray(f[0])&&(f=f.map((t=>[t.min,t.max,t.avg,t.stddev])));const[M,O]=e(u.pixelType);if(!f?.length){f=[];for(let t=0;t<p;t++)f.push([M,O,1,1]);\"standardDeviation\"===m&&(m=\"minMax\")}switch(m){case\"none\":for(let t=0;t<p;t++)g[t]=M,x[t]=O;break;case\"minMax\":for(let t=0;t<p;t++){const n=f[t];g[t]=n[0],x[t]=n[1]}break;case\"standardDeviation\":{const{numberOfStandardDeviations:t=2}=n;for(let n=0;n<p;n++){const e=f[n];g[n]=e[2]-t*e[3],x[n]=e[2]+t*e[3],g[n]<e[0]&&(g[n]=e[0]),x[n]>e[1]&&(x[n]=e[1])}}break;case\"histogramEqualization\":t(c);for(let t=0;t<p;t++)g[t]=c[t].min,x[t]=c[t].max;break;case\"percentClip\":t(c);for(let t=0;t<c.length;t++){const e=c[t],s=new Uint32Array(e.size),i=[...e.counts];i.length>=20&&(i[0]=i[1]=i[2]=i[i.length-1]=i[i.length-2]=0);let o=0;const r=(e.max-e.min)/e.size,a=-.5===e.min&&1===r?.5:0;for(let t=0;t<e.size;t++)o+=i[t],s[t]=o;let l=(n.minPercent||0)*o/100;g[t]=e.min+a;for(let n=0;n<e.size;n++)if(s[n]>l){g[t]=e.min+r*(n+a);break}l=(1-(n.maxPercent||0)/100)*o,x[t]=e.max+a;for(let n=e.size-2;n>=0;n--)if(s[n]<l){x[t]=e.min+r*(n+2-a);break}if(x[t]<g[t]){const n=g[t];g[t]=x[t],x[t]=n}}break;default:for(let t=0;t<p;t++){const n=f[t];g[t]=n[0],x[t]=n[1]}}let y,b,k;\"histogramEqualization\"===m?(t(c),b=c[0].size||256,y=0,l&&(k=c.map((t=>r(t))))):(b=n.max||255,y=n.min||0);return d({minCutOff:g,maxCutOff:x,maxOutput:b,minOutput:y,histogramLut:k},a)}function d(t,n){if(null==n||0===n.length)return t;const e=Math.max.apply(null,n),{minCutOff:s,maxCutOff:i,minOutput:o,maxOutput:r,histogramLut:a}=t;return s.length===n.length||s.length<=e?t:{minCutOff:n.map((t=>s[t])),maxCutOff:n.map((t=>i[t])),histogramLut:a?n.map((t=>a[t])):null,minOutput:o,maxOutput:r}}function x(t,n){const e=new Float32Array(t);for(let s=0;s<t;s++)n[s]>1?n[s]>2?e[s]=6.5+(n[s]-2)**2.5:e[s]=6.5+100*(2-n[s])**4:e[s]=1;return e}function M(t,e){if(!t?.pixels?.length)return t;const{mask:s,bandMasks:i,width:o,height:r,pixels:a}=t,{minCutOff:l,maxCutOff:u,minOutput:f,maxOutput:c,gamma:m}=e,h=o*r,p=e.outputPixelType||\"u8\",g=t.pixels.map((()=>n.createEmptyBand(p,h))),d=g.length,M=c-f,O=[],y=[];for(let n=0;n<d;n++)y[n]=u[n]-l[n],O[n]=0===y[n]?0:M/y[n];const b=p.startsWith(\"u\")||p.startsWith(\"s\"),k=m&&m.length>=d,v=!!e.isRenderer;if(k){const t=x(d,m);for(let n=0;n<d;n++){const e=i?.[n]??s;for(let s=0;s<h;s++)if(null==e||e[s]){if(0===y[n]){g[n][s]=f;continue}const e=a[n][s],i=(e-l[n])/y[n];let o=1;if(m[n]>1&&(o-=(1/M)**(i*t[n])),e<u[n]&&e>l[n]){const t=o*M*i**(1/m[n])+f;g[n][s]=v?Math.floor(t):b?Math.round(t):t}else e>=u[n]?g[n][s]=c:g[n][s]=f}}}else for(let n=0;n<d;n++){const t=i?.[n]??s;for(let e=0;e<h;e++)if(null==t||t[e]){const t=a[n][e];if(t<u[n]&&t>l[n]){const s=(t-l[n])*O[n]+f;g[n][e]=v?Math.floor(s):b?Math.round(s):s}else t>=u[n]?g[n][e]=c:g[n][e]=f}}const w=new n({width:o,height:r,mask:s,bandMasks:i,pixels:g,pixelType:p});return w.updateStatistics(),w}export{x as computeGammaCorrection,u as computeGammaValues,m as computeStatisticsHistograms,l as createContrastBrightnessLUT,r as createHistogramEqualizationLUT,a as createStretchLUT,p as estimateStatisticsFromHistograms,h as estimateStatisticsHistograms,g as getStretchCutoff,M as stretch};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}