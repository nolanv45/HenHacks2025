{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { memoize as e } from \"../../../../../../../core/MapUtils.js\";\nimport { pt2px as t } from \"../../../../../../../core/screenUtils.js\";\nimport { fromRotation as i, translate as s } from \"../../../../../../../core/libs/gl-matrix-2/math/mat2d.js\";\nimport { create as r } from \"../../../../../../../core/libs/gl-matrix-2/factories/mat2df32.js\";\nimport { transformMat2d as o, set as n, sub as a, normalize as l, add as h, scale as c } from \"../../../../../../../core/libs/gl-matrix-2/math/vec2.js\";\nimport { fromValues as m } from \"../../../../../../../core/libs/gl-matrix-2/factories/vec2f32.js\";\nimport { create as d } from \"../../../../../../../core/libs/gl-matrix-2/factories/vec2f64.js\";\nimport { generalizeOptimizedGeometry as u, convertToGeometry as f } from \"../../../../../../../layers/graphics/featureConversionUtils.js\";\nimport g from \"../../../../../../../layers/graphics/OptimizedGeometry.js\";\nimport { getXAnchorDirection as p, getYAnchorDirection as _ } from \"../../../alignmentUtils.js\";\nimport { minMaxZoomPrecisionFactor as x } from \"../../../definitions.js\";\nimport { getDisplayIdTexel as M } from \"../../../DisplayId.js\";\nimport b from \"../../../collisions/BoundingBox.js\";\nimport { LabelMetric as y } from \"../../../collisions/LabelMetric.js\";\nimport { smoothPaths as v, pathDivide as P } from \"../../../mesh/templates/segmentUtils.js\";\nimport { getMinMaxZoom as w, processColorInput as L } from \"../fill/meshWriterUtils.js\";\nimport { TextMeshWriter as B, maxLabelZoom as S } from \"../text/TextMeshWriter.js\";\nconst z = 1,\n  A = 0,\n  D = 128,\n  I = e(e => {\n    let t = 0;\n    if (0 === e) return 1 / 0;\n    for (; !(e % 2);) t++, e /= 2;\n    return t;\n  });\nclass G extends B {\n  constructor() {\n    super(...arguments), this._zoomLevel = 0;\n  }\n  _write(e, t, i, s) {\n    if (this._zoomLevel = s || 0, null != i) throw new Error(\"InternalError: EffectGeometry not support for LabelMeshWriter\");\n    switch (t.geometryType) {\n      case \"esriGeometryPoint\":\n        {\n          const i = t.readXForDisplay(),\n            s = t.readYForDisplay();\n          this._writePoint(e, i, s, t);\n          break;\n        }\n      case \"esriGeometryEnvelope\":\n      case \"esriGeometryPolygon\":\n      case \"esriGeometryMultipoint\":\n        {\n          const i = t.readCentroidForDisplay();\n          if (!i) return;\n          const [s, r] = i.coords;\n          this._writePoint(e, s, r, t);\n          break;\n        }\n      case \"esriGeometryPolyline\":\n        this._writeLines(e, t);\n    }\n  }\n  _getMetricDir() {\n    const {\n      horizontalAlignment: e,\n      verticalAlignment: t\n    } = this.evaluatedMeshParams;\n    return [\"center\" === e ? 0 : \"right\" === e ? -1 : 1, \"middle\" === t ? 0 : \"bottom\" === t ? -1 : 1];\n  }\n  _createLineLabelMetric(e, t, i, s) {\n    const r = M(e),\n      [o, n] = this._getMetricDir(),\n      a = this.evaluatedMeshParams.scaleInfo?.maxScale ?? 0,\n      l = this.evaluatedMeshParams.scaleInfo?.minScale ?? 0;\n    return new y(r, t, i, o, n, a, l, s ?? null);\n  }\n  _writePoint(e, t, i, s) {\n    const r = this._getShaping();\n    if (!r) return;\n    const o = s.getDisplayId(),\n      n = p(this.evaluatedMeshParams.horizontalAlignment),\n      a = _(this.evaluatedMeshParams.verticalAlignment),\n      l = this.evaluatedMeshParams.scaleInfo?.maxScale ?? 0,\n      h = this.evaluatedMeshParams.scaleInfo?.minScale ?? 0,\n      c = M(s.getDisplayId()),\n      m = this._getPointReferenceBounds() || {\n        offsetX: 0,\n        offsetY: 0,\n        size: 0\n      };\n    e.metricStart(new y(c, t, i, n, a, l, h, m)), this._writeGlyphs(e, o, t, i, r, 0, m), e.metricBoxWrite(r.boundsT), e.metricEnd();\n  }\n  _getPointReferenceBounds() {\n    if (!this._references) return null;\n    for (const e of this._references) {\n      const t = e.getBoundsInfo();\n      if (t) return t;\n    }\n    return null;\n  }\n  _writeLines(e, t) {\n    const {\n        scaleInfo: i,\n        verticalAlignment: s\n      } = this.evaluatedMeshParams,\n      r = this.evaluatedMeshParams.repeatLabelDistance || 128,\n      o = this._getShaping(\"middle\");\n    if (!o) return;\n    const n = (e, t, i, s) => this._placeSubdivGlyphs(e, t, i, s),\n      a = (o.bounds.width + r) / (1 << z);\n    this._current = {\n      out: e,\n      id: t.getDisplayId(),\n      shaping: o,\n      zoomRange: w(i, this.getTileInfo()),\n      referenceBounds: this._getPointReferenceBounds() || {\n        offsetX: 0,\n        offsetY: 0,\n        size: 0\n      },\n      offsetDirection: null\n    }, this._verticalPlacement = \"bottom\" === s ? \"above\" : \"top\" === s ? \"below\" : null, this._verticalPlacement ? this._writeAboveAndBelowAlong(t, n, a) : this._writeCenterAlong(t, n, a);\n  }\n  _writeAboveAndBelowAlong(e, t, i) {\n    const {\n        repeatLabel: s\n      } = this.evaluatedMeshParams,\n      {\n        shaping: r\n      } = this._current,\n      o = r.bounds.halfHeight,\n      n = e.readGeometryForDisplay();\n    if (!n) return;\n    const a = new g();\n    u(a, n, !1, !1, \"esriGeometryPolyline\", 1);\n    const l = j(new g(), a, o),\n      h = j(new g(), a, -o),\n      c = f(h, \"esriGeometryPolyline\", !1, !1),\n      m = f(l, \"esriGeometryPolyline\", !1, !1),\n      d = v(m.paths, r.bounds.width),\n      p = v(c.paths, r.bounds.width);\n    this._current.offsetDirection = \"above\";\n    for (const u of d) P(u, i, t, !!s);\n    this._current.offsetDirection = \"below\";\n    for (const u of p) P(u, i, t, !!s);\n  }\n  _writeCenterAlong(e, t, i) {\n    const {\n        repeatLabel: s\n      } = this.evaluatedMeshParams,\n      {\n        shaping: r\n      } = this._current,\n      o = v(e.readLegacyGeometryForDisplay().paths, r.bounds.width);\n    for (const n of o) P(n, i, t, !!s);\n  }\n  _placeSubdivGlyphs(e, t, i, s) {\n    const {\n        allowOverrun: r,\n        labelPosition: o,\n        repeatLabelDistance: n\n      } = this.evaluatedMeshParams,\n      a = this._current.zoomRange[0],\n      l = I(t),\n      h = this._current.shaping.bounds.width / (1 << z),\n      c = Math.sqrt(n || D) / (1 << z),\n      m = Math.min(i, s - i),\n      d = this._current.shaping.isMultiline ? S : Math.log2(m / (c + h / 2)),\n      u = 0 === t ? d : Math.min(l, d),\n      f = Math.max(a, this._zoomLevel + z - u),\n      g = this._zoomLevel - f,\n      p = this._current.shaping.bounds.width / 2 * 2 ** g;\n    this._current.shaping.isMultiline ? 0 === t && this._placeStraight(e, f) : r && g < 0 ? this._placeStraightAlong(e, a) : \"parallel\" === o ? this._placeStraightAlong(e, f) : \"curved\" === o && this._placeCurved(e, f, p);\n  }\n  _placeStraight(e, t) {\n    const {\n        out: i,\n        id: s,\n        shaping: r,\n        referenceBounds: o\n      } = this._current,\n      {\n        x: n,\n        y: a\n      } = e;\n    i.metricStart(this._createLineLabelMetric(s, n, a)), i.metricBoxWrite(r.boundsT);\n    const l = e.angle * (180 / Math.PI) % 360,\n      h = (e.angle * (180 / Math.PI) + 180) % 360;\n    this._writeGlyphs(i, s, n, a, r, 0, o, {\n      clipAngle: l,\n      mapAligned: !0,\n      isLineLabel: !0,\n      minZoom: t\n    }), this._writeGlyphs(i, s, n, a, r, 0, o, {\n      clipAngle: h,\n      mapAligned: !0,\n      isLineLabel: !0,\n      minZoom: t\n    }), i.metricEnd();\n  }\n  _placeCurved(e, t, i) {\n    const {\n      out: s,\n      id: r\n    } = this._current;\n    s.metricStart(this._createLineLabelMetric(r, e.x, e.y));\n    const o = e.clone(),\n      n = e.angle * (180 / Math.PI) % 360,\n      a = (e.angle * (180 / Math.PI) + 180) % 360;\n    this._verticalPlacement && this._verticalPlacement !== this._current.offsetDirection || (this._placeFirst(o, t, 1, n), this._placeBack(e, o, t, i, 1, n), this._placeForward(e, o, t, i, 1, n)), this._verticalPlacement && this._verticalPlacement === this._current.offsetDirection || (this._placeFirst(o, t, 0, a), this._placeBack(e, o, t, i, 0, a), this._placeForward(e, o, t, i, 0, a)), s.metricEnd();\n  }\n  _placeStraightAlong(e, o) {\n    const {\n        out: n,\n        id: a,\n        shaping: l,\n        zoomRange: h,\n        referenceBounds: c\n      } = this._current,\n      {\n        boxBorderLineColor: d,\n        boxBackgroundColor: u\n      } = this.evaluatedMeshParams,\n      f = e.clone(),\n      g = e.angle * (180 / Math.PI) % 360,\n      p = (e.angle * (180 / Math.PI) + 180) % 360,\n      _ = l.glyphs.length > 0 && !(!d && !u);\n    if (n.metricStart(this._createLineLabelMetric(a, e.x, e.y)), _) {\n      const d = Math.max(o, h[0], 0),\n        u = Math.min(S, h[1]),\n        f = i(r(), -e.angle),\n        _ = {\n          minZoom: d,\n          maxZoom: u,\n          clipAngle: g,\n          mapAligned: !0,\n          isLineLabel: !0\n        },\n        x = t(this.evaluatedMeshParams.offsetX),\n        M = t(this.evaluatedMeshParams.offsetY);\n      if (!this._verticalPlacement || this._verticalPlacement === this._current.offsetDirection) {\n        const t = m(x, -1 * M),\n          [i, o] = l.shapeBackground(s(r(), f, t));\n        n.recordStart(this.instanceId, this.attributeLayout, l.glyphs[0].textureBinding);\n        const h = 2 * Math.max(i.width, i.height);\n        n.recordBounds(e.x + i.x, e.y + i.y, h, h), this._writeTextBox(n, a, e.x, e.y, o, c, _), n.recordEnd();\n      }\n      if (!this._verticalPlacement || this._verticalPlacement !== this._current.offsetDirection) {\n        const t = m(x, M),\n          [i, o] = l.shapeBackground(s(r(), f, t));\n        _.clipAngle = p, n.recordStart(this.instanceId, this.attributeLayout, l.glyphs[0].textureBinding);\n        const h = 2 * Math.max(i.width, i.height);\n        n.recordBounds(e.x + i.x, e.y + i.y, h, h), this._writeTextBox(n, a, e.x, e.y, o, c, _), n.recordEnd();\n      }\n    }\n    this._verticalPlacement && this._verticalPlacement !== this._current.offsetDirection || this._placeFirst(f, o, 1, g, !0), this._verticalPlacement && this._verticalPlacement === this._current.offsetDirection || this._placeFirst(f, o, 0, p, !0), n.metricEnd();\n  }\n  _placeBack(e, t, i, s, r, o) {\n    const n = e.clone();\n    let a = e.backwardLength + A;\n    for (; n.prev() && !(a >= s);) this._placeOnSegment(n, t, a, i, -1, r, o), a += n.length + A;\n  }\n  _placeForward(e, t, i, s, r, o) {\n    const n = e.clone();\n    let a = e.remainingLength + A;\n    for (; n.next() && !(a >= s);) this._placeOnSegment(n, t, a, i, 1, r, o), a += n.length + A;\n  }\n  _placeFirst(e, s, n, a, l = !1) {\n    const {\n        out: h,\n        id: c,\n        shaping: d,\n        zoomRange: u,\n        referenceBounds: f\n      } = this._current,\n      g = d.glyphs,\n      p = t(this.evaluatedMeshParams.offsetX),\n      _ = t(this.evaluatedMeshParams.offsetY),\n      x = m(p, _),\n      M = i(r(), -e.angle);\n    o(x, x, M);\n    for (const t of g) {\n      const i = t.x > d.bounds.x ? n : 1 - n,\n        r = i * e.remainingLength + (1 - i) * e.backwardLength,\n        o = Math.abs(t.x + t.width / 2 - d.bounds.x),\n        m = Math.max(0, this._zoomLevel + Math.log2(o / (r + A))),\n        g = Math.max(s, l ? 0 : m);\n      if (t.maxZoom = Math.min(u[1], S), t.angle = e.angle + (1 - n) * Math.PI, t.minZoom = Math.max(u[0], g), this._writeLineGlyph(h, c, e.x, e.y, d.bounds, t, a, f, !0), (n || this._current.offsetDirection) && this._isVisible(t.minZoom, t.maxZoom)) {\n        const e = new b(t.bounds.x + x[0], t.bounds.y + x[1], t.bounds.width, t.bounds.height);\n        h.metricBoxWrite(e);\n      }\n    }\n  }\n  _placeOnSegment(e, s, n, a, l, h, c) {\n    const {\n        out: d,\n        id: u,\n        shaping: f,\n        referenceBounds: g\n      } = this._current,\n      p = f.glyphs,\n      _ = e.dx / e.length,\n      x = e.dy / e.length,\n      M = {\n        x: e.x + n * -l * _,\n        y: e.y + n * -l * x\n      },\n      y = t(this.evaluatedMeshParams.offsetX),\n      v = t(this.evaluatedMeshParams.offsetY),\n      P = m(y, v),\n      w = i(r(), -e.angle);\n    o(P, P, w);\n    for (const t of p) {\n      const i = t.x > f.bounds.x ? h : 1 - h;\n      if (!(i && 1 === l || !i && -1 === l)) continue;\n      const s = Math.abs(t.x + t.width / 2 - f.bounds.x),\n        r = Math.max(0, this._zoomLevel + Math.log2(s / n) - .1),\n        o = Math.max(a, this._zoomLevel + Math.log2(s / (n + e.length + A)));\n      if (0 !== r && (t.angle = e.angle + (1 - h) * Math.PI, t.minZoom = o, t.maxZoom = r, this._writeLineGlyph(d, u, M.x, M.y, f.bounds, t, c, g, !0), (h || this._current.offsetDirection) && this._isVisible(t.minZoom, t.maxZoom))) {\n        const e = new b(t.bounds.x + P[0], t.bounds.y + P[1], t.bounds.width, t.bounds.height);\n        d.metricBoxWrite(e);\n      }\n    }\n  }\n  _writeLineGlyph(e, t, i, s, r, o, n, a, l) {\n    const h = i + r.x,\n      c = s + r.y,\n      m = 2 * (this.evaluatedMeshParams.minPixelBuffer ? this.evaluatedMeshParams.minPixelBuffer / this._textMeshTransformProps.fontSize : 1),\n      d = Math.max(r.width, r.height) * m;\n    e.recordStart(this.instanceId, this.attributeLayout, o.textureBinding), e.recordBounds(h, c, d, d);\n    const {\n        texcoords: u,\n        offsets: f\n      } = o,\n      {\n        fontSize: g,\n        haloSize: p,\n        outlineSize: _\n      } = this._textMeshTransformProps;\n    this._writeQuad(e, t, i, s, {\n      texcoords: u,\n      offsets: f,\n      fontSize: g,\n      haloSize: p,\n      outlineSize: _,\n      color: L(this.evaluatedMeshParams.color),\n      isBackground: !1,\n      referenceBounds: a,\n      minZoom: Math.max(this._current.zoomRange[0], o.minZoom),\n      maxZoom: Math.min(this._current.zoomRange[1], o.maxZoom),\n      clipAngle: n,\n      mapAligned: l,\n      isLineLabel: !0\n    }), e.recordEnd();\n  }\n  _isVisible(e, t) {\n    const i = Math.floor(this._zoomLevel * x) / x;\n    return e <= i && i <= t;\n  }\n}\nfunction j(e, t, i) {\n  const {\n      coords: s,\n      lengths: r\n    } = t,\n    o = d(),\n    m = d(),\n    u = d(),\n    f = d(),\n    g = d(),\n    p = d(),\n    _ = 2;\n  let x = 0;\n  for (let d = 0; d < r.length; d++) {\n    const t = r[d];\n    for (let r = 0; r < t; r++) {\n      const d = _ * (r + x - 1),\n        M = _ * (r + x),\n        b = _ * (r + x + 1);\n      r > 0 ? n(o, s[d], s[d + 1]) : n(o, 0, 0), n(m, s[M], s[M + 1]), r < t - 1 ? n(u, s[b], s[b + 1]) : n(u, 0, 0), 0 === r ? n(f, 0, 0) : (a(f, m, o), l(f, f), n(f, f[1], -f[0])), r === t - 1 ? n(g, 0, 0) : (a(g, u, m), l(g, g), n(g, g[1], -g[0])), h(p, f, g), l(p, p);\n      const y = p[0] * g[0] + p[1] * g[1];\n      0 !== y && c(p, p, y), c(p, p, i), e.coords.push(m[0] + p[0], m[1] + p[1]);\n    }\n    e.lengths.push(t), x += t;\n  }\n  return e;\n}\nexport { G as LabelMeshWriter };","map":{"version":3,"names":["memoize","e","pt2px","t","fromRotation","i","translate","s","create","r","transformMat2d","o","set","n","sub","a","normalize","l","add","h","scale","c","fromValues","m","d","generalizeOptimizedGeometry","u","convertToGeometry","f","g","getXAnchorDirection","p","getYAnchorDirection","_","minMaxZoomPrecisionFactor","x","getDisplayIdTexel","M","b","LabelMetric","y","smoothPaths","v","pathDivide","P","getMinMaxZoom","w","processColorInput","L","TextMeshWriter","B","maxLabelZoom","S","z","A","D","I","G","constructor","arguments","_zoomLevel","_write","Error","geometryType","readXForDisplay","readYForDisplay","_writePoint","readCentroidForDisplay","coords","_writeLines","_getMetricDir","horizontalAlignment","verticalAlignment","evaluatedMeshParams","_createLineLabelMetric","scaleInfo","maxScale","minScale","_getShaping","getDisplayId","_getPointReferenceBounds","offsetX","offsetY","size","metricStart","_writeGlyphs","metricBoxWrite","boundsT","metricEnd","_references","getBoundsInfo","repeatLabelDistance","_placeSubdivGlyphs","bounds","width","_current","out","id","shaping","zoomRange","getTileInfo","referenceBounds","offsetDirection","_verticalPlacement","_writeAboveAndBelowAlong","_writeCenterAlong","repeatLabel","halfHeight","readGeometryForDisplay","j","paths","readLegacyGeometryForDisplay","allowOverrun","labelPosition","Math","sqrt","min","isMultiline","log2","max","_placeStraight","_placeStraightAlong","_placeCurved","angle","PI","clipAngle","mapAligned","isLineLabel","minZoom","clone","_placeFirst","_placeBack","_placeForward","boxBorderLineColor","boxBackgroundColor","glyphs","length","maxZoom","shapeBackground","recordStart","instanceId","attributeLayout","textureBinding","height","recordBounds","_writeTextBox","recordEnd","backwardLength","prev","_placeOnSegment","remainingLength","next","abs","_writeLineGlyph","_isVisible","dx","dy","minPixelBuffer","_textMeshTransformProps","fontSize","texcoords","offsets","haloSize","outlineSize","_writeQuad","color","isBackground","floor","lengths","push","LabelMeshWriter"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/2d/engine/webgl/shaderGraph/techniques/labels/LabelMeshWriter.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{memoize as e}from\"../../../../../../../core/MapUtils.js\";import{pt2px as t}from\"../../../../../../../core/screenUtils.js\";import{fromRotation as i,translate as s}from\"../../../../../../../core/libs/gl-matrix-2/math/mat2d.js\";import{create as r}from\"../../../../../../../core/libs/gl-matrix-2/factories/mat2df32.js\";import{transformMat2d as o,set as n,sub as a,normalize as l,add as h,scale as c}from\"../../../../../../../core/libs/gl-matrix-2/math/vec2.js\";import{fromValues as m}from\"../../../../../../../core/libs/gl-matrix-2/factories/vec2f32.js\";import{create as d}from\"../../../../../../../core/libs/gl-matrix-2/factories/vec2f64.js\";import{generalizeOptimizedGeometry as u,convertToGeometry as f}from\"../../../../../../../layers/graphics/featureConversionUtils.js\";import g from\"../../../../../../../layers/graphics/OptimizedGeometry.js\";import{getXAnchorDirection as p,getYAnchorDirection as _}from\"../../../alignmentUtils.js\";import{minMaxZoomPrecisionFactor as x}from\"../../../definitions.js\";import{getDisplayIdTexel as M}from\"../../../DisplayId.js\";import b from\"../../../collisions/BoundingBox.js\";import{LabelMetric as y}from\"../../../collisions/LabelMetric.js\";import{smoothPaths as v,pathDivide as P}from\"../../../mesh/templates/segmentUtils.js\";import{getMinMaxZoom as w,processColorInput as L}from\"../fill/meshWriterUtils.js\";import{TextMeshWriter as B,maxLabelZoom as S}from\"../text/TextMeshWriter.js\";const z=1,A=0,D=128,I=e((e=>{let t=0;if(0===e)return 1/0;for(;!(e%2);)t++,e/=2;return t}));class G extends B{constructor(){super(...arguments),this._zoomLevel=0}_write(e,t,i,s){if(this._zoomLevel=s||0,null!=i)throw new Error(\"InternalError: EffectGeometry not support for LabelMeshWriter\");switch(t.geometryType){case\"esriGeometryPoint\":{const i=t.readXForDisplay(),s=t.readYForDisplay();this._writePoint(e,i,s,t);break}case\"esriGeometryEnvelope\":case\"esriGeometryPolygon\":case\"esriGeometryMultipoint\":{const i=t.readCentroidForDisplay();if(!i)return;const[s,r]=i.coords;this._writePoint(e,s,r,t);break}case\"esriGeometryPolyline\":this._writeLines(e,t)}}_getMetricDir(){const{horizontalAlignment:e,verticalAlignment:t}=this.evaluatedMeshParams;return[\"center\"===e?0:\"right\"===e?-1:1,\"middle\"===t?0:\"bottom\"===t?-1:1]}_createLineLabelMetric(e,t,i,s){const r=M(e),[o,n]=this._getMetricDir(),a=this.evaluatedMeshParams.scaleInfo?.maxScale??0,l=this.evaluatedMeshParams.scaleInfo?.minScale??0;return new y(r,t,i,o,n,a,l,s??null)}_writePoint(e,t,i,s){const r=this._getShaping();if(!r)return;const o=s.getDisplayId(),n=p(this.evaluatedMeshParams.horizontalAlignment),a=_(this.evaluatedMeshParams.verticalAlignment),l=this.evaluatedMeshParams.scaleInfo?.maxScale??0,h=this.evaluatedMeshParams.scaleInfo?.minScale??0,c=M(s.getDisplayId()),m=this._getPointReferenceBounds()||{offsetX:0,offsetY:0,size:0};e.metricStart(new y(c,t,i,n,a,l,h,m)),this._writeGlyphs(e,o,t,i,r,0,m),e.metricBoxWrite(r.boundsT),e.metricEnd()}_getPointReferenceBounds(){if(!this._references)return null;for(const e of this._references){const t=e.getBoundsInfo();if(t)return t}return null}_writeLines(e,t){const{scaleInfo:i,verticalAlignment:s}=this.evaluatedMeshParams,r=this.evaluatedMeshParams.repeatLabelDistance||128,o=this._getShaping(\"middle\");if(!o)return;const n=(e,t,i,s)=>this._placeSubdivGlyphs(e,t,i,s),a=(o.bounds.width+r)/(1<<z);this._current={out:e,id:t.getDisplayId(),shaping:o,zoomRange:w(i,this.getTileInfo()),referenceBounds:this._getPointReferenceBounds()||{offsetX:0,offsetY:0,size:0},offsetDirection:null},this._verticalPlacement=\"bottom\"===s?\"above\":\"top\"===s?\"below\":null,this._verticalPlacement?this._writeAboveAndBelowAlong(t,n,a):this._writeCenterAlong(t,n,a)}_writeAboveAndBelowAlong(e,t,i){const{repeatLabel:s}=this.evaluatedMeshParams,{shaping:r}=this._current,o=r.bounds.halfHeight,n=e.readGeometryForDisplay();if(!n)return;const a=new g;u(a,n,!1,!1,\"esriGeometryPolyline\",1);const l=j(new g,a,o),h=j(new g,a,-o),c=f(h,\"esriGeometryPolyline\",!1,!1),m=f(l,\"esriGeometryPolyline\",!1,!1),d=v(m.paths,r.bounds.width),p=v(c.paths,r.bounds.width);this._current.offsetDirection=\"above\";for(const u of d)P(u,i,t,!!s);this._current.offsetDirection=\"below\";for(const u of p)P(u,i,t,!!s)}_writeCenterAlong(e,t,i){const{repeatLabel:s}=this.evaluatedMeshParams,{shaping:r}=this._current,o=v(e.readLegacyGeometryForDisplay().paths,r.bounds.width);for(const n of o)P(n,i,t,!!s)}_placeSubdivGlyphs(e,t,i,s){const{allowOverrun:r,labelPosition:o,repeatLabelDistance:n}=this.evaluatedMeshParams,a=this._current.zoomRange[0],l=I(t),h=this._current.shaping.bounds.width/(1<<z),c=Math.sqrt(n||D)/(1<<z),m=Math.min(i,s-i),d=this._current.shaping.isMultiline?S:Math.log2(m/(c+h/2)),u=0===t?d:Math.min(l,d),f=Math.max(a,this._zoomLevel+z-u),g=this._zoomLevel-f,p=this._current.shaping.bounds.width/2*2**g;this._current.shaping.isMultiline?0===t&&this._placeStraight(e,f):r&&g<0?this._placeStraightAlong(e,a):\"parallel\"===o?this._placeStraightAlong(e,f):\"curved\"===o&&this._placeCurved(e,f,p)}_placeStraight(e,t){const{out:i,id:s,shaping:r,referenceBounds:o}=this._current,{x:n,y:a}=e;i.metricStart(this._createLineLabelMetric(s,n,a)),i.metricBoxWrite(r.boundsT);const l=e.angle*(180/Math.PI)%360,h=(e.angle*(180/Math.PI)+180)%360;this._writeGlyphs(i,s,n,a,r,0,o,{clipAngle:l,mapAligned:!0,isLineLabel:!0,minZoom:t}),this._writeGlyphs(i,s,n,a,r,0,o,{clipAngle:h,mapAligned:!0,isLineLabel:!0,minZoom:t}),i.metricEnd()}_placeCurved(e,t,i){const{out:s,id:r}=this._current;s.metricStart(this._createLineLabelMetric(r,e.x,e.y));const o=e.clone(),n=e.angle*(180/Math.PI)%360,a=(e.angle*(180/Math.PI)+180)%360;this._verticalPlacement&&this._verticalPlacement!==this._current.offsetDirection||(this._placeFirst(o,t,1,n),this._placeBack(e,o,t,i,1,n),this._placeForward(e,o,t,i,1,n)),this._verticalPlacement&&this._verticalPlacement===this._current.offsetDirection||(this._placeFirst(o,t,0,a),this._placeBack(e,o,t,i,0,a),this._placeForward(e,o,t,i,0,a)),s.metricEnd()}_placeStraightAlong(e,o){const{out:n,id:a,shaping:l,zoomRange:h,referenceBounds:c}=this._current,{boxBorderLineColor:d,boxBackgroundColor:u}=this.evaluatedMeshParams,f=e.clone(),g=e.angle*(180/Math.PI)%360,p=(e.angle*(180/Math.PI)+180)%360,_=l.glyphs.length>0&&!(!d&&!u);if(n.metricStart(this._createLineLabelMetric(a,e.x,e.y)),_){const d=Math.max(o,h[0],0),u=Math.min(S,h[1]),f=i(r(),-e.angle),_={minZoom:d,maxZoom:u,clipAngle:g,mapAligned:!0,isLineLabel:!0},x=t(this.evaluatedMeshParams.offsetX),M=t(this.evaluatedMeshParams.offsetY);if(!this._verticalPlacement||this._verticalPlacement===this._current.offsetDirection){const t=m(x,-1*M),[i,o]=l.shapeBackground(s(r(),f,t));n.recordStart(this.instanceId,this.attributeLayout,l.glyphs[0].textureBinding);const h=2*Math.max(i.width,i.height);n.recordBounds(e.x+i.x,e.y+i.y,h,h),this._writeTextBox(n,a,e.x,e.y,o,c,_),n.recordEnd()}if(!this._verticalPlacement||this._verticalPlacement!==this._current.offsetDirection){const t=m(x,M),[i,o]=l.shapeBackground(s(r(),f,t));_.clipAngle=p,n.recordStart(this.instanceId,this.attributeLayout,l.glyphs[0].textureBinding);const h=2*Math.max(i.width,i.height);n.recordBounds(e.x+i.x,e.y+i.y,h,h),this._writeTextBox(n,a,e.x,e.y,o,c,_),n.recordEnd()}}this._verticalPlacement&&this._verticalPlacement!==this._current.offsetDirection||this._placeFirst(f,o,1,g,!0),this._verticalPlacement&&this._verticalPlacement===this._current.offsetDirection||this._placeFirst(f,o,0,p,!0),n.metricEnd()}_placeBack(e,t,i,s,r,o){const n=e.clone();let a=e.backwardLength+A;for(;n.prev()&&!(a>=s);)this._placeOnSegment(n,t,a,i,-1,r,o),a+=n.length+A}_placeForward(e,t,i,s,r,o){const n=e.clone();let a=e.remainingLength+A;for(;n.next()&&!(a>=s);)this._placeOnSegment(n,t,a,i,1,r,o),a+=n.length+A}_placeFirst(e,s,n,a,l=!1){const{out:h,id:c,shaping:d,zoomRange:u,referenceBounds:f}=this._current,g=d.glyphs,p=t(this.evaluatedMeshParams.offsetX),_=t(this.evaluatedMeshParams.offsetY),x=m(p,_),M=i(r(),-e.angle);o(x,x,M);for(const t of g){const i=t.x>d.bounds.x?n:1-n,r=i*e.remainingLength+(1-i)*e.backwardLength,o=Math.abs(t.x+t.width/2-d.bounds.x),m=Math.max(0,this._zoomLevel+Math.log2(o/(r+A))),g=Math.max(s,l?0:m);if(t.maxZoom=Math.min(u[1],S),t.angle=e.angle+(1-n)*Math.PI,t.minZoom=Math.max(u[0],g),this._writeLineGlyph(h,c,e.x,e.y,d.bounds,t,a,f,!0),(n||this._current.offsetDirection)&&this._isVisible(t.minZoom,t.maxZoom)){const e=new b(t.bounds.x+x[0],t.bounds.y+x[1],t.bounds.width,t.bounds.height);h.metricBoxWrite(e)}}}_placeOnSegment(e,s,n,a,l,h,c){const{out:d,id:u,shaping:f,referenceBounds:g}=this._current,p=f.glyphs,_=e.dx/e.length,x=e.dy/e.length,M={x:e.x+n*-l*_,y:e.y+n*-l*x},y=t(this.evaluatedMeshParams.offsetX),v=t(this.evaluatedMeshParams.offsetY),P=m(y,v),w=i(r(),-e.angle);o(P,P,w);for(const t of p){const i=t.x>f.bounds.x?h:1-h;if(!(i&&1===l||!i&&-1===l))continue;const s=Math.abs(t.x+t.width/2-f.bounds.x),r=Math.max(0,this._zoomLevel+Math.log2(s/n)-.1),o=Math.max(a,this._zoomLevel+Math.log2(s/(n+e.length+A)));if(0!==r&&(t.angle=e.angle+(1-h)*Math.PI,t.minZoom=o,t.maxZoom=r,this._writeLineGlyph(d,u,M.x,M.y,f.bounds,t,c,g,!0),(h||this._current.offsetDirection)&&this._isVisible(t.minZoom,t.maxZoom))){const e=new b(t.bounds.x+P[0],t.bounds.y+P[1],t.bounds.width,t.bounds.height);d.metricBoxWrite(e)}}}_writeLineGlyph(e,t,i,s,r,o,n,a,l){const h=i+r.x,c=s+r.y,m=2*(this.evaluatedMeshParams.minPixelBuffer?this.evaluatedMeshParams.minPixelBuffer/this._textMeshTransformProps.fontSize:1),d=Math.max(r.width,r.height)*m;e.recordStart(this.instanceId,this.attributeLayout,o.textureBinding),e.recordBounds(h,c,d,d);const{texcoords:u,offsets:f}=o,{fontSize:g,haloSize:p,outlineSize:_}=this._textMeshTransformProps;this._writeQuad(e,t,i,s,{texcoords:u,offsets:f,fontSize:g,haloSize:p,outlineSize:_,color:L(this.evaluatedMeshParams.color),isBackground:!1,referenceBounds:a,minZoom:Math.max(this._current.zoomRange[0],o.minZoom),maxZoom:Math.min(this._current.zoomRange[1],o.maxZoom),clipAngle:n,mapAligned:l,isLineLabel:!0}),e.recordEnd()}_isVisible(e,t){const i=Math.floor(this._zoomLevel*x)/x;return e<=i&&i<=t}}function j(e,t,i){const{coords:s,lengths:r}=t,o=d(),m=d(),u=d(),f=d(),g=d(),p=d(),_=2;let x=0;for(let d=0;d<r.length;d++){const t=r[d];for(let r=0;r<t;r++){const d=_*(r+x-1),M=_*(r+x),b=_*(r+x+1);r>0?n(o,s[d],s[d+1]):n(o,0,0),n(m,s[M],s[M+1]),r<t-1?n(u,s[b],s[b+1]):n(u,0,0),0===r?n(f,0,0):(a(f,m,o),l(f,f),n(f,f[1],-f[0])),r===t-1?n(g,0,0):(a(g,u,m),l(g,g),n(g,g[1],-g[0])),h(p,f,g),l(p,p);const y=p[0]*g[0]+p[1]*g[1];0!==y&&c(p,p,y),c(p,p,i),e.coords.push(m[0]+p[0],m[1]+p[1])}e.lengths.push(t),x+=t}return e}export{G as LabelMeshWriter};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,OAAO,IAAIC,CAAC,QAAK,uCAAuC;AAAC,SAAOC,KAAK,IAAIC,CAAC,QAAK,0CAA0C;AAAC,SAAOC,YAAY,IAAIC,CAAC,EAACC,SAAS,IAAIC,CAAC,QAAK,0DAA0D;AAAC,SAAOC,MAAM,IAAIC,CAAC,QAAK,kEAAkE;AAAC,SAAOC,cAAc,IAAIC,CAAC,EAACC,GAAG,IAAIC,CAAC,EAACC,GAAG,IAAIC,CAAC,EAACC,SAAS,IAAIC,CAAC,EAACC,GAAG,IAAIC,CAAC,EAACC,KAAK,IAAIC,CAAC,QAAK,yDAAyD;AAAC,SAAOC,UAAU,IAAIC,CAAC,QAAK,iEAAiE;AAAC,SAAOf,MAAM,IAAIgB,CAAC,QAAK,iEAAiE;AAAC,SAAOC,2BAA2B,IAAIC,CAAC,EAACC,iBAAiB,IAAIC,CAAC,QAAK,gEAAgE;AAAC,OAAOC,CAAC,MAAK,2DAA2D;AAAC,SAAOC,mBAAmB,IAAIC,CAAC,EAACC,mBAAmB,IAAIC,CAAC,QAAK,4BAA4B;AAAC,SAAOC,yBAAyB,IAAIC,CAAC,QAAK,yBAAyB;AAAC,SAAOC,iBAAiB,IAAIC,CAAC,QAAK,uBAAuB;AAAC,OAAOC,CAAC,MAAK,oCAAoC;AAAC,SAAOC,WAAW,IAAIC,CAAC,QAAK,oCAAoC;AAAC,SAAOC,WAAW,IAAIC,CAAC,EAACC,UAAU,IAAIC,CAAC,QAAK,yCAAyC;AAAC,SAAOC,aAAa,IAAIC,CAAC,EAACC,iBAAiB,IAAIC,CAAC,QAAK,4BAA4B;AAAC,SAAOC,cAAc,IAAIC,CAAC,EAACC,YAAY,IAAIC,CAAC,QAAK,2BAA2B;AAAC,MAAMC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,GAAG;EAACC,CAAC,GAACvD,CAAC,CAAEA,CAAC,IAAE;IAAC,IAAIE,CAAC,GAAC,CAAC;IAAC,IAAG,CAAC,KAAGF,CAAC,EAAC,OAAO,CAAC,GAAC,CAAC;IAAC,OAAK,EAAEA,CAAC,GAAC,CAAC,CAAC,GAAEE,CAAC,EAAE,EAACF,CAAC,IAAE,CAAC;IAAC,OAAOE,CAAC;EAAA,CAAE,CAAC;AAAC,MAAMsD,CAAC,SAASP,CAAC;EAACQ,WAAWA,CAAA,EAAE;IAAC,KAAK,CAAC,GAAGC,SAAS,CAAC,EAAC,IAAI,CAACC,UAAU,GAAC,CAAC;EAAA;EAACC,MAAMA,CAAC5D,CAAC,EAACE,CAAC,EAACE,CAAC,EAACE,CAAC,EAAC;IAAC,IAAG,IAAI,CAACqD,UAAU,GAACrD,CAAC,IAAE,CAAC,EAAC,IAAI,IAAEF,CAAC,EAAC,MAAM,IAAIyD,KAAK,CAAC,+DAA+D,CAAC;IAAC,QAAO3D,CAAC,CAAC4D,YAAY;MAAE,KAAI,mBAAmB;QAAC;UAAC,MAAM1D,CAAC,GAACF,CAAC,CAAC6D,eAAe,CAAC,CAAC;YAACzD,CAAC,GAACJ,CAAC,CAAC8D,eAAe,CAAC,CAAC;UAAC,IAAI,CAACC,WAAW,CAACjE,CAAC,EAACI,CAAC,EAACE,CAAC,EAACJ,CAAC,CAAC;UAAC;QAAK;MAAC,KAAI,sBAAsB;MAAC,KAAI,qBAAqB;MAAC,KAAI,wBAAwB;QAAC;UAAC,MAAME,CAAC,GAACF,CAAC,CAACgE,sBAAsB,CAAC,CAAC;UAAC,IAAG,CAAC9D,CAAC,EAAC;UAAO,MAAK,CAACE,CAAC,EAACE,CAAC,CAAC,GAACJ,CAAC,CAAC+D,MAAM;UAAC,IAAI,CAACF,WAAW,CAACjE,CAAC,EAACM,CAAC,EAACE,CAAC,EAACN,CAAC,CAAC;UAAC;QAAK;MAAC,KAAI,sBAAsB;QAAC,IAAI,CAACkE,WAAW,CAACpE,CAAC,EAACE,CAAC,CAAC;IAAA;EAAC;EAACmE,aAAaA,CAAA,EAAE;IAAC,MAAK;MAACC,mBAAmB,EAACtE,CAAC;MAACuE,iBAAiB,EAACrE;IAAC,CAAC,GAAC,IAAI,CAACsE,mBAAmB;IAAC,OAAM,CAAC,QAAQ,KAAGxE,CAAC,GAAC,CAAC,GAAC,OAAO,KAAGA,CAAC,GAAC,CAAC,CAAC,GAAC,CAAC,EAAC,QAAQ,KAAGE,CAAC,GAAC,CAAC,GAAC,QAAQ,KAAGA,CAAC,GAAC,CAAC,CAAC,GAAC,CAAC,CAAC;EAAA;EAACuE,sBAAsBA,CAACzE,CAAC,EAACE,CAAC,EAACE,CAAC,EAACE,CAAC,EAAC;IAAC,MAAME,CAAC,GAAC4B,CAAC,CAACpC,CAAC,CAAC;MAAC,CAACU,CAAC,EAACE,CAAC,CAAC,GAAC,IAAI,CAACyD,aAAa,CAAC,CAAC;MAACvD,CAAC,GAAC,IAAI,CAAC0D,mBAAmB,CAACE,SAAS,EAAEC,QAAQ,IAAE,CAAC;MAAC3D,CAAC,GAAC,IAAI,CAACwD,mBAAmB,CAACE,SAAS,EAAEE,QAAQ,IAAE,CAAC;IAAC,OAAO,IAAIrC,CAAC,CAAC/B,CAAC,EAACN,CAAC,EAACE,CAAC,EAACM,CAAC,EAACE,CAAC,EAACE,CAAC,EAACE,CAAC,EAACV,CAAC,IAAE,IAAI,CAAC;EAAA;EAAC2D,WAAWA,CAACjE,CAAC,EAACE,CAAC,EAACE,CAAC,EAACE,CAAC,EAAC;IAAC,MAAME,CAAC,GAAC,IAAI,CAACqE,WAAW,CAAC,CAAC;IAAC,IAAG,CAACrE,CAAC,EAAC;IAAO,MAAME,CAAC,GAACJ,CAAC,CAACwE,YAAY,CAAC,CAAC;MAAClE,CAAC,GAACkB,CAAC,CAAC,IAAI,CAAC0C,mBAAmB,CAACF,mBAAmB,CAAC;MAACxD,CAAC,GAACkB,CAAC,CAAC,IAAI,CAACwC,mBAAmB,CAACD,iBAAiB,CAAC;MAACvD,CAAC,GAAC,IAAI,CAACwD,mBAAmB,CAACE,SAAS,EAAEC,QAAQ,IAAE,CAAC;MAACzD,CAAC,GAAC,IAAI,CAACsD,mBAAmB,CAACE,SAAS,EAAEE,QAAQ,IAAE,CAAC;MAACxD,CAAC,GAACgB,CAAC,CAAC9B,CAAC,CAACwE,YAAY,CAAC,CAAC,CAAC;MAACxD,CAAC,GAAC,IAAI,CAACyD,wBAAwB,CAAC,CAAC,IAAE;QAACC,OAAO,EAAC,CAAC;QAACC,OAAO,EAAC,CAAC;QAACC,IAAI,EAAC;MAAC,CAAC;IAAClF,CAAC,CAACmF,WAAW,CAAC,IAAI5C,CAAC,CAACnB,CAAC,EAAClB,CAAC,EAACE,CAAC,EAACQ,CAAC,EAACE,CAAC,EAACE,CAAC,EAACE,CAAC,EAACI,CAAC,CAAC,CAAC,EAAC,IAAI,CAAC8D,YAAY,CAACpF,CAAC,EAACU,CAAC,EAACR,CAAC,EAACE,CAAC,EAACI,CAAC,EAAC,CAAC,EAACc,CAAC,CAAC,EAACtB,CAAC,CAACqF,cAAc,CAAC7E,CAAC,CAAC8E,OAAO,CAAC,EAACtF,CAAC,CAACuF,SAAS,CAAC,CAAC;EAAA;EAACR,wBAAwBA,CAAA,EAAE;IAAC,IAAG,CAAC,IAAI,CAACS,WAAW,EAAC,OAAO,IAAI;IAAC,KAAI,MAAMxF,CAAC,IAAI,IAAI,CAACwF,WAAW,EAAC;MAAC,MAAMtF,CAAC,GAACF,CAAC,CAACyF,aAAa,CAAC,CAAC;MAAC,IAAGvF,CAAC,EAAC,OAAOA,CAAC;IAAA;IAAC,OAAO,IAAI;EAAA;EAACkE,WAAWA,CAACpE,CAAC,EAACE,CAAC,EAAC;IAAC,MAAK;QAACwE,SAAS,EAACtE,CAAC;QAACmE,iBAAiB,EAACjE;MAAC,CAAC,GAAC,IAAI,CAACkE,mBAAmB;MAAChE,CAAC,GAAC,IAAI,CAACgE,mBAAmB,CAACkB,mBAAmB,IAAE,GAAG;MAAChF,CAAC,GAAC,IAAI,CAACmE,WAAW,CAAC,QAAQ,CAAC;IAAC,IAAG,CAACnE,CAAC,EAAC;IAAO,MAAME,CAAC,GAACA,CAACZ,CAAC,EAACE,CAAC,EAACE,CAAC,EAACE,CAAC,KAAG,IAAI,CAACqF,kBAAkB,CAAC3F,CAAC,EAACE,CAAC,EAACE,CAAC,EAACE,CAAC,CAAC;MAACQ,CAAC,GAAC,CAACJ,CAAC,CAACkF,MAAM,CAACC,KAAK,GAACrF,CAAC,KAAG,CAAC,IAAE4C,CAAC,CAAC;IAAC,IAAI,CAAC0C,QAAQ,GAAC;MAACC,GAAG,EAAC/F,CAAC;MAACgG,EAAE,EAAC9F,CAAC,CAAC4E,YAAY,CAAC,CAAC;MAACmB,OAAO,EAACvF,CAAC;MAACwF,SAAS,EAACrD,CAAC,CAACzC,CAAC,EAAC,IAAI,CAAC+F,WAAW,CAAC,CAAC,CAAC;MAACC,eAAe,EAAC,IAAI,CAACrB,wBAAwB,CAAC,CAAC,IAAE;QAACC,OAAO,EAAC,CAAC;QAACC,OAAO,EAAC,CAAC;QAACC,IAAI,EAAC;MAAC,CAAC;MAACmB,eAAe,EAAC;IAAI,CAAC,EAAC,IAAI,CAACC,kBAAkB,GAAC,QAAQ,KAAGhG,CAAC,GAAC,OAAO,GAAC,KAAK,KAAGA,CAAC,GAAC,OAAO,GAAC,IAAI,EAAC,IAAI,CAACgG,kBAAkB,GAAC,IAAI,CAACC,wBAAwB,CAACrG,CAAC,EAACU,CAAC,EAACE,CAAC,CAAC,GAAC,IAAI,CAAC0F,iBAAiB,CAACtG,CAAC,EAACU,CAAC,EAACE,CAAC,CAAC;EAAA;EAACyF,wBAAwBA,CAACvG,CAAC,EAACE,CAAC,EAACE,CAAC,EAAC;IAAC,MAAK;QAACqG,WAAW,EAACnG;MAAC,CAAC,GAAC,IAAI,CAACkE,mBAAmB;MAAC;QAACyB,OAAO,EAACzF;MAAC,CAAC,GAAC,IAAI,CAACsF,QAAQ;MAACpF,CAAC,GAACF,CAAC,CAACoF,MAAM,CAACc,UAAU;MAAC9F,CAAC,GAACZ,CAAC,CAAC2G,sBAAsB,CAAC,CAAC;IAAC,IAAG,CAAC/F,CAAC,EAAC;IAAO,MAAME,CAAC,GAAC,IAAIc,CAAC,CAAD,CAAC;IAACH,CAAC,CAACX,CAAC,EAACF,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,sBAAsB,EAAC,CAAC,CAAC;IAAC,MAAMI,CAAC,GAAC4F,CAAC,CAAC,IAAIhF,CAAC,CAAD,CAAC,EAACd,CAAC,EAACJ,CAAC,CAAC;MAACQ,CAAC,GAAC0F,CAAC,CAAC,IAAIhF,CAAC,CAAD,CAAC,EAACd,CAAC,EAAC,CAACJ,CAAC,CAAC;MAACU,CAAC,GAACO,CAAC,CAACT,CAAC,EAAC,sBAAsB,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;MAACI,CAAC,GAACK,CAAC,CAACX,CAAC,EAAC,sBAAsB,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;MAACO,CAAC,GAACkB,CAAC,CAACnB,CAAC,CAACuF,KAAK,EAACrG,CAAC,CAACoF,MAAM,CAACC,KAAK,CAAC;MAAC/D,CAAC,GAACW,CAAC,CAACrB,CAAC,CAACyF,KAAK,EAACrG,CAAC,CAACoF,MAAM,CAACC,KAAK,CAAC;IAAC,IAAI,CAACC,QAAQ,CAACO,eAAe,GAAC,OAAO;IAAC,KAAI,MAAM5E,CAAC,IAAIF,CAAC,EAACoB,CAAC,CAAClB,CAAC,EAACrB,CAAC,EAACF,CAAC,EAAC,CAAC,CAACI,CAAC,CAAC;IAAC,IAAI,CAACwF,QAAQ,CAACO,eAAe,GAAC,OAAO;IAAC,KAAI,MAAM5E,CAAC,IAAIK,CAAC,EAACa,CAAC,CAAClB,CAAC,EAACrB,CAAC,EAACF,CAAC,EAAC,CAAC,CAACI,CAAC,CAAC;EAAA;EAACkG,iBAAiBA,CAACxG,CAAC,EAACE,CAAC,EAACE,CAAC,EAAC;IAAC,MAAK;QAACqG,WAAW,EAACnG;MAAC,CAAC,GAAC,IAAI,CAACkE,mBAAmB;MAAC;QAACyB,OAAO,EAACzF;MAAC,CAAC,GAAC,IAAI,CAACsF,QAAQ;MAACpF,CAAC,GAAC+B,CAAC,CAACzC,CAAC,CAAC8G,4BAA4B,CAAC,CAAC,CAACD,KAAK,EAACrG,CAAC,CAACoF,MAAM,CAACC,KAAK,CAAC;IAAC,KAAI,MAAMjF,CAAC,IAAIF,CAAC,EAACiC,CAAC,CAAC/B,CAAC,EAACR,CAAC,EAACF,CAAC,EAAC,CAAC,CAACI,CAAC,CAAC;EAAA;EAACqF,kBAAkBA,CAAC3F,CAAC,EAACE,CAAC,EAACE,CAAC,EAACE,CAAC,EAAC;IAAC,MAAK;QAACyG,YAAY,EAACvG,CAAC;QAACwG,aAAa,EAACtG,CAAC;QAACgF,mBAAmB,EAAC9E;MAAC,CAAC,GAAC,IAAI,CAAC4D,mBAAmB;MAAC1D,CAAC,GAAC,IAAI,CAACgF,QAAQ,CAACI,SAAS,CAAC,CAAC,CAAC;MAAClF,CAAC,GAACuC,CAAC,CAACrD,CAAC,CAAC;MAACgB,CAAC,GAAC,IAAI,CAAC4E,QAAQ,CAACG,OAAO,CAACL,MAAM,CAACC,KAAK,IAAE,CAAC,IAAEzC,CAAC,CAAC;MAAChC,CAAC,GAAC6F,IAAI,CAACC,IAAI,CAACtG,CAAC,IAAE0C,CAAC,CAAC,IAAE,CAAC,IAAEF,CAAC,CAAC;MAAC9B,CAAC,GAAC2F,IAAI,CAACE,GAAG,CAAC/G,CAAC,EAACE,CAAC,GAACF,CAAC,CAAC;MAACmB,CAAC,GAAC,IAAI,CAACuE,QAAQ,CAACG,OAAO,CAACmB,WAAW,GAACjE,CAAC,GAAC8D,IAAI,CAACI,IAAI,CAAC/F,CAAC,IAAEF,CAAC,GAACF,CAAC,GAAC,CAAC,CAAC,CAAC;MAACO,CAAC,GAAC,CAAC,KAAGvB,CAAC,GAACqB,CAAC,GAAC0F,IAAI,CAACE,GAAG,CAACnG,CAAC,EAACO,CAAC,CAAC;MAACI,CAAC,GAACsF,IAAI,CAACK,GAAG,CAACxG,CAAC,EAAC,IAAI,CAAC6C,UAAU,GAACP,CAAC,GAAC3B,CAAC,CAAC;MAACG,CAAC,GAAC,IAAI,CAAC+B,UAAU,GAAChC,CAAC;MAACG,CAAC,GAAC,IAAI,CAACgE,QAAQ,CAACG,OAAO,CAACL,MAAM,CAACC,KAAK,GAAC,CAAC,GAAC,CAAC,IAAEjE,CAAC;IAAC,IAAI,CAACkE,QAAQ,CAACG,OAAO,CAACmB,WAAW,GAAC,CAAC,KAAGlH,CAAC,IAAE,IAAI,CAACqH,cAAc,CAACvH,CAAC,EAAC2B,CAAC,CAAC,GAACnB,CAAC,IAAEoB,CAAC,GAAC,CAAC,GAAC,IAAI,CAAC4F,mBAAmB,CAACxH,CAAC,EAACc,CAAC,CAAC,GAAC,UAAU,KAAGJ,CAAC,GAAC,IAAI,CAAC8G,mBAAmB,CAACxH,CAAC,EAAC2B,CAAC,CAAC,GAAC,QAAQ,KAAGjB,CAAC,IAAE,IAAI,CAAC+G,YAAY,CAACzH,CAAC,EAAC2B,CAAC,EAACG,CAAC,CAAC;EAAA;EAACyF,cAAcA,CAACvH,CAAC,EAACE,CAAC,EAAC;IAAC,MAAK;QAAC6F,GAAG,EAAC3F,CAAC;QAAC4F,EAAE,EAAC1F,CAAC;QAAC2F,OAAO,EAACzF,CAAC;QAAC4F,eAAe,EAAC1F;MAAC,CAAC,GAAC,IAAI,CAACoF,QAAQ;MAAC;QAAC5D,CAAC,EAACtB,CAAC;QAAC2B,CAAC,EAACzB;MAAC,CAAC,GAACd,CAAC;IAACI,CAAC,CAAC+E,WAAW,CAAC,IAAI,CAACV,sBAAsB,CAACnE,CAAC,EAACM,CAAC,EAACE,CAAC,CAAC,CAAC,EAACV,CAAC,CAACiF,cAAc,CAAC7E,CAAC,CAAC8E,OAAO,CAAC;IAAC,MAAMtE,CAAC,GAAChB,CAAC,CAAC0H,KAAK,IAAE,GAAG,GAACT,IAAI,CAACU,EAAE,CAAC,GAAC,GAAG;MAACzG,CAAC,GAAC,CAAClB,CAAC,CAAC0H,KAAK,IAAE,GAAG,GAACT,IAAI,CAACU,EAAE,CAAC,GAAC,GAAG,IAAE,GAAG;IAAC,IAAI,CAACvC,YAAY,CAAChF,CAAC,EAACE,CAAC,EAACM,CAAC,EAACE,CAAC,EAACN,CAAC,EAAC,CAAC,EAACE,CAAC,EAAC;MAACkH,SAAS,EAAC5G,CAAC;MAAC6G,UAAU,EAAC,CAAC,CAAC;MAACC,WAAW,EAAC,CAAC,CAAC;MAACC,OAAO,EAAC7H;IAAC,CAAC,CAAC,EAAC,IAAI,CAACkF,YAAY,CAAChF,CAAC,EAACE,CAAC,EAACM,CAAC,EAACE,CAAC,EAACN,CAAC,EAAC,CAAC,EAACE,CAAC,EAAC;MAACkH,SAAS,EAAC1G,CAAC;MAAC2G,UAAU,EAAC,CAAC,CAAC;MAACC,WAAW,EAAC,CAAC,CAAC;MAACC,OAAO,EAAC7H;IAAC,CAAC,CAAC,EAACE,CAAC,CAACmF,SAAS,CAAC,CAAC;EAAA;EAACkC,YAAYA,CAACzH,CAAC,EAACE,CAAC,EAACE,CAAC,EAAC;IAAC,MAAK;MAAC2F,GAAG,EAACzF,CAAC;MAAC0F,EAAE,EAACxF;IAAC,CAAC,GAAC,IAAI,CAACsF,QAAQ;IAACxF,CAAC,CAAC6E,WAAW,CAAC,IAAI,CAACV,sBAAsB,CAACjE,CAAC,EAACR,CAAC,CAACkC,CAAC,EAAClC,CAAC,CAACuC,CAAC,CAAC,CAAC;IAAC,MAAM7B,CAAC,GAACV,CAAC,CAACgI,KAAK,CAAC,CAAC;MAACpH,CAAC,GAACZ,CAAC,CAAC0H,KAAK,IAAE,GAAG,GAACT,IAAI,CAACU,EAAE,CAAC,GAAC,GAAG;MAAC7G,CAAC,GAAC,CAACd,CAAC,CAAC0H,KAAK,IAAE,GAAG,GAACT,IAAI,CAACU,EAAE,CAAC,GAAC,GAAG,IAAE,GAAG;IAAC,IAAI,CAACrB,kBAAkB,IAAE,IAAI,CAACA,kBAAkB,KAAG,IAAI,CAACR,QAAQ,CAACO,eAAe,KAAG,IAAI,CAAC4B,WAAW,CAACvH,CAAC,EAACR,CAAC,EAAC,CAAC,EAACU,CAAC,CAAC,EAAC,IAAI,CAACsH,UAAU,CAAClI,CAAC,EAACU,CAAC,EAACR,CAAC,EAACE,CAAC,EAAC,CAAC,EAACQ,CAAC,CAAC,EAAC,IAAI,CAACuH,aAAa,CAACnI,CAAC,EAACU,CAAC,EAACR,CAAC,EAACE,CAAC,EAAC,CAAC,EAACQ,CAAC,CAAC,CAAC,EAAC,IAAI,CAAC0F,kBAAkB,IAAE,IAAI,CAACA,kBAAkB,KAAG,IAAI,CAACR,QAAQ,CAACO,eAAe,KAAG,IAAI,CAAC4B,WAAW,CAACvH,CAAC,EAACR,CAAC,EAAC,CAAC,EAACY,CAAC,CAAC,EAAC,IAAI,CAACoH,UAAU,CAAClI,CAAC,EAACU,CAAC,EAACR,CAAC,EAACE,CAAC,EAAC,CAAC,EAACU,CAAC,CAAC,EAAC,IAAI,CAACqH,aAAa,CAACnI,CAAC,EAACU,CAAC,EAACR,CAAC,EAACE,CAAC,EAAC,CAAC,EAACU,CAAC,CAAC,CAAC,EAACR,CAAC,CAACiF,SAAS,CAAC,CAAC;EAAA;EAACiC,mBAAmBA,CAACxH,CAAC,EAACU,CAAC,EAAC;IAAC,MAAK;QAACqF,GAAG,EAACnF,CAAC;QAACoF,EAAE,EAAClF,CAAC;QAACmF,OAAO,EAACjF,CAAC;QAACkF,SAAS,EAAChF,CAAC;QAACkF,eAAe,EAAChF;MAAC,CAAC,GAAC,IAAI,CAAC0E,QAAQ;MAAC;QAACsC,kBAAkB,EAAC7G,CAAC;QAAC8G,kBAAkB,EAAC5G;MAAC,CAAC,GAAC,IAAI,CAAC+C,mBAAmB;MAAC7C,CAAC,GAAC3B,CAAC,CAACgI,KAAK,CAAC,CAAC;MAACpG,CAAC,GAAC5B,CAAC,CAAC0H,KAAK,IAAE,GAAG,GAACT,IAAI,CAACU,EAAE,CAAC,GAAC,GAAG;MAAC7F,CAAC,GAAC,CAAC9B,CAAC,CAAC0H,KAAK,IAAE,GAAG,GAACT,IAAI,CAACU,EAAE,CAAC,GAAC,GAAG,IAAE,GAAG;MAAC3F,CAAC,GAAChB,CAAC,CAACsH,MAAM,CAACC,MAAM,GAAC,CAAC,IAAE,EAAE,CAAChH,CAAC,IAAE,CAACE,CAAC,CAAC;IAAC,IAAGb,CAAC,CAACuE,WAAW,CAAC,IAAI,CAACV,sBAAsB,CAAC3D,CAAC,EAACd,CAAC,CAACkC,CAAC,EAAClC,CAAC,CAACuC,CAAC,CAAC,CAAC,EAACP,CAAC,EAAC;MAAC,MAAMT,CAAC,GAAC0F,IAAI,CAACK,GAAG,CAAC5G,CAAC,EAACQ,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC;QAACO,CAAC,GAACwF,IAAI,CAACE,GAAG,CAAChE,CAAC,EAACjC,CAAC,CAAC,CAAC,CAAC,CAAC;QAACS,CAAC,GAACvB,CAAC,CAACI,CAAC,CAAC,CAAC,EAAC,CAACR,CAAC,CAAC0H,KAAK,CAAC;QAAC1F,CAAC,GAAC;UAAC+F,OAAO,EAACxG,CAAC;UAACiH,OAAO,EAAC/G,CAAC;UAACmG,SAAS,EAAChG,CAAC;UAACiG,UAAU,EAAC,CAAC,CAAC;UAACC,WAAW,EAAC,CAAC;QAAC,CAAC;QAAC5F,CAAC,GAAChC,CAAC,CAAC,IAAI,CAACsE,mBAAmB,CAACQ,OAAO,CAAC;QAAC5C,CAAC,GAAClC,CAAC,CAAC,IAAI,CAACsE,mBAAmB,CAACS,OAAO,CAAC;MAAC,IAAG,CAAC,IAAI,CAACqB,kBAAkB,IAAE,IAAI,CAACA,kBAAkB,KAAG,IAAI,CAACR,QAAQ,CAACO,eAAe,EAAC;QAAC,MAAMnG,CAAC,GAACoB,CAAC,CAACY,CAAC,EAAC,CAAC,CAAC,GAACE,CAAC,CAAC;UAAC,CAAChC,CAAC,EAACM,CAAC,CAAC,GAACM,CAAC,CAACyH,eAAe,CAACnI,CAAC,CAACE,CAAC,CAAC,CAAC,EAACmB,CAAC,EAACzB,CAAC,CAAC,CAAC;QAACU,CAAC,CAAC8H,WAAW,CAAC,IAAI,CAACC,UAAU,EAAC,IAAI,CAACC,eAAe,EAAC5H,CAAC,CAACsH,MAAM,CAAC,CAAC,CAAC,CAACO,cAAc,CAAC;QAAC,MAAM3H,CAAC,GAAC,CAAC,GAAC+F,IAAI,CAACK,GAAG,CAAClH,CAAC,CAACyF,KAAK,EAACzF,CAAC,CAAC0I,MAAM,CAAC;QAAClI,CAAC,CAACmI,YAAY,CAAC/I,CAAC,CAACkC,CAAC,GAAC9B,CAAC,CAAC8B,CAAC,EAAClC,CAAC,CAACuC,CAAC,GAACnC,CAAC,CAACmC,CAAC,EAACrB,CAAC,EAACA,CAAC,CAAC,EAAC,IAAI,CAAC8H,aAAa,CAACpI,CAAC,EAACE,CAAC,EAACd,CAAC,CAACkC,CAAC,EAAClC,CAAC,CAACuC,CAAC,EAAC7B,CAAC,EAACU,CAAC,EAACY,CAAC,CAAC,EAACpB,CAAC,CAACqI,SAAS,CAAC,CAAC;MAAA;MAAC,IAAG,CAAC,IAAI,CAAC3C,kBAAkB,IAAE,IAAI,CAACA,kBAAkB,KAAG,IAAI,CAACR,QAAQ,CAACO,eAAe,EAAC;QAAC,MAAMnG,CAAC,GAACoB,CAAC,CAACY,CAAC,EAACE,CAAC,CAAC;UAAC,CAAChC,CAAC,EAACM,CAAC,CAAC,GAACM,CAAC,CAACyH,eAAe,CAACnI,CAAC,CAACE,CAAC,CAAC,CAAC,EAACmB,CAAC,EAACzB,CAAC,CAAC,CAAC;QAAC8B,CAAC,CAAC4F,SAAS,GAAC9F,CAAC,EAAClB,CAAC,CAAC8H,WAAW,CAAC,IAAI,CAACC,UAAU,EAAC,IAAI,CAACC,eAAe,EAAC5H,CAAC,CAACsH,MAAM,CAAC,CAAC,CAAC,CAACO,cAAc,CAAC;QAAC,MAAM3H,CAAC,GAAC,CAAC,GAAC+F,IAAI,CAACK,GAAG,CAAClH,CAAC,CAACyF,KAAK,EAACzF,CAAC,CAAC0I,MAAM,CAAC;QAAClI,CAAC,CAACmI,YAAY,CAAC/I,CAAC,CAACkC,CAAC,GAAC9B,CAAC,CAAC8B,CAAC,EAAClC,CAAC,CAACuC,CAAC,GAACnC,CAAC,CAACmC,CAAC,EAACrB,CAAC,EAACA,CAAC,CAAC,EAAC,IAAI,CAAC8H,aAAa,CAACpI,CAAC,EAACE,CAAC,EAACd,CAAC,CAACkC,CAAC,EAAClC,CAAC,CAACuC,CAAC,EAAC7B,CAAC,EAACU,CAAC,EAACY,CAAC,CAAC,EAACpB,CAAC,CAACqI,SAAS,CAAC,CAAC;MAAA;IAAC;IAAC,IAAI,CAAC3C,kBAAkB,IAAE,IAAI,CAACA,kBAAkB,KAAG,IAAI,CAACR,QAAQ,CAACO,eAAe,IAAE,IAAI,CAAC4B,WAAW,CAACtG,CAAC,EAACjB,CAAC,EAAC,CAAC,EAACkB,CAAC,EAAC,CAAC,CAAC,CAAC,EAAC,IAAI,CAAC0E,kBAAkB,IAAE,IAAI,CAACA,kBAAkB,KAAG,IAAI,CAACR,QAAQ,CAACO,eAAe,IAAE,IAAI,CAAC4B,WAAW,CAACtG,CAAC,EAACjB,CAAC,EAAC,CAAC,EAACoB,CAAC,EAAC,CAAC,CAAC,CAAC,EAAClB,CAAC,CAAC2E,SAAS,CAAC,CAAC;EAAA;EAAC2C,UAAUA,CAAClI,CAAC,EAACE,CAAC,EAACE,CAAC,EAACE,CAAC,EAACE,CAAC,EAACE,CAAC,EAAC;IAAC,MAAME,CAAC,GAACZ,CAAC,CAACgI,KAAK,CAAC,CAAC;IAAC,IAAIlH,CAAC,GAACd,CAAC,CAACkJ,cAAc,GAAC7F,CAAC;IAAC,OAAKzC,CAAC,CAACuI,IAAI,CAAC,CAAC,IAAE,EAAErI,CAAC,IAAER,CAAC,CAAC,GAAE,IAAI,CAAC8I,eAAe,CAACxI,CAAC,EAACV,CAAC,EAACY,CAAC,EAACV,CAAC,EAAC,CAAC,CAAC,EAACI,CAAC,EAACE,CAAC,CAAC,EAACI,CAAC,IAAEF,CAAC,CAAC2H,MAAM,GAAClF,CAAC;EAAA;EAAC8E,aAAaA,CAACnI,CAAC,EAACE,CAAC,EAACE,CAAC,EAACE,CAAC,EAACE,CAAC,EAACE,CAAC,EAAC;IAAC,MAAME,CAAC,GAACZ,CAAC,CAACgI,KAAK,CAAC,CAAC;IAAC,IAAIlH,CAAC,GAACd,CAAC,CAACqJ,eAAe,GAAChG,CAAC;IAAC,OAAKzC,CAAC,CAAC0I,IAAI,CAAC,CAAC,IAAE,EAAExI,CAAC,IAAER,CAAC,CAAC,GAAE,IAAI,CAAC8I,eAAe,CAACxI,CAAC,EAACV,CAAC,EAACY,CAAC,EAACV,CAAC,EAAC,CAAC,EAACI,CAAC,EAACE,CAAC,CAAC,EAACI,CAAC,IAAEF,CAAC,CAAC2H,MAAM,GAAClF,CAAC;EAAA;EAAC4E,WAAWA,CAACjI,CAAC,EAACM,CAAC,EAACM,CAAC,EAACE,CAAC,EAACE,CAAC,GAAC,CAAC,CAAC,EAAC;IAAC,MAAK;QAAC+E,GAAG,EAAC7E,CAAC;QAAC8E,EAAE,EAAC5E,CAAC;QAAC6E,OAAO,EAAC1E,CAAC;QAAC2E,SAAS,EAACzE,CAAC;QAAC2E,eAAe,EAACzE;MAAC,CAAC,GAAC,IAAI,CAACmE,QAAQ;MAAClE,CAAC,GAACL,CAAC,CAAC+G,MAAM;MAACxG,CAAC,GAAC5B,CAAC,CAAC,IAAI,CAACsE,mBAAmB,CAACQ,OAAO,CAAC;MAAChD,CAAC,GAAC9B,CAAC,CAAC,IAAI,CAACsE,mBAAmB,CAACS,OAAO,CAAC;MAAC/C,CAAC,GAACZ,CAAC,CAACQ,CAAC,EAACE,CAAC,CAAC;MAACI,CAAC,GAAChC,CAAC,CAACI,CAAC,CAAC,CAAC,EAAC,CAACR,CAAC,CAAC0H,KAAK,CAAC;IAAChH,CAAC,CAACwB,CAAC,EAACA,CAAC,EAACE,CAAC,CAAC;IAAC,KAAI,MAAMlC,CAAC,IAAI0B,CAAC,EAAC;MAAC,MAAMxB,CAAC,GAACF,CAAC,CAACgC,CAAC,GAACX,CAAC,CAACqE,MAAM,CAAC1D,CAAC,GAACtB,CAAC,GAAC,CAAC,GAACA,CAAC;QAACJ,CAAC,GAACJ,CAAC,GAACJ,CAAC,CAACqJ,eAAe,GAAC,CAAC,CAAC,GAACjJ,CAAC,IAAEJ,CAAC,CAACkJ,cAAc;QAACxI,CAAC,GAACuG,IAAI,CAACsC,GAAG,CAACrJ,CAAC,CAACgC,CAAC,GAAChC,CAAC,CAAC2F,KAAK,GAAC,CAAC,GAACtE,CAAC,CAACqE,MAAM,CAAC1D,CAAC,CAAC;QAACZ,CAAC,GAAC2F,IAAI,CAACK,GAAG,CAAC,CAAC,EAAC,IAAI,CAAC3D,UAAU,GAACsD,IAAI,CAACI,IAAI,CAAC3G,CAAC,IAAEF,CAAC,GAAC6C,CAAC,CAAC,CAAC,CAAC;QAACzB,CAAC,GAACqF,IAAI,CAACK,GAAG,CAAChH,CAAC,EAACU,CAAC,GAAC,CAAC,GAACM,CAAC,CAAC;MAAC,IAAGpB,CAAC,CAACsI,OAAO,GAACvB,IAAI,CAACE,GAAG,CAAC1F,CAAC,CAAC,CAAC,CAAC,EAAC0B,CAAC,CAAC,EAACjD,CAAC,CAACwH,KAAK,GAAC1H,CAAC,CAAC0H,KAAK,GAAC,CAAC,CAAC,GAAC9G,CAAC,IAAEqG,IAAI,CAACU,EAAE,EAACzH,CAAC,CAAC6H,OAAO,GAACd,IAAI,CAACK,GAAG,CAAC7F,CAAC,CAAC,CAAC,CAAC,EAACG,CAAC,CAAC,EAAC,IAAI,CAAC4H,eAAe,CAACtI,CAAC,EAACE,CAAC,EAACpB,CAAC,CAACkC,CAAC,EAAClC,CAAC,CAACuC,CAAC,EAAChB,CAAC,CAACqE,MAAM,EAAC1F,CAAC,EAACY,CAAC,EAACa,CAAC,EAAC,CAAC,CAAC,CAAC,EAAC,CAACf,CAAC,IAAE,IAAI,CAACkF,QAAQ,CAACO,eAAe,KAAG,IAAI,CAACoD,UAAU,CAACvJ,CAAC,CAAC6H,OAAO,EAAC7H,CAAC,CAACsI,OAAO,CAAC,EAAC;QAAC,MAAMxI,CAAC,GAAC,IAAIqC,CAAC,CAACnC,CAAC,CAAC0F,MAAM,CAAC1D,CAAC,GAACA,CAAC,CAAC,CAAC,CAAC,EAAChC,CAAC,CAAC0F,MAAM,CAACrD,CAAC,GAACL,CAAC,CAAC,CAAC,CAAC,EAAChC,CAAC,CAAC0F,MAAM,CAACC,KAAK,EAAC3F,CAAC,CAAC0F,MAAM,CAACkD,MAAM,CAAC;QAAC5H,CAAC,CAACmE,cAAc,CAACrF,CAAC,CAAC;MAAA;IAAC;EAAC;EAACoJ,eAAeA,CAACpJ,CAAC,EAACM,CAAC,EAACM,CAAC,EAACE,CAAC,EAACE,CAAC,EAACE,CAAC,EAACE,CAAC,EAAC;IAAC,MAAK;QAAC2E,GAAG,EAACxE,CAAC;QAACyE,EAAE,EAACvE,CAAC;QAACwE,OAAO,EAACtE,CAAC;QAACyE,eAAe,EAACxE;MAAC,CAAC,GAAC,IAAI,CAACkE,QAAQ;MAAChE,CAAC,GAACH,CAAC,CAAC2G,MAAM;MAACtG,CAAC,GAAChC,CAAC,CAAC0J,EAAE,GAAC1J,CAAC,CAACuI,MAAM;MAACrG,CAAC,GAAClC,CAAC,CAAC2J,EAAE,GAAC3J,CAAC,CAACuI,MAAM;MAACnG,CAAC,GAAC;QAACF,CAAC,EAAClC,CAAC,CAACkC,CAAC,GAACtB,CAAC,GAAC,CAACI,CAAC,GAACgB,CAAC;QAACO,CAAC,EAACvC,CAAC,CAACuC,CAAC,GAAC3B,CAAC,GAAC,CAACI,CAAC,GAACkB;MAAC,CAAC;MAACK,CAAC,GAACrC,CAAC,CAAC,IAAI,CAACsE,mBAAmB,CAACQ,OAAO,CAAC;MAACvC,CAAC,GAACvC,CAAC,CAAC,IAAI,CAACsE,mBAAmB,CAACS,OAAO,CAAC;MAACtC,CAAC,GAACrB,CAAC,CAACiB,CAAC,EAACE,CAAC,CAAC;MAACI,CAAC,GAACzC,CAAC,CAACI,CAAC,CAAC,CAAC,EAAC,CAACR,CAAC,CAAC0H,KAAK,CAAC;IAAChH,CAAC,CAACiC,CAAC,EAACA,CAAC,EAACE,CAAC,CAAC;IAAC,KAAI,MAAM3C,CAAC,IAAI4B,CAAC,EAAC;MAAC,MAAM1B,CAAC,GAACF,CAAC,CAACgC,CAAC,GAACP,CAAC,CAACiE,MAAM,CAAC1D,CAAC,GAAChB,CAAC,GAAC,CAAC,GAACA,CAAC;MAAC,IAAG,EAAEd,CAAC,IAAE,CAAC,KAAGY,CAAC,IAAE,CAACZ,CAAC,IAAE,CAAC,CAAC,KAAGY,CAAC,CAAC,EAAC;MAAS,MAAMV,CAAC,GAAC2G,IAAI,CAACsC,GAAG,CAACrJ,CAAC,CAACgC,CAAC,GAAChC,CAAC,CAAC2F,KAAK,GAAC,CAAC,GAAClE,CAAC,CAACiE,MAAM,CAAC1D,CAAC,CAAC;QAAC1B,CAAC,GAACyG,IAAI,CAACK,GAAG,CAAC,CAAC,EAAC,IAAI,CAAC3D,UAAU,GAACsD,IAAI,CAACI,IAAI,CAAC/G,CAAC,GAACM,CAAC,CAAC,GAAC,EAAE,CAAC;QAACF,CAAC,GAACuG,IAAI,CAACK,GAAG,CAACxG,CAAC,EAAC,IAAI,CAAC6C,UAAU,GAACsD,IAAI,CAACI,IAAI,CAAC/G,CAAC,IAAEM,CAAC,GAACZ,CAAC,CAACuI,MAAM,GAAClF,CAAC,CAAC,CAAC,CAAC;MAAC,IAAG,CAAC,KAAG7C,CAAC,KAAGN,CAAC,CAACwH,KAAK,GAAC1H,CAAC,CAAC0H,KAAK,GAAC,CAAC,CAAC,GAACxG,CAAC,IAAE+F,IAAI,CAACU,EAAE,EAACzH,CAAC,CAAC6H,OAAO,GAACrH,CAAC,EAACR,CAAC,CAACsI,OAAO,GAAChI,CAAC,EAAC,IAAI,CAACgJ,eAAe,CAACjI,CAAC,EAACE,CAAC,EAACW,CAAC,CAACF,CAAC,EAACE,CAAC,CAACG,CAAC,EAACZ,CAAC,CAACiE,MAAM,EAAC1F,CAAC,EAACkB,CAAC,EAACQ,CAAC,EAAC,CAAC,CAAC,CAAC,EAAC,CAACV,CAAC,IAAE,IAAI,CAAC4E,QAAQ,CAACO,eAAe,KAAG,IAAI,CAACoD,UAAU,CAACvJ,CAAC,CAAC6H,OAAO,EAAC7H,CAAC,CAACsI,OAAO,CAAC,CAAC,EAAC;QAAC,MAAMxI,CAAC,GAAC,IAAIqC,CAAC,CAACnC,CAAC,CAAC0F,MAAM,CAAC1D,CAAC,GAACS,CAAC,CAAC,CAAC,CAAC,EAACzC,CAAC,CAAC0F,MAAM,CAACrD,CAAC,GAACI,CAAC,CAAC,CAAC,CAAC,EAACzC,CAAC,CAAC0F,MAAM,CAACC,KAAK,EAAC3F,CAAC,CAAC0F,MAAM,CAACkD,MAAM,CAAC;QAACvH,CAAC,CAAC8D,cAAc,CAACrF,CAAC,CAAC;MAAA;IAAC;EAAC;EAACwJ,eAAeA,CAACxJ,CAAC,EAACE,CAAC,EAACE,CAAC,EAACE,CAAC,EAACE,CAAC,EAACE,CAAC,EAACE,CAAC,EAACE,CAAC,EAACE,CAAC,EAAC;IAAC,MAAME,CAAC,GAACd,CAAC,GAACI,CAAC,CAAC0B,CAAC;MAACd,CAAC,GAACd,CAAC,GAACE,CAAC,CAAC+B,CAAC;MAACjB,CAAC,GAAC,CAAC,IAAE,IAAI,CAACkD,mBAAmB,CAACoF,cAAc,GAAC,IAAI,CAACpF,mBAAmB,CAACoF,cAAc,GAAC,IAAI,CAACC,uBAAuB,CAACC,QAAQ,GAAC,CAAC,CAAC;MAACvI,CAAC,GAAC0F,IAAI,CAACK,GAAG,CAAC9G,CAAC,CAACqF,KAAK,EAACrF,CAAC,CAACsI,MAAM,CAAC,GAACxH,CAAC;IAACtB,CAAC,CAAC0I,WAAW,CAAC,IAAI,CAACC,UAAU,EAAC,IAAI,CAACC,eAAe,EAAClI,CAAC,CAACmI,cAAc,CAAC,EAAC7I,CAAC,CAAC+I,YAAY,CAAC7H,CAAC,EAACE,CAAC,EAACG,CAAC,EAACA,CAAC,CAAC;IAAC,MAAK;QAACwI,SAAS,EAACtI,CAAC;QAACuI,OAAO,EAACrI;MAAC,CAAC,GAACjB,CAAC;MAAC;QAACoJ,QAAQ,EAAClI,CAAC;QAACqI,QAAQ,EAACnI,CAAC;QAACoI,WAAW,EAAClI;MAAC,CAAC,GAAC,IAAI,CAAC6H,uBAAuB;IAAC,IAAI,CAACM,UAAU,CAACnK,CAAC,EAACE,CAAC,EAACE,CAAC,EAACE,CAAC,EAAC;MAACyJ,SAAS,EAACtI,CAAC;MAACuI,OAAO,EAACrI,CAAC;MAACmI,QAAQ,EAAClI,CAAC;MAACqI,QAAQ,EAACnI,CAAC;MAACoI,WAAW,EAAClI,CAAC;MAACoI,KAAK,EAACrH,CAAC,CAAC,IAAI,CAACyB,mBAAmB,CAAC4F,KAAK,CAAC;MAACC,YAAY,EAAC,CAAC,CAAC;MAACjE,eAAe,EAACtF,CAAC;MAACiH,OAAO,EAACd,IAAI,CAACK,GAAG,CAAC,IAAI,CAACxB,QAAQ,CAACI,SAAS,CAAC,CAAC,CAAC,EAACxF,CAAC,CAACqH,OAAO,CAAC;MAACS,OAAO,EAACvB,IAAI,CAACE,GAAG,CAAC,IAAI,CAACrB,QAAQ,CAACI,SAAS,CAAC,CAAC,CAAC,EAACxF,CAAC,CAAC8H,OAAO,CAAC;MAACZ,SAAS,EAAChH,CAAC;MAACiH,UAAU,EAAC7G,CAAC;MAAC8G,WAAW,EAAC,CAAC;IAAC,CAAC,CAAC,EAAC9H,CAAC,CAACiJ,SAAS,CAAC,CAAC;EAAA;EAACQ,UAAUA,CAACzJ,CAAC,EAACE,CAAC,EAAC;IAAC,MAAME,CAAC,GAAC6G,IAAI,CAACqD,KAAK,CAAC,IAAI,CAAC3G,UAAU,GAACzB,CAAC,CAAC,GAACA,CAAC;IAAC,OAAOlC,CAAC,IAAEI,CAAC,IAAEA,CAAC,IAAEF,CAAC;EAAA;AAAC;AAAC,SAAS0G,CAACA,CAAC5G,CAAC,EAACE,CAAC,EAACE,CAAC,EAAC;EAAC,MAAK;MAAC+D,MAAM,EAAC7D,CAAC;MAACiK,OAAO,EAAC/J;IAAC,CAAC,GAACN,CAAC;IAACQ,CAAC,GAACa,CAAC,CAAC,CAAC;IAACD,CAAC,GAACC,CAAC,CAAC,CAAC;IAACE,CAAC,GAACF,CAAC,CAAC,CAAC;IAACI,CAAC,GAACJ,CAAC,CAAC,CAAC;IAACK,CAAC,GAACL,CAAC,CAAC,CAAC;IAACO,CAAC,GAACP,CAAC,CAAC,CAAC;IAACS,CAAC,GAAC,CAAC;EAAC,IAAIE,CAAC,GAAC,CAAC;EAAC,KAAI,IAAIX,CAAC,GAAC,CAAC,EAACA,CAAC,GAACf,CAAC,CAAC+H,MAAM,EAAChH,CAAC,EAAE,EAAC;IAAC,MAAMrB,CAAC,GAACM,CAAC,CAACe,CAAC,CAAC;IAAC,KAAI,IAAIf,CAAC,GAAC,CAAC,EAACA,CAAC,GAACN,CAAC,EAACM,CAAC,EAAE,EAAC;MAAC,MAAMe,CAAC,GAACS,CAAC,IAAExB,CAAC,GAAC0B,CAAC,GAAC,CAAC,CAAC;QAACE,CAAC,GAACJ,CAAC,IAAExB,CAAC,GAAC0B,CAAC,CAAC;QAACG,CAAC,GAACL,CAAC,IAAExB,CAAC,GAAC0B,CAAC,GAAC,CAAC,CAAC;MAAC1B,CAAC,GAAC,CAAC,GAACI,CAAC,CAACF,CAAC,EAACJ,CAAC,CAACiB,CAAC,CAAC,EAACjB,CAAC,CAACiB,CAAC,GAAC,CAAC,CAAC,CAAC,GAACX,CAAC,CAACF,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAACE,CAAC,CAACU,CAAC,EAAChB,CAAC,CAAC8B,CAAC,CAAC,EAAC9B,CAAC,CAAC8B,CAAC,GAAC,CAAC,CAAC,CAAC,EAAC5B,CAAC,GAACN,CAAC,GAAC,CAAC,GAACU,CAAC,CAACa,CAAC,EAACnB,CAAC,CAAC+B,CAAC,CAAC,EAAC/B,CAAC,CAAC+B,CAAC,GAAC,CAAC,CAAC,CAAC,GAACzB,CAAC,CAACa,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,KAAGjB,CAAC,GAACI,CAAC,CAACe,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,IAAEb,CAAC,CAACa,CAAC,EAACL,CAAC,EAACZ,CAAC,CAAC,EAACM,CAAC,CAACW,CAAC,EAACA,CAAC,CAAC,EAACf,CAAC,CAACe,CAAC,EAACA,CAAC,CAAC,CAAC,CAAC,EAAC,CAACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAACnB,CAAC,KAAGN,CAAC,GAAC,CAAC,GAACU,CAAC,CAACgB,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,IAAEd,CAAC,CAACc,CAAC,EAACH,CAAC,EAACH,CAAC,CAAC,EAACN,CAAC,CAACY,CAAC,EAACA,CAAC,CAAC,EAAChB,CAAC,CAACgB,CAAC,EAACA,CAAC,CAAC,CAAC,CAAC,EAAC,CAACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAACV,CAAC,CAACY,CAAC,EAACH,CAAC,EAACC,CAAC,CAAC,EAACZ,CAAC,CAACc,CAAC,EAACA,CAAC,CAAC;MAAC,MAAMS,CAAC,GAACT,CAAC,CAAC,CAAC,CAAC,GAACF,CAAC,CAAC,CAAC,CAAC,GAACE,CAAC,CAAC,CAAC,CAAC,GAACF,CAAC,CAAC,CAAC,CAAC;MAAC,CAAC,KAAGW,CAAC,IAAEnB,CAAC,CAACU,CAAC,EAACA,CAAC,EAACS,CAAC,CAAC,EAACnB,CAAC,CAACU,CAAC,EAACA,CAAC,EAAC1B,CAAC,CAAC,EAACJ,CAAC,CAACmE,MAAM,CAACqG,IAAI,CAAClJ,CAAC,CAAC,CAAC,CAAC,GAACQ,CAAC,CAAC,CAAC,CAAC,EAACR,CAAC,CAAC,CAAC,CAAC,GAACQ,CAAC,CAAC,CAAC,CAAC,CAAC;IAAA;IAAC9B,CAAC,CAACuK,OAAO,CAACC,IAAI,CAACtK,CAAC,CAAC,EAACgC,CAAC,IAAEhC,CAAC;EAAA;EAAC,OAAOF,CAAC;AAAA;AAAC,SAAOwD,CAAC,IAAIiH,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}