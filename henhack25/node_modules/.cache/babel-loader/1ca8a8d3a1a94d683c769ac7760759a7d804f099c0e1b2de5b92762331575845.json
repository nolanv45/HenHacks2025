{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport e from \"../../../../request.js\";\nimport { throwIfAborted as o } from \"../../../../core/promiseUtils.js\";\nimport { join as t } from \"../../../../core/urlUtils.js\";\nimport { isHostedAgolService as r } from \"../../../support/arcgisLayerUrl.js\";\nimport { makeProgressManager as s, estimatedTransferTime as a } from \"../../../../support/progressUtils.js\";\nconst n = 1e6,\n  i = 20 * n,\n  p = 2e9,\n  l = 3;\nasync function m(_ref, u, h) {\n  let {\n    data: m,\n    name: f,\n    description: d\n  } = _ref;\n  let w = null;\n  try {\n    const y = t(u, \"uploads\"),\n      j = t(y, \"info\"),\n      {\n        data: g\n      } = await e(j, {\n        query: {\n          f: \"json\"\n        },\n        responseType: \"json\"\n      });\n    o(h);\n    const q = r(u),\n      z = g.maxUploadFileSize * n,\n      T = q ? p : z,\n      U = q ? Math.min(i, z) : i;\n    if (m.size > T) throw new Error(\"Data too large\");\n    const A = t(y, \"register\"),\n      {\n        data: E\n      } = await e(A, {\n        query: {\n          f: \"json\",\n          itemName: c(f),\n          description: d\n        },\n        responseType: \"json\",\n        method: \"post\"\n      });\n    if (o(h), !E.success) throw new Error(\"Registration failed\");\n    const {\n      itemID: P\n    } = E.item;\n    w = t(y, P);\n    const D = t(w, \"uploadPart\"),\n      I = Math.ceil(m.size / U),\n      M = new Array();\n    for (let e = 0; e < I; ++e) M.push(m.slice(e * U, Math.min((e + 1) * U, m.size)));\n    const v = M.slice().reverse(),\n      x = new Array(),\n      F = s(I, h?.onProgress, \"uploadItem\"),\n      _ = async () => {\n        for (; 0 !== v.length;) {\n          const t = M.length - v.length,\n            r = v.pop(),\n            s = new FormData(),\n            n = F.simulate(t, a(r.size));\n          try {\n            s.append(\"f\", \"json\"), s.append(\"file\", r), s.append(\"partId\", `${t}`);\n            const {\n              data: a\n            } = await e(D, {\n              timeout: 0,\n              body: s,\n              responseType: \"json\",\n              method: \"post\"\n            });\n            if (o(h), !a.success) throw new Error(\"Part upload failed\");\n          } finally {\n            n.remove();\n          }\n        }\n      };\n    for (let e = 0; e < l && 0 !== v.length; ++e) x.push(_());\n    await Promise.all(x);\n    const b = t(w, \"commit\"),\n      {\n        data: C\n      } = await e(b, {\n        query: {\n          f: \"json\",\n          parts: M.map((e, o) => o).join(\",\")\n        },\n        responseType: \"json\",\n        method: \"post\"\n      });\n    if (o(h), !C.success) throw new Error(\"Commit failed\");\n    return C.item;\n  } catch (y) {\n    if (null != w) {\n      const o = t(w, \"delete\");\n      await e(o, {\n        query: {\n          f: \"json\"\n        },\n        responseType: \"json\",\n        method: \"post\"\n      });\n    }\n    throw y;\n  }\n}\nfunction c(e) {\n  return e.replaceAll(\"/\", \"_\").replaceAll(\"\\\\\", \"_\");\n}\nexport { m as uploadItem };","map":{"version":3,"names":["e","throwIfAborted","o","join","t","isHostedAgolService","r","makeProgressManager","s","estimatedTransferTime","a","n","i","p","l","m","_ref","u","h","data","name","f","description","d","w","y","j","g","query","responseType","q","z","maxUploadFileSize","T","U","Math","min","size","Error","A","E","itemName","c","method","success","itemID","P","item","D","I","ceil","M","Array","push","slice","v","reverse","x","F","onProgress","_","length","pop","FormData","simulate","append","timeout","body","remove","Promise","all","b","C","parts","map","replaceAll","uploadItem"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/layers/graphics/sources/support/uploads.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport e from\"../../../../request.js\";import{throwIfAborted as o}from\"../../../../core/promiseUtils.js\";import{join as t}from\"../../../../core/urlUtils.js\";import{isHostedAgolService as r}from\"../../../support/arcgisLayerUrl.js\";import{makeProgressManager as s,estimatedTransferTime as a}from\"../../../../support/progressUtils.js\";const n=1e6,i=20*n,p=2e9,l=3;async function m({data:m,name:f,description:d},u,h){let w=null;try{const y=t(u,\"uploads\"),j=t(y,\"info\"),{data:g}=await e(j,{query:{f:\"json\"},responseType:\"json\"});o(h);const q=r(u),z=g.maxUploadFileSize*n,T=q?p:z,U=q?Math.min(i,z):i;if(m.size>T)throw new Error(\"Data too large\");const A=t(y,\"register\"),{data:E}=await e(A,{query:{f:\"json\",itemName:c(f),description:d},responseType:\"json\",method:\"post\"});if(o(h),!E.success)throw new Error(\"Registration failed\");const{itemID:P}=E.item;w=t(y,P);const D=t(w,\"uploadPart\"),I=Math.ceil(m.size/U),M=new Array;for(let e=0;e<I;++e)M.push(m.slice(e*U,Math.min((e+1)*U,m.size)));const v=M.slice().reverse(),x=new Array,F=s(I,h?.onProgress,\"uploadItem\"),_=async()=>{for(;0!==v.length;){const t=M.length-v.length,r=v.pop(),s=new FormData,n=F.simulate(t,a(r.size));try{s.append(\"f\",\"json\"),s.append(\"file\",r),s.append(\"partId\",`${t}`);const{data:a}=await e(D,{timeout:0,body:s,responseType:\"json\",method:\"post\"});if(o(h),!a.success)throw new Error(\"Part upload failed\")}finally{n.remove()}}};for(let e=0;e<l&&0!==v.length;++e)x.push(_());await Promise.all(x);const b=t(w,\"commit\"),{data:C}=await e(b,{query:{f:\"json\",parts:M.map(((e,o)=>o)).join(\",\")},responseType:\"json\",method:\"post\"});if(o(h),!C.success)throw new Error(\"Commit failed\");return C.item}catch(y){if(null!=w){const o=t(w,\"delete\");await e(o,{query:{f:\"json\"},responseType:\"json\",method:\"post\"})}throw y}}function c(e){return e.replaceAll(\"/\",\"_\").replaceAll(\"\\\\\",\"_\")}export{m as uploadItem};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAOA,CAAC,MAAK,wBAAwB;AAAC,SAAOC,cAAc,IAAIC,CAAC,QAAK,kCAAkC;AAAC,SAAOC,IAAI,IAAIC,CAAC,QAAK,8BAA8B;AAAC,SAAOC,mBAAmB,IAAIC,CAAC,QAAK,oCAAoC;AAAC,SAAOC,mBAAmB,IAAIC,CAAC,EAACC,qBAAqB,IAAIC,CAAC,QAAK,sCAAsC;AAAC,MAAMC,CAAC,GAAC,GAAG;EAACC,CAAC,GAAC,EAAE,GAACD,CAAC;EAACE,CAAC,GAAC,GAAG;EAACC,CAAC,GAAC,CAAC;AAAC,eAAeC,CAACA,CAAAC,IAAA,EAA+BC,CAAC,EAACC,CAAC,EAAC;EAAA,IAAlC;IAACC,IAAI,EAACJ,CAAC;IAACK,IAAI,EAACC,CAAC;IAACC,WAAW,EAACC;EAAC,CAAC,GAAAP,IAAA;EAAM,IAAIQ,CAAC,GAAC,IAAI;EAAC,IAAG;IAAC,MAAMC,CAAC,GAACrB,CAAC,CAACa,CAAC,EAAC,SAAS,CAAC;MAACS,CAAC,GAACtB,CAAC,CAACqB,CAAC,EAAC,MAAM,CAAC;MAAC;QAACN,IAAI,EAACQ;MAAC,CAAC,GAAC,MAAM3B,CAAC,CAAC0B,CAAC,EAAC;QAACE,KAAK,EAAC;UAACP,CAAC,EAAC;QAAM,CAAC;QAACQ,YAAY,EAAC;MAAM,CAAC,CAAC;IAAC3B,CAAC,CAACgB,CAAC,CAAC;IAAC,MAAMY,CAAC,GAACxB,CAAC,CAACW,CAAC,CAAC;MAACc,CAAC,GAACJ,CAAC,CAACK,iBAAiB,GAACrB,CAAC;MAACsB,CAAC,GAACH,CAAC,GAACjB,CAAC,GAACkB,CAAC;MAACG,CAAC,GAACJ,CAAC,GAACK,IAAI,CAACC,GAAG,CAACxB,CAAC,EAACmB,CAAC,CAAC,GAACnB,CAAC;IAAC,IAAGG,CAAC,CAACsB,IAAI,GAACJ,CAAC,EAAC,MAAM,IAAIK,KAAK,CAAC,gBAAgB,CAAC;IAAC,MAAMC,CAAC,GAACnC,CAAC,CAACqB,CAAC,EAAC,UAAU,CAAC;MAAC;QAACN,IAAI,EAACqB;MAAC,CAAC,GAAC,MAAMxC,CAAC,CAACuC,CAAC,EAAC;QAACX,KAAK,EAAC;UAACP,CAAC,EAAC,MAAM;UAACoB,QAAQ,EAACC,CAAC,CAACrB,CAAC,CAAC;UAACC,WAAW,EAACC;QAAC,CAAC;QAACM,YAAY,EAAC,MAAM;QAACc,MAAM,EAAC;MAAM,CAAC,CAAC;IAAC,IAAGzC,CAAC,CAACgB,CAAC,CAAC,EAAC,CAACsB,CAAC,CAACI,OAAO,EAAC,MAAM,IAAIN,KAAK,CAAC,qBAAqB,CAAC;IAAC,MAAK;MAACO,MAAM,EAACC;IAAC,CAAC,GAACN,CAAC,CAACO,IAAI;IAACvB,CAAC,GAACpB,CAAC,CAACqB,CAAC,EAACqB,CAAC,CAAC;IAAC,MAAME,CAAC,GAAC5C,CAAC,CAACoB,CAAC,EAAC,YAAY,CAAC;MAACyB,CAAC,GAACd,IAAI,CAACe,IAAI,CAACnC,CAAC,CAACsB,IAAI,GAACH,CAAC,CAAC;MAACiB,CAAC,GAAC,IAAIC,KAAK,CAAD,CAAC;IAAC,KAAI,IAAIpD,CAAC,GAAC,CAAC,EAACA,CAAC,GAACiD,CAAC,EAAC,EAAEjD,CAAC,EAACmD,CAAC,CAACE,IAAI,CAACtC,CAAC,CAACuC,KAAK,CAACtD,CAAC,GAACkC,CAAC,EAACC,IAAI,CAACC,GAAG,CAAC,CAACpC,CAAC,GAAC,CAAC,IAAEkC,CAAC,EAACnB,CAAC,CAACsB,IAAI,CAAC,CAAC,CAAC;IAAC,MAAMkB,CAAC,GAACJ,CAAC,CAACG,KAAK,CAAC,CAAC,CAACE,OAAO,CAAC,CAAC;MAACC,CAAC,GAAC,IAAIL,KAAK,CAAD,CAAC;MAACM,CAAC,GAAClD,CAAC,CAACyC,CAAC,EAAC/B,CAAC,EAAEyC,UAAU,EAAC,YAAY,CAAC;MAACC,CAAC,GAAC,MAAAA,CAAA,KAAS;QAAC,OAAK,CAAC,KAAGL,CAAC,CAACM,MAAM,GAAE;UAAC,MAAMzD,CAAC,GAAC+C,CAAC,CAACU,MAAM,GAACN,CAAC,CAACM,MAAM;YAACvD,CAAC,GAACiD,CAAC,CAACO,GAAG,CAAC,CAAC;YAACtD,CAAC,GAAC,IAAIuD,QAAQ,CAAD,CAAC;YAACpD,CAAC,GAAC+C,CAAC,CAACM,QAAQ,CAAC5D,CAAC,EAACM,CAAC,CAACJ,CAAC,CAAC+B,IAAI,CAAC,CAAC;UAAC,IAAG;YAAC7B,CAAC,CAACyD,MAAM,CAAC,GAAG,EAAC,MAAM,CAAC,EAACzD,CAAC,CAACyD,MAAM,CAAC,MAAM,EAAC3D,CAAC,CAAC,EAACE,CAAC,CAACyD,MAAM,CAAC,QAAQ,EAAC,GAAG7D,CAAC,EAAE,CAAC;YAAC,MAAK;cAACe,IAAI,EAACT;YAAC,CAAC,GAAC,MAAMV,CAAC,CAACgD,CAAC,EAAC;cAACkB,OAAO,EAAC,CAAC;cAACC,IAAI,EAAC3D,CAAC;cAACqB,YAAY,EAAC,MAAM;cAACc,MAAM,EAAC;YAAM,CAAC,CAAC;YAAC,IAAGzC,CAAC,CAACgB,CAAC,CAAC,EAAC,CAACR,CAAC,CAACkC,OAAO,EAAC,MAAM,IAAIN,KAAK,CAAC,oBAAoB,CAAC;UAAA,CAAC,SAAO;YAAC3B,CAAC,CAACyD,MAAM,CAAC,CAAC;UAAA;QAAC;MAAC,CAAC;IAAC,KAAI,IAAIpE,CAAC,GAAC,CAAC,EAACA,CAAC,GAACc,CAAC,IAAE,CAAC,KAAGyC,CAAC,CAACM,MAAM,EAAC,EAAE7D,CAAC,EAACyD,CAAC,CAACJ,IAAI,CAACO,CAAC,CAAC,CAAC,CAAC;IAAC,MAAMS,OAAO,CAACC,GAAG,CAACb,CAAC,CAAC;IAAC,MAAMc,CAAC,GAACnE,CAAC,CAACoB,CAAC,EAAC,QAAQ,CAAC;MAAC;QAACL,IAAI,EAACqD;MAAC,CAAC,GAAC,MAAMxE,CAAC,CAACuE,CAAC,EAAC;QAAC3C,KAAK,EAAC;UAACP,CAAC,EAAC,MAAM;UAACoD,KAAK,EAACtB,CAAC,CAACuB,GAAG,CAAE,CAAC1E,CAAC,EAACE,CAAC,KAAGA,CAAE,CAAC,CAACC,IAAI,CAAC,GAAG;QAAC,CAAC;QAAC0B,YAAY,EAAC,MAAM;QAACc,MAAM,EAAC;MAAM,CAAC,CAAC;IAAC,IAAGzC,CAAC,CAACgB,CAAC,CAAC,EAAC,CAACsD,CAAC,CAAC5B,OAAO,EAAC,MAAM,IAAIN,KAAK,CAAC,eAAe,CAAC;IAAC,OAAOkC,CAAC,CAACzB,IAAI;EAAA,CAAC,QAAMtB,CAAC,EAAC;IAAC,IAAG,IAAI,IAAED,CAAC,EAAC;MAAC,MAAMtB,CAAC,GAACE,CAAC,CAACoB,CAAC,EAAC,QAAQ,CAAC;MAAC,MAAMxB,CAAC,CAACE,CAAC,EAAC;QAAC0B,KAAK,EAAC;UAACP,CAAC,EAAC;QAAM,CAAC;QAACQ,YAAY,EAAC,MAAM;QAACc,MAAM,EAAC;MAAM,CAAC,CAAC;IAAA;IAAC,MAAMlB,CAAC;EAAA;AAAC;AAAC,SAASiB,CAACA,CAAC1C,CAAC,EAAC;EAAC,OAAOA,CAAC,CAAC2E,UAAU,CAAC,GAAG,EAAC,GAAG,CAAC,CAACA,UAAU,CAAC,IAAI,EAAC,GAAG,CAAC;AAAA;AAAC,SAAO5D,CAAC,IAAI6D,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}