{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { pt2px as e } from \"../../../../../../../core/screenUtils.js\";\nimport { identity as t, translate as r, rotate as o } from \"../../../../../../../core/libs/gl-matrix-2/math/mat2d.js\";\nimport { create as s } from \"../../../../../../../core/libs/gl-matrix-2/factories/mat2df32.js\";\nimport { transformMat2d as a } from \"../../../../../../../core/libs/gl-matrix-2/math/vec2.js\";\nimport { GeometryCursor as i } from \"../../../../../../../geometry/GeometryCursor.js\";\nimport { maxTileCoordValue as n } from \"../../../../../../../symbols/cim/constants.js\";\nimport { Alignment as c } from \"../../../../../../../symbols/cim/enums.js\";\nimport { CIMMarkerPlacementHelper as m } from \"../../../../../../../symbols/cim/placements/CIMMarkerPlacementHelper.js\";\nimport { minMaxZoomPrecisionFactor as l } from \"../../../definitions.js\";\nimport { getMinMaxZoom as d, processColorInput as u, packByteSqrt as p, getBitMask as h } from \"../fill/meshWriterUtils.js\";\nimport { ComputedMarkerParams as f } from \"./ComputedMarkerParams.js\";\nimport { MarkerConstants as y } from \"./markerConstants.js\";\nimport { getGeometryEngine as x } from \"../mesh/loadGeometryEngine.js\";\nimport { MeshWriter as P } from \"../mesh/MeshWriter.js\";\nimport { DataType as M } from \"../../../../../../webgl/enums.js\";\nconst g = 3.14159265359 / 180,\n  k = 128 / Math.PI;\nfunction b(e, t) {\n  return e %= t, Math.abs(e >= 0 ? e : e + t);\n}\nfunction v(e) {\n  return b(e * k, 256);\n}\nfunction S(e, a, i, n, c = !1) {\n  const m = s(),\n    l = c ? 1 : -1;\n  return t(m), (a || i) && r(m, m, [a, -i]), n && o(m, m, l * g * -n), m;\n}\nconst _ = {\n  createComputedParams: e => f.from(e),\n  optionalAttributes: {\n    zoomRange: {\n      type: M.SHORT,\n      count: 2,\n      packPrecisionFactor: l,\n      pack: ({\n        scaleInfo: e\n      }, {\n        tileInfo: t\n      }) => d(e, t)\n    }\n  },\n  attributes: {\n    pos: {\n      type: M.SHORT,\n      count: 2,\n      pack: \"position\",\n      packPrecisionFactor: 10\n    },\n    id: {\n      type: M.UNSIGNED_BYTE,\n      count: 3,\n      pack: \"id\"\n    },\n    bitset: {\n      type: M.UNSIGNED_BYTE,\n      count: 1,\n      pack: ({\n        sprite: e,\n        alignment: t,\n        scaleSymbolsProportionally: r,\n        overrideOutlineColor: o,\n        colorLocked: s\n      }) => {\n        let a = 0;\n        return e.sdf && (a |= h(y.bitset.isSDF)), t === c.MAP && (a |= h(y.bitset.isMapAligned)), r && (a |= h(y.bitset.scaleSymbolsProportionally)), o && (a |= h(y.bitset.overrideOutlineColor)), s && (a |= h(y.bitset.colorLocked)), a;\n      }\n    },\n    offset: {\n      type: M.HALF_FLOAT,\n      count: 2,\n      packAlternating: {\n        count: 4,\n        pack: ({\n          angle: e,\n          computedWidth: t,\n          computedHeight: r,\n          anchorX: o,\n          anchorY: s,\n          offsetX: i,\n          offsetY: n,\n          rotateClockwise: c\n        }) => {\n          const m = S(0, i, n, -e, c),\n            l = -(.5 + o) * t,\n            d = -(.5 - s) * r,\n            u = [l, d],\n            p = [l + t, d],\n            h = [l, d + r],\n            f = [l + t, d + r];\n          return a(u, u, m), a(p, p, m), a(h, h, m), a(f, f, m), [u, p, h, f];\n        }\n      }\n    },\n    textureUV: {\n      type: M.SHORT,\n      count: 2,\n      packPrecisionFactor: 4,\n      packAlternating: {\n        count: 4,\n        pack: ({\n          texXmax: e,\n          texXmin: t,\n          texYmax: r,\n          texYmin: o\n        }) => [[t, o], [e, o], [t, r], [e, r]]\n      }\n    },\n    color: {\n      type: M.UNSIGNED_BYTE,\n      count: 4,\n      normalized: !0,\n      pack: ({\n        color: e\n      }) => u(e)\n    },\n    outlineColor: {\n      type: M.UNSIGNED_BYTE,\n      count: 4,\n      normalized: !0,\n      pack: ({\n        outlineColor: e\n      }) => u(e)\n    },\n    sizing: {\n      type: M.UNSIGNED_BYTE,\n      count: 4,\n      pack: ({\n        rawWidth: e,\n        rawHeight: t,\n        outlineSize: r,\n        referenceSize: o\n      }) => {\n        const s = Math.max(e, t);\n        return [p(s, 128), p(r, 128), p(o, 128), 0];\n      }\n    },\n    placementAngle: {\n      type: M.UNSIGNED_BYTE,\n      count: 1,\n      packTessellation: ({\n        placementAngle: e\n      }) => v(e)\n    },\n    sdfDecodeCoeff: {\n      type: M.UNSIGNED_SHORT,\n      count: 1,\n      packPrecisionFactor: 64,\n      pack: ({\n        sdfDecodeCoeff: e\n      }) => e\n    }\n  }\n};\nclass I extends P {\n  constructor() {\n    super(...arguments), this.vertexSpec = _;\n  }\n  getBoundsInfo() {\n    return this.evaluatedMeshParams.boundsInfo;\n  }\n  _write(e, t, r) {\n    const o = this.evaluatedMeshParams.sprite?.textureBinding,\n      s = t.getDisplayId();\n    e.recordStart(this.instanceId, this.attributeLayout, o);\n    const a = this.evaluatedMeshParams.minPixelBuffer,\n      i = Math.max(this.evaluatedMeshParams.computedWidth, a),\n      c = Math.max(this.evaluatedMeshParams.computedHeight, a),\n      m = -this.evaluatedMeshParams.anchorX * this.evaluatedMeshParams.computedWidth,\n      l = this.evaluatedMeshParams.anchorY * this.evaluatedMeshParams.computedHeight,\n      d = this.evaluatedMeshParams.offsetX + m,\n      u = -this.evaluatedMeshParams.offsetY + l;\n    if (null != this.evaluatedMeshParams.placement) this._writePlacedMarkers(e, t, r, i, c);else if (r?.nextPath()) {\n      r.nextPoint();\n      const t = r.x,\n        o = r.y;\n      e.recordBounds(t + d, o + u, i, c), this._writeQuad(e, s, t, o);\n    } else if (\"esriGeometryPolygon\" === t.geometryType) {\n      const r = t.readCentroidForDisplay();\n      if (!r) return;\n      const [o, a] = r.coords;\n      e.recordBounds(o + d, a + u, i, c), this._writeQuad(e, s, o, a);\n    } else if (\"esriGeometryPoint\" === t.geometryType) {\n      const r = t.readXForDisplay(),\n        o = t.readYForDisplay();\n      e.recordBounds(r + d, o + u, i, c), this._writeQuad(e, s, r, o);\n    } else {\n      const r = t.readGeometryForDisplay();\n      r?.forEachVertex((t, r) => {\n        e.recordBounds(t + d, r + u, i, c), Math.abs(t) > n || Math.abs(r) > n || this._writeQuad(e, s, t, r);\n      });\n    }\n    e.recordEnd();\n  }\n  _writePlacedMarkers(t, r, o, s, a) {\n    const c = o ?? i.fromFeatureSetReaderCIM(r)?.clone();\n    if (!c) return;\n    const l = -1,\n      d = m.getPlacement(c, l, this.evaluatedMeshParams.placement, e(1), t.id, x());\n    if (!d) return;\n    const u = r.getDisplayId();\n    let p = d.next();\n    const h = this.evaluatedMeshParams.offsetX,\n      f = -this.evaluatedMeshParams.offsetY;\n    for (; null != p;) {\n      const e = p.tx,\n        r = -p.ty;\n      if (Math.abs(e) > n || Math.abs(r) > n) {\n        p = d.next();\n        continue;\n      }\n      const o = -p.getAngle();\n      t.recordBounds(e + h, r + f, s, a), this._writeQuad(t, u, e, r, o), p = d.next();\n    }\n  }\n  _writeQuad(e, t, r, o, s) {\n    const a = e.vertexCount(),\n      i = null == s ? null : {\n        placementAngle: s\n      };\n    this._writeVertex(e, t, r, o, i), e.indexWrite(a + 0), e.indexWrite(a + 1), e.indexWrite(a + 2), e.indexWrite(a + 1), e.indexWrite(a + 3), e.indexWrite(a + 2);\n  }\n}\nexport { I as MarkerMeshWriter, _ as MarkerVertexSpec };","map":{"version":3,"names":["pt2px","e","identity","t","translate","r","rotate","o","create","s","transformMat2d","a","GeometryCursor","i","maxTileCoordValue","n","Alignment","c","CIMMarkerPlacementHelper","m","minMaxZoomPrecisionFactor","l","getMinMaxZoom","d","processColorInput","u","packByteSqrt","p","getBitMask","h","ComputedMarkerParams","f","MarkerConstants","y","getGeometryEngine","x","MeshWriter","P","DataType","M","g","k","Math","PI","b","abs","v","S","_","createComputedParams","from","optionalAttributes","zoomRange","type","SHORT","count","packPrecisionFactor","pack","scaleInfo","tileInfo","attributes","pos","id","UNSIGNED_BYTE","bitset","sprite","alignment","scaleSymbolsProportionally","overrideOutlineColor","colorLocked","sdf","isSDF","MAP","isMapAligned","offset","HALF_FLOAT","packAlternating","angle","computedWidth","computedHeight","anchorX","anchorY","offsetX","offsetY","rotateClockwise","textureUV","texXmax","texXmin","texYmax","texYmin","color","normalized","outlineColor","sizing","rawWidth","rawHeight","outlineSize","referenceSize","max","placementAngle","packTessellation","sdfDecodeCoeff","UNSIGNED_SHORT","I","constructor","arguments","vertexSpec","getBoundsInfo","evaluatedMeshParams","boundsInfo","_write","textureBinding","getDisplayId","recordStart","instanceId","attributeLayout","minPixelBuffer","placement","_writePlacedMarkers","nextPath","nextPoint","recordBounds","_writeQuad","geometryType","readCentroidForDisplay","coords","readXForDisplay","readYForDisplay","readGeometryForDisplay","forEachVertex","recordEnd","fromFeatureSetReaderCIM","clone","getPlacement","next","tx","ty","getAngle","vertexCount","_writeVertex","indexWrite","MarkerMeshWriter","MarkerVertexSpec"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/2d/engine/webgl/shaderGraph/techniques/markers/MarkerMeshWriter.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{pt2px as e}from\"../../../../../../../core/screenUtils.js\";import{identity as t,translate as r,rotate as o}from\"../../../../../../../core/libs/gl-matrix-2/math/mat2d.js\";import{create as s}from\"../../../../../../../core/libs/gl-matrix-2/factories/mat2df32.js\";import{transformMat2d as a}from\"../../../../../../../core/libs/gl-matrix-2/math/vec2.js\";import{GeometryCursor as i}from\"../../../../../../../geometry/GeometryCursor.js\";import{maxTileCoordValue as n}from\"../../../../../../../symbols/cim/constants.js\";import{Alignment as c}from\"../../../../../../../symbols/cim/enums.js\";import{CIMMarkerPlacementHelper as m}from\"../../../../../../../symbols/cim/placements/CIMMarkerPlacementHelper.js\";import{minMaxZoomPrecisionFactor as l}from\"../../../definitions.js\";import{getMinMaxZoom as d,processColorInput as u,packByteSqrt as p,getBitMask as h}from\"../fill/meshWriterUtils.js\";import{ComputedMarkerParams as f}from\"./ComputedMarkerParams.js\";import{MarkerConstants as y}from\"./markerConstants.js\";import{getGeometryEngine as x}from\"../mesh/loadGeometryEngine.js\";import{MeshWriter as P}from\"../mesh/MeshWriter.js\";import{DataType as M}from\"../../../../../../webgl/enums.js\";const g=3.14159265359/180,k=128/Math.PI;function b(e,t){return e%=t,Math.abs(e>=0?e:e+t)}function v(e){return b(e*k,256)}function S(e,a,i,n,c=!1){const m=s(),l=c?1:-1;return t(m),(a||i)&&r(m,m,[a,-i]),n&&o(m,m,l*g*-n),m}const _={createComputedParams:e=>f.from(e),optionalAttributes:{zoomRange:{type:M.SHORT,count:2,packPrecisionFactor:l,pack:({scaleInfo:e},{tileInfo:t})=>d(e,t)}},attributes:{pos:{type:M.SHORT,count:2,pack:\"position\",packPrecisionFactor:10},id:{type:M.UNSIGNED_BYTE,count:3,pack:\"id\"},bitset:{type:M.UNSIGNED_BYTE,count:1,pack:({sprite:e,alignment:t,scaleSymbolsProportionally:r,overrideOutlineColor:o,colorLocked:s})=>{let a=0;return e.sdf&&(a|=h(y.bitset.isSDF)),t===c.MAP&&(a|=h(y.bitset.isMapAligned)),r&&(a|=h(y.bitset.scaleSymbolsProportionally)),o&&(a|=h(y.bitset.overrideOutlineColor)),s&&(a|=h(y.bitset.colorLocked)),a}},offset:{type:M.HALF_FLOAT,count:2,packAlternating:{count:4,pack:({angle:e,computedWidth:t,computedHeight:r,anchorX:o,anchorY:s,offsetX:i,offsetY:n,rotateClockwise:c})=>{const m=S(0,i,n,-e,c),l=-(.5+o)*t,d=-(.5-s)*r,u=[l,d],p=[l+t,d],h=[l,d+r],f=[l+t,d+r];return a(u,u,m),a(p,p,m),a(h,h,m),a(f,f,m),[u,p,h,f]}}},textureUV:{type:M.SHORT,count:2,packPrecisionFactor:4,packAlternating:{count:4,pack:({texXmax:e,texXmin:t,texYmax:r,texYmin:o})=>[[t,o],[e,o],[t,r],[e,r]]}},color:{type:M.UNSIGNED_BYTE,count:4,normalized:!0,pack:({color:e})=>u(e)},outlineColor:{type:M.UNSIGNED_BYTE,count:4,normalized:!0,pack:({outlineColor:e})=>u(e)},sizing:{type:M.UNSIGNED_BYTE,count:4,pack:({rawWidth:e,rawHeight:t,outlineSize:r,referenceSize:o})=>{const s=Math.max(e,t);return[p(s,128),p(r,128),p(o,128),0]}},placementAngle:{type:M.UNSIGNED_BYTE,count:1,packTessellation:({placementAngle:e})=>v(e)},sdfDecodeCoeff:{type:M.UNSIGNED_SHORT,count:1,packPrecisionFactor:64,pack:({sdfDecodeCoeff:e})=>e}}};class I extends P{constructor(){super(...arguments),this.vertexSpec=_}getBoundsInfo(){return this.evaluatedMeshParams.boundsInfo}_write(e,t,r){const o=this.evaluatedMeshParams.sprite?.textureBinding,s=t.getDisplayId();e.recordStart(this.instanceId,this.attributeLayout,o);const a=this.evaluatedMeshParams.minPixelBuffer,i=Math.max(this.evaluatedMeshParams.computedWidth,a),c=Math.max(this.evaluatedMeshParams.computedHeight,a),m=-this.evaluatedMeshParams.anchorX*this.evaluatedMeshParams.computedWidth,l=this.evaluatedMeshParams.anchorY*this.evaluatedMeshParams.computedHeight,d=this.evaluatedMeshParams.offsetX+m,u=-this.evaluatedMeshParams.offsetY+l;if(null!=this.evaluatedMeshParams.placement)this._writePlacedMarkers(e,t,r,i,c);else if(r?.nextPath()){r.nextPoint();const t=r.x,o=r.y;e.recordBounds(t+d,o+u,i,c),this._writeQuad(e,s,t,o)}else if(\"esriGeometryPolygon\"===t.geometryType){const r=t.readCentroidForDisplay();if(!r)return;const[o,a]=r.coords;e.recordBounds(o+d,a+u,i,c),this._writeQuad(e,s,o,a)}else if(\"esriGeometryPoint\"===t.geometryType){const r=t.readXForDisplay(),o=t.readYForDisplay();e.recordBounds(r+d,o+u,i,c),this._writeQuad(e,s,r,o)}else{const r=t.readGeometryForDisplay();r?.forEachVertex(((t,r)=>{e.recordBounds(t+d,r+u,i,c),Math.abs(t)>n||Math.abs(r)>n||this._writeQuad(e,s,t,r)}))}e.recordEnd()}_writePlacedMarkers(t,r,o,s,a){const c=o??i.fromFeatureSetReaderCIM(r)?.clone();if(!c)return;const l=-1,d=m.getPlacement(c,l,this.evaluatedMeshParams.placement,e(1),t.id,x());if(!d)return;const u=r.getDisplayId();let p=d.next();const h=this.evaluatedMeshParams.offsetX,f=-this.evaluatedMeshParams.offsetY;for(;null!=p;){const e=p.tx,r=-p.ty;if(Math.abs(e)>n||Math.abs(r)>n){p=d.next();continue}const o=-p.getAngle();t.recordBounds(e+h,r+f,s,a),this._writeQuad(t,u,e,r,o),p=d.next()}}_writeQuad(e,t,r,o,s){const a=e.vertexCount(),i=null==s?null:{placementAngle:s};this._writeVertex(e,t,r,o,i),e.indexWrite(a+0),e.indexWrite(a+1),e.indexWrite(a+2),e.indexWrite(a+1),e.indexWrite(a+3),e.indexWrite(a+2)}}export{I as MarkerMeshWriter,_ as MarkerVertexSpec};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}