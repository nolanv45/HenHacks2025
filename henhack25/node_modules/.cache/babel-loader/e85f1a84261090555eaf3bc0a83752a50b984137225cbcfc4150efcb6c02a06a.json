{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport r from \"../../geometry/Extent.js\";\nimport e from \"../../geometry/Point.js\";\nimport t from \"../../geometry/support/GeographicTransformation.js\";\nimport s from \"./PixelBlock.js\";\nimport { decode as o } from \"./rasterFormats/RasterCodec.js\";\nimport { split as i, clipTile as n, mosaic as a, approximateTransform as l, getLocalArithmeticNorthRotations as m } from \"./rasterFunctions/pixelUtils.js\";\nimport { create as c } from \"./rasterFunctions/rasterFunctionHelper.js\";\nimport { requirePE as f, load as p, getProjectionOffsetGrid as u } from \"./rasterFunctions/rasterProjectionHelper.js\";\nimport { computeStatisticsHistograms as S, estimateStatisticsHistograms as d } from \"./rasterFunctions/stretchUtils.js\";\nimport { convertVectorFieldData as x, convertToLocalDirections as y } from \"./rasterFunctions/vectorFieldUtils.js\";\nimport { readTransform as O } from \"./rasterTransforms/utils.js\";\nimport h from \"../../renderers/support/RasterSymbolizer.js\";\nimport { createFlowMesh as N } from \"../../views/2d/engine/flow/dataUtils.js\";\nclass J {\n  convertVectorFieldData(r) {\n    const e = s.fromJSON(r.pixelBlock),\n      t = x(e, r.type);\n    return Promise.resolve(null != t ? t.toJSON() : null);\n  }\n  computeStatisticsHistograms(r) {\n    const e = s.fromJSON(r.pixelBlock),\n      t = S(e);\n    return Promise.resolve(t);\n  }\n  async decode(r) {\n    const e = await o(r.data, r.options);\n    return e && e.toJSON();\n  }\n  symbolize(e) {\n    e.pixelBlock = s.fromJSON(e.pixelBlock), e.extent = e.extent ? r.fromJSON(e.extent) : null;\n    const t = this.symbolizer.symbolize(e);\n    return Promise.resolve(null != t ? t.toJSON() : null);\n  }\n  async updateSymbolizer(r) {\n    this.symbolizer = h.fromJSON(r.symbolizerJSON), r.histograms && \"rasterStretch\" === this.symbolizer?.rendererJSON.type && (this.symbolizer.rendererJSON.histograms = r.histograms);\n  }\n  async updateRasterFunction(r) {\n    this.rasterFunction = c(r.rasterFunctionJSON);\n  }\n  async process(t) {\n    const o = this.rasterFunction.process({\n      extent: r.fromJSON(t.extent),\n      primaryPixelBlocks: t.primaryPixelBlocks.map(r => null != r ? s.fromJSON(r) : null),\n      primaryPixelSizes: t.primaryPixelSizes?.map(r => null != r ? e.fromJSON(r) : null),\n      primaryRasterIds: t.primaryRasterIds\n    });\n    return null != o ? o.toJSON() : null;\n  }\n  stretch(r) {\n    const e = this.symbolizer.simpleStretch(s.fromJSON(r.srcPixelBlock), r.stretchParams);\n    return Promise.resolve(e?.toJSON());\n  }\n  estimateStatisticsHistograms(r) {\n    const e = d(s.fromJSON(r.srcPixelBlock));\n    return Promise.resolve(e);\n  }\n  split(r) {\n    const e = i(s.fromJSON(r.srcPixelBlock), r.tileSize, r.maximumPyramidLevel ?? 0, !1 === r.useBilinear);\n    return e && e.forEach((r, t) => {\n      e.set(t, r?.toJSON());\n    }), Promise.resolve(e);\n  }\n  clipTile(r) {\n    const e = s.fromJSON(r.pixelBlock),\n      t = n({\n        ...r,\n        pixelBlock: e\n      });\n    return Promise.resolve(t?.toJSON());\n  }\n  async mosaicAndTransform(r) {\n    const e = r.srcPixelBlocks.map(r => r ? new s(r) : null),\n      t = a(e, r.srcMosaicSize, {\n        blockWidths: r.blockWidths,\n        alignmentInfo: r.alignmentInfo,\n        clipOffset: r.clipOffset,\n        clipSize: r.clipSize\n      });\n    let o,\n      i = t;\n    return r.coefs && (i = l(t, r.destDimension, r.coefs, r.sampleSpacing, r.interpolation)), r.projectDirections && r.gcsGrid && (o = m(r.destDimension, r.gcsGrid), i = y(i, r.isUV ? \"vector-uv\" : \"vector-magdir\", o)), {\n      pixelBlock: i?.toJSON(),\n      localNorthDirections: o\n    };\n  }\n  async createFlowMesh(r, e) {\n    const t = {\n        data: new Float32Array(r.flowData.buffer),\n        mask: new Uint8Array(r.flowData.maskBuffer),\n        width: r.flowData.width,\n        height: r.flowData.height\n      },\n      {\n        vertexData: s,\n        indexData: o\n      } = await N(r.meshType, r.simulationSettings, t, e.signal);\n    return {\n      result: {\n        vertexBuffer: s.buffer,\n        indexBuffer: o.buffer\n      },\n      transferList: [s.buffer, o.buffer]\n    };\n  }\n  async getProjectionOffsetGrid(e) {\n    const s = r.fromJSON(e.projectedExtent),\n      o = r.fromJSON(e.srcBufferExtent);\n    let i = null;\n    e.datumTransformationSteps && (i = new t({\n      steps: e.datumTransformationSteps\n    })), (e.includeGCSGrid || f(s.spatialReference, o.spatialReference, i)) && (await p());\n    const n = e.rasterTransform ? O(e.rasterTransform) : null;\n    return u({\n      ...e,\n      projectedExtent: s,\n      srcBufferExtent: o,\n      datumTransformation: i,\n      rasterTransform: n\n    });\n  }\n}\nexport { J as default };","map":{"version":3,"names":["r","e","t","s","decode","o","split","i","clipTile","n","mosaic","a","approximateTransform","l","getLocalArithmeticNorthRotations","m","create","c","requirePE","f","load","p","getProjectionOffsetGrid","u","computeStatisticsHistograms","S","estimateStatisticsHistograms","d","convertVectorFieldData","x","convertToLocalDirections","y","readTransform","O","h","createFlowMesh","N","J","fromJSON","pixelBlock","type","Promise","resolve","toJSON","data","options","symbolize","extent","symbolizer","updateSymbolizer","symbolizerJSON","histograms","rendererJSON","updateRasterFunction","rasterFunction","rasterFunctionJSON","process","primaryPixelBlocks","map","primaryPixelSizes","primaryRasterIds","stretch","simpleStretch","srcPixelBlock","stretchParams","tileSize","maximumPyramidLevel","useBilinear","forEach","set","mosaicAndTransform","srcPixelBlocks","srcMosaicSize","blockWidths","alignmentInfo","clipOffset","clipSize","coefs","destDimension","sampleSpacing","interpolation","projectDirections","gcsGrid","isUV","localNorthDirections","Float32Array","flowData","buffer","mask","Uint8Array","maskBuffer","width","height","vertexData","indexData","meshType","simulationSettings","signal","result","vertexBuffer","indexBuffer","transferList","projectedExtent","srcBufferExtent","datumTransformationSteps","steps","includeGCSGrid","spatialReference","rasterTransform","datumTransformation","default"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/layers/support/RasterWorker.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport r from\"../../geometry/Extent.js\";import e from\"../../geometry/Point.js\";import t from\"../../geometry/support/GeographicTransformation.js\";import s from\"./PixelBlock.js\";import{decode as o}from\"./rasterFormats/RasterCodec.js\";import{split as i,clipTile as n,mosaic as a,approximateTransform as l,getLocalArithmeticNorthRotations as m}from\"./rasterFunctions/pixelUtils.js\";import{create as c}from\"./rasterFunctions/rasterFunctionHelper.js\";import{requirePE as f,load as p,getProjectionOffsetGrid as u}from\"./rasterFunctions/rasterProjectionHelper.js\";import{computeStatisticsHistograms as S,estimateStatisticsHistograms as d}from\"./rasterFunctions/stretchUtils.js\";import{convertVectorFieldData as x,convertToLocalDirections as y}from\"./rasterFunctions/vectorFieldUtils.js\";import{readTransform as O}from\"./rasterTransforms/utils.js\";import h from\"../../renderers/support/RasterSymbolizer.js\";import{createFlowMesh as N}from\"../../views/2d/engine/flow/dataUtils.js\";class J{convertVectorFieldData(r){const e=s.fromJSON(r.pixelBlock),t=x(e,r.type);return Promise.resolve(null!=t?t.toJSON():null)}computeStatisticsHistograms(r){const e=s.fromJSON(r.pixelBlock),t=S(e);return Promise.resolve(t)}async decode(r){const e=await o(r.data,r.options);return e&&e.toJSON()}symbolize(e){e.pixelBlock=s.fromJSON(e.pixelBlock),e.extent=e.extent?r.fromJSON(e.extent):null;const t=this.symbolizer.symbolize(e);return Promise.resolve(null!=t?t.toJSON():null)}async updateSymbolizer(r){this.symbolizer=h.fromJSON(r.symbolizerJSON),r.histograms&&\"rasterStretch\"===this.symbolizer?.rendererJSON.type&&(this.symbolizer.rendererJSON.histograms=r.histograms)}async updateRasterFunction(r){this.rasterFunction=c(r.rasterFunctionJSON)}async process(t){const o=this.rasterFunction.process({extent:r.fromJSON(t.extent),primaryPixelBlocks:t.primaryPixelBlocks.map((r=>null!=r?s.fromJSON(r):null)),primaryPixelSizes:t.primaryPixelSizes?.map((r=>null!=r?e.fromJSON(r):null)),primaryRasterIds:t.primaryRasterIds});return null!=o?o.toJSON():null}stretch(r){const e=this.symbolizer.simpleStretch(s.fromJSON(r.srcPixelBlock),r.stretchParams);return Promise.resolve(e?.toJSON())}estimateStatisticsHistograms(r){const e=d(s.fromJSON(r.srcPixelBlock));return Promise.resolve(e)}split(r){const e=i(s.fromJSON(r.srcPixelBlock),r.tileSize,r.maximumPyramidLevel??0,!1===r.useBilinear);return e&&e.forEach(((r,t)=>{e.set(t,r?.toJSON())})),Promise.resolve(e)}clipTile(r){const e=s.fromJSON(r.pixelBlock),t=n({...r,pixelBlock:e});return Promise.resolve(t?.toJSON())}async mosaicAndTransform(r){const e=r.srcPixelBlocks.map((r=>r?new s(r):null)),t=a(e,r.srcMosaicSize,{blockWidths:r.blockWidths,alignmentInfo:r.alignmentInfo,clipOffset:r.clipOffset,clipSize:r.clipSize});let o,i=t;return r.coefs&&(i=l(t,r.destDimension,r.coefs,r.sampleSpacing,r.interpolation)),r.projectDirections&&r.gcsGrid&&(o=m(r.destDimension,r.gcsGrid),i=y(i,r.isUV?\"vector-uv\":\"vector-magdir\",o)),{pixelBlock:i?.toJSON(),localNorthDirections:o}}async createFlowMesh(r,e){const t={data:new Float32Array(r.flowData.buffer),mask:new Uint8Array(r.flowData.maskBuffer),width:r.flowData.width,height:r.flowData.height},{vertexData:s,indexData:o}=await N(r.meshType,r.simulationSettings,t,e.signal);return{result:{vertexBuffer:s.buffer,indexBuffer:o.buffer},transferList:[s.buffer,o.buffer]}}async getProjectionOffsetGrid(e){const s=r.fromJSON(e.projectedExtent),o=r.fromJSON(e.srcBufferExtent);let i=null;e.datumTransformationSteps&&(i=new t({steps:e.datumTransformationSteps})),(e.includeGCSGrid||f(s.spatialReference,o.spatialReference,i))&&await p();const n=e.rasterTransform?O(e.rasterTransform):null;return u({...e,projectedExtent:s,srcBufferExtent:o,datumTransformation:i,rasterTransform:n})}}export{J as default};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}