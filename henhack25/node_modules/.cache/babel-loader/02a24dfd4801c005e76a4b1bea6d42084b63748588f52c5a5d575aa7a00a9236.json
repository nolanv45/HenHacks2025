{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { colorGamma as e } from \"../../../../../colorUtils.js\";\nimport t from \"../../../../../core/Logger.js\";\nimport { getOrCreateMapValue as s } from \"../../../../../core/MapUtils.js\";\nimport { deg2rad as r } from \"../../../../../core/mathUtils.js\";\nimport { exactEquals as i } from \"../../../../../core/libs/gl-matrix-2/math/quat.js\";\nimport { IDENTITY as o, clone as a } from \"../../../../../core/libs/gl-matrix-2/factories/quatf64.js\";\nimport { p as n } from \"../../../../../chunks/vec32.js\";\nimport { ZEROS as l, clone as c, ONES as u } from \"../../../../../core/libs/gl-matrix-2/factories/vec3f64.js\";\nimport h from \"../../../MeshMaterialMetallicRoughness.js\";\nimport { convertVertexSpace as f } from \"../../vertexSpaceConversion.js\";\nimport { Buffer as m } from \"./buffer.js\";\nimport { smoothNormals as p } from \"./geometry.js\";\nimport { BufferOutputType as d, ImageOutputType as g, AttributeType as x, TargetBuffer as _, AlphaMode as T } from \"./types.js\";\nimport { imageToArrayBuffer as R, imageToDataURI as A } from \"./imageutils.js\";\nimport { isEncodedMeshTexture as b } from \"../../../../../views/3d/glTF/internal/resourceUtils.js\";\nimport { DataType as M, TextureWrapMode as E } from \"../../../../../views/webgl/enums.js\";\nconst O = () => t.getLogger(\"esri.geometry.support.meshUtils.exporters.gltf.gltf\");\nclass w {\n  constructor(e, t) {\n    this.options = t, this._materialMap = new Array(), this._imageMap = new Map(), this._textureMap = new Map(), this.gltf = {\n      asset: {\n        version: \"2.0\",\n        copyright: e.copyright,\n        generator: e.generator\n      },\n      extras: {\n        output: t.output,\n        binChunkBuffer: null,\n        promises: []\n      }\n    }, this._addScenes(e);\n  }\n  _addScenes(e) {\n    this.gltf.scene = e.defaultScene;\n    const t = this.gltf.extras,\n      s = t.output.buffer === d.GLB || t.output.image === g.GLB;\n    s && (t.binChunkBuffer = new m(this.gltf)), e.forEachScene(e => {\n      this._addScene(e);\n    }), s && t.binChunkBuffer.finalize();\n  }\n  _addScene(e) {\n    this.gltf.scenes || (this.gltf.scenes = []);\n    const t = {};\n    e.name && (t.name = e.name), e.forEachNode(e => {\n      t.nodes || (t.nodes = []), t.nodes.push(...this._addNodes(e));\n    }), this.gltf.scenes.push(t);\n  }\n  _addNodes(e) {\n    this.gltf.nodes || (this.gltf.nodes = []);\n    const t = {};\n    e.name && (t.name = e.name);\n    const s = e.translation;\n    n(s, l) || (t.translation = c(s));\n    const r = e.rotation;\n    i(r, o) || (t.rotation = a(r));\n    const h = e.scale;\n    n(h, u) || (t.scale = c(h));\n    const f = this.gltf.nodes.length;\n    if (this.gltf.nodes.push(t), e.mesh && e.mesh.vertexAttributes.position) {\n      const s = this._createMeshes(e.mesh),\n        r = [f];\n      if (1 === s.length) this._addMesh(t, s[0]);else for (const e of s) {\n        const t = {};\n        this._addMesh(t, e), r.push(this.gltf.nodes.length), this.gltf.nodes.push(t);\n      }\n      return r;\n    }\n    return e.forEachNode(e => {\n      t.children || (t.children = []), t.children.push(...this._addNodes(e));\n    }), [f];\n  }\n  _addMesh(e, t) {\n    this.gltf.meshes ??= [];\n    const s = this.gltf.meshes.length;\n    this.gltf.meshes.push(t), e.mesh = s;\n  }\n  _createMeshes(e) {\n    const t = this.gltf.extras,\n      s = t.output.buffer === d.GLB;\n    let r;\n    r = s ? t.binChunkBuffer : new m(this.gltf);\n    const i = this.options.origin,\n      o = e.vertexSpace.clone();\n    o.origin = [i.x, i.y, i.z ?? 0];\n    const a = f({\n      vertexAttributes: e.vertexAttributes,\n      vertexSpace: e.vertexSpace,\n      transform: this.options?.ignoreLocalTransform ? null : e.transform,\n      spatialReference: e.spatialReference\n    }, o, {\n      targetUnit: this.options.unitConversionDisabled ? void 0 : \"meters\"\n    });\n    if (!a) return [];\n    p(e, a), v(a);\n    const {\n        position: n,\n        normal: l,\n        tangent: c\n      } = a,\n      {\n        uv: u,\n        color: h\n      } = e.vertexAttributes,\n      g = r.addBufferView(M.FLOAT, x.VEC3, _.ARRAY_BUFFER);\n    let T, R, A, b;\n    l && (T = r.addBufferView(M.FLOAT, x.VEC3, _.ARRAY_BUFFER)), u && (R = r.addBufferView(M.FLOAT, x.VEC2, _.ARRAY_BUFFER)), c && (A = r.addBufferView(M.FLOAT, x.VEC4, _.ARRAY_BUFFER)), h && (b = r.addBufferView(M.FLOAT, x.VEC4, _.ARRAY_BUFFER)), g.startAccessor(\"POSITION\"), T && T.startAccessor(\"NORMAL\"), R && R.startAccessor(\"TEXCOORD_0\"), A && A.startAccessor(\"TANGENT\"), b && b.startAccessor(\"COLOR_0\");\n    const E = a.position.length / 3;\n    for (let f = 0; f < E; ++f) g.push(n[3 * f]), g.push(n[3 * f + 1]), g.push(n[3 * f + 2]), T && null != l && (T.push(l[3 * f]), T.push(l[3 * f + 1]), T.push(l[3 * f + 2])), R && null != u && (R.push(u[2 * f]), R.push(u[2 * f + 1])), A && null != c && (A.push(c[4 * f]), A.push(c[4 * f + 1]), A.push(c[4 * f + 2]), A.push(c[4 * f + 3])), b && null != h && (b.push(I(h[4 * f] / 255)), b.push(I(h[4 * f + 1] / 255)), b.push(I(h[4 * f + 2] / 255)), b.push(h[4 * f + 3] / 255));\n    const O = g.endAccessor(),\n      w = this._addAccessor(g.index, O);\n    let C, N, L, S, B;\n    if (T) {\n      const e = T.endAccessor();\n      C = this._addAccessor(T.index, e);\n    }\n    if (R) {\n      const e = R.endAccessor();\n      N = this._addAccessor(R.index, e);\n    }\n    if (A) {\n      const e = A.endAccessor();\n      L = this._addAccessor(A.index, e);\n    }\n    if (b) {\n      const e = b.endAccessor();\n      S = this._addAccessor(b.index, e);\n    }\n    const F = [];\n    return e.components && e.components.length > 0 && e.components[0].faces ? (B = r.addBufferView(M.UNSIGNED_INT, x.SCALAR, _.ELEMENT_ARRAY_BUFFER), this._addMeshVertexIndexed(B, e.components, F, w, C, N, L, S)) : this._addMeshVertexNonIndexed(e.components, F, w, C, N, L, S), g.finalize(), T && T.finalize(), R && R.finalize(), A && A.finalize(), B && B.finalize(), b && b.finalize(), s || r.finalize(), F;\n  }\n  _addMaterial(e) {\n    if (null == e) return;\n    const t = this._materialMap.indexOf(e);\n    if (-1 !== t) return t;\n    this.gltf.materials || (this.gltf.materials = []);\n    const s = {};\n    switch (e.alphaMode) {\n      case \"mask\":\n        s.alphaMode = T.MASK;\n        break;\n      case \"auto\":\n      case \"blend\":\n        s.alphaMode = T.BLEND;\n    }\n    s.alphaCutoff = e.alphaCutoff, e.doubleSided && (s.doubleSided = e.doubleSided), s.pbrMetallicRoughness = {};\n    const r = e => {\n      const t = e.toRgba();\n      return t[0] = I(t[0] / 255), t[1] = I(t[1] / 255), t[2] = I(t[2] / 255), t;\n    };\n    if (null != e.color && (s.pbrMetallicRoughness.baseColorFactor = r(e.color)), null != e.colorTexture && (s.pbrMetallicRoughness.baseColorTexture = this._createTextureInfo(e.colorTexture, e.colorTextureTransform)), null != e.normalTexture && (s.normalTexture = this._createTextureInfo(e.normalTexture, e.normalTextureTransform)), e instanceof h) {\n      if (null != e.emissiveTexture && (s.emissiveTexture = this._createTextureInfo(e.emissiveTexture, e.emissiveTextureTransform)), null != e.emissiveColor) {\n        const t = r(e.emissiveColor);\n        s.emissiveFactor = [t[0], t[1], t[2]];\n      }\n      null != e.occlusionTexture && (s.occlusionTexture = this._createTextureInfo(e.occlusionTexture, e.occlusionTextureTransform)), null != e.metallicRoughnessTexture && (s.pbrMetallicRoughness.metallicRoughnessTexture = this._createTextureInfo(e.metallicRoughnessTexture, e.metallicRoughnessTextureTransform)), s.pbrMetallicRoughness.metallicFactor = e.metallic, s.pbrMetallicRoughness.roughnessFactor = e.roughness;\n    } else s.pbrMetallicRoughness.metallicFactor = 1, s.pbrMetallicRoughness.roughnessFactor = 1, O().warnOnce(\"Meshes exported to GLTF without MeshMaterialMetallicRoughness material will appear different when imported back.\");\n    const i = this.gltf.materials.length;\n    return this.gltf.materials.push(s), this._materialMap.push(e), i;\n  }\n  _createTextureInfo(e, t) {\n    const s = {\n      index: this._addTexture(e)\n    };\n    return t ? (s.extensions || (s.extensions = {}), s.extensions.KHR_texture_transform = {\n      scale: t.scale,\n      offset: t.offset,\n      rotation: r(t.rotation)\n    }, s) : s;\n  }\n  _addTexture(e) {\n    const t = this.gltf.textures ?? [];\n    return this.gltf.textures = t, s(this._textureMap, e, () => {\n      const s = {\n          sampler: this._addSampler(e),\n          source: this._addImage(e)\n        },\n        r = t.length;\n      return t.push(s), r;\n    });\n  }\n  _addImage(e) {\n    const t = this._imageMap.get(e);\n    if (null != t) return t;\n    this.gltf.images || (this.gltf.images = []);\n    const s = {};\n    if (e.url) s.uri = e.url;else {\n      const t = e.data;\n      s.extras = t;\n      for (let e = 0; e < this.gltf.images.length; ++e) if (t === this.gltf.images[e].extras) return e;\n      const r = this.gltf.extras;\n      switch (r.output.image) {\n        case g.GLB:\n          {\n            const e = r.binChunkBuffer.addBufferView(M.UNSIGNED_BYTE, x.SCALAR);\n            if (b(t)) null != t.data && e.writeOutToBuffer(t.data, 0);else {\n              const i = R(t, this.options.signal).then(({\n                data: e,\n                type: t\n              }) => (s.mimeType = t, e));\n              r.promises.push(e.writeAsync(i).then(() => {\n                e.finalize();\n              }));\n            }\n            s.bufferView = e.index;\n            break;\n          }\n        case g.DataURI:\n          if (b(t)) {\n            O().warnOnce(\"Image export for basis compressed textures not available.\");\n            break;\n          }\n          s.uri = A(t);\n          break;\n        default:\n          if (b(t)) {\n            O().warnOnce(\"Image export for basis compressed textures not available.\");\n            break;\n          }\n          r.promises.push(R(t, this.options.signal).then(({\n            data: e,\n            type: t\n          }) => {\n            s.uri = e, s.mimeType = t;\n          }));\n      }\n    }\n    const r = this.gltf.images.length;\n    return this.gltf.images.push(s), this._imageMap.set(e, r), r;\n  }\n  _addSampler(e) {\n    this.gltf.samplers || (this.gltf.samplers = []);\n    let t = E.REPEAT,\n      s = E.REPEAT;\n    if (\"string\" == typeof e.wrap) switch (e.wrap) {\n      case \"clamp\":\n        t = E.CLAMP_TO_EDGE, s = E.CLAMP_TO_EDGE;\n        break;\n      case \"mirror\":\n        t = E.MIRRORED_REPEAT, s = E.MIRRORED_REPEAT;\n    } else {\n      switch (e.wrap.vertical) {\n        case \"clamp\":\n          s = E.CLAMP_TO_EDGE;\n          break;\n        case \"mirror\":\n          s = E.MIRRORED_REPEAT;\n      }\n      switch (e.wrap.horizontal) {\n        case \"clamp\":\n          t = E.CLAMP_TO_EDGE;\n          break;\n        case \"mirror\":\n          t = E.MIRRORED_REPEAT;\n      }\n    }\n    const r = {\n      wrapS: t,\n      wrapT: s\n    };\n    for (let o = 0; o < this.gltf.samplers.length; ++o) if (JSON.stringify(r) === JSON.stringify(this.gltf.samplers[o])) return o;\n    const i = this.gltf.samplers.length;\n    return this.gltf.samplers.push(r), i;\n  }\n  _addAccessor(e, t) {\n    this.gltf.accessors || (this.gltf.accessors = []);\n    const s = {\n      bufferView: e,\n      byteOffset: t.byteOffset,\n      componentType: t.componentType,\n      count: t.count,\n      type: t.type,\n      min: t.min,\n      max: t.max,\n      name: t.name\n    };\n    t.normalized && (s.normalized = !0);\n    const r = this.gltf.accessors.length;\n    return this.gltf.accessors.push(s), r;\n  }\n  _addMeshVertexIndexed(e, t, s, r, i, o, a, n) {\n    const l = new Map();\n    for (const c of t) {\n      if (e.startAccessor(\"INDICES\"), c.faces) for (let s = 0; s < c.faces.length; ++s) e.push(c.faces[s]);\n      const t = e.endAccessor(),\n        u = {\n          attributes: {\n            POSITION: r\n          },\n          indices: this._addAccessor(e.index, t),\n          material: this._addMaterial(c.material)\n        };\n      i && \"flat\" !== c.shading && (u.attributes.NORMAL = i), o && (u.attributes.TEXCOORD_0 = o), a && \"flat\" !== c.shading && (u.attributes.TANGENT = a), n && (u.attributes.COLOR_0 = n);\n      const h = l.get(c.name);\n      if (h) h.primitives.push(u);else {\n        const e = {\n          name: c.name,\n          primitives: [u]\n        };\n        l.set(c.name, e), s.push(e);\n      }\n    }\n  }\n  _addMeshVertexNonIndexed(e, t, s, r, i, o, a) {\n    const n = {\n      primitives: []\n    };\n    t.push(n);\n    const l = {\n      attributes: {\n        POSITION: s\n      }\n    };\n    r && (l.attributes.NORMAL = r), i && (l.attributes.TEXCOORD_0 = i), o && (l.attributes.TANGENT = o), a && (l.attributes.COLOR_0 = a), e && (l.material = this._addMaterial(e[0].material)), n.primitives.push(l);\n  }\n}\nfunction v({\n  position: e,\n  normal: t,\n  tangent: s\n}) {\n  C(e, 3), C(t, 3), C(s, 4);\n}\nfunction C(e, t) {\n  if (null != e) for (let s = 1, r = 2; s < e.length; s += t, r += t) {\n    const t = e[s],\n      i = e[r];\n    e[s] = i, e[r] = -t;\n  }\n}\nfunction I(t) {\n  return t ** e;\n}\nexport { w as GLTF };","map":{"version":3,"names":["colorGamma","e","t","getOrCreateMapValue","s","deg2rad","r","exactEquals","i","IDENTITY","o","clone","a","p","n","ZEROS","l","c","ONES","u","h","convertVertexSpace","f","Buffer","m","smoothNormals","BufferOutputType","d","ImageOutputType","g","AttributeType","x","TargetBuffer","_","AlphaMode","T","imageToArrayBuffer","R","imageToDataURI","A","isEncodedMeshTexture","b","DataType","M","TextureWrapMode","E","O","getLogger","w","constructor","options","_materialMap","Array","_imageMap","Map","_textureMap","gltf","asset","version","copyright","generator","extras","output","binChunkBuffer","promises","_addScenes","scene","defaultScene","buffer","GLB","image","forEachScene","_addScene","finalize","scenes","name","forEachNode","nodes","push","_addNodes","translation","rotation","scale","length","mesh","vertexAttributes","position","_createMeshes","_addMesh","children","meshes","origin","vertexSpace","y","z","transform","ignoreLocalTransform","spatialReference","targetUnit","unitConversionDisabled","v","normal","tangent","uv","color","addBufferView","FLOAT","VEC3","ARRAY_BUFFER","VEC2","VEC4","startAccessor","I","endAccessor","_addAccessor","index","C","N","L","S","B","F","components","faces","UNSIGNED_INT","SCALAR","ELEMENT_ARRAY_BUFFER","_addMeshVertexIndexed","_addMeshVertexNonIndexed","_addMaterial","indexOf","materials","alphaMode","MASK","BLEND","alphaCutoff","doubleSided","pbrMetallicRoughness","toRgba","baseColorFactor","colorTexture","baseColorTexture","_createTextureInfo","colorTextureTransform","normalTexture","normalTextureTransform","emissiveTexture","emissiveTextureTransform","emissiveColor","emissiveFactor","occlusionTexture","occlusionTextureTransform","metallicRoughnessTexture","metallicRoughnessTextureTransform","metallicFactor","metallic","roughnessFactor","roughness","warnOnce","_addTexture","extensions","KHR_texture_transform","offset","textures","sampler","_addSampler","source","_addImage","get","images","url","uri","data","UNSIGNED_BYTE","writeOutToBuffer","signal","then","type","mimeType","writeAsync","bufferView","DataURI","set","samplers","REPEAT","wrap","CLAMP_TO_EDGE","MIRRORED_REPEAT","vertical","horizontal","wrapS","wrapT","JSON","stringify","accessors","byteOffset","componentType","count","min","max","normalized","attributes","POSITION","indices","material","shading","NORMAL","TEXCOORD_0","TANGENT","COLOR_0","primitives","GLTF"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/geometry/support/meshUtils/exporters/gltf/gltf.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{colorGamma as e}from\"../../../../../colorUtils.js\";import t from\"../../../../../core/Logger.js\";import{getOrCreateMapValue as s}from\"../../../../../core/MapUtils.js\";import{deg2rad as r}from\"../../../../../core/mathUtils.js\";import{exactEquals as i}from\"../../../../../core/libs/gl-matrix-2/math/quat.js\";import{IDENTITY as o,clone as a}from\"../../../../../core/libs/gl-matrix-2/factories/quatf64.js\";import{p as n}from\"../../../../../chunks/vec32.js\";import{ZEROS as l,clone as c,ONES as u}from\"../../../../../core/libs/gl-matrix-2/factories/vec3f64.js\";import h from\"../../../MeshMaterialMetallicRoughness.js\";import{convertVertexSpace as f}from\"../../vertexSpaceConversion.js\";import{Buffer as m}from\"./buffer.js\";import{smoothNormals as p}from\"./geometry.js\";import{BufferOutputType as d,ImageOutputType as g,AttributeType as x,TargetBuffer as _,AlphaMode as T}from\"./types.js\";import{imageToArrayBuffer as R,imageToDataURI as A}from\"./imageutils.js\";import{isEncodedMeshTexture as b}from\"../../../../../views/3d/glTF/internal/resourceUtils.js\";import{DataType as M,TextureWrapMode as E}from\"../../../../../views/webgl/enums.js\";const O=()=>t.getLogger(\"esri.geometry.support.meshUtils.exporters.gltf.gltf\");class w{constructor(e,t){this.options=t,this._materialMap=new Array,this._imageMap=new Map,this._textureMap=new Map,this.gltf={asset:{version:\"2.0\",copyright:e.copyright,generator:e.generator},extras:{output:t.output,binChunkBuffer:null,promises:[]}},this._addScenes(e)}_addScenes(e){this.gltf.scene=e.defaultScene;const t=this.gltf.extras,s=t.output.buffer===d.GLB||t.output.image===g.GLB;s&&(t.binChunkBuffer=new m(this.gltf)),e.forEachScene((e=>{this._addScene(e)})),s&&t.binChunkBuffer.finalize()}_addScene(e){this.gltf.scenes||(this.gltf.scenes=[]);const t={};e.name&&(t.name=e.name),e.forEachNode((e=>{t.nodes||(t.nodes=[]),t.nodes.push(...this._addNodes(e))})),this.gltf.scenes.push(t)}_addNodes(e){this.gltf.nodes||(this.gltf.nodes=[]);const t={};e.name&&(t.name=e.name);const s=e.translation;n(s,l)||(t.translation=c(s));const r=e.rotation;i(r,o)||(t.rotation=a(r));const h=e.scale;n(h,u)||(t.scale=c(h));const f=this.gltf.nodes.length;if(this.gltf.nodes.push(t),e.mesh&&e.mesh.vertexAttributes.position){const s=this._createMeshes(e.mesh),r=[f];if(1===s.length)this._addMesh(t,s[0]);else for(const e of s){const t={};this._addMesh(t,e),r.push(this.gltf.nodes.length),this.gltf.nodes.push(t)}return r}return e.forEachNode((e=>{t.children||(t.children=[]),t.children.push(...this._addNodes(e))})),[f]}_addMesh(e,t){this.gltf.meshes??=[];const s=this.gltf.meshes.length;this.gltf.meshes.push(t),e.mesh=s}_createMeshes(e){const t=this.gltf.extras,s=t.output.buffer===d.GLB;let r;r=s?t.binChunkBuffer:new m(this.gltf);const i=this.options.origin,o=e.vertexSpace.clone();o.origin=[i.x,i.y,i.z??0];const a=f({vertexAttributes:e.vertexAttributes,vertexSpace:e.vertexSpace,transform:this.options?.ignoreLocalTransform?null:e.transform,spatialReference:e.spatialReference},o,{targetUnit:this.options.unitConversionDisabled?void 0:\"meters\"});if(!a)return[];p(e,a),v(a);const{position:n,normal:l,tangent:c}=a,{uv:u,color:h}=e.vertexAttributes,g=r.addBufferView(M.FLOAT,x.VEC3,_.ARRAY_BUFFER);let T,R,A,b;l&&(T=r.addBufferView(M.FLOAT,x.VEC3,_.ARRAY_BUFFER)),u&&(R=r.addBufferView(M.FLOAT,x.VEC2,_.ARRAY_BUFFER)),c&&(A=r.addBufferView(M.FLOAT,x.VEC4,_.ARRAY_BUFFER)),h&&(b=r.addBufferView(M.FLOAT,x.VEC4,_.ARRAY_BUFFER)),g.startAccessor(\"POSITION\"),T&&T.startAccessor(\"NORMAL\"),R&&R.startAccessor(\"TEXCOORD_0\"),A&&A.startAccessor(\"TANGENT\"),b&&b.startAccessor(\"COLOR_0\");const E=a.position.length/3;for(let f=0;f<E;++f)g.push(n[3*f]),g.push(n[3*f+1]),g.push(n[3*f+2]),T&&null!=l&&(T.push(l[3*f]),T.push(l[3*f+1]),T.push(l[3*f+2])),R&&null!=u&&(R.push(u[2*f]),R.push(u[2*f+1])),A&&null!=c&&(A.push(c[4*f]),A.push(c[4*f+1]),A.push(c[4*f+2]),A.push(c[4*f+3])),b&&null!=h&&(b.push(I(h[4*f]/255)),b.push(I(h[4*f+1]/255)),b.push(I(h[4*f+2]/255)),b.push(h[4*f+3]/255));const O=g.endAccessor(),w=this._addAccessor(g.index,O);let C,N,L,S,B;if(T){const e=T.endAccessor();C=this._addAccessor(T.index,e)}if(R){const e=R.endAccessor();N=this._addAccessor(R.index,e)}if(A){const e=A.endAccessor();L=this._addAccessor(A.index,e)}if(b){const e=b.endAccessor();S=this._addAccessor(b.index,e)}const F=[];return e.components&&e.components.length>0&&e.components[0].faces?(B=r.addBufferView(M.UNSIGNED_INT,x.SCALAR,_.ELEMENT_ARRAY_BUFFER),this._addMeshVertexIndexed(B,e.components,F,w,C,N,L,S)):this._addMeshVertexNonIndexed(e.components,F,w,C,N,L,S),g.finalize(),T&&T.finalize(),R&&R.finalize(),A&&A.finalize(),B&&B.finalize(),b&&b.finalize(),s||r.finalize(),F}_addMaterial(e){if(null==e)return;const t=this._materialMap.indexOf(e);if(-1!==t)return t;this.gltf.materials||(this.gltf.materials=[]);const s={};switch(e.alphaMode){case\"mask\":s.alphaMode=T.MASK;break;case\"auto\":case\"blend\":s.alphaMode=T.BLEND}s.alphaCutoff=e.alphaCutoff,e.doubleSided&&(s.doubleSided=e.doubleSided),s.pbrMetallicRoughness={};const r=e=>{const t=e.toRgba();return t[0]=I(t[0]/255),t[1]=I(t[1]/255),t[2]=I(t[2]/255),t};if(null!=e.color&&(s.pbrMetallicRoughness.baseColorFactor=r(e.color)),null!=e.colorTexture&&(s.pbrMetallicRoughness.baseColorTexture=this._createTextureInfo(e.colorTexture,e.colorTextureTransform)),null!=e.normalTexture&&(s.normalTexture=this._createTextureInfo(e.normalTexture,e.normalTextureTransform)),e instanceof h){if(null!=e.emissiveTexture&&(s.emissiveTexture=this._createTextureInfo(e.emissiveTexture,e.emissiveTextureTransform)),null!=e.emissiveColor){const t=r(e.emissiveColor);s.emissiveFactor=[t[0],t[1],t[2]]}null!=e.occlusionTexture&&(s.occlusionTexture=this._createTextureInfo(e.occlusionTexture,e.occlusionTextureTransform)),null!=e.metallicRoughnessTexture&&(s.pbrMetallicRoughness.metallicRoughnessTexture=this._createTextureInfo(e.metallicRoughnessTexture,e.metallicRoughnessTextureTransform)),s.pbrMetallicRoughness.metallicFactor=e.metallic,s.pbrMetallicRoughness.roughnessFactor=e.roughness}else s.pbrMetallicRoughness.metallicFactor=1,s.pbrMetallicRoughness.roughnessFactor=1,O().warnOnce(\"Meshes exported to GLTF without MeshMaterialMetallicRoughness material will appear different when imported back.\");const i=this.gltf.materials.length;return this.gltf.materials.push(s),this._materialMap.push(e),i}_createTextureInfo(e,t){const s={index:this._addTexture(e)};return t?(s.extensions||(s.extensions={}),s.extensions.KHR_texture_transform={scale:t.scale,offset:t.offset,rotation:r(t.rotation)},s):s}_addTexture(e){const t=this.gltf.textures??[];return this.gltf.textures=t,s(this._textureMap,e,(()=>{const s={sampler:this._addSampler(e),source:this._addImage(e)},r=t.length;return t.push(s),r}))}_addImage(e){const t=this._imageMap.get(e);if(null!=t)return t;this.gltf.images||(this.gltf.images=[]);const s={};if(e.url)s.uri=e.url;else{const t=e.data;s.extras=t;for(let e=0;e<this.gltf.images.length;++e)if(t===this.gltf.images[e].extras)return e;const r=this.gltf.extras;switch(r.output.image){case g.GLB:{const e=r.binChunkBuffer.addBufferView(M.UNSIGNED_BYTE,x.SCALAR);if(b(t))null!=t.data&&e.writeOutToBuffer(t.data,0);else{const i=R(t,this.options.signal).then((({data:e,type:t})=>(s.mimeType=t,e)));r.promises.push(e.writeAsync(i).then((()=>{e.finalize()})))}s.bufferView=e.index;break}case g.DataURI:if(b(t)){O().warnOnce(\"Image export for basis compressed textures not available.\");break}s.uri=A(t);break;default:if(b(t)){O().warnOnce(\"Image export for basis compressed textures not available.\");break}r.promises.push(R(t,this.options.signal).then((({data:e,type:t})=>{s.uri=e,s.mimeType=t})))}}const r=this.gltf.images.length;return this.gltf.images.push(s),this._imageMap.set(e,r),r}_addSampler(e){this.gltf.samplers||(this.gltf.samplers=[]);let t=E.REPEAT,s=E.REPEAT;if(\"string\"==typeof e.wrap)switch(e.wrap){case\"clamp\":t=E.CLAMP_TO_EDGE,s=E.CLAMP_TO_EDGE;break;case\"mirror\":t=E.MIRRORED_REPEAT,s=E.MIRRORED_REPEAT}else{switch(e.wrap.vertical){case\"clamp\":s=E.CLAMP_TO_EDGE;break;case\"mirror\":s=E.MIRRORED_REPEAT}switch(e.wrap.horizontal){case\"clamp\":t=E.CLAMP_TO_EDGE;break;case\"mirror\":t=E.MIRRORED_REPEAT}}const r={wrapS:t,wrapT:s};for(let o=0;o<this.gltf.samplers.length;++o)if(JSON.stringify(r)===JSON.stringify(this.gltf.samplers[o]))return o;const i=this.gltf.samplers.length;return this.gltf.samplers.push(r),i}_addAccessor(e,t){this.gltf.accessors||(this.gltf.accessors=[]);const s={bufferView:e,byteOffset:t.byteOffset,componentType:t.componentType,count:t.count,type:t.type,min:t.min,max:t.max,name:t.name};t.normalized&&(s.normalized=!0);const r=this.gltf.accessors.length;return this.gltf.accessors.push(s),r}_addMeshVertexIndexed(e,t,s,r,i,o,a,n){const l=new Map;for(const c of t){if(e.startAccessor(\"INDICES\"),c.faces)for(let s=0;s<c.faces.length;++s)e.push(c.faces[s]);const t=e.endAccessor(),u={attributes:{POSITION:r},indices:this._addAccessor(e.index,t),material:this._addMaterial(c.material)};i&&\"flat\"!==c.shading&&(u.attributes.NORMAL=i),o&&(u.attributes.TEXCOORD_0=o),a&&\"flat\"!==c.shading&&(u.attributes.TANGENT=a),n&&(u.attributes.COLOR_0=n);const h=l.get(c.name);if(h)h.primitives.push(u);else{const e={name:c.name,primitives:[u]};l.set(c.name,e),s.push(e)}}}_addMeshVertexNonIndexed(e,t,s,r,i,o,a){const n={primitives:[]};t.push(n);const l={attributes:{POSITION:s}};r&&(l.attributes.NORMAL=r),i&&(l.attributes.TEXCOORD_0=i),o&&(l.attributes.TANGENT=o),a&&(l.attributes.COLOR_0=a),e&&(l.material=this._addMaterial(e[0].material)),n.primitives.push(l)}}function v({position:e,normal:t,tangent:s}){C(e,3),C(t,3),C(s,4)}function C(e,t){if(null!=e)for(let s=1,r=2;s<e.length;s+=t,r+=t){const t=e[s],i=e[r];e[s]=i,e[r]=-t}}function I(t){return t**e}export{w as GLTF};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}