{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { _ as t } from \"../../../chunks/tslib.es6.js\";\nimport s from \"../../../core/JSONSupport.js\";\nimport { property as e } from \"../../../core/accessorSupport/decorators/property.js\";\nimport { cast as r } from \"../../../core/accessorSupport/decorators/cast.js\";\nimport \"../../../core/has.js\";\nimport \"../../../core/RandomLCG.js\";\nimport { subclass as i } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport n from \"../PixelBlock.js\";\nimport o from \"../RasterInfo.js\";\nconst a = new Set([\"slope\", \"aspect\", \"curvature\", \"hillshade\", \"shadedrelief\", \"statistics\"]);\nlet u = class extends s {\n  constructor() {\n    super(...arguments), this.functionArguments = null, this.readingBufferSize = 0, this.id = -1, this.isNoopProcess = !1, this.rawInputBandIds = [], this.rawSourceRasterInfos = null, this.isInputBandIdsSwizzled = !1, this.swizzledBandSelection = [], this.isBranch = !1, this._bindingResult = null;\n  }\n  get supportsGPU() {\n    return this._bindingResult.supportsGPU;\n  }\n  get flatWebGLFunctionChain() {\n    const t = this.getWebGLProcessorDefinition();\n    if (!t) return null;\n    const s = [t],\n      {\n        parameters: e\n      } = t;\n    let r = e.rasters || e.raster && [e.raster];\n    for (; r?.length;) {\n      s.unshift(...r);\n      const t = [];\n      for (let s = 0; s < r.length; s++) {\n        const {\n            parameters: e\n          } = r[s],\n          i = e.rasters || e.raster && [e.raster];\n        i?.length && t.push(...i);\n      }\n      r = t;\n    }\n    for (let a = s.length - 1; a >= 0; a--) s[a].isNoopProcess && s.splice(a, 1);\n    let i = !1;\n    for (let a = 0; a < s.length; a++) {\n      const t = s[a];\n      t.id = s.length - a - 1;\n      const {\n        rasters: e\n      } = t.parameters;\n      i = i || null != e && e.length > 1;\n    }\n    const n = s.some(({\n        name: t\n      }) => a.has(t.toLowerCase())),\n      {\n        rawSourceRasterInfos: o\n      } = this;\n    return {\n      functions: s,\n      hasBranches: i,\n      hasFocalFunction: n,\n      isSourceSingleBand: 1 === o?.[0]?.bandCount\n    };\n  }\n  bind(t, s = !1, e = -1) {\n    this.id = e + 1;\n    const r = this._getRasterValues();\n    let i = !0;\n    for (let n = 0; n < r.length; n++) {\n      const e = r[n];\n      if (null != e && this._isRasterFunctionValue(e)) {\n        const r = e.bind(t, s, this.id + n);\n        if (!r.success) return this._bindingResult = r, r;\n        i = i && r.supportsGPU;\n      }\n    }\n    return !this.rasterInfo || s ? (this.sourceRasterInfos = this._getSourceRasterInfos(t), this._bindingResult = this._bindSourceRasters(), this._bindingResult.success && this._patchRasterInfo(), this._bindingResult.supportsGPU = i && this._bindingResult.supportsGPU, this.processInputBandIds(), this._bindingResult) : (this._bindingResult = {\n      success: !0,\n      supportsGPU: !0\n    }, this.processInputBandIds(), this._bindingResult);\n  }\n  process(t) {\n    const s = this._getRasterValues(),\n      e = 0 === s.length ? t.pixelBlocks ?? t.primaryPixelBlocks : s.map(s => this._readRasterValue(s, t));\n    return this._processPixels({\n      ...t,\n      pixelBlocks: e\n    });\n  }\n  processInputBandIds() {\n    const t = this._getRasterValues().filter(this._isRasterFunctionValue);\n    let s;\n    if (t.length > 1) {\n      const s = t.map(t => t.processInputBandIds()[0]);\n      this.rawInputBandIds = s, this.isInputBandIdsSwizzled = this.rawInputBandIds.some((t, s) => t !== s);\n      const e = t.filter(t => \"ExtractBand\" === t.functionName);\n      return e.length && e.forEach((t, s) => {\n        t.isInputBandIdsSwizzled = !0, t.swizzledBandSelection = [s, s, s];\n      }), this.rawInputBandIds;\n    }\n    const e = t[0];\n    if (e) {\n      if (s = e.processInputBandIds(), e.isInputBandIdsSwizzled) return this.rawInputBandIds = s, s;\n    } else {\n      s = [];\n      const {\n        bandCount: t\n      } = this.sourceRasterInfos[0];\n      for (let e = 0; e < t; e++) s.push(e);\n    }\n    const r = this._getInputBandIds(s);\n    return this.isInputBandIdsSwizzled = r.some((t, s) => t !== s), this.rawInputBandIds = r, this.rawInputBandIds;\n  }\n  getPrimaryRasters() {\n    const t = [],\n      s = [];\n    return this._getPrimaryRasters(this, t, s), {\n      rasters: t,\n      rasterIds: s\n    };\n  }\n  getWebGLProcessorDefinition() {\n    const t = this._getWebGLParameters(),\n      {\n        raster: s,\n        rasters: e\n      } = this.functionArguments;\n    return e && Array.isArray(e) && e.length ? (t.rasters = e.map(t => this._isRasterFunctionValue(t) ? t.getWebGLProcessorDefinition() : \"number\" == typeof t ? {\n      name: \"Constant\",\n      parameters: {\n        value: t\n      },\n      pixelType: \"f32\",\n      id: -1,\n      isNoopProcess: !1\n    } : {\n      name: \"Identity\",\n      parameters: {\n        value: t\n      },\n      pixelType: \"f32\",\n      id: -1,\n      isNoopProcess: !1\n    }), t.rasters.some(t => null != t) || (t.rasters = null)) : this._isRasterFunctionValue(s) && (t.raster = s.getWebGLProcessorDefinition()), {\n      name: this.functionName,\n      parameters: t,\n      pixelType: this.outputPixelType,\n      id: this.id,\n      isNoopProcess: this.isNoopProcess\n    };\n  }\n  getClippingGeometries() {\n    const t = [];\n    \"Clip\" === this.functionName && t.push(this.functionArguments);\n    const {\n      raster: s,\n      rasters: e\n    } = this.functionArguments;\n    if (e && Array.isArray(e) && e.length) e.forEach(s => {\n      if (this._isRasterFunctionValue(s)) {\n        const e = s.getClippingGeometries();\n        t.push(...e);\n      }\n    });else if (this._isRasterFunctionValue(s)) {\n      const e = s.getClippingGeometries();\n      t.push(...e);\n    }\n    return t;\n  }\n  _getOutputPixelType(t) {\n    return \"unknown\" === this.outputPixelType ? t : this.outputPixelType ?? t;\n  }\n  _getWebGLParameters() {\n    return {};\n  }\n  _getInputBandIds(t) {\n    return t;\n  }\n  _removeStatsHistColormapVAT(t) {\n    t.statistics = null, t.histograms = null, t.colormap = null, t.attributeTable = null, t.multidimensionalInfo?.variables.forEach(t => {\n      t.statistics = void 0, t.histograms = void 0;\n    });\n  }\n  _getRasterValues() {\n    const {\n      rasterArgumentNames: t\n    } = this;\n    return \"rasters\" === t[0] ? this.functionArguments.rasters ?? [] : t.flatMap(t => this.functionArguments[t]);\n  }\n  _getSourceRasterInfos(t) {\n    const s = this._getRasterValues(),\n      {\n        rasterInfos: e,\n        rasterIds: r\n      } = t;\n    if (0 === s.length) return e;\n    const i = s.map(t => t && \"object\" == typeof t && \"bind\" in t && t.rasterInfo ? t.rasterInfo : \"string\" == typeof t && r.includes(t) ? e[r.indexOf(t)] : \"number\" != typeof t ? e[0] : void 0),\n      n = i.find(t => t) ?? e[0];\n    return i.forEach((t, s) => {\n      void 0 === t && (i[s] = n);\n    }), i;\n  }\n  _getPrimaryRasterId(t) {\n    return t?.rasterId;\n  }\n  _getPrimaryRasters(t, s = [], e = []) {\n    for (let r = 0; r < t.sourceRasters.length; r++) {\n      const i = t.sourceRasters[r];\n      if (\"number\" != typeof i) if (\"bind\" in i) this._getPrimaryRasters(i, s, e);else {\n        const t = i,\n          r = this._getPrimaryRasterId(t);\n        if (null == r) continue;\n        e.includes(r) || (this.mainPrimaryRasterId === r ? (s.unshift(t), e.unshift(r)) : (s.push(t), e.push(r)));\n      }\n    }\n  }\n  _isRasterFunctionValue(t) {\n    return null != t && \"object\" == typeof t && \"getWebGLProcessorDefinition\" in t;\n  }\n  _readRasterValue(t, s) {\n    const {\n      primaryPixelBlocks: e\n    } = s;\n    if (null == t || \"$$\" === t) {\n      const t = e[0];\n      return null == t ? null : t.clone();\n    }\n    if (\"string\" == typeof t) {\n      const r = s.primaryRasterIds.indexOf(t);\n      return -1 === r ? null : e[r];\n    }\n    if (\"number\" == typeof t) {\n      const s = e[0];\n      if (null == s) return null;\n      const {\n          width: r,\n          height: i,\n          pixelType: o\n        } = s,\n        a = new Float32Array(r * i);\n      a.fill(t);\n      const u = this.sourceRasterInfos[0].bandCount,\n        p = new Array(u).fill(a);\n      return new n({\n        width: r,\n        height: i,\n        pixelType: o,\n        pixels: p\n      });\n    }\n    return t.process(s);\n  }\n  _patchRasterInfo() {\n    const {\n      rasterInfo: t\n    } = this;\n    if (!t?.keyProperties) return;\n    const {\n        bandCount: s,\n        keyProperties: e,\n        statistics: r,\n        histograms: i\n      } = t,\n      n = e.BandProperties;\n    n && n.length !== s && (t.keyProperties = {\n      ...e,\n      BandProperties: void 0\n    }), r && r.length !== s && (t.statistics = r.length > s ? r.slice(0, s) : null), i && i.length !== s && (t.histograms = i.length > s ? i.slice(0, s) : null), e.BAND_COUNT && Number(e.BAND_COUNT) !== s && (t.keyProperties = {\n      ...e,\n      BAND_COUNT: \"string\" == typeof e.BAND_COUNT ? String(s) : s\n    });\n  }\n};\nt([e({\n  json: {\n    write: !0\n  }\n})], u.prototype, \"functionName\", void 0), t([e({\n  json: {\n    write: !0\n  }\n})], u.prototype, \"functionArguments\", void 0), t([e()], u.prototype, \"rasterArgumentNames\", void 0), t([e({\n  json: {\n    write: !0\n  }\n}), r(t => t?.toLowerCase())], u.prototype, \"outputPixelType\", void 0), t([e({\n  json: {\n    write: !0\n  }\n})], u.prototype, \"mainPrimaryRasterId\", void 0), t([e()], u.prototype, \"sourceRasters\", void 0), t([e({\n  type: [o],\n  json: {\n    write: !0\n  }\n})], u.prototype, \"sourceRasterInfos\", void 0), t([e({\n  json: {\n    write: !0\n  }\n})], u.prototype, \"rasterInfo\", void 0), t([e({\n  json: {\n    write: !0\n  }\n})], u.prototype, \"readingBufferSize\", void 0), t([e({\n  json: {\n    write: !0\n  }\n})], u.prototype, \"id\", void 0), t([e()], u.prototype, \"isNoopProcess\", void 0), t([e()], u.prototype, \"supportsGPU\", null), t([e()], u.prototype, \"rawInputBandIds\", void 0), t([e()], u.prototype, \"rawSourceRasterInfos\", void 0), t([e()], u.prototype, \"isInputBandIdsSwizzled\", void 0), t([e()], u.prototype, \"swizzledBandSelection\", void 0), t([e()], u.prototype, \"isBranch\", void 0), t([e({\n  readOnly: !0\n})], u.prototype, \"flatWebGLFunctionChain\", null), t([e()], u.prototype, \"_bindingResult\", void 0), u = t([i(\"esri.layers.support.rasterFunctions.BaseRasterFunction\")], u);\nconst p = u;\nexport { p as default };","map":{"version":3,"names":["_","t","s","property","e","cast","r","subclass","i","n","o","a","Set","u","constructor","arguments","functionArguments","readingBufferSize","id","isNoopProcess","rawInputBandIds","rawSourceRasterInfos","isInputBandIdsSwizzled","swizzledBandSelection","isBranch","_bindingResult","supportsGPU","flatWebGLFunctionChain","getWebGLProcessorDefinition","parameters","rasters","raster","length","unshift","push","splice","some","name","has","toLowerCase","functions","hasBranches","hasFocalFunction","isSourceSingleBand","bandCount","bind","_getRasterValues","_isRasterFunctionValue","success","rasterInfo","sourceRasterInfos","_getSourceRasterInfos","_bindSourceRasters","_patchRasterInfo","processInputBandIds","process","pixelBlocks","primaryPixelBlocks","map","_readRasterValue","_processPixels","filter","functionName","forEach","_getInputBandIds","getPrimaryRasters","_getPrimaryRasters","rasterIds","_getWebGLParameters","Array","isArray","value","pixelType","outputPixelType","getClippingGeometries","_getOutputPixelType","_removeStatsHistColormapVAT","statistics","histograms","colormap","attributeTable","multidimensionalInfo","variables","rasterArgumentNames","flatMap","rasterInfos","includes","indexOf","find","_getPrimaryRasterId","rasterId","sourceRasters","mainPrimaryRasterId","clone","primaryRasterIds","width","height","Float32Array","fill","p","pixels","keyProperties","BandProperties","slice","BAND_COUNT","Number","String","json","write","prototype","type","readOnly","default"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/layers/support/rasterFunctions/BaseRasterFunction.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{_ as t}from\"../../../chunks/tslib.es6.js\";import s from\"../../../core/JSONSupport.js\";import{property as e}from\"../../../core/accessorSupport/decorators/property.js\";import{cast as r}from\"../../../core/accessorSupport/decorators/cast.js\";import\"../../../core/has.js\";import\"../../../core/RandomLCG.js\";import{subclass as i}from\"../../../core/accessorSupport/decorators/subclass.js\";import n from\"../PixelBlock.js\";import o from\"../RasterInfo.js\";const a=new Set([\"slope\",\"aspect\",\"curvature\",\"hillshade\",\"shadedrelief\",\"statistics\"]);let u=class extends s{constructor(){super(...arguments),this.functionArguments=null,this.readingBufferSize=0,this.id=-1,this.isNoopProcess=!1,this.rawInputBandIds=[],this.rawSourceRasterInfos=null,this.isInputBandIdsSwizzled=!1,this.swizzledBandSelection=[],this.isBranch=!1,this._bindingResult=null}get supportsGPU(){return this._bindingResult.supportsGPU}get flatWebGLFunctionChain(){const t=this.getWebGLProcessorDefinition();if(!t)return null;const s=[t],{parameters:e}=t;let r=e.rasters||e.raster&&[e.raster];for(;r?.length;){s.unshift(...r);const t=[];for(let s=0;s<r.length;s++){const{parameters:e}=r[s],i=e.rasters||e.raster&&[e.raster];i?.length&&t.push(...i)}r=t}for(let a=s.length-1;a>=0;a--)s[a].isNoopProcess&&s.splice(a,1);let i=!1;for(let a=0;a<s.length;a++){const t=s[a];t.id=s.length-a-1;const{rasters:e}=t.parameters;i=i||null!=e&&e.length>1}const n=s.some((({name:t})=>a.has(t.toLowerCase()))),{rawSourceRasterInfos:o}=this;return{functions:s,hasBranches:i,hasFocalFunction:n,isSourceSingleBand:1===o?.[0]?.bandCount}}bind(t,s=!1,e=-1){this.id=e+1;const r=this._getRasterValues();let i=!0;for(let n=0;n<r.length;n++){const e=r[n];if(null!=e&&this._isRasterFunctionValue(e)){const r=e.bind(t,s,this.id+n);if(!r.success)return this._bindingResult=r,r;i=i&&r.supportsGPU}}return!this.rasterInfo||s?(this.sourceRasterInfos=this._getSourceRasterInfos(t),this._bindingResult=this._bindSourceRasters(),this._bindingResult.success&&this._patchRasterInfo(),this._bindingResult.supportsGPU=i&&this._bindingResult.supportsGPU,this.processInputBandIds(),this._bindingResult):(this._bindingResult={success:!0,supportsGPU:!0},this.processInputBandIds(),this._bindingResult)}process(t){const s=this._getRasterValues(),e=0===s.length?t.pixelBlocks??t.primaryPixelBlocks:s.map((s=>this._readRasterValue(s,t)));return this._processPixels({...t,pixelBlocks:e})}processInputBandIds(){const t=this._getRasterValues().filter(this._isRasterFunctionValue);let s;if(t.length>1){const s=t.map((t=>t.processInputBandIds()[0]));this.rawInputBandIds=s,this.isInputBandIdsSwizzled=this.rawInputBandIds.some(((t,s)=>t!==s));const e=t.filter((t=>\"ExtractBand\"===t.functionName));return e.length&&e.forEach(((t,s)=>{t.isInputBandIdsSwizzled=!0,t.swizzledBandSelection=[s,s,s]})),this.rawInputBandIds}const e=t[0];if(e){if(s=e.processInputBandIds(),e.isInputBandIdsSwizzled)return this.rawInputBandIds=s,s}else{s=[];const{bandCount:t}=this.sourceRasterInfos[0];for(let e=0;e<t;e++)s.push(e)}const r=this._getInputBandIds(s);return this.isInputBandIdsSwizzled=r.some(((t,s)=>t!==s)),this.rawInputBandIds=r,this.rawInputBandIds}getPrimaryRasters(){const t=[],s=[];return this._getPrimaryRasters(this,t,s),{rasters:t,rasterIds:s}}getWebGLProcessorDefinition(){const t=this._getWebGLParameters(),{raster:s,rasters:e}=this.functionArguments;return e&&Array.isArray(e)&&e.length?(t.rasters=e.map((t=>this._isRasterFunctionValue(t)?t.getWebGLProcessorDefinition():\"number\"==typeof t?{name:\"Constant\",parameters:{value:t},pixelType:\"f32\",id:-1,isNoopProcess:!1}:{name:\"Identity\",parameters:{value:t},pixelType:\"f32\",id:-1,isNoopProcess:!1})),t.rasters.some((t=>null!=t))||(t.rasters=null)):this._isRasterFunctionValue(s)&&(t.raster=s.getWebGLProcessorDefinition()),{name:this.functionName,parameters:t,pixelType:this.outputPixelType,id:this.id,isNoopProcess:this.isNoopProcess}}getClippingGeometries(){const t=[];\"Clip\"===this.functionName&&t.push(this.functionArguments);const{raster:s,rasters:e}=this.functionArguments;if(e&&Array.isArray(e)&&e.length)e.forEach((s=>{if(this._isRasterFunctionValue(s)){const e=s.getClippingGeometries();t.push(...e)}}));else if(this._isRasterFunctionValue(s)){const e=s.getClippingGeometries();t.push(...e)}return t}_getOutputPixelType(t){return\"unknown\"===this.outputPixelType?t:this.outputPixelType??t}_getWebGLParameters(){return{}}_getInputBandIds(t){return t}_removeStatsHistColormapVAT(t){t.statistics=null,t.histograms=null,t.colormap=null,t.attributeTable=null,t.multidimensionalInfo?.variables.forEach((t=>{t.statistics=void 0,t.histograms=void 0}))}_getRasterValues(){const{rasterArgumentNames:t}=this;return\"rasters\"===t[0]?this.functionArguments.rasters??[]:t.flatMap((t=>this.functionArguments[t]))}_getSourceRasterInfos(t){const s=this._getRasterValues(),{rasterInfos:e,rasterIds:r}=t;if(0===s.length)return e;const i=s.map((t=>t&&\"object\"==typeof t&&\"bind\"in t&&t.rasterInfo?t.rasterInfo:\"string\"==typeof t&&r.includes(t)?e[r.indexOf(t)]:\"number\"!=typeof t?e[0]:void 0)),n=i.find((t=>t))??e[0];return i.forEach(((t,s)=>{void 0===t&&(i[s]=n)})),i}_getPrimaryRasterId(t){return t?.rasterId}_getPrimaryRasters(t,s=[],e=[]){for(let r=0;r<t.sourceRasters.length;r++){const i=t.sourceRasters[r];if(\"number\"!=typeof i)if(\"bind\"in i)this._getPrimaryRasters(i,s,e);else{const t=i,r=this._getPrimaryRasterId(t);if(null==r)continue;e.includes(r)||(this.mainPrimaryRasterId===r?(s.unshift(t),e.unshift(r)):(s.push(t),e.push(r)))}}}_isRasterFunctionValue(t){return null!=t&&\"object\"==typeof t&&\"getWebGLProcessorDefinition\"in t}_readRasterValue(t,s){const{primaryPixelBlocks:e}=s;if(null==t||\"$$\"===t){const t=e[0];return null==t?null:t.clone()}if(\"string\"==typeof t){const r=s.primaryRasterIds.indexOf(t);return-1===r?null:e[r]}if(\"number\"==typeof t){const s=e[0];if(null==s)return null;const{width:r,height:i,pixelType:o}=s,a=new Float32Array(r*i);a.fill(t);const u=this.sourceRasterInfos[0].bandCount,p=new Array(u).fill(a);return new n({width:r,height:i,pixelType:o,pixels:p})}return t.process(s)}_patchRasterInfo(){const{rasterInfo:t}=this;if(!t?.keyProperties)return;const{bandCount:s,keyProperties:e,statistics:r,histograms:i}=t,n=e.BandProperties;n&&n.length!==s&&(t.keyProperties={...e,BandProperties:void 0}),r&&r.length!==s&&(t.statistics=r.length>s?r.slice(0,s):null),i&&i.length!==s&&(t.histograms=i.length>s?i.slice(0,s):null),e.BAND_COUNT&&Number(e.BAND_COUNT)!==s&&(t.keyProperties={...e,BAND_COUNT:\"string\"==typeof e.BAND_COUNT?String(s):s})}};t([e({json:{write:!0}})],u.prototype,\"functionName\",void 0),t([e({json:{write:!0}})],u.prototype,\"functionArguments\",void 0),t([e()],u.prototype,\"rasterArgumentNames\",void 0),t([e({json:{write:!0}}),r((t=>t?.toLowerCase()))],u.prototype,\"outputPixelType\",void 0),t([e({json:{write:!0}})],u.prototype,\"mainPrimaryRasterId\",void 0),t([e()],u.prototype,\"sourceRasters\",void 0),t([e({type:[o],json:{write:!0}})],u.prototype,\"sourceRasterInfos\",void 0),t([e({json:{write:!0}})],u.prototype,\"rasterInfo\",void 0),t([e({json:{write:!0}})],u.prototype,\"readingBufferSize\",void 0),t([e({json:{write:!0}})],u.prototype,\"id\",void 0),t([e()],u.prototype,\"isNoopProcess\",void 0),t([e()],u.prototype,\"supportsGPU\",null),t([e()],u.prototype,\"rawInputBandIds\",void 0),t([e()],u.prototype,\"rawSourceRasterInfos\",void 0),t([e()],u.prototype,\"isInputBandIdsSwizzled\",void 0),t([e()],u.prototype,\"swizzledBandSelection\",void 0),t([e()],u.prototype,\"isBranch\",void 0),t([e({readOnly:!0})],u.prototype,\"flatWebGLFunctionChain\",null),t([e()],u.prototype,\"_bindingResult\",void 0),u=t([i(\"esri.layers.support.rasterFunctions.BaseRasterFunction\")],u);const p=u;export{p as default};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}