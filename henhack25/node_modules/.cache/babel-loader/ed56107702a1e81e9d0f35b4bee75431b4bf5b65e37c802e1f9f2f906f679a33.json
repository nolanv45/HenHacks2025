{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { _ as t } from \"../../../chunks/tslib.es6.js\";\nimport { property as e } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/has.js\";\nimport \"../../../core/Logger.js\";\nimport \"../../../core/RandomLCG.js\";\nimport { subclass as r } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport { getPixelValueRange as s, isIntegerPixelType as o } from \"../rasterFormats/pixelRangeUtils.js\";\nimport i from \"./ArithmeticFunctionArguments.js\";\nimport n from \"./BaseRasterFunction.js\";\nimport { arithmetic as u } from \"./localUtils.js\";\nlet p = class extends n {\n  constructor() {\n    super(...arguments), this.functionName = \"Arithmetic\", this.functionArguments = null, this.rasterArgumentNames = [\"raster\", \"raster2\"];\n  }\n  _bindSourceRasters() {\n    const {\n      operation: t\n    } = this.functionArguments;\n    if (t < 1 || t > 6) return {\n      success: !1,\n      supportsGPU: !1,\n      error: \"unsupported operation\"\n    };\n    const e = this.sourceRasterInfos[0].clone();\n    this.outputPixelType = this._getOutputPixelType(e.pixelType), e.pixelType = this.outputPixelType, this._removeStatsHistColormapVAT(e), this.rasterInfo = e;\n    return {\n      success: !0,\n      supportsGPU: e.bandCount <= 3\n    };\n  }\n  _processPixels(t) {\n    const {\n      pixelBlocks: e\n    } = t;\n    return null == e?.[0] || null == e?.[1] ? null : u(e, this.functionArguments.operation, this.outputPixelType);\n  }\n  _getWebGLParameters() {\n    const {\n        operation: t\n      } = this.functionArguments,\n      e = [\"\", \"plus\", \"minus\", \"times\", \"divide\", \"power\", \"mod\"][t],\n      r = this.outputPixelType ?? \"f32\";\n    let [i, n] = s(r);\n    const u = o(r);\n    return u && (i -= 1e-4, n += 1e-4), {\n      imageCount: 2,\n      operationName: e,\n      domainRange: [i, n],\n      isOutputRounded: u\n    };\n  }\n};\nt([e({\n  json: {\n    write: !0,\n    name: \"rasterFunction\"\n  }\n})], p.prototype, \"functionName\", void 0), t([e({\n  type: i,\n  json: {\n    write: !0,\n    name: \"rasterFunctionArguments\"\n  }\n})], p.prototype, \"functionArguments\", void 0), t([e()], p.prototype, \"rasterArgumentNames\", void 0), p = t([r(\"esri.layers.support.rasterFunctions.ArithmeticFunction\")], p);\nconst a = p;\nexport { a as default };","map":{"version":3,"names":["_","t","property","e","subclass","r","getPixelValueRange","s","isIntegerPixelType","o","i","n","arithmetic","u","p","constructor","arguments","functionName","functionArguments","rasterArgumentNames","_bindSourceRasters","operation","success","supportsGPU","error","sourceRasterInfos","clone","outputPixelType","_getOutputPixelType","pixelType","_removeStatsHistColormapVAT","rasterInfo","bandCount","_processPixels","pixelBlocks","_getWebGLParameters","imageCount","operationName","domainRange","isOutputRounded","json","write","name","prototype","type","a","default"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/layers/support/rasterFunctions/ArithmeticFunction.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{_ as t}from\"../../../chunks/tslib.es6.js\";import{property as e}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/has.js\";import\"../../../core/Logger.js\";import\"../../../core/RandomLCG.js\";import{subclass as r}from\"../../../core/accessorSupport/decorators/subclass.js\";import{getPixelValueRange as s,isIntegerPixelType as o}from\"../rasterFormats/pixelRangeUtils.js\";import i from\"./ArithmeticFunctionArguments.js\";import n from\"./BaseRasterFunction.js\";import{arithmetic as u}from\"./localUtils.js\";let p=class extends n{constructor(){super(...arguments),this.functionName=\"Arithmetic\",this.functionArguments=null,this.rasterArgumentNames=[\"raster\",\"raster2\"]}_bindSourceRasters(){const{operation:t}=this.functionArguments;if(t<1||t>6)return{success:!1,supportsGPU:!1,error:\"unsupported operation\"};const e=this.sourceRasterInfos[0].clone();this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),this.rasterInfo=e;return{success:!0,supportsGPU:e.bandCount<=3}}_processPixels(t){const{pixelBlocks:e}=t;return null==e?.[0]||null==e?.[1]?null:u(e,this.functionArguments.operation,this.outputPixelType)}_getWebGLParameters(){const{operation:t}=this.functionArguments,e=[\"\",\"plus\",\"minus\",\"times\",\"divide\",\"power\",\"mod\"][t],r=this.outputPixelType??\"f32\";let[i,n]=s(r);const u=o(r);return u&&(i-=1e-4,n+=1e-4),{imageCount:2,operationName:e,domainRange:[i,n],isOutputRounded:u}}};t([e({json:{write:!0,name:\"rasterFunction\"}})],p.prototype,\"functionName\",void 0),t([e({type:i,json:{write:!0,name:\"rasterFunctionArguments\"}})],p.prototype,\"functionArguments\",void 0),t([e()],p.prototype,\"rasterArgumentNames\",void 0),p=t([r(\"esri.layers.support.rasterFunctions.ArithmeticFunction\")],p);const a=p;export{a as default};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}