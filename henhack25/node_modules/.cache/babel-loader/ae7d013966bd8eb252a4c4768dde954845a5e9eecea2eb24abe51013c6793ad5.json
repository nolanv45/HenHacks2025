{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport e from \"../../core/Error.js\";\nimport { JSONMap as t } from \"../../core/jsonMap.js\";\nimport o from \"../../geometry/SpatialReference.js\";\nimport { inferLocationInfo as r } from \"./locationUtils.js\";\nimport { ParquetMetadata as i } from \"../../libs/parquet/parquet.js\";\nconst n = new t({\n  esriGeometryPoint: \"point\",\n  esriGeometryPolygon: \"polygon\",\n  esriGeometryPolyline: \"polyline\",\n  esriGeometryMultipoint: \"multipoint\"\n});\nfunction l(e) {\n  return n.toJSON(e);\n}\nfunction a(e) {\n  return \"location\" === e.type ? {\n    type: \"location\",\n    geometryType: \"esriGeometryPoint\",\n    spatialReference: \"toJSON\" in e.spatialReference ? e.spatialReference.toJSON() : e.spatialReference,\n    latitudeFieldName: e.latitudeFieldName,\n    longitudeFieldName: e.longitudeFieldName\n  } : {\n    type: \"geometry\",\n    geometryType: l(e.geometryType),\n    spatialReference: e.spatialReference.toJSON(),\n    format: e.format,\n    primaryFieldName: e.primaryFieldName,\n    multiscale: e.multiscale ?? null\n  };\n}\nasync function m(e) {\n  const t = await i.create(e, () => null);\n  return {\n    objectIdField: null,\n    url: e,\n    geometrySourceInfo: s(t),\n    metadata: t\n  };\n}\nfunction u(e) {\n  switch (e) {\n    case \"Point\":\n      return \"point\";\n    case \"Polygon\":\n    case \"MultiPolygon\":\n      return \"polygon\";\n    case \"LineString\":\n      return \"polyline\";\n    case \"MultiPoint\":\n      return \"multipoint\";\n    default:\n      return null;\n  }\n}\nfunction s(t) {\n  const i = t.tryReadEsriMetadata()?.multiscale,\n    n = t.tryReadGeoMetadata();\n  if (null != n) {\n    const t = n.primary_column,\n      r = n.columns[t],\n      {\n        geometry_types: l,\n        encoding: a,\n        orientation: m,\n        crs: s\n      } = r,\n      p = new Set();\n    for (const e of l) {\n      const t = u(e);\n      t && p.add(t);\n    }\n    if (p.size > 1) throw new e(\"unsupported\", \"Parquet mixed geometry types are not support\", {\n      geometryTypes: p\n    });\n    const c = 1 === p.size ? p.values().next().value : null,\n      y = s?.id?.code;\n    return {\n      type: \"geometry\",\n      format: a,\n      geometryType: c,\n      orientation: m ?? null,\n      primaryFieldName: t,\n      spatialReference: y && \"number\" == typeof y ? new o({\n        wkid: y\n      }) : null,\n      multiscale: i\n    };\n  }\n  const l = r(t.fields.map(e => e.name));\n  return {\n    type: \"location\",\n    latitudeFieldName: l.latitudeFieldName,\n    longitudeFieldName: l.longitudeFieldName,\n    spatialReference: o.WGS84\n  };\n}\nexport { s as inferGeometrySource, m as inferParquetLoadOptions, n as parquetGeometryTypeKebabDict, a as toParquetGeometryInfoJSON, l as toParquetJSONGeometryType };","map":{"version":3,"names":["e","JSONMap","t","o","inferLocationInfo","r","ParquetMetadata","i","n","esriGeometryPoint","esriGeometryPolygon","esriGeometryPolyline","esriGeometryMultipoint","l","toJSON","a","type","geometryType","spatialReference","latitudeFieldName","longitudeFieldName","format","primaryFieldName","multiscale","m","create","objectIdField","url","geometrySourceInfo","s","metadata","u","tryReadEsriMetadata","tryReadGeoMetadata","primary_column","columns","geometry_types","encoding","orientation","crs","p","Set","add","size","geometryTypes","c","values","next","value","y","id","code","wkid","fields","map","name","WGS84","inferGeometrySource","inferParquetLoadOptions","parquetGeometryTypeKebabDict","toParquetGeometryInfoJSON","toParquetJSONGeometryType"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/layers/support/parquetLayerUtils.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport e from\"../../core/Error.js\";import{JSONMap as t}from\"../../core/jsonMap.js\";import o from\"../../geometry/SpatialReference.js\";import{inferLocationInfo as r}from\"./locationUtils.js\";import{ParquetMetadata as i}from\"../../libs/parquet/parquet.js\";const n=new t({esriGeometryPoint:\"point\",esriGeometryPolygon:\"polygon\",esriGeometryPolyline:\"polyline\",esriGeometryMultipoint:\"multipoint\"});function l(e){return n.toJSON(e)}function a(e){return\"location\"===e.type?{type:\"location\",geometryType:\"esriGeometryPoint\",spatialReference:\"toJSON\"in e.spatialReference?e.spatialReference.toJSON():e.spatialReference,latitudeFieldName:e.latitudeFieldName,longitudeFieldName:e.longitudeFieldName}:{type:\"geometry\",geometryType:l(e.geometryType),spatialReference:e.spatialReference.toJSON(),format:e.format,primaryFieldName:e.primaryFieldName,multiscale:e.multiscale??null}}async function m(e){const t=await i.create(e,(()=>null));return{objectIdField:null,url:e,geometrySourceInfo:s(t),metadata:t}}function u(e){switch(e){case\"Point\":return\"point\";case\"Polygon\":case\"MultiPolygon\":return\"polygon\";case\"LineString\":return\"polyline\";case\"MultiPoint\":return\"multipoint\";default:return null}}function s(t){const i=t.tryReadEsriMetadata()?.multiscale,n=t.tryReadGeoMetadata();if(null!=n){const t=n.primary_column,r=n.columns[t],{geometry_types:l,encoding:a,orientation:m,crs:s}=r,p=new Set;for(const e of l){const t=u(e);t&&p.add(t)}if(p.size>1)throw new e(\"unsupported\",\"Parquet mixed geometry types are not support\",{geometryTypes:p});const c=1===p.size?p.values().next().value:null,y=s?.id?.code;return{type:\"geometry\",format:a,geometryType:c,orientation:m??null,primaryFieldName:t,spatialReference:y&&\"number\"==typeof y?new o({wkid:y}):null,multiscale:i}}const l=r(t.fields.map((e=>e.name)));return{type:\"location\",latitudeFieldName:l.latitudeFieldName,longitudeFieldName:l.longitudeFieldName,spatialReference:o.WGS84}}export{s as inferGeometrySource,m as inferParquetLoadOptions,n as parquetGeometryTypeKebabDict,a as toParquetGeometryInfoJSON,l as toParquetJSONGeometryType};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}