{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport e from \"../../../core/Error.js\";\nimport { WhereClauseCache as i } from \"../../../core/sql/WhereClauseCache.js\";\nimport { kebabDict as r } from \"../../support/fieldType.js\";\nconst s = new i(50, 500),\n  t = \"unsupported-query\",\n  n = \" as \",\n  o = new Set([\"esriFieldTypeOID\", \"esriFieldTypeSmallInteger\", \"esriFieldTypeBigInteger\", \"esriFieldTypeInteger\", \"esriFieldTypeSingle\", \"esriFieldTypeDouble\", \"esriFieldTypeLong\"]),\n  a = new Set([\"esriFieldTypeDate\", \"esriFieldTypeDateOnly\", \"esriFieldTypeTimeOnly\", \"esriFieldTypeTimestampOffset\"]),\n  l = new Set([\"esriFieldTypeString\", \"esriFieldTypeGUID\", \"esriFieldTypeGlobalID\", ...o, ...a]);\nfunction d(i, r, n = {}) {\n  const o = c(r, i);\n  if (!o) {\n    const n = s.getError(r, i);\n    throw new e(t, \"invalid SQL expression\", {\n      expression: r,\n      error: n\n    });\n  }\n  const a = n.expressionName || \"expression\";\n  if (n.validateStandardized && !o.isStandardized) throw new e(t, `${a} is not standard`, {\n    expression: r\n  });\n  if (n.validateAggregate && !o.isAggregate) throw new e(t, `${a} does not contain a valid aggregate function`, {\n    expression: r\n  });\n  return o.fieldNames;\n}\nfunction p(e, i, r, s) {\n  if (!r) return !0;\n  const t = \"where clause\";\n  return g(e, i, d(e, r, {\n    validateStandardized: !0,\n    expressionName: t\n  }), {\n    expressionName: t,\n    query: s\n  }), !0;\n}\nfunction f(i, r, s, n, o) {\n  if (!s) return !0;\n  const a = \"having clause\",\n    l = d(i, s, {\n      validateAggregate: !0,\n      expressionName: a\n    });\n  g(i, r, l, {\n    expressionName: a,\n    query: o\n  });\n  const p = c(s, i),\n    f = p?.getExpressions().every(e => {\n      const {\n          aggregateType: r,\n          field: s\n        } = e,\n        t = i.get(s)?.name;\n      return n.some(e => {\n        const {\n            onStatisticField: s,\n            statisticType: n\n          } = e,\n          o = i.get(s)?.name;\n        return o === t && n.toLowerCase().trim() === r;\n      });\n    });\n  if (!f) throw new e(t, \"expressions in having clause should also exist in outStatistics\", {\n    having: s\n  });\n  return !0;\n}\nfunction c(e, i) {\n  return e ? s.get(e, i) : null;\n}\nfunction u(e) {\n  return /\\((.*?)\\)/.test(e) ? e : e.split(n)[0];\n}\nfunction y(e) {\n  return e.split(n)[1];\n}\nfunction g(i, r, s, n = {}) {\n  const o = new Map();\n  if (m(o, i, r, n.allowedFieldTypes ?? l, s), o.size) {\n    const i = n.expressionName ?? \"expression\";\n    throw new e(t, `${i} contains invalid or missing fields`, {\n      errors: Array.from(o.values()),\n      query: n.query\n    });\n  }\n}\nfunction m(e, i, r, s, t) {\n  const n = t.includes(\"*\") ? [...r, ...t.filter(e => \"*\" !== e)] : t;\n  for (const a of n) {\n    if (i.get(a)) T(e, i, r, s, a);else try {\n      const t = d(i, u(a), {\n        validateStandardized: !0\n      });\n      for (const n of t) T(e, i, r, s, n);\n    } catch (o) {\n      e.set(a, {\n        type: \"expression-error\",\n        expression: a,\n        error: o\n      });\n    }\n  }\n}\nfunction T(e, i, s, t, n) {\n  const o = i.get(n);\n  o ? s.has(o.name) ? \"all\" !== t && !1 === t?.has(o.type) && e.set(n, {\n    type: \"invalid-type\",\n    fieldName: o.name,\n    fieldType: r.fromJSON(o.type),\n    allowedFieldTypes: Array.from(t, e => r.fromJSON(e))\n  }) : e.set(n, {\n    type: \"missing-field\",\n    fieldName: o.name\n  }) : e.set(n, {\n    type: \"invalid-field\",\n    fieldName: n\n  });\n}\nexport { a as allDateAndTimeFieldTypes, y as getAliasFromFieldName, u as getExpressionFromFieldName, c as getWhereClause, o as numericFieldTypes, g as validateFields, f as validateHaving, p as validateWhere };","map":{"version":3,"names":["e","WhereClauseCache","i","kebabDict","r","s","t","n","o","Set","a","l","d","c","getError","expression","error","expressionName","validateStandardized","isStandardized","validateAggregate","isAggregate","fieldNames","p","g","query","f","getExpressions","every","aggregateType","field","get","name","some","onStatisticField","statisticType","toLowerCase","trim","having","u","test","split","y","Map","m","allowedFieldTypes","size","errors","Array","from","values","includes","filter","T","set","type","has","fieldName","fieldType","fromJSON","allDateAndTimeFieldTypes","getAliasFromFieldName","getExpressionFromFieldName","getWhereClause","numericFieldTypes","validateFields","validateHaving","validateWhere"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/layers/graphics/data/attributeSupport.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport e from\"../../../core/Error.js\";import{WhereClauseCache as i}from\"../../../core/sql/WhereClauseCache.js\";import{kebabDict as r}from\"../../support/fieldType.js\";const s=new i(50,500),t=\"unsupported-query\",n=\" as \",o=new Set([\"esriFieldTypeOID\",\"esriFieldTypeSmallInteger\",\"esriFieldTypeBigInteger\",\"esriFieldTypeInteger\",\"esriFieldTypeSingle\",\"esriFieldTypeDouble\",\"esriFieldTypeLong\"]),a=new Set([\"esriFieldTypeDate\",\"esriFieldTypeDateOnly\",\"esriFieldTypeTimeOnly\",\"esriFieldTypeTimestampOffset\"]),l=new Set([\"esriFieldTypeString\",\"esriFieldTypeGUID\",\"esriFieldTypeGlobalID\",...o,...a]);function d(i,r,n={}){const o=c(r,i);if(!o){const n=s.getError(r,i);throw new e(t,\"invalid SQL expression\",{expression:r,error:n})}const a=n.expressionName||\"expression\";if(n.validateStandardized&&!o.isStandardized)throw new e(t,`${a} is not standard`,{expression:r});if(n.validateAggregate&&!o.isAggregate)throw new e(t,`${a} does not contain a valid aggregate function`,{expression:r});return o.fieldNames}function p(e,i,r,s){if(!r)return!0;const t=\"where clause\";return g(e,i,d(e,r,{validateStandardized:!0,expressionName:t}),{expressionName:t,query:s}),!0}function f(i,r,s,n,o){if(!s)return!0;const a=\"having clause\",l=d(i,s,{validateAggregate:!0,expressionName:a});g(i,r,l,{expressionName:a,query:o});const p=c(s,i),f=p?.getExpressions().every((e=>{const{aggregateType:r,field:s}=e,t=i.get(s)?.name;return n.some((e=>{const{onStatisticField:s,statisticType:n}=e,o=i.get(s)?.name;return o===t&&n.toLowerCase().trim()===r}))}));if(!f)throw new e(t,\"expressions in having clause should also exist in outStatistics\",{having:s});return!0}function c(e,i){return e?s.get(e,i):null}function u(e){return/\\((.*?)\\)/.test(e)?e:e.split(n)[0]}function y(e){return e.split(n)[1]}function g(i,r,s,n={}){const o=new Map;if(m(o,i,r,n.allowedFieldTypes??l,s),o.size){const i=n.expressionName??\"expression\";throw new e(t,`${i} contains invalid or missing fields`,{errors:Array.from(o.values()),query:n.query})}}function m(e,i,r,s,t){const n=t.includes(\"*\")?[...r,...t.filter((e=>\"*\"!==e))]:t;for(const a of n){if(i.get(a))T(e,i,r,s,a);else try{const t=d(i,u(a),{validateStandardized:!0});for(const n of t)T(e,i,r,s,n)}catch(o){e.set(a,{type:\"expression-error\",expression:a,error:o})}}}function T(e,i,s,t,n){const o=i.get(n);o?s.has(o.name)?\"all\"!==t&&!1===t?.has(o.type)&&e.set(n,{type:\"invalid-type\",fieldName:o.name,fieldType:r.fromJSON(o.type),allowedFieldTypes:Array.from(t,(e=>r.fromJSON(e)))}):e.set(n,{type:\"missing-field\",fieldName:o.name}):e.set(n,{type:\"invalid-field\",fieldName:n})}export{a as allDateAndTimeFieldTypes,y as getAliasFromFieldName,u as getExpressionFromFieldName,c as getWhereClause,o as numericFieldTypes,g as validateFields,f as validateHaving,p as validateWhere};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}