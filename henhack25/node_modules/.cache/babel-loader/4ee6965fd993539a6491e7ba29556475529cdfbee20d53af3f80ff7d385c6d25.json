{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../chunks/tslib.es6.js\";\nimport t from \"../../core/Accessor.js\";\nimport i from \"../../core/Error.js\";\nimport n from \"../../core/Logger.js\";\nimport { getOrCreateMapValue as o } from \"../../core/MapUtils.js\";\nimport { createAbortError as s } from \"../../core/promiseUtils.js\";\nimport { parseWhereClause as a } from \"../../core/sql.js\";\nimport { property as r } from \"../../core/accessorSupport/decorators/property.js\";\nimport \"../../core/has.js\";\nimport \"../../core/RandomLCG.js\";\nimport { subclass as p } from \"../../core/accessorSupport/decorators/subclass.js\";\nimport d from \"../../geometry/Extent.js\";\nimport l from \"../../geometry/Polygon.js\";\nimport { initializeProjection as m, project as h } from \"../../geometry/projection.js\";\nimport { wgs84 as c } from \"../../geometry/support/spatialReferenceUtils.js\";\nimport { systemOidFieldName as y, systemOriginIdFieldName as u, systemDestinationIdFieldName as f, systemIsSpatialFieldName as g, systemLayoutGeometryFieldName as b } from \"./constants.js\";\nimport w from \"./SessionMemoryStorage.js\";\nimport { utilsExtentToInBoundsRings as T } from \"./supportUtils.js\";\nimport { executeQueryStreaming as I } from \"../../rest/knowledgeGraphService.js\";\nimport M from \"../../rest/knowledgeGraph/GraphQueryStreaming.js\";\nimport D from \"../../rest/support/Query.js\";\nlet E = class extends t {\n  constructor(e) {\n    super(e), this._processingCacheUpdatesLookup = new Map(), this.knowledgeGraph = null, this.inclusionModeDefinition = {\n      generateAllSublayers: !0,\n      namedTypeDefinitions: new Map()\n    }, this.entityTypeNames = new Set(), this.relationshipTypeNames = new Set(), this.geographicLookup = new Map(), this.sublayerCaches = new Map(), this.nodeConnectionsLookup = new Map(), this.relationshipConnectionsLookup = new Map(), this.memberIdTypeLookup = new Map();\n    const t = new Map();\n    e.knowledgeGraph.dataModel.entityTypes?.forEach(i => {\n      i.name && (t.set(i.name, \"entity\"), this._processingCacheUpdatesLookup.set(i.name, []), e.inclusionModeDefinition && !e.inclusionModeDefinition?.generateAllSublayers || this.entityTypeNames.add(i.name), i.properties?.forEach(e => {\n        e.geometryType && \"esriGeometryNull\" !== e.geometryType && this.geographicLookup.set(i.name, {\n          name: e.name ?? \"\",\n          geometryType: e.geometryType\n        });\n      }));\n    }), e.knowledgeGraph.dataModel.relationshipTypes?.forEach(i => {\n      i.name && (t.set(i.name, \"relationship\"), this._processingCacheUpdatesLookup.set(i.name, []), e.inclusionModeDefinition && !e.inclusionModeDefinition?.generateAllSublayers || this.relationshipTypeNames.add(i.name), i.properties?.forEach(e => {\n        e.geometryType && \"esriGeometryNull\" !== e.geometryType && this.geographicLookup.set(i.name, {\n          name: e.name ?? \"\",\n          geometryType: e.geometryType\n        });\n      }));\n    }), e.inclusionModeDefinition?.namedTypeDefinitions.forEach((i, s) => {\n      if (\"entity\" === t.get(s)) this.entityTypeNames.add(s);else {\n        if (\"relationship\" !== t.get(s)) return n.getLogger(this).warn(`A named type, ${s}, was in the inclusion list that wasn't in the data model and will be removed`), void e.inclusionModeDefinition?.namedTypeDefinitions.delete(s);\n        this.relationshipTypeNames.add(s);\n      }\n      const a = new Map();\n      i.members?.forEach(e => {\n        o(this.memberIdTypeLookup, e.id, () => new Set()).add(s);\n        const t = this.getById(e.id);\n        t && a.set(e.id, t);\n      }), this.sublayerCaches.set(s, a);\n    });\n  }\n  addToLayer(e) {\n    e.forEach(_ref => {\n      let {\n        typeName: e,\n        id: t\n      } = _ref;\n      if (!this.inclusionModeDefinition) throw new i(\"knowledge-graph:layer-data-manager\", \"You cannot add to a layer's exclusion list if it was not created with an exclusion list originally\");\n      if (this.inclusionModeDefinition.namedTypeDefinitions.has(e)) {\n        if (this.inclusionModeDefinition.namedTypeDefinitions.has(e)) {\n          const i = this.inclusionModeDefinition.namedTypeDefinitions.get(e);\n          i.members || (i.members = new Map()), i.members.set(t, {\n            id: t\n          }), o(this.memberIdTypeLookup, t, () => new Set()).add(e);\n        }\n      } else {\n        const i = new Map();\n        i.set(t, {\n          id: t\n        }), this.inclusionModeDefinition.namedTypeDefinitions.set(e, {\n          useAllData: !1,\n          members: i\n        }), o(this.memberIdTypeLookup, t, () => new Set()).add(e);\n      }\n    });\n  }\n  getById(e) {\n    return w.getInstance().readFromStoreById(e);\n  }\n  async getData(e, t, i) {\n    if (t.objectType.name && this.inclusionModeDefinition?.namedTypeDefinitions && this.inclusionModeDefinition.namedTypeDefinitions.size > 0 && !this.inclusionModeDefinition.namedTypeDefinitions.has(t.objectType.name)) return [];\n    let n;\n    if (n = e || new D({\n      where: \"1=1\",\n      outFields: [\"*\"]\n    }), \"link-chart\" === t.parentCompositeLayer.type) {\n      const e = t.parentCompositeLayer,\n        i = this._processingCacheUpdatesLookup.get(t.objectType.name ?? \"\"),\n        o = n.outFields;\n      o && 1 === o.length && o[0] === y && \"1=1\" === n.where || (await Promise.all(i ?? []));\n      const s = this.sublayerCaches.has(t.objectType.name ?? \"\") ? Array.from(this.sublayerCaches.get(t.objectType.name)?.values()) : [],\n        a = [];\n      return s.forEach(i => {\n        if (this.relationshipTypeNames.has(t.objectType.name)) {\n          i.geometry = e.relationshipLinkChartDiagramLookup.get(i.attributes[t.objectIdField]);\n          const n = this.memberIdTypeLookup.get(i.attributes[u]),\n            o = this.memberIdTypeLookup.get(i.attributes[f]),\n            s = this._isEndEntitySpatial(n, i, u),\n            a = this._isEndEntitySpatial(o, i, f);\n          i.attributes[g] = Number(s && a);\n        } else {\n          i.geometry = e.entityLinkChartDiagramLookup.get(i.attributes[t.objectIdField]);\n          const n = this.geographicLookup.get(t.objectType.name);\n          n && i.attributes[n.name] ? i.attributes[g] = 1 : i.attributes[g] = 0;\n        }\n        i.attributes[b] = i.geometry, a.push(i);\n      }), a;\n    }\n    return this.retrieveDataFromService(n, t, i);\n  }\n  async getConnectedRecordIds(e, t, i) {\n    const n = [];\n    let o = \"\";\n    const s = this._getNamedTypeIdMapFromNodeIds(e);\n    if (t && 0 !== t?.length) {\n      for (const e of t) o = o + e + \"|\";\n      o = o.slice(0, -1);\n    }\n    const a = {},\n      r = [];\n    for (const [l, m] of s) {\n      const e = `${l}_ids`;\n      a[e] = m, t && 0 !== t?.length ? r.push(`MATCH (n:${l}) WHERE id(n) IN $${e} WITH n MATCH (n)-[r:${o}]-(m) RETURN id(r), type(r), id(m), labels(m)[0]`) : r.push(`MATCH (n:${l}) WHERE id(n) IN $${e} WITH n MATCH (n)-[r]-(m) RETURN id(r), type(r), id(m), labels(m)[0]`);\n    }\n    if (!r.length) return n;\n    const p = r.join(\" UNION \"),\n      d = (await I(this.knowledgeGraph, new M({\n        openCypherQuery: p,\n        bindParameters: a\n      }), {\n        signal: i?.signal\n      })).resultRowsStream.getReader();\n    for (;;) {\n      const {\n        done: e,\n        value: t\n      } = await d.read();\n      if (e) break;\n      for (let i = 0; i < t.length; i++) {\n        const e = t[i];\n        n.push({\n          id: e[0],\n          typeName: e[1]\n        }), n.push({\n          id: e[2],\n          typeName: e[3]\n        });\n      }\n    }\n    return n;\n  }\n  async getRelationshipsBetweenNodes(e, t, i) {\n    const n = this._getNamedTypeIdMapFromNodeIds(e);\n    if (0 === n.size) return [];\n    const o = {\n        relationshipExclusionIds: t,\n        possibleConnectionEntityIds: e\n      },\n      s = [];\n    for (const [d, l] of n.entries()) {\n      const e = `${d}_ids`;\n      o[e] = l, s.push(`MATCH (n:${d}) WHERE id(n) IN $${e} WITH n MATCH (n)-[r]->(m) WHERE id(m) IN $possibleConnectionEntityIds AND NOT id(r) IN $relationshipExclusionIds RETURN id(r), type(r)`);\n    }\n    const a = s.join(\" UNION \"),\n      r = [],\n      p = (await I(this.knowledgeGraph, new M({\n        openCypherQuery: a,\n        bindParameters: o\n      }), {\n        signal: i?.signal\n      })).resultRowsStream.getReader();\n    for (;;) {\n      const {\n        done: e,\n        value: t\n      } = await p.read();\n      if (e) break;\n      for (let i = 0; i < t.length; i++) {\n        const e = t[i];\n        r.push({\n          id: e[0],\n          typeName: e[1]\n        });\n      }\n    }\n    return r;\n  }\n  async getRelationshipsFromNodes(e, t, i, n) {\n    const o = this._getNamedTypeIdMapFromNodeIds(e);\n    if (0 === o.size || 0 === t.length) return [];\n    const s = {\n        relationshipExclusionIds: i,\n        possibleConnectionEntityIds: t\n      },\n      a = [];\n    for (const [m, h] of o.entries()) {\n      const e = `${m}_ids`;\n      s[e] = h, a.push(`MATCH (n:${m}) WHERE id(n) IN $${e} WITH n MATCH (n)-[r]-(m) WHERE id(m) IN $possibleConnectionEntityIds AND NOT id(r) IN $relationshipExclusionIds RETURN id(r), type(r)`);\n    }\n    const r = a.join(\" UNION \"),\n      p = new Map(),\n      d = (await I(this.knowledgeGraph, new M({\n        openCypherQuery: r,\n        bindParameters: s\n      }), {\n        signal: n?.signal\n      })).resultRowsStream.getReader();\n    for (;;) {\n      const {\n        done: e,\n        value: t\n      } = await d.read();\n      if (e) break;\n      for (let i = 0; i < t.length; i++) {\n        const e = t[i];\n        let n = p.get(e[1]);\n        n || (n = new Set(), p.set(e[1], n)), n.add(e[0]);\n      }\n    }\n    const l = [];\n    for (const [m, h] of p) for (const e of h) l.push({\n      id: e,\n      typeName: m\n    });\n    return l;\n  }\n  async refreshCacheContent(e, t, n) {\n    let a = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !0;\n    let r = arguments.length > 4 ? arguments[4] : undefined;\n    const p = w.getInstance(),\n      d = [],\n      l = new Map(),\n      m = new Map();\n    this.knowledgeGraph.dataModel.entityTypes?.forEach(e => {\n      e.name && m.set(e.name, e);\n    }), this.knowledgeGraph.dataModel.relationshipTypes?.forEach(e => {\n      e.name && m.set(e.name, e);\n    }), e || this.inclusionModeDefinition ? e ? e.forEach(e => {\n      if (this.memberIdTypeLookup.has(e)) for (const t of this.memberIdTypeLookup.get(e)) l.has(t) ? l.get(t)?.push(e) : l.set(t, [e]);\n    }) : this.inclusionModeDefinition?.namedTypeDefinitions?.forEach((e, t) => {\n      e.useAllData ? l.set(t, null) : e.members && e.members.forEach(e => {\n        l.has(t) && null !== l.get(t) ? l.get(t)?.push(e.id) : l.set(t, [e.id]);\n      });\n    }) : (this.knowledgeGraph.dataModel.entityTypes?.forEach(e => {\n      e.name && l.set(e.name, null);\n    }), this.knowledgeGraph.dataModel.entityTypes?.forEach(e => {\n      e.name && l.set(e.name, null);\n    }));\n    for (const [s, h] of l) {\n      const e = new Set(h),\n        l = new Promise((d, l) => {\n          const c = async () => {\n            const d = new Set(),\n              l = [];\n            let c,\n              u = \"\",\n              f = !1;\n            if (t || m.get(s)?.properties?.forEach(e => {\n              e.name && d.add(e.name);\n            }), n && this.geographicLookup.has(s)) {\n              const e = this.geographicLookup.get(s)?.name;\n              e && d.add(e);\n            }\n            if (this.entityTypeNames.has(s)) u = `MATCH (n:${s}) ${h ? \"WHERE id(n) IN $ids \" : \"\"}return ID(n)`, d.forEach(e => {\n              u += `, n.${e}`, l.push(e);\n            });else {\n              if (!this.relationshipTypeNames.has(s)) throw new i(\"knowledge-graph:layer-data-manager\", `The graph type of ${s} could not be determined. Was this type set in the KG data model and inclusion definition?`);\n              f = !0, u = `MATCH ()-[n:${s}]->() ${h ? \"WHERE id(n) IN $ids \" : \"\"}return ID(n), id(startNode(n)), id(endNode(n))`, d.forEach(e => {\n                u += `, n.${e}`, l.push(e);\n              });\n            }\n            c = new M(h ? {\n              openCypherQuery: u,\n              bindParameters: {\n                ids: h\n              }\n            } : {\n              openCypherQuery: u\n            });\n            const g = (await I(this.knowledgeGraph, c, {\n              signal: r?.signal\n            })).resultRowsStream.getReader();\n            for (;;) {\n              const {\n                done: t,\n                value: i\n              } = await g.read();\n              if (t) break;\n              const n = [];\n              for (let s = 0; s < i.length; s++) {\n                const t = i[s];\n                let a = 0,\n                  r = 0;\n                const p = {\n                  properties: {}\n                };\n                for (p.id = t[a], a++, r++, f && (p.originId = t[a], a++, r++, p.destinationId = t[a], a++, r++, o(this.nodeConnectionsLookup, p.originId, () => new Set()).add(p.id), o(this.nodeConnectionsLookup, p.destinationId, () => new Set()).add(p.id), o(this.relationshipConnectionsLookup, p.id, () => [p.originId, p.destinationId])); a < t.length; a++) p.properties[l[a - r]] = t[a];\n                e.delete(p.id), n.push(p);\n              }\n              const r = p.writeToStore(n, y, this.geographicLookup.get(s)?.name);\n              this.sublayerCaches.has(s) || this.sublayerCaches.set(s, new Map()), a && !this.inclusionModeDefinition?.namedTypeDefinitions.has(s) && this.inclusionModeDefinition?.namedTypeDefinitions.set(s, {\n                useAllData: !1,\n                members: new Map()\n              }), a && !this.inclusionModeDefinition?.namedTypeDefinitions.get(s).members && (this.inclusionModeDefinition.namedTypeDefinitions.get(s).members = new Map());\n              const d = this.sublayerCaches.get(s);\n              r.forEach(e => {\n                d?.set(e.attributes[y], e), a && !this.inclusionModeDefinition?.namedTypeDefinitions.get(s).members.has(e.attributes[y]) && (this.inclusionModeDefinition?.namedTypeDefinitions.get(s).members.set(e.attributes[y], {\n                  id: e.attributes[y]\n                }), o(this.memberIdTypeLookup, e.attributes[y], () => new Set()).add(s));\n              });\n            }\n            const b = this.inclusionModeDefinition?.namedTypeDefinitions.get(s);\n            if (b) for (const t of e) b.members?.delete(t);\n          };\n          c().then(() => {\n            d(null);\n          }).catch(e => {\n            \"AbortError\" === e.name ? d(null) : l(e);\n          });\n        });\n      d.push(l), this._processingCacheUpdatesLookup.get(s)?.push(l);\n    }\n    if (await Promise.all(d), r?.signal?.aborted) throw s();\n  }\n  removeFromLayer(e) {\n    const t = new Set(),\n      i = new Set(e.map(e => e.id));\n    for (const n of e) t.add(n.typeName), 1 === this.memberIdTypeLookup.get(n.id)?.size ? this.memberIdTypeLookup.delete(n.id) : this.memberIdTypeLookup.get(n.id)?.delete(n.typeName), this.inclusionModeDefinition?.namedTypeDefinitions.forEach((e, t) => {\n      t === n.typeName && e.members?.has(n.id) && e.members.delete(n.id);\n    });\n    t.forEach(e => {\n      this.sublayerCaches.get(e)?.forEach((t, n) => {\n        i.has(n) && this.sublayerCaches.get(e)?.delete(n);\n      });\n    });\n  }\n  async retrieveDataFromService(e, t, n) {\n    const o = w.getInstance(),\n      s = new Set(),\n      r = [];\n    let p,\n      u = \"\",\n      f = [];\n    const g = \"relationship\" === t.graphType,\n      b = this.inclusionModeDefinition?.namedTypeDefinitions?.get(t.objectType.name)?.useAllData,\n      D = t.parentCompositeLayer.sublayerIdsCache.get(t.objectType.name);\n    let E = !b && D ? Array.from(D).sort() : null;\n    if (this.inclusionModeDefinition?.namedTypeDefinitions?.get(t.objectType.name)?.useAllData) this.inclusionModeDefinition?.namedTypeDefinitions?.get(t.objectType.name)?.useAllData && null != e.objectIds && (E = e.objectIds);else if (null != e.objectIds && E && E.length > 0) {\n      const t = e.objectIds;\n      e.objectIds = E.filter(e => t.includes(e));\n    } else if (null != e.objectIds) E = e.objectIds;else {\n      if (this.inclusionModeDefinition?.namedTypeDefinitions.has(t.objectType.name) && (!this.inclusionModeDefinition.namedTypeDefinitions.get(t.objectType.name)?.members || this.inclusionModeDefinition.namedTypeDefinitions.get(t.objectType.name)?.members?.size < 1)) return e.objectIds = [], [];\n      e.objectIds = E;\n    }\n    if (null != e.outFields) {\n      const i = e.outFields;\n      i.includes(\"*\") ? t.fields.forEach(e => {\n        s.add(e.name);\n      }) : i.forEach(e => {\n        e !== y && e !== t.geometryFieldName && s.add(e);\n      });\n    }\n    if (null != e.geometry) {\n      const n = e.geometry;\n      let o;\n      const y = t.parentCompositeLayer.dataManager.knowledgeGraph.serviceDefinition,\n        f = y?.spatialReference,\n        b = y?.serviceCapabilities?.geometryCapabilities;\n      let w = b?.geometryMaxBoundingRectangleSizeX,\n        I = b?.geometryMaxBoundingRectangleSizeY;\n      if (\"point\" === n.type) {\n        let e = n;\n        e.spatialReference?.isWGS84 || (await m(e.spatialReference, c), e = h(e, c)), o = new d({\n          spatialReference: c,\n          xmin: e.x - 1e-4,\n          ymin: e.y - 1e-4,\n          xmax: e.x + 1e-4,\n          ymax: e.y + 1e-4\n        });\n      } else n?.extent?.spatialReference && !n.spatialReference?.isWGS84 ? (await m(n.extent.spatialReference, c), o = h(n.extent, c)) : o = n.extent;\n      if (w && I && f) {\n        if (4326 !== f.wkid) {\n          const e = new d({\n              spatialReference: f,\n              xmax: w,\n              ymax: I\n            }),\n            t = h(e, c);\n          w = t.xmax, I = t.ymax;\n        }\n        if (o.xmax - o.xmin > w) throw new i(\"knowledge-graph:layer-data-manager\", `Extent x bounds should be within ${w}° latitude, limit exceeded`);\n        if (o.ymax - o.ymin > I) throw new i(\"knowledge-graph:layer-data-manager\", `Extent y bounds should be within ${I}° longitude, limit exceeded`);\n      }\n      if (null != e.where && \"1=1\" !== e.where) {\n        const i = await a(e.where.toUpperCase(), t.fieldsIndex);\n        t.fields.forEach(e => {\n          i.fieldNames.includes(e.name) && s.add(e.name);\n        });\n      }\n      u = g ? `Match ()-[n:${t.objectType.name}]->() WHERE esri.graph.ST_Intersects($param_filter_geom, n.${t.geometryFieldName}) return ID(n), id(startNode(r)), id(endNode(r))` : `Match (n:${t.objectType.name}) WHERE esri.graph.ST_Intersects($param_filter_geom, n.${t.geometryFieldName}) return ID(n)`, t.geometryFieldName && s.add(t.geometryFieldName), s.forEach(e => {\n        u += `, n.${e}`, r.push(e);\n      }), p = new M({\n        openCypherQuery: u,\n        bindParameters: {\n          param_filter_geom: new l({\n            rings: T(o)\n          })\n        }\n      });\n    } else {\n      let i = \"\";\n      if (null != e.where && \"1=1\" !== e.where) {\n        const n = await a(e.where, t.fieldsIndex);\n        t.fields.forEach(e => {\n          n.fieldNames.includes(e.name) && s.add(e.name);\n        });\n        const o = new Set([\"column-reference\", \"string\", \"number\", \"binary-expression\"]),\n          r = new Set([\"=\", \"<\", \"<=\", \"<>\", \">\", \">=\", \"AND\", \"OR\", \"LIKE\"]);\n        let p = !1;\n        const d = e => {\n          if (\"column-reference\" === e.type) return `n.${e.column}`;\n          if (\"string\" === e.type) return `'${e.value}'`;\n          if (\"number\" === e.type) return `${e.value}`;\n          if (\"binary-expression\" === e.type && o.has(e.left.type) && o.has(e.right.type) && r.has(e.operator)) return `${d(e.left)} ${e.operator} ${d(e.right)}`;\n          if (\"binary-expression\" === e.type && \"LIKE\" === e.operator) {\n            let t = \"\";\n            if (\"function\" === e.left.type && \"column-reference\" === e.left.args.value[0].type) t += `lower(n.${e.left.args.value[0].column})`;else {\n              if (\"column-reference\" !== e.left.type) return p = !0, \"\";\n              t += `lower(n.${e.left.column})`;\n            }\n            if (t += \" CONTAINS (\", \"string\" !== e.right.type) return p = !0, \"\";\n            {\n              let i = e.right.value;\n              \"%\" === i.charAt(0) && (i = i.slice(1)), \"%\" === i.charAt(i.length - 1) && (i = i.slice(0, -1)), t += `'${i.toLowerCase()}')`;\n            }\n            return t;\n          }\n          return p = !0, \"\";\n        };\n        i = d(n.parseTree), p && (i = \"\");\n      }\n      let n = \"\";\n      n = g ? `Match ()-[n:${t.objectType.name}]->()` : `Match (n:${t.objectType.name})`;\n      let o = !1;\n      E && (o = !0, n += \" WHERE ID(n) IN $ids\"), i && (n += o ? \" AND\" : \" WHERE\", n += ` ${i}`), n += \" return ID(n)\", g && (n += \", id(startNode(n)), id(endNode(n))\"), e.returnGeometry && t.geometryFieldName && s.add(t.geometryFieldName), s.forEach(e => {\n        n += `, n.${e}`, r.push(e);\n      }), p = new M(E ? {\n        openCypherQuery: n,\n        bindParameters: {\n          ids: E\n        }\n      } : {\n        openCypherQuery: n\n      });\n    }\n    const N = (await I(t.parentCompositeLayer.dataManager.knowledgeGraph, p, n)).resultRowsStream.getReader();\n    for (;;) {\n      const {\n        done: e,\n        value: i\n      } = await N.read();\n      if (e) break;\n      const n = [];\n      for (let t = 0; t < i.length; t++) {\n        const e = i[t];\n        let o = 0,\n          s = 0;\n        const a = {\n          properties: {}\n        };\n        for (a.id = e[o], o++, s++, g && (a.originId = e[o], o++, s++, a.destinationId = e[o], o++, s++); o < e.length; o++) a.properties[r[o - s]] = e[o];\n        n.push(a);\n      }\n      f = f.concat(o.writeToStore(n, y, t.parentCompositeLayer.dataManager.geographicLookup.get(t.objectType.name)?.name));\n    }\n    return f;\n  }\n  _isEndEntitySpatial(e, t, i) {\n    for (const n of e ?? []) if (this.entityTypeNames.has(n)) {\n      const e = this.geographicLookup.get(n),\n        o = e && this.sublayerCaches.get(n)?.get(t.attributes[i]);\n      if (e && o?.attributes[e.name]) return !0;\n    }\n    return !1;\n  }\n  _getNamedTypeIdMapFromNodeIds(e) {\n    const t = new Map();\n    return e.forEach(e => {\n      if (this.memberIdTypeLookup.has(e)) for (const i of this.memberIdTypeLookup.get(e)) {\n        if (!this.entityTypeNames.has(i)) return;\n        t.has(i) ? t.get(i)?.push(e) : t.set(i, [e]);\n      }\n    }), t;\n  }\n};\ne([r()], E.prototype, \"knowledgeGraph\", void 0), e([r()], E.prototype, \"inclusionModeDefinition\", void 0), e([r()], E.prototype, \"entityTypeNames\", void 0), e([r()], E.prototype, \"relationshipTypeNames\", void 0), e([r()], E.prototype, \"geographicLookup\", void 0), e([r()], E.prototype, \"sublayerCaches\", void 0), e([r()], E.prototype, \"nodeConnectionsLookup\", void 0), e([r()], E.prototype, \"relationshipConnectionsLookup\", void 0), e([r()], E.prototype, \"memberIdTypeLookup\", void 0), E = e([p(\"esri.layers.knowledgeGraph.KnowledgeGraphLayerDataManager\")], E);\nexport { E as KnowledgeGraphLayerDataManager };","map":{"version":3,"names":["_","e","t","i","n","getOrCreateMapValue","o","createAbortError","s","parseWhereClause","a","property","r","subclass","p","d","l","initializeProjection","m","project","h","wgs84","c","systemOidFieldName","y","systemOriginIdFieldName","u","systemDestinationIdFieldName","f","systemIsSpatialFieldName","g","systemLayoutGeometryFieldName","b","w","utilsExtentToInBoundsRings","T","executeQueryStreaming","I","M","D","E","constructor","_processingCacheUpdatesLookup","Map","knowledgeGraph","inclusionModeDefinition","generateAllSublayers","namedTypeDefinitions","entityTypeNames","Set","relationshipTypeNames","geographicLookup","sublayerCaches","nodeConnectionsLookup","relationshipConnectionsLookup","memberIdTypeLookup","dataModel","entityTypes","forEach","name","set","add","properties","geometryType","relationshipTypes","get","getLogger","warn","delete","members","id","getById","addToLayer","_ref","typeName","has","useAllData","getInstance","readFromStoreById","getData","objectType","size","where","outFields","parentCompositeLayer","type","length","Promise","all","Array","from","values","geometry","relationshipLinkChartDiagramLookup","attributes","objectIdField","_isEndEntitySpatial","Number","entityLinkChartDiagramLookup","push","retrieveDataFromService","getConnectedRecordIds","_getNamedTypeIdMapFromNodeIds","slice","join","openCypherQuery","bindParameters","signal","resultRowsStream","getReader","done","value","read","getRelationshipsBetweenNodes","relationshipExclusionIds","possibleConnectionEntityIds","entries","getRelationshipsFromNodes","refreshCacheContent","arguments","undefined","ids","originId","destinationId","writeToStore","then","catch","aborted","removeFromLayer","map","graphType","sublayerIdsCache","sort","objectIds","filter","includes","fields","geometryFieldName","dataManager","serviceDefinition","spatialReference","serviceCapabilities","geometryCapabilities","geometryMaxBoundingRectangleSizeX","geometryMaxBoundingRectangleSizeY","isWGS84","xmin","x","ymin","xmax","ymax","extent","wkid","toUpperCase","fieldsIndex","fieldNames","param_filter_geom","rings","column","left","right","operator","args","charAt","toLowerCase","parseTree","returnGeometry","N","concat","prototype","KnowledgeGraphLayerDataManager"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/layers/knowledgeGraph/KnowledgeGraphLayerDataManager.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../chunks/tslib.es6.js\";import t from\"../../core/Accessor.js\";import i from\"../../core/Error.js\";import n from\"../../core/Logger.js\";import{getOrCreateMapValue as o}from\"../../core/MapUtils.js\";import{createAbortError as s}from\"../../core/promiseUtils.js\";import{parseWhereClause as a}from\"../../core/sql.js\";import{property as r}from\"../../core/accessorSupport/decorators/property.js\";import\"../../core/has.js\";import\"../../core/RandomLCG.js\";import{subclass as p}from\"../../core/accessorSupport/decorators/subclass.js\";import d from\"../../geometry/Extent.js\";import l from\"../../geometry/Polygon.js\";import{initializeProjection as m,project as h}from\"../../geometry/projection.js\";import{wgs84 as c}from\"../../geometry/support/spatialReferenceUtils.js\";import{systemOidFieldName as y,systemOriginIdFieldName as u,systemDestinationIdFieldName as f,systemIsSpatialFieldName as g,systemLayoutGeometryFieldName as b}from\"./constants.js\";import w from\"./SessionMemoryStorage.js\";import{utilsExtentToInBoundsRings as T}from\"./supportUtils.js\";import{executeQueryStreaming as I}from\"../../rest/knowledgeGraphService.js\";import M from\"../../rest/knowledgeGraph/GraphQueryStreaming.js\";import D from\"../../rest/support/Query.js\";let E=class extends t{constructor(e){super(e),this._processingCacheUpdatesLookup=new Map,this.knowledgeGraph=null,this.inclusionModeDefinition={generateAllSublayers:!0,namedTypeDefinitions:new Map},this.entityTypeNames=new Set,this.relationshipTypeNames=new Set,this.geographicLookup=new Map,this.sublayerCaches=new Map,this.nodeConnectionsLookup=new Map,this.relationshipConnectionsLookup=new Map,this.memberIdTypeLookup=new Map;const t=new Map;e.knowledgeGraph.dataModel.entityTypes?.forEach((i=>{i.name&&(t.set(i.name,\"entity\"),this._processingCacheUpdatesLookup.set(i.name,[]),e.inclusionModeDefinition&&!e.inclusionModeDefinition?.generateAllSublayers||this.entityTypeNames.add(i.name),i.properties?.forEach((e=>{e.geometryType&&\"esriGeometryNull\"!==e.geometryType&&this.geographicLookup.set(i.name,{name:e.name??\"\",geometryType:e.geometryType})})))})),e.knowledgeGraph.dataModel.relationshipTypes?.forEach((i=>{i.name&&(t.set(i.name,\"relationship\"),this._processingCacheUpdatesLookup.set(i.name,[]),e.inclusionModeDefinition&&!e.inclusionModeDefinition?.generateAllSublayers||this.relationshipTypeNames.add(i.name),i.properties?.forEach((e=>{e.geometryType&&\"esriGeometryNull\"!==e.geometryType&&this.geographicLookup.set(i.name,{name:e.name??\"\",geometryType:e.geometryType})})))})),e.inclusionModeDefinition?.namedTypeDefinitions.forEach(((i,s)=>{if(\"entity\"===t.get(s))this.entityTypeNames.add(s);else{if(\"relationship\"!==t.get(s))return n.getLogger(this).warn(`A named type, ${s}, was in the inclusion list that wasn't in the data model and will be removed`),void e.inclusionModeDefinition?.namedTypeDefinitions.delete(s);this.relationshipTypeNames.add(s)}const a=new Map;i.members?.forEach((e=>{o(this.memberIdTypeLookup,e.id,(()=>new Set)).add(s);const t=this.getById(e.id);t&&a.set(e.id,t)})),this.sublayerCaches.set(s,a)}))}addToLayer(e){e.forEach((({typeName:e,id:t})=>{if(!this.inclusionModeDefinition)throw new i(\"knowledge-graph:layer-data-manager\",\"You cannot add to a layer's exclusion list if it was not created with an exclusion list originally\");if(this.inclusionModeDefinition.namedTypeDefinitions.has(e)){if(this.inclusionModeDefinition.namedTypeDefinitions.has(e)){const i=this.inclusionModeDefinition.namedTypeDefinitions.get(e);i.members||(i.members=new Map),i.members.set(t,{id:t}),o(this.memberIdTypeLookup,t,(()=>new Set)).add(e)}}else{const i=new Map;i.set(t,{id:t}),this.inclusionModeDefinition.namedTypeDefinitions.set(e,{useAllData:!1,members:i}),o(this.memberIdTypeLookup,t,(()=>new Set)).add(e)}}))}getById(e){return w.getInstance().readFromStoreById(e)}async getData(e,t,i){if(t.objectType.name&&this.inclusionModeDefinition?.namedTypeDefinitions&&this.inclusionModeDefinition.namedTypeDefinitions.size>0&&!this.inclusionModeDefinition.namedTypeDefinitions.has(t.objectType.name))return[];let n;if(n=e||new D({where:\"1=1\",outFields:[\"*\"]}),\"link-chart\"===t.parentCompositeLayer.type){const e=t.parentCompositeLayer,i=this._processingCacheUpdatesLookup.get(t.objectType.name??\"\"),o=n.outFields;o&&1===o.length&&o[0]===y&&\"1=1\"===n.where||await Promise.all(i??[]);const s=this.sublayerCaches.has(t.objectType.name??\"\")?Array.from(this.sublayerCaches.get(t.objectType.name)?.values()):[],a=[];return s.forEach((i=>{if(this.relationshipTypeNames.has(t.objectType.name)){i.geometry=e.relationshipLinkChartDiagramLookup.get(i.attributes[t.objectIdField]);const n=this.memberIdTypeLookup.get(i.attributes[u]),o=this.memberIdTypeLookup.get(i.attributes[f]),s=this._isEndEntitySpatial(n,i,u),a=this._isEndEntitySpatial(o,i,f);i.attributes[g]=Number(s&&a)}else{i.geometry=e.entityLinkChartDiagramLookup.get(i.attributes[t.objectIdField]);const n=this.geographicLookup.get(t.objectType.name);n&&i.attributes[n.name]?i.attributes[g]=1:i.attributes[g]=0}i.attributes[b]=i.geometry,a.push(i)})),a}return this.retrieveDataFromService(n,t,i)}async getConnectedRecordIds(e,t,i){const n=[];let o=\"\";const s=this._getNamedTypeIdMapFromNodeIds(e);if(t&&0!==t?.length){for(const e of t)o=o+e+\"|\";o=o.slice(0,-1)}const a={},r=[];for(const[l,m]of s){const e=`${l}_ids`;a[e]=m,t&&0!==t?.length?r.push(`MATCH (n:${l}) WHERE id(n) IN $${e} WITH n MATCH (n)-[r:${o}]-(m) RETURN id(r), type(r), id(m), labels(m)[0]`):r.push(`MATCH (n:${l}) WHERE id(n) IN $${e} WITH n MATCH (n)-[r]-(m) RETURN id(r), type(r), id(m), labels(m)[0]`)}if(!r.length)return n;const p=r.join(\" UNION \"),d=(await I(this.knowledgeGraph,new M({openCypherQuery:p,bindParameters:a}),{signal:i?.signal})).resultRowsStream.getReader();for(;;){const{done:e,value:t}=await d.read();if(e)break;for(let i=0;i<t.length;i++){const e=t[i];n.push({id:e[0],typeName:e[1]}),n.push({id:e[2],typeName:e[3]})}}return n}async getRelationshipsBetweenNodes(e,t,i){const n=this._getNamedTypeIdMapFromNodeIds(e);if(0===n.size)return[];const o={relationshipExclusionIds:t,possibleConnectionEntityIds:e},s=[];for(const[d,l]of n.entries()){const e=`${d}_ids`;o[e]=l,s.push(`MATCH (n:${d}) WHERE id(n) IN $${e} WITH n MATCH (n)-[r]->(m) WHERE id(m) IN $possibleConnectionEntityIds AND NOT id(r) IN $relationshipExclusionIds RETURN id(r), type(r)`)}const a=s.join(\" UNION \"),r=[],p=(await I(this.knowledgeGraph,new M({openCypherQuery:a,bindParameters:o}),{signal:i?.signal})).resultRowsStream.getReader();for(;;){const{done:e,value:t}=await p.read();if(e)break;for(let i=0;i<t.length;i++){const e=t[i];r.push({id:e[0],typeName:e[1]})}}return r}async getRelationshipsFromNodes(e,t,i,n){const o=this._getNamedTypeIdMapFromNodeIds(e);if(0===o.size||0===t.length)return[];const s={relationshipExclusionIds:i,possibleConnectionEntityIds:t},a=[];for(const[m,h]of o.entries()){const e=`${m}_ids`;s[e]=h,a.push(`MATCH (n:${m}) WHERE id(n) IN $${e} WITH n MATCH (n)-[r]-(m) WHERE id(m) IN $possibleConnectionEntityIds AND NOT id(r) IN $relationshipExclusionIds RETURN id(r), type(r)`)}const r=a.join(\" UNION \"),p=new Map,d=(await I(this.knowledgeGraph,new M({openCypherQuery:r,bindParameters:s}),{signal:n?.signal})).resultRowsStream.getReader();for(;;){const{done:e,value:t}=await d.read();if(e)break;for(let i=0;i<t.length;i++){const e=t[i];let n=p.get(e[1]);n||(n=new Set,p.set(e[1],n)),n.add(e[0])}}const l=[];for(const[m,h]of p)for(const e of h)l.push({id:e,typeName:m});return l}async refreshCacheContent(e,t,n,a=!0,r){const p=w.getInstance(),d=[],l=new Map,m=new Map;this.knowledgeGraph.dataModel.entityTypes?.forEach((e=>{e.name&&m.set(e.name,e)})),this.knowledgeGraph.dataModel.relationshipTypes?.forEach((e=>{e.name&&m.set(e.name,e)})),e||this.inclusionModeDefinition?e?e.forEach((e=>{if(this.memberIdTypeLookup.has(e))for(const t of this.memberIdTypeLookup.get(e))l.has(t)?l.get(t)?.push(e):l.set(t,[e])})):this.inclusionModeDefinition?.namedTypeDefinitions?.forEach(((e,t)=>{e.useAllData?l.set(t,null):e.members&&e.members.forEach((e=>{l.has(t)&&null!==l.get(t)?l.get(t)?.push(e.id):l.set(t,[e.id])}))})):(this.knowledgeGraph.dataModel.entityTypes?.forEach((e=>{e.name&&l.set(e.name,null)})),this.knowledgeGraph.dataModel.entityTypes?.forEach((e=>{e.name&&l.set(e.name,null)})));for(const[s,h]of l){const e=new Set(h),l=new Promise(((d,l)=>{const c=async()=>{const d=new Set,l=[];let c,u=\"\",f=!1;if(t||m.get(s)?.properties?.forEach((e=>{e.name&&d.add(e.name)})),n&&this.geographicLookup.has(s)){const e=this.geographicLookup.get(s)?.name;e&&d.add(e)}if(this.entityTypeNames.has(s))u=`MATCH (n:${s}) ${h?\"WHERE id(n) IN $ids \":\"\"}return ID(n)`,d.forEach((e=>{u+=`, n.${e}`,l.push(e)}));else{if(!this.relationshipTypeNames.has(s))throw new i(\"knowledge-graph:layer-data-manager\",`The graph type of ${s} could not be determined. Was this type set in the KG data model and inclusion definition?`);f=!0,u=`MATCH ()-[n:${s}]->() ${h?\"WHERE id(n) IN $ids \":\"\"}return ID(n), id(startNode(n)), id(endNode(n))`,d.forEach((e=>{u+=`, n.${e}`,l.push(e)}))}c=new M(h?{openCypherQuery:u,bindParameters:{ids:h}}:{openCypherQuery:u});const g=(await I(this.knowledgeGraph,c,{signal:r?.signal})).resultRowsStream.getReader();for(;;){const{done:t,value:i}=await g.read();if(t)break;const n=[];for(let s=0;s<i.length;s++){const t=i[s];let a=0,r=0;const p={properties:{}};for(p.id=t[a],a++,r++,f&&(p.originId=t[a],a++,r++,p.destinationId=t[a],a++,r++,o(this.nodeConnectionsLookup,p.originId,(()=>new Set)).add(p.id),o(this.nodeConnectionsLookup,p.destinationId,(()=>new Set)).add(p.id),o(this.relationshipConnectionsLookup,p.id,(()=>[p.originId,p.destinationId])));a<t.length;a++)p.properties[l[a-r]]=t[a];e.delete(p.id),n.push(p)}const r=p.writeToStore(n,y,this.geographicLookup.get(s)?.name);this.sublayerCaches.has(s)||this.sublayerCaches.set(s,new Map),a&&!this.inclusionModeDefinition?.namedTypeDefinitions.has(s)&&this.inclusionModeDefinition?.namedTypeDefinitions.set(s,{useAllData:!1,members:new Map}),a&&!this.inclusionModeDefinition?.namedTypeDefinitions.get(s).members&&(this.inclusionModeDefinition.namedTypeDefinitions.get(s).members=new Map);const d=this.sublayerCaches.get(s);r.forEach((e=>{d?.set(e.attributes[y],e),a&&!this.inclusionModeDefinition?.namedTypeDefinitions.get(s).members.has(e.attributes[y])&&(this.inclusionModeDefinition?.namedTypeDefinitions.get(s).members.set(e.attributes[y],{id:e.attributes[y]}),o(this.memberIdTypeLookup,e.attributes[y],(()=>new Set)).add(s))}))}const b=this.inclusionModeDefinition?.namedTypeDefinitions.get(s);if(b)for(const t of e)b.members?.delete(t)};c().then((()=>{d(null)})).catch((e=>{\"AbortError\"===e.name?d(null):l(e)}))}));d.push(l),this._processingCacheUpdatesLookup.get(s)?.push(l)}if(await Promise.all(d),r?.signal?.aborted)throw s()}removeFromLayer(e){const t=new Set,i=new Set(e.map((e=>e.id)));for(const n of e)t.add(n.typeName),1===this.memberIdTypeLookup.get(n.id)?.size?this.memberIdTypeLookup.delete(n.id):this.memberIdTypeLookup.get(n.id)?.delete(n.typeName),this.inclusionModeDefinition?.namedTypeDefinitions.forEach(((e,t)=>{t===n.typeName&&e.members?.has(n.id)&&e.members.delete(n.id)}));t.forEach((e=>{this.sublayerCaches.get(e)?.forEach(((t,n)=>{i.has(n)&&this.sublayerCaches.get(e)?.delete(n)}))}))}async retrieveDataFromService(e,t,n){const o=w.getInstance(),s=new Set,r=[];let p,u=\"\",f=[];const g=\"relationship\"===t.graphType,b=this.inclusionModeDefinition?.namedTypeDefinitions?.get(t.objectType.name)?.useAllData,D=t.parentCompositeLayer.sublayerIdsCache.get(t.objectType.name);let E=!b&&D?Array.from(D).sort():null;if(this.inclusionModeDefinition?.namedTypeDefinitions?.get(t.objectType.name)?.useAllData)this.inclusionModeDefinition?.namedTypeDefinitions?.get(t.objectType.name)?.useAllData&&null!=e.objectIds&&(E=e.objectIds);else if(null!=e.objectIds&&E&&E.length>0){const t=e.objectIds;e.objectIds=E.filter((e=>t.includes(e)))}else if(null!=e.objectIds)E=e.objectIds;else{if(this.inclusionModeDefinition?.namedTypeDefinitions.has(t.objectType.name)&&(!this.inclusionModeDefinition.namedTypeDefinitions.get(t.objectType.name)?.members||this.inclusionModeDefinition.namedTypeDefinitions.get(t.objectType.name)?.members?.size<1))return e.objectIds=[],[];e.objectIds=E}if(null!=e.outFields){const i=e.outFields;i.includes(\"*\")?t.fields.forEach((e=>{s.add(e.name)})):i.forEach((e=>{e!==y&&e!==t.geometryFieldName&&s.add(e)}))}if(null!=e.geometry){const n=e.geometry;let o;const y=t.parentCompositeLayer.dataManager.knowledgeGraph.serviceDefinition,f=y?.spatialReference,b=y?.serviceCapabilities?.geometryCapabilities;let w=b?.geometryMaxBoundingRectangleSizeX,I=b?.geometryMaxBoundingRectangleSizeY;if(\"point\"===n.type){let e=n;e.spatialReference?.isWGS84||(await m(e.spatialReference,c),e=h(e,c)),o=new d({spatialReference:c,xmin:e.x-1e-4,ymin:e.y-1e-4,xmax:e.x+1e-4,ymax:e.y+1e-4})}else n?.extent?.spatialReference&&!n.spatialReference?.isWGS84?(await m(n.extent.spatialReference,c),o=h(n.extent,c)):o=n.extent;if(w&&I&&f){if(4326!==f.wkid){const e=new d({spatialReference:f,xmax:w,ymax:I}),t=h(e,c);w=t.xmax,I=t.ymax}if(o.xmax-o.xmin>w)throw new i(\"knowledge-graph:layer-data-manager\",`Extent x bounds should be within ${w}° latitude, limit exceeded`);if(o.ymax-o.ymin>I)throw new i(\"knowledge-graph:layer-data-manager\",`Extent y bounds should be within ${I}° longitude, limit exceeded`)}if(null!=e.where&&\"1=1\"!==e.where){const i=await a(e.where.toUpperCase(),t.fieldsIndex);t.fields.forEach((e=>{i.fieldNames.includes(e.name)&&s.add(e.name)}))}u=g?`Match ()-[n:${t.objectType.name}]->() WHERE esri.graph.ST_Intersects($param_filter_geom, n.${t.geometryFieldName}) return ID(n), id(startNode(r)), id(endNode(r))`:`Match (n:${t.objectType.name}) WHERE esri.graph.ST_Intersects($param_filter_geom, n.${t.geometryFieldName}) return ID(n)`,t.geometryFieldName&&s.add(t.geometryFieldName),s.forEach((e=>{u+=`, n.${e}`,r.push(e)})),p=new M({openCypherQuery:u,bindParameters:{param_filter_geom:new l({rings:T(o)})}})}else{let i=\"\";if(null!=e.where&&\"1=1\"!==e.where){const n=await a(e.where,t.fieldsIndex);t.fields.forEach((e=>{n.fieldNames.includes(e.name)&&s.add(e.name)}));const o=new Set([\"column-reference\",\"string\",\"number\",\"binary-expression\"]),r=new Set([\"=\",\"<\",\"<=\",\"<>\",\">\",\">=\",\"AND\",\"OR\",\"LIKE\"]);let p=!1;const d=e=>{if(\"column-reference\"===e.type)return`n.${e.column}`;if(\"string\"===e.type)return`'${e.value}'`;if(\"number\"===e.type)return`${e.value}`;if(\"binary-expression\"===e.type&&o.has(e.left.type)&&o.has(e.right.type)&&r.has(e.operator))return`${d(e.left)} ${e.operator} ${d(e.right)}`;if(\"binary-expression\"===e.type&&\"LIKE\"===e.operator){let t=\"\";if(\"function\"===e.left.type&&\"column-reference\"===e.left.args.value[0].type)t+=`lower(n.${e.left.args.value[0].column})`;else{if(\"column-reference\"!==e.left.type)return p=!0,\"\";t+=`lower(n.${e.left.column})`}if(t+=\" CONTAINS (\",\"string\"!==e.right.type)return p=!0,\"\";{let i=e.right.value;\"%\"===i.charAt(0)&&(i=i.slice(1)),\"%\"===i.charAt(i.length-1)&&(i=i.slice(0,-1)),t+=`'${i.toLowerCase()}')`}return t}return p=!0,\"\"};i=d(n.parseTree),p&&(i=\"\")}let n=\"\";n=g?`Match ()-[n:${t.objectType.name}]->()`:`Match (n:${t.objectType.name})`;let o=!1;E&&(o=!0,n+=\" WHERE ID(n) IN $ids\"),i&&(n+=o?\" AND\":\" WHERE\",n+=` ${i}`),n+=\" return ID(n)\",g&&(n+=\", id(startNode(n)), id(endNode(n))\"),e.returnGeometry&&t.geometryFieldName&&s.add(t.geometryFieldName),s.forEach((e=>{n+=`, n.${e}`,r.push(e)})),p=new M(E?{openCypherQuery:n,bindParameters:{ids:E}}:{openCypherQuery:n})}const N=(await I(t.parentCompositeLayer.dataManager.knowledgeGraph,p,n)).resultRowsStream.getReader();for(;;){const{done:e,value:i}=await N.read();if(e)break;const n=[];for(let t=0;t<i.length;t++){const e=i[t];let o=0,s=0;const a={properties:{}};for(a.id=e[o],o++,s++,g&&(a.originId=e[o],o++,s++,a.destinationId=e[o],o++,s++);o<e.length;o++)a.properties[r[o-s]]=e[o];n.push(a)}f=f.concat(o.writeToStore(n,y,t.parentCompositeLayer.dataManager.geographicLookup.get(t.objectType.name)?.name))}return f}_isEndEntitySpatial(e,t,i){for(const n of e??[])if(this.entityTypeNames.has(n)){const e=this.geographicLookup.get(n),o=e&&this.sublayerCaches.get(n)?.get(t.attributes[i]);if(e&&o?.attributes[e.name])return!0}return!1}_getNamedTypeIdMapFromNodeIds(e){const t=new Map;return e.forEach((e=>{if(this.memberIdTypeLookup.has(e))for(const i of this.memberIdTypeLookup.get(e)){if(!this.entityTypeNames.has(i))return;t.has(i)?t.get(i)?.push(e):t.set(i,[e])}})),t}};e([r()],E.prototype,\"knowledgeGraph\",void 0),e([r()],E.prototype,\"inclusionModeDefinition\",void 0),e([r()],E.prototype,\"entityTypeNames\",void 0),e([r()],E.prototype,\"relationshipTypeNames\",void 0),e([r()],E.prototype,\"geographicLookup\",void 0),e([r()],E.prototype,\"sublayerCaches\",void 0),e([r()],E.prototype,\"nodeConnectionsLookup\",void 0),e([r()],E.prototype,\"relationshipConnectionsLookup\",void 0),e([r()],E.prototype,\"memberIdTypeLookup\",void 0),E=e([p(\"esri.layers.knowledgeGraph.KnowledgeGraphLayerDataManager\")],E);export{E as KnowledgeGraphLayerDataManager};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}