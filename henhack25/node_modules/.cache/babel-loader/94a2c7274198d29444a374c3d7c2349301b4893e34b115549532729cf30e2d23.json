{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { G as e, S as t } from \"../../../chunks/SimpleGeometryCursor.js\";\nimport { d as n, t as r, G as o, g as s } from \"../../../chunks/Geometry.js\";\nimport { P as a, c as i } from \"../../../chunks/Envelope.js\";\nimport { a as l, L as u } from \"../../../chunks/QuadraticBezier.js\";\nimport { Envelope2D as c } from \"../../../chunks/Envelope2D.js\";\nimport { P as m, q as N, r as g, m as h } from \"../../../chunks/Point2D.js\";\nimport { ah as y, g as P } from \"../../../chunks/ProjectionTransformation.js\";\nimport { a as p } from \"../../../chunks/Centroid-DZi-eb9F.js\";\nimport { O as f } from \"../../../chunks/OperatorProximity.js\";\nclass d {\n  getOperatorType() {\n    return 10203;\n  }\n  accelerateGeometry(e, t, n) {\n    return !1;\n  }\n  canAccelerateGeometry(e) {\n    return !1;\n  }\n  supportsCurves() {\n    return !0;\n  }\n  executeMany(e, t) {\n    return new x(e, t);\n  }\n  execute(e, t) {\n    return new x(null, t).labelPoint(e);\n  }\n}\nclass x extends e {\n  progress_() {}\n  tock() {\n    return !0;\n  }\n  getRank() {\n    return 1;\n  }\n  constructor(e, t) {\n    super(), this.m_index = -1, this.m_progressCounter = 0, this.m_progressTracker = t, this.m_inputGeoms = e;\n  }\n  next() {\n    const e = this.m_inputGeoms.next();\n    return e ? (n(e), this.m_index = this.m_inputGeoms.getGeometryID(), this.labelPoint(e)) : null;\n  }\n  getGeometryID() {\n    return this.m_index;\n  }\n  labelPoint(e) {\n    if (null === e && r(\"null pointer is not allowed\"), e.getGeometryType() === o.enumPoint) return e;\n    if (e.isEmpty()) return new a({\n      vd: e.getDescription()\n    });\n    switch (e.getGeometryType()) {\n      case o.enumPolygon:\n        return this.labelPointPolygon(e);\n      case o.enumPolyline:\n        return this.labelPointPolyline(e);\n      case o.enumMultiPoint:\n        return this.labelPointMultiPoint(e);\n      case o.enumEnvelope:\n        return this.labelPointEnvelope(e);\n      default:\n        r(\"geometry is not supported\");\n    }\n  }\n  labelPointPolygon(e) {\n    const t = new c();\n    e.queryEnvelope(t);\n    const n = i(null, t, !0).total();\n    let r = null,\n      o = e;\n    if (e.hasNonLinearSegments()) {\n      const t = new l({\n          copy: e\n        }),\n        a = y(t, .25 * n, n);\n      s(a !== e), r = a, o = r;\n    }\n    let u = 0,\n      h = 0;\n    for (let s = 0, a = o.getPathCount(); s < a; ++s) {\n      const e = Math.abs(o.calculateRingArea2D(s));\n      e > h && (h = e, u = s);\n    }\n    const d = new m();\n    if (Math.abs(h) <= 2 * n * n ? d.setNAN() : d.assign(p(o, u)), Number.isNaN(d.x)) {\n      const e = new c();\n      return o.queryPathEnvelope(u, e), new a({\n        pt: e.getCenter()\n      });\n    }\n    if (o.getPointCount() < 4) return new a({\n      x: d.x,\n      y: d.y\n    });\n    const x = m.getNAN(),\n      w = [x.clone(), x.clone(), x.clone(), x.clone()],\n      b = [Number.NaN, Number.NaN, Number.NaN, Number.NaN],\n      C = [Number.NaN, Number.NaN, Number.NaN, Number.NaN];\n    let _ = !1,\n      D = new f().getNearestCoordinate(o, d, !0, !1);\n    if (0 === D.m_distance && (_ = !0, w[0] = d, D = new f().getNearestCoordinate(o, d, !1, !1), D.m_distance > .25 * t.minDimension() * 1.66666666)) return new a({\n      x: d.x,\n      y: d.y\n    });\n    b[0] = D.m_distance, C[0] = 0;\n    const k = new m();\n    let A = !1,\n      E = .25,\n      q = -1;\n    const v = new c();\n    o.queryPathEnvelope(u, v);\n    do {\n      let e = Number.NaN;\n      if (w[1] = this.calculateParacentroid_(o, N(v.xmin, v.xmax, E), n), w[1].isNAN() || (D = new f().getNearestCoordinate(o, w[1], !1, !1), e = D.m_distance), e > n && 1 === P(o, w[1], n)) A = !0, b[1] = e, C[1] = m.sqrDistance(w[1], d);else if (e > q && (q = e, k.setCoordsPoint2D(w[1])), E -= .01, E < .1) {\n        if (!(q >= 0)) break;\n        A = !0, b[1] = q, w[1] = k, C[1] = m.sqrDistance(w[1], d);\n      }\n    } while (!A);\n    A = !1, E = .5, q = -1;\n    let G = .01,\n      M = 1;\n    do {\n      let e = Number.NaN;\n      if (w[2] = this.calculateParacentroid_(o, N(v.xmin, v.xmax, E), n), w[2].isNAN() || (D = new f().getNearestCoordinate(o, w[2], !1, !1), e = D.m_distance), e > n && 1 === P(o, w[2], n)) A = !0, b[2] = e, C[2] = m.sqrDistance(w[2], d);else if (e > q && (q = e, k.setCoordsPoint2D(w[2])), E = .5 + G * M, G += .01, M *= -1, E < .3 || E > .7) {\n        if (!(q >= 0)) break;\n        A = !0, b[2] = q, w[2] = k, C[2] = m.sqrDistance(w[2], d);\n      }\n    } while (!A);\n    A = !1, E = .75, q = -1;\n    do {\n      let e = Number.NaN;\n      if (w[3] = this.calculateParacentroid_(o, N(v.xmin, v.xmax, E), n), w[3].isNAN() || (D = new f().getNearestCoordinate(o, w[3], !1, !1), e = D.m_distance), e > n && 1 === P(o, w[3], n)) A = !0, b[3] = e, C[3] = m.sqrDistance(w[3], d);else if (e > q && (q = e, k.setCoordsPoint2D(w[3])), E += .01, E > .9) {\n        if (!(q >= 0)) break;\n        A = !0, b[3] = q, w[3] = k, C[3] = m.sqrDistance(w[3], d);\n      }\n    } while (!A);\n    const S = [0, 1, 2, 3],\n      j = _ ? 0 : 1;\n    for (let s = j; s < 4; s++) for (let e = j; e < 3; e++) {\n      const t = C[e],\n        n = C[e + 1];\n      if (g(t, n) > 0) {\n        const r = S[e];\n        S[e] = S[e + 1], S[e + 1] = r, C[e] = n, C[e + 1] = t;\n      }\n    }\n    let X = j,\n      L = 0,\n      T = 0;\n    for (let s = j; s < 4; s++) {\n      switch (s) {\n        case 0:\n          T = 2 * b[S[s]];\n          break;\n        case 1:\n          T = 1.66666666 * b[S[s]];\n          break;\n        case 2:\n          T = 1.33333333 * b[S[s]];\n          break;\n        case 3:\n          T = b[S[s]];\n      }\n      T > L && (L = T, X = S[s]);\n    }\n    return s(!w[X].isNAN()), new a({\n      x: w[X].x,\n      y: w[X].y\n    });\n  }\n  labelPointPolyline(e) {\n    const t = new m();\n    if (e.getPointCount() > 2 * e.getPathCount()) {\n      let n = -1,\n        r = -Number.MAX_VALUE;\n      for (let t = 0, i = e.getPathCount(); t < i; t++) if (e.getPathSize(t) > 2) {\n        const o = e.calculatePathLength2D(t);\n        o > r && (r = o, n = t);\n      }\n      const o = e.getPathStart(n),\n        s = e.getPathEnd(n),\n        a = Math.trunc((o + s) / 2);\n      t.assign(e.getXY(a));\n    } else {\n      let n = -Number.MAX_VALUE;\n      const r = e.querySegmentIterator();\n      for (; r.nextPath();) if (r.hasNextSegment()) {\n        const e = r.nextSegment(),\n          o = e.calculateLength2D();\n        o > n && (n = o, t.assign(e.getCoord2D(e.lengthToT(.5 * o))));\n      }\n    }\n    return new a({\n      x: t.x,\n      y: t.y\n    });\n  }\n  labelPointMultiPoint(e) {\n    const t = new c();\n    e.queryEnvelope(t);\n    const n = t.getCenter(),\n      r = new f().getNearestCoordinate(e, n, !1, !1).m_coordinate;\n    return new a({\n      x: r.x,\n      y: r.y\n    });\n  }\n  labelPointEnvelope(e) {\n    const t = e.getCenterXY();\n    return new a({\n      x: t.x,\n      y: t.y\n    });\n  }\n  calculateParacentroid_(e, t, n) {\n    const r = new c();\n    e.queryEnvelope(r);\n    const o = new m(t, 0);\n    let a = Number.MAX_VALUE,\n      i = Number.MAX_VALUE,\n      l = !1,\n      N = !1;\n    const g = new u();\n    g.setStartXYCoords(o.x, r.ymin - 1), g.setEndXYCoords(o.x, r.ymax + 1);\n    const y = new c(),\n      P = new m(),\n      p = new m(),\n      f = h(m, 2),\n      d = e.querySegmentIterator();\n    for (; d.nextPath();) for (; d.hasNextSegment();) {\n      const e = d.nextSegment();\n      if (e.queryEnvelope(y), s(e.isMonotoneQuickAndDirty()), P.setCoordsPoint2D(g.getStartXY()), p.setCoordsPoint2D(g.getEndXY()), 0 === y.clipLine(P, p)) continue;\n      if (1 !== g.intersect(e, f, null, null, n)) continue;\n      const t = f[0].y;\n      a > i ? t < a && (a = t, l = !0) : t < i && (i = t, N = !0);\n    }\n    return l && N ? o.y = (a + i) / 2 : o.setNAN(), o;\n  }\n}\nconst w = new d();\nfunction b(e) {\n  return w.execute(e, null);\n}\nfunction C(e) {\n  const n = w.executeMany(new t(e), null);\n  return Array.from(n);\n}\nfunction _() {\n  return w.supportsCurves();\n}\nexport { b as execute, C as executeMany, _ as supportsCurves };","map":{"version":3,"names":["G","e","S","t","d","n","r","o","g","s","P","a","c","i","l","L","u","Envelope2D","m","q","N","h","ah","y","p","O","f","getOperatorType","accelerateGeometry","canAccelerateGeometry","supportsCurves","executeMany","x","execute","labelPoint","progress_","tock","getRank","constructor","m_index","m_progressCounter","m_progressTracker","m_inputGeoms","next","getGeometryID","getGeometryType","enumPoint","isEmpty","vd","getDescription","enumPolygon","labelPointPolygon","enumPolyline","labelPointPolyline","enumMultiPoint","labelPointMultiPoint","enumEnvelope","labelPointEnvelope","queryEnvelope","total","hasNonLinearSegments","copy","getPathCount","Math","abs","calculateRingArea2D","setNAN","assign","Number","isNaN","queryPathEnvelope","pt","getCenter","getPointCount","getNAN","w","clone","b","NaN","C","_","D","getNearestCoordinate","m_distance","minDimension","k","A","E","v","calculateParacentroid_","xmin","xmax","isNAN","sqrDistance","setCoordsPoint2D","M","j","X","T","MAX_VALUE","getPathSize","calculatePathLength2D","getPathStart","getPathEnd","trunc","getXY","querySegmentIterator","nextPath","hasNextSegment","nextSegment","calculateLength2D","getCoord2D","lengthToT","m_coordinate","getCenterXY","setStartXYCoords","ymin","setEndXYCoords","ymax","isMonotoneQuickAndDirty","getStartXY","getEndXY","clipLine","intersect","Array","from"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/geometry/operators/gx/operatorLabelPoint.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{G as e,S as t}from\"../../../chunks/SimpleGeometryCursor.js\";import{d as n,t as r,G as o,g as s}from\"../../../chunks/Geometry.js\";import{P as a,c as i}from\"../../../chunks/Envelope.js\";import{a as l,L as u}from\"../../../chunks/QuadraticBezier.js\";import{Envelope2D as c}from\"../../../chunks/Envelope2D.js\";import{P as m,q as N,r as g,m as h}from\"../../../chunks/Point2D.js\";import{ah as y,g as P}from\"../../../chunks/ProjectionTransformation.js\";import{a as p}from\"../../../chunks/Centroid-DZi-eb9F.js\";import{O as f}from\"../../../chunks/OperatorProximity.js\";class d{getOperatorType(){return 10203}accelerateGeometry(e,t,n){return!1}canAccelerateGeometry(e){return!1}supportsCurves(){return!0}executeMany(e,t){return new x(e,t)}execute(e,t){return new x(null,t).labelPoint(e)}}class x extends e{progress_(){}tock(){return!0}getRank(){return 1}constructor(e,t){super(),this.m_index=-1,this.m_progressCounter=0,this.m_progressTracker=t,this.m_inputGeoms=e}next(){const e=this.m_inputGeoms.next();return e?(n(e),this.m_index=this.m_inputGeoms.getGeometryID(),this.labelPoint(e)):null}getGeometryID(){return this.m_index}labelPoint(e){if(null===e&&r(\"null pointer is not allowed\"),e.getGeometryType()===o.enumPoint)return e;if(e.isEmpty())return new a({vd:e.getDescription()});switch(e.getGeometryType()){case o.enumPolygon:return this.labelPointPolygon(e);case o.enumPolyline:return this.labelPointPolyline(e);case o.enumMultiPoint:return this.labelPointMultiPoint(e);case o.enumEnvelope:return this.labelPointEnvelope(e);default:r(\"geometry is not supported\")}}labelPointPolygon(e){const t=new c;e.queryEnvelope(t);const n=i(null,t,!0).total();let r=null,o=e;if(e.hasNonLinearSegments()){const t=new l({copy:e}),a=y(t,.25*n,n);s(a!==e),r=a,o=r}let u=0,h=0;for(let s=0,a=o.getPathCount();s<a;++s){const e=Math.abs(o.calculateRingArea2D(s));e>h&&(h=e,u=s)}const d=new m;if(Math.abs(h)<=2*n*n?d.setNAN():d.assign(p(o,u)),Number.isNaN(d.x)){const e=new c;return o.queryPathEnvelope(u,e),new a({pt:e.getCenter()})}if(o.getPointCount()<4)return new a({x:d.x,y:d.y});const x=m.getNAN(),w=[x.clone(),x.clone(),x.clone(),x.clone()],b=[Number.NaN,Number.NaN,Number.NaN,Number.NaN],C=[Number.NaN,Number.NaN,Number.NaN,Number.NaN];let _=!1,D=(new f).getNearestCoordinate(o,d,!0,!1);if(0===D.m_distance&&(_=!0,w[0]=d,D=(new f).getNearestCoordinate(o,d,!1,!1),D.m_distance>.25*t.minDimension()*1.66666666))return new a({x:d.x,y:d.y});b[0]=D.m_distance,C[0]=0;const k=new m;let A=!1,E=.25,q=-1;const v=new c;o.queryPathEnvelope(u,v);do{let e=Number.NaN;if(w[1]=this.calculateParacentroid_(o,N(v.xmin,v.xmax,E),n),w[1].isNAN()||(D=(new f).getNearestCoordinate(o,w[1],!1,!1),e=D.m_distance),e>n&&1===P(o,w[1],n))A=!0,b[1]=e,C[1]=m.sqrDistance(w[1],d);else if(e>q&&(q=e,k.setCoordsPoint2D(w[1])),E-=.01,E<.1){if(!(q>=0))break;A=!0,b[1]=q,w[1]=k,C[1]=m.sqrDistance(w[1],d)}}while(!A);A=!1,E=.5,q=-1;let G=.01,M=1;do{let e=Number.NaN;if(w[2]=this.calculateParacentroid_(o,N(v.xmin,v.xmax,E),n),w[2].isNAN()||(D=(new f).getNearestCoordinate(o,w[2],!1,!1),e=D.m_distance),e>n&&1===P(o,w[2],n))A=!0,b[2]=e,C[2]=m.sqrDistance(w[2],d);else if(e>q&&(q=e,k.setCoordsPoint2D(w[2])),E=.5+G*M,G+=.01,M*=-1,E<.3||E>.7){if(!(q>=0))break;A=!0,b[2]=q,w[2]=k,C[2]=m.sqrDistance(w[2],d)}}while(!A);A=!1,E=.75,q=-1;do{let e=Number.NaN;if(w[3]=this.calculateParacentroid_(o,N(v.xmin,v.xmax,E),n),w[3].isNAN()||(D=(new f).getNearestCoordinate(o,w[3],!1,!1),e=D.m_distance),e>n&&1===P(o,w[3],n))A=!0,b[3]=e,C[3]=m.sqrDistance(w[3],d);else if(e>q&&(q=e,k.setCoordsPoint2D(w[3])),E+=.01,E>.9){if(!(q>=0))break;A=!0,b[3]=q,w[3]=k,C[3]=m.sqrDistance(w[3],d)}}while(!A);const S=[0,1,2,3],j=_?0:1;for(let s=j;s<4;s++)for(let e=j;e<3;e++){const t=C[e],n=C[e+1];if(g(t,n)>0){const r=S[e];S[e]=S[e+1],S[e+1]=r,C[e]=n,C[e+1]=t}}let X=j,L=0,T=0;for(let s=j;s<4;s++){switch(s){case 0:T=2*b[S[s]];break;case 1:T=1.66666666*b[S[s]];break;case 2:T=1.33333333*b[S[s]];break;case 3:T=b[S[s]]}T>L&&(L=T,X=S[s])}return s(!w[X].isNAN()),new a({x:w[X].x,y:w[X].y})}labelPointPolyline(e){const t=new m;if(e.getPointCount()>2*e.getPathCount()){let n=-1,r=-Number.MAX_VALUE;for(let t=0,i=e.getPathCount();t<i;t++)if(e.getPathSize(t)>2){const o=e.calculatePathLength2D(t);o>r&&(r=o,n=t)}const o=e.getPathStart(n),s=e.getPathEnd(n),a=Math.trunc((o+s)/2);t.assign(e.getXY(a))}else{let n=-Number.MAX_VALUE;const r=e.querySegmentIterator();for(;r.nextPath();)if(r.hasNextSegment()){const e=r.nextSegment(),o=e.calculateLength2D();o>n&&(n=o,t.assign(e.getCoord2D(e.lengthToT(.5*o))))}}return new a({x:t.x,y:t.y})}labelPointMultiPoint(e){const t=new c;e.queryEnvelope(t);const n=t.getCenter(),r=(new f).getNearestCoordinate(e,n,!1,!1).m_coordinate;return new a({x:r.x,y:r.y})}labelPointEnvelope(e){const t=e.getCenterXY();return new a({x:t.x,y:t.y})}calculateParacentroid_(e,t,n){const r=new c;e.queryEnvelope(r);const o=new m(t,0);let a=Number.MAX_VALUE,i=Number.MAX_VALUE,l=!1,N=!1;const g=new u;g.setStartXYCoords(o.x,r.ymin-1),g.setEndXYCoords(o.x,r.ymax+1);const y=new c,P=new m,p=new m,f=h(m,2),d=e.querySegmentIterator();for(;d.nextPath();)for(;d.hasNextSegment();){const e=d.nextSegment();if(e.queryEnvelope(y),s(e.isMonotoneQuickAndDirty()),P.setCoordsPoint2D(g.getStartXY()),p.setCoordsPoint2D(g.getEndXY()),0===y.clipLine(P,p))continue;if(1!==g.intersect(e,f,null,null,n))continue;const t=f[0].y;a>i?t<a&&(a=t,l=!0):t<i&&(i=t,N=!0)}return l&&N?o.y=(a+i)/2:o.setNAN(),o}}const w=new d;function b(e){return w.execute(e,null)}function C(e){const n=w.executeMany(new t(e),null);return Array.from(n)}function _(){return w.supportsCurves()}export{b as execute,C as executeMany,_ as supportsCurves};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}