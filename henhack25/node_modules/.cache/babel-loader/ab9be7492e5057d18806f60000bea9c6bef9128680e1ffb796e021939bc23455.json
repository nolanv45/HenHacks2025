{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { _ as t } from \"../../chunks/tslib.es6.js\";\nimport e from \"../../request.js\";\nimport \"../../core/has.js\";\nimport { strict as s } from \"../../core/jsonMap.js\";\nimport { createAbortError as r } from \"../../core/promiseUtils.js\";\nimport { property as o } from \"../../core/accessorSupport/decorators/property.js\";\nimport \"../../core/Logger.js\";\nimport \"../../core/RandomLCG.js\";\nimport { enumeration as i } from \"../../core/accessorSupport/decorators/enumeration.js\";\nimport { subclass as a } from \"../../core/accessorSupport/decorators/subclass.js\";\nimport c from \"../../rest/networks/support/ValidateNetworkTopologyResult.js\";\nconst n = s()({\n  Pending: \"job-waiting\",\n  InProgress: \"job-executing\",\n  Completed: \"job-succeeded\"\n});\nlet l = class extends c {\n  constructor(t) {\n    super(t), this.statusUrl = null, this.status = null, this.submissionTime = null, this.lastUpdatedTime = null, this._timer = void 0;\n  }\n  destroy() {\n    clearInterval(this._timer);\n  }\n  async checkJobStatus(t) {\n    const s = {\n        ...t,\n        query: {\n          f: \"json\"\n        }\n      },\n      {\n        data: r\n      } = await e(this.statusUrl, s);\n    return this.read(r), this.editsResolver && this.editsResolver.resolve({\n      edits: null,\n      addedFeatures: [],\n      updatedFeatures: [],\n      deletedFeatures: [],\n      addedAttachments: [],\n      updatedAttachments: [],\n      deletedAttachments: [],\n      exceededTransferLimit: !0,\n      historicMoment: null\n    }), this;\n  }\n  async waitForJobCompletion(t = {}) {\n    const {\n      interval: e = 1e3,\n      statusCallback: s\n    } = t;\n    return new Promise((t, o) => {\n      this._clearTimer();\n      const i = setInterval(() => {\n        this._timer || o(r()), this.checkJobStatus().then(e => {\n          const {\n            status: r\n          } = e;\n          switch (this.status = r, r) {\n            case \"job-succeeded\":\n              this._clearTimer(), t(this);\n              break;\n            case \"job-waiting\":\n            case \"job-executing\":\n              s && s(this);\n          }\n        }, t => {\n          this._clearTimer(), o(t);\n        });\n      }, e);\n      this._timer = i;\n    });\n  }\n  _clearTimer() {\n    clearInterval(this._timer), this._timer = void 0;\n  }\n};\nt([o()], l.prototype, \"editsResolver\", void 0), t([o({\n  type: String,\n  json: {\n    write: !0\n  }\n})], l.prototype, \"statusUrl\", void 0), t([i(n)], l.prototype, \"status\", void 0), t([o({\n  type: Date,\n  json: {\n    type: Number,\n    write: {\n      writer: (t, e) => {\n        e.submissionTime = t ? t.getTime() : null;\n      }\n    }\n  }\n})], l.prototype, \"submissionTime\", void 0), t([o({\n  type: Date,\n  json: {\n    type: Number,\n    write: {\n      writer: (t, e) => {\n        e.lastUpdatedTime = t ? t.getTime() : null;\n      }\n    }\n  }\n})], l.prototype, \"lastUpdatedTime\", void 0), l = t([a(\"esri.networks.support.TopologyValidationJobInfo\")], l);\nconst m = l;\nexport { m as default };","map":{"version":3,"names":["_","t","e","strict","s","createAbortError","r","property","o","enumeration","i","subclass","a","c","n","Pending","InProgress","Completed","l","constructor","statusUrl","status","submissionTime","lastUpdatedTime","_timer","destroy","clearInterval","checkJobStatus","query","f","data","read","editsResolver","resolve","edits","addedFeatures","updatedFeatures","deletedFeatures","addedAttachments","updatedAttachments","deletedAttachments","exceededTransferLimit","historicMoment","waitForJobCompletion","interval","statusCallback","Promise","_clearTimer","setInterval","then","prototype","type","String","json","write","Date","Number","writer","getTime","m","default"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/networks/support/TopologyValidationJobInfo.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{_ as t}from\"../../chunks/tslib.es6.js\";import e from\"../../request.js\";import\"../../core/has.js\";import{strict as s}from\"../../core/jsonMap.js\";import{createAbortError as r}from\"../../core/promiseUtils.js\";import{property as o}from\"../../core/accessorSupport/decorators/property.js\";import\"../../core/Logger.js\";import\"../../core/RandomLCG.js\";import{enumeration as i}from\"../../core/accessorSupport/decorators/enumeration.js\";import{subclass as a}from\"../../core/accessorSupport/decorators/subclass.js\";import c from\"../../rest/networks/support/ValidateNetworkTopologyResult.js\";const n=s()({Pending:\"job-waiting\",InProgress:\"job-executing\",Completed:\"job-succeeded\"});let l=class extends c{constructor(t){super(t),this.statusUrl=null,this.status=null,this.submissionTime=null,this.lastUpdatedTime=null,this._timer=void 0}destroy(){clearInterval(this._timer)}async checkJobStatus(t){const s={...t,query:{f:\"json\"}},{data:r}=await e(this.statusUrl,s);return this.read(r),this.editsResolver&&this.editsResolver.resolve({edits:null,addedFeatures:[],updatedFeatures:[],deletedFeatures:[],addedAttachments:[],updatedAttachments:[],deletedAttachments:[],exceededTransferLimit:!0,historicMoment:null}),this}async waitForJobCompletion(t={}){const{interval:e=1e3,statusCallback:s}=t;return new Promise(((t,o)=>{this._clearTimer();const i=setInterval((()=>{this._timer||o(r()),this.checkJobStatus().then((e=>{const{status:r}=e;switch(this.status=r,r){case\"job-succeeded\":this._clearTimer(),t(this);break;case\"job-waiting\":case\"job-executing\":s&&s(this)}}),(t=>{this._clearTimer(),o(t)}))}),e);this._timer=i}))}_clearTimer(){clearInterval(this._timer),this._timer=void 0}};t([o()],l.prototype,\"editsResolver\",void 0),t([o({type:String,json:{write:!0}})],l.prototype,\"statusUrl\",void 0),t([i(n)],l.prototype,\"status\",void 0),t([o({type:Date,json:{type:Number,write:{writer:(t,e)=>{e.submissionTime=t?t.getTime():null}}}})],l.prototype,\"submissionTime\",void 0),t([o({type:Date,json:{type:Number,write:{writer:(t,e)=>{e.lastUpdatedTime=t?t.getTime():null}}}})],l.prototype,\"lastUpdatedTime\",void 0),l=t([a(\"esri.networks.support.TopologyValidationJobInfo\")],l);const m=l;export{m as default};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}