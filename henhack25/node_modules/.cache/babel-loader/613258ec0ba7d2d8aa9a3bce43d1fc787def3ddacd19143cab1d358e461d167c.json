{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { toRadian as t } from \"../../../../core/libs/gl-matrix-2/math/common.js\";\nimport { identity as e, multiply as r, translate as o, scale as i, rotate as s } from \"../../../../core/libs/gl-matrix-2/math/mat3.js\";\nimport { create as a } from \"../../../../core/libs/gl-matrix-2/factories/mat3f32.js\";\nimport { fromValues as n } from \"../../../../core/libs/gl-matrix-2/factories/vec2f32.js\";\nimport { fromValues as l } from \"../../../../core/libs/gl-matrix-2/factories/vec3f32.js\";\nimport { normalizeMapX as c } from \"../../../../geometry/support/normalizeUtils.js\";\nimport { getInfo as h } from \"../../../../geometry/support/spatialReferenceUtils.js\";\nimport { getWorldWidth as m } from \"../../viewpointUtils.js\";\nimport { WGLDrawPhase as d } from \"./enums.js\";\nimport p from \"./WGLContainer.js\";\nimport { OverlayTechnique as f } from \"./shaderGraph/techniques/overlay/OverlayTechnique.js\";\nclass u extends p {\n  constructor() {\n    super(...arguments), this._viewStateId = -1, this._dvsMat3 = a(), this._overlayTechnique = new f();\n  }\n  get dvsMat3() {\n    return this._dvsMat3;\n  }\n  beforeRender(t) {\n    this._updateMatrices(t), this._updateOverlays(t, this.children);\n    for (const e of this.children) e.beforeRender(t);\n  }\n  doRender(t) {\n    if (t.drawPhase !== d.MAP || !this.visible) return;\n    super.doRender(t);\n    const e = this._overlayTechnique;\n    for (const r of this.children) r.draw(t, e);\n  }\n  onDetach() {\n    this._overlayTechnique.shutdown();\n  }\n  _updateMatrices(a) {\n    const {\n        state: h\n      } = a,\n      {\n        id: m,\n        size: d,\n        pixelRatio: p,\n        resolution: f,\n        rotation: u,\n        viewpoint: v,\n        displayMat3: _\n      } = h;\n    if (this._viewStateId === m) return;\n    const M = t(u),\n      g = p * d[0],\n      y = p * d[1];\n    this._localOrigin = v.targetGeometry.clone();\n    const {\n        x: w,\n        y: x\n      } = this._localOrigin,\n      b = c(w, h.spatialReference);\n    this._localOrigin.x = b, this._localOrigin.y = x;\n    const j = f * g,\n      O = f * y,\n      R = e(this._dvsMat3);\n    r(R, R, _), o(R, R, n(g / 2, y / 2)), i(R, R, l(g / j, -y / O, 1)), s(R, R, -M), this._viewStateId = m;\n  }\n  _updateOverlays(e, r) {\n    const {\n        state: o\n      } = e,\n      {\n        rotation: i,\n        spatialReference: s,\n        worldScreenWidth: a,\n        size: n,\n        viewpoint: l\n      } = o,\n      c = this._localOrigin;\n    let d,\n      p = 0;\n    const f = h(s);\n    if (f && s.isWrappable) {\n      const e = n[0],\n        r = n[1],\n        c = t(i),\n        h = Math.abs(Math.cos(c)),\n        u = Math.abs(Math.sin(c)),\n        v = Math.round(e * h + r * u),\n        [_, M] = f.valid,\n        g = m(s),\n        {\n          x: y,\n          y: w\n        } = l.targetGeometry,\n        x = [y, w],\n        b = [0, 0];\n      o.toScreen(b, x);\n      const j = [0, 0];\n      let O;\n      O = v > a ? .5 * a : .5 * v;\n      const R = Math.floor((y + .5 * g) / g),\n        q = _ + R * g,\n        S = M + R * g,\n        G = [b[0] + O, 0];\n      o.toMap(j, G), j[0] > S && (p = g), G[0] = b[0] - O, o.toMap(j, G), j[0] < q && (p = -g), d = {\n        worldWidth: g,\n        xBounds: [_, M]\n      };\n    }\n    for (const t of r) t.updateDrawCoords(c, p, s, d);\n  }\n}\nexport { u as default };","map":{"version":3,"names":["toRadian","t","identity","e","multiply","r","translate","o","scale","i","rotate","s","create","a","fromValues","n","l","normalizeMapX","c","getInfo","h","getWorldWidth","m","WGLDrawPhase","d","p","OverlayTechnique","f","u","constructor","arguments","_viewStateId","_dvsMat3","_overlayTechnique","dvsMat3","beforeRender","_updateMatrices","_updateOverlays","children","doRender","drawPhase","MAP","visible","draw","onDetach","shutdown","state","id","size","pixelRatio","resolution","rotation","viewpoint","v","displayMat3","_","M","g","y","_localOrigin","targetGeometry","clone","x","w","b","spatialReference","j","O","R","worldScreenWidth","isWrappable","Math","abs","cos","sin","round","valid","toScreen","floor","q","S","G","toMap","worldWidth","xBounds","updateDrawCoords","default"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/2d/engine/webgl/OverlayContainer.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{toRadian as t}from\"../../../../core/libs/gl-matrix-2/math/common.js\";import{identity as e,multiply as r,translate as o,scale as i,rotate as s}from\"../../../../core/libs/gl-matrix-2/math/mat3.js\";import{create as a}from\"../../../../core/libs/gl-matrix-2/factories/mat3f32.js\";import{fromValues as n}from\"../../../../core/libs/gl-matrix-2/factories/vec2f32.js\";import{fromValues as l}from\"../../../../core/libs/gl-matrix-2/factories/vec3f32.js\";import{normalizeMapX as c}from\"../../../../geometry/support/normalizeUtils.js\";import{getInfo as h}from\"../../../../geometry/support/spatialReferenceUtils.js\";import{getWorldWidth as m}from\"../../viewpointUtils.js\";import{WGLDrawPhase as d}from\"./enums.js\";import p from\"./WGLContainer.js\";import{OverlayTechnique as f}from\"./shaderGraph/techniques/overlay/OverlayTechnique.js\";class u extends p{constructor(){super(...arguments),this._viewStateId=-1,this._dvsMat3=a(),this._overlayTechnique=new f}get dvsMat3(){return this._dvsMat3}beforeRender(t){this._updateMatrices(t),this._updateOverlays(t,this.children);for(const e of this.children)e.beforeRender(t)}doRender(t){if(t.drawPhase!==d.MAP||!this.visible)return;super.doRender(t);const e=this._overlayTechnique;for(const r of this.children)r.draw(t,e)}onDetach(){this._overlayTechnique.shutdown()}_updateMatrices(a){const{state:h}=a,{id:m,size:d,pixelRatio:p,resolution:f,rotation:u,viewpoint:v,displayMat3:_}=h;if(this._viewStateId===m)return;const M=t(u),g=p*d[0],y=p*d[1];this._localOrigin=v.targetGeometry.clone();const{x:w,y:x}=this._localOrigin,b=c(w,h.spatialReference);this._localOrigin.x=b,this._localOrigin.y=x;const j=f*g,O=f*y,R=e(this._dvsMat3);r(R,R,_),o(R,R,n(g/2,y/2)),i(R,R,l(g/j,-y/O,1)),s(R,R,-M),this._viewStateId=m}_updateOverlays(e,r){const{state:o}=e,{rotation:i,spatialReference:s,worldScreenWidth:a,size:n,viewpoint:l}=o,c=this._localOrigin;let d,p=0;const f=h(s);if(f&&s.isWrappable){const e=n[0],r=n[1],c=t(i),h=Math.abs(Math.cos(c)),u=Math.abs(Math.sin(c)),v=Math.round(e*h+r*u),[_,M]=f.valid,g=m(s),{x:y,y:w}=l.targetGeometry,x=[y,w],b=[0,0];o.toScreen(b,x);const j=[0,0];let O;O=v>a?.5*a:.5*v;const R=Math.floor((y+.5*g)/g),q=_+R*g,S=M+R*g,G=[b[0]+O,0];o.toMap(j,G),j[0]>S&&(p=g),G[0]=b[0]-O,o.toMap(j,G),j[0]<q&&(p=-g),d={worldWidth:g,xBounds:[_,M]}}for(const t of r)t.updateDrawCoords(c,p,s,d)}}export{u as default};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}