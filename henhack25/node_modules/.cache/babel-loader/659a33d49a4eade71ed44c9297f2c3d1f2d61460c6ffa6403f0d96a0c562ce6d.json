{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { SqlError as e, SqlErrorCodes as t } from \"./errorSupport.js\";\nfunction r(r) {\n  if (null !== r.precision || null !== r.secondary) throw new e(t.PrimarySecondaryQualifiers);\n}\nfunction s(e, t) {\n  if (t.includes(\".\")) {\n    const r = t.split(\".\");\n    e.second = parseFloat(r[0]), e.millis = parseInt(r[1], 10);\n  } else e.second = parseFloat(t);\n}\nconst l = \"esri.core.sql.SqlInterval\";\nclass a {\n  constructor() {\n    this.declaredRootClass = l, this.op = \"+\", this.day = 0, this.second = 0, this.hour = 0, this.month = 0, this.year = 0, this.minute = 0, this.millis = 0;\n  }\n  static isInterval(e) {\n    return \"object\" == typeof e && null != e && \"declaredRootClass\" in e && e.declaredRootClass === l;\n  }\n  static createFromMilliseconds(e) {\n    const t = new a();\n    return t.second = e / 1e3, t;\n  }\n  static createFromValueAndQualifier(l, o, n) {\n    let i = null;\n    const p = new a();\n    if (p.op = \"-\" === n ? \"-\" : \"+\", \"interval-period\" === o.type) {\n      r(o);\n      const a = new RegExp(\"^[0-9]{1,}$\");\n      if (\"year\" === o.period || \"month\" === o.period) throw new e(t.YearMonthIntervals);\n      if (\"second\" === o.period) {\n        if (!/^[0-9]{1,}([.]{1}[0-9]{1,}){0,1}$/.test(l)) throw new e(t.IllegalInterval);\n        s(p, l);\n      } else {\n        if (!a.test(l)) throw new e(t.IllegalInterval);\n        p[o.period] = parseFloat(l);\n      }\n    } else {\n      if (r(o.start), r(o.end), \"year\" === o.start.period || \"month\" === o.start.period || \"year\" === o.end.period || \"month\" === o.end.period) throw new e(t.YearMonthIntervals);\n      switch (o.start.period) {\n        case \"day\":\n          switch (o.end.period) {\n            case \"hour\":\n              if (i = new RegExp(\"^[0-9]{1,} [0-9]{1,}$\"), !i.test(l)) throw new e(t.IllegalInterval);\n              p[o.start.period] = parseFloat(l.split(\" \")[0]), p[o.end.period] = parseFloat(l.split(\" \")[1]);\n              break;\n            case \"minute\":\n              if (i = new RegExp(\"^[0-9]{1,} [0-9]{1,2}:[0-9]{1,}$\"), !i.test(l)) throw new e(t.IllegalInterval);\n              {\n                p[o.start.period] = parseFloat(l.split(\" \")[0]);\n                const e = l.split(\" \")[1].split(\":\");\n                p.hour = parseFloat(e[0]), p.minute = parseFloat(e[1]);\n              }\n              break;\n            case \"second\":\n              if (i = new RegExp(\"^[0-9]{1,} [0-9]{1,2}:[0-9]{1,2}:[0-9]{1,}([.]{1}[0-9]{1,}){0,1}$\"), !i.test(l)) throw new e(t.IllegalInterval);\n              {\n                p[o.start.period] = parseFloat(l.split(\" \")[0]);\n                const e = l.split(\" \")[1].split(\":\");\n                p.hour = parseFloat(e[0]), p.minute = parseFloat(e[1]), s(p, e[2]);\n              }\n              break;\n            default:\n              throw new e(t.IllegalInterval);\n          }\n          break;\n        case \"hour\":\n          switch (o.end.period) {\n            case \"minute\":\n              if (i = new RegExp(\"^[0-9]{1,}:[0-9]{1,}$\"), !i.test(l)) throw new e(t.IllegalInterval);\n              p.hour = parseFloat(l.split(\":\")[0]), p.minute = parseFloat(l.split(\":\")[1]);\n              break;\n            case \"second\":\n              if (i = new RegExp(\"^[0-9]{1,}:[0-9]{1,2}:[0-9]{1,}([.]{1}[0-9]{1,}){0,1}$\"), !i.test(l)) throw new e(t.IllegalInterval);\n              {\n                const e = l.split(\":\");\n                p.hour = parseFloat(e[0]), p.minute = parseFloat(e[1]), s(p, e[2]);\n              }\n              break;\n            default:\n              throw new e(t.IllegalInterval);\n          }\n          break;\n        case \"minute\":\n          if (\"second\" !== o.end.period) throw new e(t.IllegalInterval);\n          if (i = new RegExp(\"^[0-9]{1,}:[0-9]{1,}([.]{1}[0-9]{1,}){0,1}$\"), !i.test(l)) throw new e(t.IllegalInterval);\n          {\n            const e = l.split(\":\");\n            p.minute = parseFloat(e[0]), s(p, e[1]);\n          }\n          break;\n        default:\n          throw new e(t.IllegalInterval);\n      }\n    }\n    return p;\n  }\n  valueInMilliseconds() {\n    return (\"-\" === this.op ? -1 : 1) * (this.millis + 1e3 * this.second + 60 * this.minute * 1e3 + 60 * this.hour * 60 * 1e3 + 24 * this.day * 60 * 60 * 1e3 + this.month * (365 / 12) * 24 * 60 * 60 * 1e3 + 365 * this.year * 24 * 60 * 60 * 1e3);\n  }\n}\nexport { a as SqlInterval };","map":{"version":3,"names":["SqlError","e","SqlErrorCodes","t","r","precision","secondary","PrimarySecondaryQualifiers","s","includes","split","second","parseFloat","millis","parseInt","l","a","constructor","declaredRootClass","op","day","hour","month","year","minute","isInterval","createFromMilliseconds","createFromValueAndQualifier","o","n","i","p","type","RegExp","period","YearMonthIntervals","test","IllegalInterval","start","end","valueInMilliseconds","SqlInterval"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/core/sql/SqlInterval.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{SqlError as e,SqlErrorCodes as t}from\"./errorSupport.js\";function r(r){if(null!==r.precision||null!==r.secondary)throw new e(t.PrimarySecondaryQualifiers)}function s(e,t){if(t.includes(\".\")){const r=t.split(\".\");e.second=parseFloat(r[0]),e.millis=parseInt(r[1],10)}else e.second=parseFloat(t)}const l=\"esri.core.sql.SqlInterval\";class a{constructor(){this.declaredRootClass=l,this.op=\"+\",this.day=0,this.second=0,this.hour=0,this.month=0,this.year=0,this.minute=0,this.millis=0}static isInterval(e){return\"object\"==typeof e&&null!=e&&\"declaredRootClass\"in e&&e.declaredRootClass===l}static createFromMilliseconds(e){const t=new a;return t.second=e/1e3,t}static createFromValueAndQualifier(l,o,n){let i=null;const p=new a;if(p.op=\"-\"===n?\"-\":\"+\",\"interval-period\"===o.type){r(o);const a=new RegExp(\"^[0-9]{1,}$\");if(\"year\"===o.period||\"month\"===o.period)throw new e(t.YearMonthIntervals);if(\"second\"===o.period){if(!/^[0-9]{1,}([.]{1}[0-9]{1,}){0,1}$/.test(l))throw new e(t.IllegalInterval);s(p,l)}else{if(!a.test(l))throw new e(t.IllegalInterval);p[o.period]=parseFloat(l)}}else{if(r(o.start),r(o.end),\"year\"===o.start.period||\"month\"===o.start.period||\"year\"===o.end.period||\"month\"===o.end.period)throw new e(t.YearMonthIntervals);switch(o.start.period){case\"day\":switch(o.end.period){case\"hour\":if(i=new RegExp(\"^[0-9]{1,} [0-9]{1,}$\"),!i.test(l))throw new e(t.IllegalInterval);p[o.start.period]=parseFloat(l.split(\" \")[0]),p[o.end.period]=parseFloat(l.split(\" \")[1]);break;case\"minute\":if(i=new RegExp(\"^[0-9]{1,} [0-9]{1,2}:[0-9]{1,}$\"),!i.test(l))throw new e(t.IllegalInterval);{p[o.start.period]=parseFloat(l.split(\" \")[0]);const e=l.split(\" \")[1].split(\":\");p.hour=parseFloat(e[0]),p.minute=parseFloat(e[1])}break;case\"second\":if(i=new RegExp(\"^[0-9]{1,} [0-9]{1,2}:[0-9]{1,2}:[0-9]{1,}([.]{1}[0-9]{1,}){0,1}$\"),!i.test(l))throw new e(t.IllegalInterval);{p[o.start.period]=parseFloat(l.split(\" \")[0]);const e=l.split(\" \")[1].split(\":\");p.hour=parseFloat(e[0]),p.minute=parseFloat(e[1]),s(p,e[2])}break;default:throw new e(t.IllegalInterval)}break;case\"hour\":switch(o.end.period){case\"minute\":if(i=new RegExp(\"^[0-9]{1,}:[0-9]{1,}$\"),!i.test(l))throw new e(t.IllegalInterval);p.hour=parseFloat(l.split(\":\")[0]),p.minute=parseFloat(l.split(\":\")[1]);break;case\"second\":if(i=new RegExp(\"^[0-9]{1,}:[0-9]{1,2}:[0-9]{1,}([.]{1}[0-9]{1,}){0,1}$\"),!i.test(l))throw new e(t.IllegalInterval);{const e=l.split(\":\");p.hour=parseFloat(e[0]),p.minute=parseFloat(e[1]),s(p,e[2])}break;default:throw new e(t.IllegalInterval)}break;case\"minute\":if(\"second\"!==o.end.period)throw new e(t.IllegalInterval);if(i=new RegExp(\"^[0-9]{1,}:[0-9]{1,}([.]{1}[0-9]{1,}){0,1}$\"),!i.test(l))throw new e(t.IllegalInterval);{const e=l.split(\":\");p.minute=parseFloat(e[0]),s(p,e[1])}break;default:throw new e(t.IllegalInterval)}}return p}valueInMilliseconds(){return(\"-\"===this.op?-1:1)*(this.millis+1e3*this.second+60*this.minute*1e3+60*this.hour*60*1e3+24*this.day*60*60*1e3+this.month*(365/12)*24*60*60*1e3+365*this.year*24*60*60*1e3)}}export{a as SqlInterval};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}