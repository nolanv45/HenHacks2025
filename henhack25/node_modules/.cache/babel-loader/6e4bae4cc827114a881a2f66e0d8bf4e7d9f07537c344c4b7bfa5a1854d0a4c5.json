{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { _ as t } from \"../../../chunks/tslib.es6.js\";\nimport { property as s } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/has.js\";\nimport \"../../../core/Logger.js\";\nimport \"../../../core/RandomLCG.js\";\nimport { enumeration as o } from \"../../../core/accessorSupport/decorators/enumeration.js\";\nimport { subclass as e } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport r from \"./BaseFunctionArguments.js\";\nimport { MissingBandAction as n } from \"./pixelUtils.js\";\nvar a;\nlet i = a = class extends r {\n  constructor() {\n    super(...arguments), this.bandIds = [], this.bandNames = [], this.bandWavelengths = [], this.missingBandAction = n.bestMatch;\n  }\n  clone() {\n    return new a({\n      bandIds: this.bandIds?.slice(),\n      bandNames: this.bandNames?.slice(),\n      bandWavelengths: this.bandWavelengths?.slice(),\n      missingBandAction: this.missingBandAction,\n      method: this.method,\n      wavelengthMatchTolerance: this.wavelengthMatchTolerance\n    });\n  }\n};\nt([s({\n  json: {\n    write: !0\n  }\n})], i.prototype, \"bandIds\", void 0), t([s({\n  json: {\n    write: !0\n  }\n})], i.prototype, \"bandNames\", void 0), t([s({\n  json: {\n    write: !0\n  }\n})], i.prototype, \"bandWavelengths\", void 0), t([o({\n  0: \"name\",\n  1: \"wavelength\",\n  2: \"id\"\n})], i.prototype, \"method\", void 0), t([s({\n  json: {\n    write: !0\n  }\n})], i.prototype, \"missingBandAction\", void 0), t([s({\n  json: {\n    write: !0\n  }\n})], i.prototype, \"wavelengthMatchTolerance\", void 0), i = a = t([e(\"esri.layers.support.rasterFunctions.ExtractBandFunctionArguments\")], i);\nconst c = i;\nexport { c as default };","map":{"version":3,"names":["_","t","property","s","enumeration","o","subclass","e","r","MissingBandAction","n","a","i","constructor","arguments","bandIds","bandNames","bandWavelengths","missingBandAction","bestMatch","clone","slice","method","wavelengthMatchTolerance","json","write","prototype","c","default"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/layers/support/rasterFunctions/ExtractBandFunctionArguments.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{_ as t}from\"../../../chunks/tslib.es6.js\";import{property as s}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/has.js\";import\"../../../core/Logger.js\";import\"../../../core/RandomLCG.js\";import{enumeration as o}from\"../../../core/accessorSupport/decorators/enumeration.js\";import{subclass as e}from\"../../../core/accessorSupport/decorators/subclass.js\";import r from\"./BaseFunctionArguments.js\";import{MissingBandAction as n}from\"./pixelUtils.js\";var a;let i=a=class extends r{constructor(){super(...arguments),this.bandIds=[],this.bandNames=[],this.bandWavelengths=[],this.missingBandAction=n.bestMatch}clone(){return new a({bandIds:this.bandIds?.slice(),bandNames:this.bandNames?.slice(),bandWavelengths:this.bandWavelengths?.slice(),missingBandAction:this.missingBandAction,method:this.method,wavelengthMatchTolerance:this.wavelengthMatchTolerance})}};t([s({json:{write:!0}})],i.prototype,\"bandIds\",void 0),t([s({json:{write:!0}})],i.prototype,\"bandNames\",void 0),t([s({json:{write:!0}})],i.prototype,\"bandWavelengths\",void 0),t([o({0:\"name\",1:\"wavelength\",2:\"id\"})],i.prototype,\"method\",void 0),t([s({json:{write:!0}})],i.prototype,\"missingBandAction\",void 0),t([s({json:{write:!0}})],i.prototype,\"wavelengthMatchTolerance\",void 0),i=a=t([e(\"esri.layers.support.rasterFunctions.ExtractBandFunctionArguments\")],i);const c=i;export{c as default};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,CAAC,IAAIC,CAAC,QAAK,8BAA8B;AAAC,SAAOC,QAAQ,IAAIC,CAAC,QAAK,sDAAsD;AAAC,OAAM,sBAAsB;AAAC,OAAM,yBAAyB;AAAC,OAAM,4BAA4B;AAAC,SAAOC,WAAW,IAAIC,CAAC,QAAK,yDAAyD;AAAC,SAAOC,QAAQ,IAAIC,CAAC,QAAK,sDAAsD;AAAC,OAAOC,CAAC,MAAK,4BAA4B;AAAC,SAAOC,iBAAiB,IAAIC,CAAC,QAAK,iBAAiB;AAAC,IAAIC,CAAC;AAAC,IAAIC,CAAC,GAACD,CAAC,GAAC,cAAcH,CAAC;EAACK,WAAWA,CAAA,EAAE;IAAC,KAAK,CAAC,GAAGC,SAAS,CAAC,EAAC,IAAI,CAACC,OAAO,GAAC,EAAE,EAAC,IAAI,CAACC,SAAS,GAAC,EAAE,EAAC,IAAI,CAACC,eAAe,GAAC,EAAE,EAAC,IAAI,CAACC,iBAAiB,GAACR,CAAC,CAACS,SAAS;EAAA;EAACC,KAAKA,CAAA,EAAE;IAAC,OAAO,IAAIT,CAAC,CAAC;MAACI,OAAO,EAAC,IAAI,CAACA,OAAO,EAAEM,KAAK,CAAC,CAAC;MAACL,SAAS,EAAC,IAAI,CAACA,SAAS,EAAEK,KAAK,CAAC,CAAC;MAACJ,eAAe,EAAC,IAAI,CAACA,eAAe,EAAEI,KAAK,CAAC,CAAC;MAACH,iBAAiB,EAAC,IAAI,CAACA,iBAAiB;MAACI,MAAM,EAAC,IAAI,CAACA,MAAM;MAACC,wBAAwB,EAAC,IAAI,CAACA;IAAwB,CAAC,CAAC;EAAA;AAAC,CAAC;AAACtB,CAAC,CAAC,CAACE,CAAC,CAAC;EAACqB,IAAI,EAAC;IAACC,KAAK,EAAC,CAAC;EAAC;AAAC,CAAC,CAAC,CAAC,EAACb,CAAC,CAACc,SAAS,EAAC,SAAS,EAAC,KAAK,CAAC,CAAC,EAACzB,CAAC,CAAC,CAACE,CAAC,CAAC;EAACqB,IAAI,EAAC;IAACC,KAAK,EAAC,CAAC;EAAC;AAAC,CAAC,CAAC,CAAC,EAACb,CAAC,CAACc,SAAS,EAAC,WAAW,EAAC,KAAK,CAAC,CAAC,EAACzB,CAAC,CAAC,CAACE,CAAC,CAAC;EAACqB,IAAI,EAAC;IAACC,KAAK,EAAC,CAAC;EAAC;AAAC,CAAC,CAAC,CAAC,EAACb,CAAC,CAACc,SAAS,EAAC,iBAAiB,EAAC,KAAK,CAAC,CAAC,EAACzB,CAAC,CAAC,CAACI,CAAC,CAAC;EAAC,CAAC,EAAC,MAAM;EAAC,CAAC,EAAC,YAAY;EAAC,CAAC,EAAC;AAAI,CAAC,CAAC,CAAC,EAACO,CAAC,CAACc,SAAS,EAAC,QAAQ,EAAC,KAAK,CAAC,CAAC,EAACzB,CAAC,CAAC,CAACE,CAAC,CAAC;EAACqB,IAAI,EAAC;IAACC,KAAK,EAAC,CAAC;EAAC;AAAC,CAAC,CAAC,CAAC,EAACb,CAAC,CAACc,SAAS,EAAC,mBAAmB,EAAC,KAAK,CAAC,CAAC,EAACzB,CAAC,CAAC,CAACE,CAAC,CAAC;EAACqB,IAAI,EAAC;IAACC,KAAK,EAAC,CAAC;EAAC;AAAC,CAAC,CAAC,CAAC,EAACb,CAAC,CAACc,SAAS,EAAC,0BAA0B,EAAC,KAAK,CAAC,CAAC,EAACd,CAAC,GAACD,CAAC,GAACV,CAAC,CAAC,CAACM,CAAC,CAAC,kEAAkE,CAAC,CAAC,EAACK,CAAC,CAAC;AAAC,MAAMe,CAAC,GAACf,CAAC;AAAC,SAAOe,CAAC,IAAIC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}