{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { G as e } from \"./SimpleGeometryCursor.js\";\nimport { G as t, i as s, t as i, g as n, c as r, d as h } from \"./Geometry.js\";\nimport { c as m } from \"./Envelope.js\";\nimport { Envelope2D as a } from \"./Envelope2D.js\";\nimport { E as o, n as x, L as p, S as c } from \"./QuadraticBezier.js\";\nimport { d as l, m as _, P as u, e as g, f as y } from \"./Point2D.js\";\nfunction f(e, t, s, i, n) {\n  return v(e, t, null, s, i, n);\n}\nfunction v(e, h, o, x, p, c) {\n  const l = e.getGeometryType();\n  if (l === t.enumPoint) {\n    const t = e.getXY();\n    return h.contains(t) ? e : e.createInstance();\n  }\n  if (l === t.enumEnvelope) {\n    const t = a.constructEmpty();\n    if (e.queryEnvelope(t), t.intersect(h)) {\n      const s = e.clone();\n      return s.setEnvelope(t), s;\n    }\n    return e.createInstance();\n  }\n  if (e.isEmpty()) return e;\n  if (h.isEmpty()) return e.createInstance();\n  const _ = h.clone();\n  {\n    const t = new a();\n    if (e.queryLooseEnvelope(t), _.containsEnvelope(t)) return e;\n    if (!_.isIntersecting(t)) return e.createInstance();\n    0 === p && (t.intersect(_), t.inflate(Math.max(.1 * t.maxDimension(), 1)), t.intersect(_), _.assign(t));\n  }\n  let u = x;\n  if ((null !== o || Number.isNaN(u)) && (u = m(o, _, !1).total()), l === t.enumGeometryCollection) {\n    const t = e,\n      s = e.createInstance();\n    for (let e = 0, i = t.getGeometryCount(); e < i; e++) {\n      const i = t.getGeometry(e);\n      if (i.isEmpty()) continue;\n      const n = f(i, _, u, p, c);\n      n.isEmpty() || (n === i ? s.addGeometry(n.clone()) : s.addGeometry(n));\n    }\n    return s;\n  }\n  s(l) || i(\"Clip: geometry not supported\");\n  const g = e.getImpl().getAccelerators();\n  if (null !== g) {\n    const e = g.getRasterizedGeometry();\n    n(null === e);\n  }\n  switch (l) {\n    case t.enumMultiPoint:\n      {\n        const t = e;\n        let s;\n        const i = t.getPointCount(),\n          r = t.getImpl().getAttributeStreamRef(0);\n        let h = 0;\n        for (let e = 0; e < i; e++) {\n          const i = r.readPoint2D(2 * e);\n          _.contains(i) || (0 === h && (s = t.createInstance()), h < e && s.addPoints(t, h, e), h = e + 1);\n        }\n        return h > 0 && s.addPoints(t, h, i), 0 === h ? t : (n(null !== s), s);\n      }\n    case t.enumPolygon:\n    case t.enumPolyline:\n      return P(e, _, u, p, c);\n    default:\n      r(\"\");\n  }\n}\nfunction d(e, t, s, i, n, r) {\n  const h = new E(t, r),\n    m = new a();\n  return e.queryLooseEnvelope(m), t.containsEnvelope(m) ? e : t.isIntersecting(m) ? h.clipPolesOut(e, n) : e.createInstance();\n}\nfunction P(e, t, s, i, n) {\n  return new E(t, n).clipMultiPath2(e, s, i);\n}\nclass E {\n  constructor(e, t) {\n    this.m_shape = new o(), this.m_geometry = x, this.m_verticesOnExtentIndex = -1, this.m_verticesOnExtent = [], this.m_progressCounter = 0, this.m_extent = new a(e), this.m_progressTracker = t;\n  }\n  progress_() {}\n  clipMultiPath2(e, s, i) {\n    return e.getGeometryType() === t.enumPolygon ? this.clipPolygonOrProjectedPolyline2(e, i) : this.clipPolyline(e, s);\n  }\n  clipPolygonOrProjectedPolyline2(e, s) {\n    const i = e.getGeometryType() === t.enumPolyline;\n    if (0 === this.m_extent.width() || 0 === this.m_extent.height()) return e.createInstance();\n    const r = a.constructEmpty();\n    e.queryLooseEnvelope(r), this.m_geometry = i ? this.m_shape.addGeometry(e) : this.m_shape.addGeometry(e, this.m_extent);\n    const h = a.constructEmpty(),\n      m = a.constructEmpty(),\n      o = new u(),\n      c = new u(),\n      g = l(9, Number.NaN),\n      y = l(9, Number.NaN),\n      f = _(u, 9);\n    let v = null;\n    const d = new p(),\n      P = [];\n    let I = !1;\n    for (let t = 0; !I && t < 4; t++) {\n      let e = !1;\n      const s = !!(1 & t);\n      let a = 0;\n      switch (t) {\n        case 0:\n          a = this.m_extent.xmin, e = r.xmin <= a && r.xmax >= a;\n          break;\n        case 1:\n          a = this.m_extent.ymin, e = r.ymin <= a && r.ymax >= a;\n          break;\n        case 2:\n          a = this.m_extent.xmax, e = r.xmin <= a && r.xmax >= a;\n          break;\n        case 3:\n          a = this.m_extent.ymax, e = r.ymin <= a && r.ymax >= a;\n      }\n      if (e) {\n        I = !0;\n        for (let e = this.m_shape.getFirstPath(this.m_geometry); e !== x;) {\n          let r = !0,\n            p = -1,\n            l = -1;\n          const _ = this.m_shape.getFirstVertex(e);\n          let u = _;\n          do {\n            this.progress_(), v = this.m_shape.getSegment(u);\n            let e = v;\n            if (null === e) {\n              const t = this.m_shape.getNextVertex(u);\n              if (t === x) {\n                n(i), 0 === p && P.push(u);\n                break;\n              }\n              this.m_shape.queryXY(u, o), d.setStartXY(o), this.m_shape.queryXY(t, c), d.setEndXY(c), e = d;\n            }\n            e.queryLooseEnvelope(h);\n            let _ = E.checkSegmentIntersection(h, t, a);\n            e.isCurve() && 0 === _ && e.isCurve() && (d.setStartXY(e.getStartXY()), d.setEndXY(e.getEndXY()), this.m_shape.replaceCurveWithLine(u), e = d, d.queryEnvelope(h), _ = E.checkSegmentIntersection(h, t, a));\n            let V = 0,\n              X = x;\n            if (-1 === _) {\n              const i = e.intersectionWithAxis2D(s, a, g, y);\n              if (i > 0) {\n                let t = null;\n                if (e.isCurve()) {\n                  t = f, n(i <= 9);\n                  for (let e = 0; e < i; e++) s ? f[e].setCoords(g[e], a) : f[e].setCoords(a, g[e]);\n                  V = this.m_shape.splitSegmentAxisAware(u, y, i, t, s ? 1 : 0);\n                } else V = this.m_shape.splitSegmentAxisAware(u, y, i, null, -1);\n              } else V = 0;\n              V += 1;\n              let h = u,\n                x = this.m_shape.getNextVertex(h);\n              e = null;\n              for (let e = 0; e < V; e++) {\n                this.m_shape.queryXY(h, o), this.m_shape.queryXY(x, c), v = this.m_shape.getSegment(h);\n                let e = v;\n                null === e && (d.setStartXY(o), d.setEndXY(c), e = d), e.queryEnvelope(m);\n                let i = E.checkSegmentIntersection(m, t, a);\n                if (e.isCurve() && 0 === i && (this.m_shape.replaceCurveWithLine(h), d.setStartXY(o), d.setEndXY(c), e = d, e.queryEnvelope(m), i = E.checkSegmentIntersection(m, t, a)), -1 === i) {\n                  if (s) {\n                    Math.abs(o.y - a) < Math.abs(c.y - a) ? (o.y = a, this.m_shape.setXY(h, o)) : (c.y = a, this.m_shape.setXY(x, c));\n                  } else {\n                    Math.abs(o.x - a) < Math.abs(c.x - a) ? (o.x = a, this.m_shape.setXY(h, o)) : (c.x = a, this.m_shape.setXY(x, c));\n                  }\n                  v = this.m_shape.getSegment(h), e = v, null === e && (d.setStartXY(o), d.setEndXY(c), e = d), e.queryEnvelope(m), i = E.checkSegmentIntersection(m, t, a), -1 === i && (i = E.checkSegmentIntersectionLoose(m, t, a));\n                }\n                const n = p;\n                p = i, -1 === l && (l = p), 0 === n && 1 === p || 1 === n && 0 === p || 0 === n && 0 === p && P.push(h), 1 === p && (I = !1, r = !1), h = x, X = h, x = this.m_shape.getNextVertex(x);\n              }\n            }\n            if (0 === V) {\n              const e = p;\n              p = _, -1 === l && (l = p), 0 === e && p >= 1 || e >= 1 && 0 === p || 0 === e && 0 === p && P.push(u), 1 === p && (I = !1, r = !1), X = this.m_shape.getNextVertex(u);\n            }\n            if (u = X, P.length >= 256) {\n              for (let e = 1, t = P.length - 1; e < t; e++) {\n                const t = P[e];\n                i ? this.m_shape.snapVertexForPoleClipping(t, a) : this.m_shape.removeVertex(t, !1);\n              }\n              P[1] = P.at(-1), P.length = 2;\n            }\n          } while (u !== _);\n          if (!r) {\n            0 !== l || !i && 0 !== p && 2 !== p || P.push(_);\n            for (let e = 0, t = P.length; e < t; e++) {\n              const t = P[e];\n              i ? this.m_shape.snapVertexForPoleClipping(t, a) : this.m_shape.removeVertex(t, !1);\n            }\n          }\n          P.length = 0, e = r || 0 === this.m_shape.getPathSize(e) ? this.m_shape.removePath(e) : this.m_shape.getNextPath(e);\n        }\n      }\n    }\n    if (I) return e.createInstance();\n    v = null, i ? this.removeSpikesAlongPoles() : this.resolveBoundaryOverlaps(), s > 0 && this.densifyAlongClipExtent(s);\n    const V = this.m_shape.getGeometry(this.m_geometry);\n    if (V.getGeometryType() === t.enumPolygon) {\n      V.setFillRule(e.getFillRule());\n    }\n    return V;\n  }\n  clipPolyline(e, t) {\n    const s = a.constructEmpty(),\n      i = a.constructEmpty(),\n      n = l(9, Number.NaN),\n      r = l(9, Number.NaN),\n      h = new c();\n    let m = e;\n    const o = a.constructEmpty();\n    e.queryLooseEnvelope(o);\n    for (let a = 0; a < 4; a++) {\n      let t = !1;\n      const x = !!(1 & a);\n      let p = 0;\n      switch (a) {\n        case 0:\n          p = this.m_extent.xmin, t = o.xmin <= p && o.xmax >= p;\n          break;\n        case 1:\n          p = this.m_extent.ymin, t = o.ymin <= p && o.ymax >= p;\n          break;\n        case 2:\n          p = this.m_extent.xmax, t = o.xmin <= p && o.xmax >= p;\n          break;\n        case 3:\n          p = this.m_extent.ymax, t = o.ymin <= p && o.ymax >= p;\n      }\n      if (!t) continue;\n      const c = m;\n      m = e.createInstance();\n      const l = c.getImpl().querySegmentIterator();\n      l.resetToFirstPath();\n      const _ = new u(),\n        g = new u();\n      for (; l.nextPath();) {\n        let e = -1,\n          t = !0;\n        for (; l.hasNextSegment();) {\n          this.progress_();\n          const o = l.nextSegment(),\n            c = o.isDegenerate(0);\n          o.queryLooseEnvelope(s);\n          const u = E.checkSegmentIntersection(s, a, p);\n          if (-1 === u) {\n            const s = o.intersectionWithAxis2D(x, p, n, r);\n            let l = 0;\n            _.assign(o.getStartXY());\n            for (let u = 0; u <= s; u++) {\n              const y = u < s ? r[u] : 1;\n              if (l === y) continue;\n              o.queryCut(l, y, h, !1);\n              const f = h.get();\n              let v = !1;\n              if (f.getStartXY().equals(_) || (f.setStartXY(_), v = !0), u < s && (x ? (g.x = n[u], g.y = p) : (g.x = p, g.y = n[u]), f.getEndXY().equals(g) || (f.setEndXY(g), v = !0)), v && f.normalizeAfterEndpointChange(), !c && f.isDegenerate(0)) continue;\n              f.queryEnvelope(i);\n              let d = E.checkSegmentIntersection(i, a, p);\n              if (-1 === d) {\n                const e = f.getStartXY(),\n                  t = f.getEndXY();\n                if (v = !1, x) {\n                  Math.abs(e.y - p) < Math.abs(t.y - p) ? (e.y = p, f.setStartXY(e), e.equals(f.getStartXY()) || (f.setStartXY(e), v = !0)) : (t.y = p, t.equals(f.getEndXY()) || (f.setEndXY(t), v = !0));\n                } else {\n                  Math.abs(e.x - p) < Math.abs(t.x - p) ? (e.x = p, e.equals(f.getStartXY()) || (f.setStartXY(e), v = !0)) : (t.x = p, t.equals(f.getEndXY()) || (f.setEndXY(t), v = !0));\n                }\n                v && f.normalizeAfterEndpointChange(), f.queryEnvelope(i), d = E.checkSegmentIntersection(i, a, p), -1 === d && (d = E.checkSegmentIntersectionLoose(i, a, p));\n              }\n              _.assign(f.getEndXY()), l = y, e = d, e >= 1 ? (m.addSegment(f, t), t = !1) : t = !0;\n            }\n          } else e = u, e >= 1 ? (m.addSegment(o, t), t = !1) : t = !0;\n        }\n      }\n    }\n    return m;\n  }\n  static checkSegmentIntersection(e, t, s) {\n    switch (t) {\n      case 0:\n        return e.xmin < s && e.xmax <= s ? 0 : e.xmin >= s ? e.xmax === s ? 2 : 1 : -1;\n      case 1:\n        return e.ymin < s && e.ymax <= s ? 0 : e.ymin >= s ? e.ymax === s ? 2 : 1 : -1;\n      case 2:\n        return e.xmin >= s && e.xmax > s ? 0 : e.xmax <= s ? e.xmin === s ? 2 : 1 : -1;\n      case 3:\n        return e.ymin >= s && e.ymax > s ? 0 : e.ymax <= s ? e.ymin === s ? 2 : 1 : -1;\n    }\n    return r(\"\"), 0;\n  }\n  static checkSegmentIntersectionLoose(e, t, s) {\n    switch (t) {\n      case 0:\n        {\n          const t = Math.abs(e.xmin - s),\n            i = Math.abs(e.xmax - s);\n          return e.xmin < s ? t > i ? 0 : 1 : (r(\"\"), 1);\n        }\n      case 1:\n        {\n          const t = Math.abs(e.ymin - s),\n            i = Math.abs(e.ymax - s);\n          return e.ymin < s ? t > i ? 0 : 1 : (r(\"\"), 1);\n        }\n      case 2:\n        {\n          const t = Math.abs(e.xmin - s),\n            i = Math.abs(e.xmax - s);\n          return e.xmax > s ? t < i ? 0 : 1 : (r(\"\"), 1);\n        }\n      case 3:\n        {\n          const t = Math.abs(e.ymin - s),\n            i = Math.abs(e.ymax - s);\n          return e.ymax > s ? t < i ? 0 : 1 : (r(\"\"), 1);\n        }\n    }\n    return r(\"\"), 0;\n  }\n  resolveBoundaryOverlaps() {\n    this.m_verticesOnExtentIndex = -1, this.splitSegments(!1, this.m_extent.xmin), this.splitSegments(!1, this.m_extent.xmax), this.splitSegments(!0, this.m_extent.ymin), this.splitSegments(!0, this.m_extent.ymax), this.m_verticesOnExtent.length = 0, this.m_verticesOnExtentIndex = this.m_shape.createUserIndex();\n    const e = new u();\n    for (let t = this.m_shape.getFirstPath(this.m_geometry); t !== x; t = this.m_shape.getNextPath(t)) {\n      let s = this.m_shape.getFirstVertex(t);\n      for (let i = 0, n = this.m_shape.getPathSize(t); i < n; i++, s = this.m_shape.getNextVertex(s)) this.progress_(), this.m_shape.queryXY(s, e), this.m_extent.xmin !== e.x && this.m_extent.xmax !== e.x && this.m_extent.ymin !== e.y && this.m_extent.ymax !== e.y || (this.m_shape.setUserIndex(s, this.m_verticesOnExtentIndex, this.m_verticesOnExtent.length), this.m_verticesOnExtent.push(s));\n    }\n    this.dbgCheckPathFirst(), this.resolveOverlaps(!1, this.m_extent.xmin), this.dbgCheckPathFirst(), this.resolveOverlaps(!1, this.m_extent.xmax), this.dbgCheckPathFirst(), this.resolveOverlaps(!0, this.m_extent.ymin), this.dbgCheckPathFirst(), this.resolveOverlaps(!0, this.m_extent.ymax), this.fixPaths();\n  }\n  densifyAlongClipExtent(e) {\n    const t = new u(0, 0),\n      s = new u(0, 0),\n      i = l(2048, Number.NaN);\n    for (let h = this.m_shape.getFirstPath(this.m_geometry); h !== x; h = this.m_shape.getNextPath(h)) {\n      const m = this.m_shape.getFirstVertex(h);\n      let a = m;\n      do {\n        const h = this.m_shape.getNextVertex(a);\n        this.m_shape.queryXY(a, t);\n        let m = -1;\n        if (t.x === this.m_extent.xmin ? (this.m_shape.queryXY(h, s), s.x === this.m_extent.xmin && (m = 1)) : t.x === this.m_extent.xmax && (this.m_shape.queryXY(h, s), s.x === this.m_extent.xmax && (m = 1)), t.y === this.m_extent.ymin ? (this.m_shape.queryXY(h, s), s.y === this.m_extent.ymin && (m = 0)) : t.y === this.m_extent.ymax && (this.m_shape.queryXY(h, s), s.y === this.m_extent.ymax && (m = 0)), -1 === m) {\n          a = h;\n          continue;\n        }\n        if (this.isCurve(a)) {\n          a = h;\n          continue;\n        }\n        const o = t.clone(),\n          x = new u(0, 0);\n        if (m) {\n          const i = t.y - this.m_extent.ymin;\n          x.y = g(s.y - t.y), o.y = e * y(Math.floor(Math.abs(i) / e), i) + this.m_extent.ymin, x.y < 0 && (o.y += e);\n        } else {\n          const i = t.x - this.m_extent.xmin;\n          x.x = g(s.x - t.x), o.x = e * y(Math.floor(Math.abs(i) / e), i) + this.m_extent.xmin, x.x < 0 && (o.x += e);\n        }\n        const p = m ? s.y - t.y : s.x - t.x,\n          c = Math.abs(p);\n        if (c / e > 65536 && r(\"\"), c > 0) {\n          const s = Math.trunc(c / e) + 2;\n          i.length < s && (i.length = s);\n          let r = 0;\n          for (let h = 0;; h++) {\n            const s = o.add(x.mul(h * e)),\n              a = (m ? s.y - t.y : s.x - t.x) / p;\n            if (a >= 1) break;\n            a <= 0 || (n(r <= i.length), i[r] = a, r++);\n          }\n          0 !== r && this.m_shape.splitSegment(a, i, r);\n        }\n        a = h;\n      } while (a !== m);\n    }\n  }\n  splitSegments(e, t) {\n    let s = -1;\n    const i = new u(),\n      n = [];\n    for (let _ = this.m_shape.getFirstPath(this.m_geometry); _ !== x; _ = this.m_shape.getNextPath(_)) {\n      let r = this.m_shape.getFirstVertex(_),\n        h = x;\n      for (let m = 0, a = this.m_shape.getPathSize(_); m < a; m++, r = h) if (this.progress_(), h = this.m_shape.getNextVertex(r), this.m_shape.queryXY(r, i), (e ? i.y === t : i.x === t) && (this.m_shape.queryXY(h, i), e ? i.y === t : i.x === t)) {\n        if (this.isCurve(r)) continue;\n        -1 === s && (s = this.m_shape.createUserIndex()), 1 !== this.m_shape.getUserIndex(r, s) && (n.push(r), this.m_shape.setUserIndex(r, s, 1)), 1 !== this.m_shape.getUserIndex(h, s) && (n.push(h), this.m_shape.setUserIndex(h, s, 1));\n      }\n    }\n    if (-1 !== s && this.m_shape.removeUserIndex(s), n.length < 3) return;\n    n.sort((e, t) => this.compareVertices(e, t));\n    const r = new u(),\n      h = new u(),\n      m = new u();\n    h.setNAN();\n    let a = -1;\n    let o = [],\n      p = [];\n    const c = this.m_shape.createUserIndex(),\n      l = this.m_shape.createUserIndex();\n    for (let x = 0, _ = n.length; x < _; x++) {\n      const s = n[x];\n      if (this.m_shape.queryXY(s, i), !i.isEqualPoint2D(h)) {\n        if (-1 === a) {\n          a = x, h.setCoordsPoint2D(i);\n          continue;\n        }\n        for (let i = a; i < x; i++) {\n          const s = n[i],\n            m = this.m_shape.getNextVertex(s),\n            a = this.m_shape.getPrevVertex(s);\n          let x = !1;\n          this.m_shape.queryXY(m, r), h.compare(r) < 0 && (e ? r.y === t : r.x === t) && (this.isCurve(s) || (o.push(s), x = !0, this.m_shape.setUserIndex(s, l, 1))), this.m_shape.queryXY(a, r), h.compare(r) < 0 && (e ? r.y === t : r.x === t) && (this.isCurve(a) || (x || o.push(s), this.m_shape.setUserIndex(s, c, 1)));\n        }\n        for (let e = 0, t = o.length; e < t; e++) {\n          const t = o[e],\n            s = this.m_shape.getUserIndex(t, c),\n            n = this.m_shape.getUserIndex(t, l);\n          if (1 === s) {\n            const e = this.m_shape.getPrevVertex(t);\n            this.m_shape.queryXY(e, m);\n            let s = 0;\n            if (!m.isEqualPoint2D(i)) {\n              const n = u.distance(h, m);\n              s = u.distance(m, i) / n, 0 === s ? s = Number.EPSILON : 1 === s && (s = 1 - Number.EPSILON), this.m_shape.splitSegment(e, [s], 1);\n              const r = this.m_shape.getPrevVertex(t);\n              this.m_shape.setXY(r, i), p.push(r), this.m_shape.setUserIndex(r, c, 1), this.m_shape.setUserIndex(r, l, -1);\n            }\n          }\n          if (1 === n) {\n            const e = this.m_shape.getNextVertex(t);\n            this.m_shape.queryXY(e, m);\n            let s = 0;\n            if (!m.isEqualPoint2D(i)) {\n              const e = u.distance(h, m);\n              s = u.distance(h, i) / e, 0 === s ? s = Number.EPSILON : 1 === s && (s = 1 - Number.EPSILON), this.m_shape.splitSegment(t, [s], 1);\n              const n = this.m_shape.getNextVertex(t);\n              this.m_shape.setXY(n, i), p.push(n), this.m_shape.setUserIndex(n, c, -1), this.m_shape.setUserIndex(n, l, 1);\n            }\n          }\n        }\n        const s = o;\n        o = p, p = s, p.length = 0, a = x, h.setCoordsPoint2D(i);\n      }\n    }\n    this.m_shape.removeUserIndex(c), this.m_shape.removeUserIndex(l);\n  }\n  resolveOverlaps(e, t) {\n    const s = new u(),\n      i = [];\n    let r = -1;\n    for (let n = 0, o = this.m_verticesOnExtent.length; n < o; n++) {\n      this.progress_();\n      const h = this.m_verticesOnExtent[n];\n      if (h === x) continue;\n      const m = this.m_shape.getNextVertex(h);\n      if (this.m_shape.queryXY(h, s), (e ? s.y === t : s.x === t) && (this.m_shape.queryXY(m, s), e ? s.y === t : s.x === t)) {\n        if (this.isCurve(h)) continue;\n        -1 === r && (r = this.m_shape.createUserIndex()), -2 !== this.m_shape.getUserIndex(h, r) && (i.push(h), this.m_shape.setUserIndex(h, r, -2)), -2 !== this.m_shape.getUserIndex(m, r) && (i.push(m), this.m_shape.setUserIndex(m, r, -2));\n      }\n    }\n    if (0 === i.length) return void (-1 !== r && this.m_shape.removeUserIndex(r));\n    n(-1 !== r), i.sort((e, t) => this.compareVertices(e, t));\n    for (let n = 0, o = i.length; n < o; n++) {\n      const e = i[n];\n      this.m_shape.setUserIndex(e, r, n);\n    }\n    const h = new u(),\n      m = new u();\n    m.setNAN();\n    let a = -1;\n    for (let n = 0, o = i.length; n < o; n++) {\n      this.progress_();\n      const o = i[n];\n      if (o !== x && (this.m_shape.queryXY(o, s), !s.isEqualPoint2D(m))) {\n        if (-1 !== a) for (;;) {\n          let s = !1;\n          const o = n;\n          for (let p = a; p < o; p++) {\n            const a = i[p];\n            if (a === x) continue;\n            let o = x;\n            const c = this.m_shape.getNextVertex(a);\n            this.m_shape.queryXY(c, h), m.compare(h) < 0 && (e ? h.y === t : h.x === t) && (this.isCurve(a) || (o = c));\n            let l = x;\n            const _ = this.m_shape.getPrevVertex(a);\n            if (this.m_shape.queryXY(_, h), m.compare(h) < 0 && (e ? h.y === t : h.x === t) && (this.isCurve(_) || (l = _)), o === x || l === x) {\n              if (o !== x || l !== x) {\n                for (let c = p + 1; c < n; c++) {\n                  const n = i[c];\n                  if (n === x) continue;\n                  const p = this.m_shape.getNextVertex(n);\n                  let _ = x;\n                  this.m_shape.queryXY(p, h), m.compare(h) < 0 && (e ? h.y === t : h.x === t) && (this.isCurve(n) || (_ = p));\n                  const u = this.m_shape.getPrevVertex(n);\n                  let g = x;\n                  if (this.m_shape.queryXY(u, h), m.compare(h) < 0 && (e ? h.y === t : h.x === t) && (this.isCurve(u) || (g = u)), _ !== x && g !== x) {\n                    this.beforeRemoveVertex(n, i, r), this.m_shape.removeVertex(n, !1), this.beforeRemoveVertex(_, i, r), this.m_shape.removeVertex(_, !1), s = !0;\n                    break;\n                  }\n                  if (o !== x && g !== x) {\n                    this.removeOverlap(i, a, o, n, g, r), s = !0;\n                    break;\n                  }\n                  if (l !== x && _ !== x) {\n                    this.removeOverlap(i, n, _, a, l, r), s = !0;\n                    break;\n                  }\n                }\n                if (s) break;\n              }\n            } else this.beforeRemoveVertex(a, i, r), this.m_shape.removeVertex(a, !1), this.beforeRemoveVertex(o, i, r), this.m_shape.removeVertex(o, !1), s = !0;\n          }\n          if (!s) break;\n        }\n        a = n, m.setCoordsPoint2D(s);\n      }\n    }\n    this.m_shape.removeUserIndex(r);\n  }\n  beforeRemoveVertex(e, t, s) {\n    let i = this.m_shape.getUserIndex(e, s);\n    n(i >= 0), t[i] = x, i = this.m_shape.getUserIndex(e, this.m_verticesOnExtentIndex), n(i >= 0), this.m_verticesOnExtent[i] = x;\n    const r = this.m_shape.getPathFromVertex(e);\n    if (r !== x) {\n      this.m_shape.getFirstVertex(r) === e && (this.m_shape.setFirstVertex(r, x), this.m_shape.setLastVertex(r, x));\n    }\n  }\n  removeOverlap(e, t, s, i, n, r) {\n    this.m_shape.setNextVertex(t, i), this.m_shape.setPrevVertex(i, t), this.m_shape.setPrevVertex(s, n), this.m_shape.setNextVertex(n, s), this.beforeRemoveVertex(i, e, r), this.m_shape.removeVertexInternal(i, !1), this.beforeRemoveVertex(n, e, r), this.m_shape.removeVertexInternal(n, !0);\n  }\n  removeSpikesAlongPoles() {\n    this.removeSpikesOnPole(this.m_extent.ymin), this.removeSpikesOnPole(this.m_extent.ymax);\n  }\n  removeSpikesOnPole(e) {\n    for (let t = this.m_shape.getFirstPath(this.m_geometry); t !== x; t = this.m_shape.getNextPath(t)) {\n      const s = this.m_shape.getPathSize(t);\n      if (s < 3) continue;\n      let i = this.m_shape.getFirstVertex(t);\n      const n = new u();\n      this.m_shape.queryXY(i, n);\n      let r = n.y === e && !this.isCurve(i);\n      i = this.m_shape.getNextVertex(i);\n      const h = new u();\n      this.m_shape.queryXY(i, h);\n      let m = h.y === e && !this.isCurve(i);\n      i = this.m_shape.getNextVertex(i);\n      const a = new u();\n      for (let t = 0, o = s - 2; t < o; t++, i = this.m_shape.getNextVertex(i)) {\n        this.progress_(), this.m_shape.queryXY(i, a);\n        const t = a.y === e;\n        if (m && r && t) {\n          if ((h.x - n.x) * (a.x - h.x) <= 0) {\n            this.m_shape.removeVertex(this.m_shape.getPrevVertex(i), !1), h.setCoordsPoint2D(a), m = t && !this.isCurve(i);\n            continue;\n          }\n        }\n        n.setCoordsPoint2D(h), r = m, h.setCoordsPoint2D(a), m = t && !this.isCurve(i);\n      }\n    }\n  }\n  fixPaths() {\n    for (let n = 0, r = this.m_verticesOnExtent.length; n < r; n++) {\n      const e = this.m_verticesOnExtent[n];\n      e !== x && this.m_shape.setPathToVertex(e, x);\n    }\n    const e = this.m_shape.hasCurves();\n    let t = 0,\n      s = 0;\n    for (let n = this.m_shape.getFirstPath(this.m_geometry); n !== x;) {\n      const e = this.m_shape.getFirstVertex(n);\n      if (e === x || n !== this.m_shape.getPathFromVertex(e)) {\n        const e = n;\n        n = this.m_shape.getNextPath(n), this.m_shape.setFirstVertex(e, x), this.m_shape.removePathOnly(e);\n        continue;\n      }\n      let i = e,\n        r = 0;\n      do {\n        this.m_shape.setPathToVertex(i, n), r++, i = this.m_shape.getNextVertex(i);\n      } while (i !== e);\n      this.m_shape.setRingAreaValid(n, !1), this.m_shape.setLastVertex(n, this.m_shape.getPrevVertex(e)), this.m_shape.setPathSize(n, r), s += r, t++, n = this.m_shape.getNextPath(n);\n    }\n    for (let r = 0, h = this.m_verticesOnExtent.length; r < h; r++) {\n      let i = this.m_verticesOnExtent[r];\n      if (i === x) continue;\n      let h = this.m_shape.getPathFromVertex(i);\n      if (h !== x) continue;\n      h = this.m_shape.insertPath(this.m_geometry, x);\n      let m = !1,\n        a = 0;\n      const o = i;\n      do {\n        this.m_shape.setPathToVertex(i, h), a++, e && a <= 2 && (m ||= this.isCurve(i)), i = this.m_shape.getNextVertex(i);\n      } while (i !== o);\n      if (m ? 0 === a : a <= 2) {\n        let e = this.m_shape.getUserIndex(o, this.m_verticesOnExtentIndex);\n        n(e >= 0), this.m_verticesOnExtent[e] = x;\n        const t = this.m_shape.removeVertex(o, !1);\n        2 === a && (e = this.m_shape.getUserIndex(t, this.m_verticesOnExtentIndex), e >= 0 && (this.m_verticesOnExtent[e] = x), this.m_shape.removeVertex(t, !1));\n        const s = h;\n        h = this.m_shape.getNextPath(h), this.m_shape.setFirstVertex(s, x), this.m_shape.removePathOnly(s);\n      } else this.m_shape.setClosedPath(h, !0), this.m_shape.setPathSize(h, a), this.m_shape.setFirstVertex(h, o), this.m_shape.setLastVertex(h, this.m_shape.getPrevVertex(o)), this.m_shape.setRingAreaValid(h, !1), s += a, t++;\n    }\n    this.m_shape.setGeometryPathCount(this.m_geometry, t), this.m_shape.setGeometryVertexCount(this.m_geometry, s);\n    let i = 0;\n    for (let n = this.m_shape.getFirstGeometry(); n !== x; n = this.m_shape.getNextGeometry(n)) i += this.m_shape.getPointCount(n);\n    this.m_shape.setTotalPointCount(i);\n  }\n  dbgCheckPathFirst() {}\n  isCurve(e) {\n    return null !== this.m_shape.getSegment(e);\n  }\n  compareVertices(e, t) {\n    const s = new u();\n    this.m_shape.queryXY(e, s);\n    const i = new u();\n    this.m_shape.queryXY(t, i);\n    return s.compare(i);\n  }\n  clipPolesOut(e, t) {\n    return this.clipPolygonOrProjectedPolyline2(e, t);\n  }\n}\nclass I {\n  getOperatorType() {\n    return 10004;\n  }\n  supportsCurves() {\n    return !0;\n  }\n  accelerateGeometry(e, t, s) {\n    return !1;\n  }\n  canAccelerateGeometry(e) {\n    return !1;\n  }\n  executeMany(e, t, s, i) {\n    return new V(e, t, s, i);\n  }\n  execute(e, t, s, i) {\n    return X(e, t, s, i);\n  }\n}\nclass V extends e {\n  constructor(e, t, s, n) {\n    super(), this.m_progressTracker = n, this.m_index = -1, e || i(\"\"), this.m_envelope = t, this.m_inputGeometryCursor = e, this.m_spatialRefImpl = s, this.m_tolerance = m(s, t, !1).total();\n  }\n  next() {\n    let e;\n    return (e = this.m_inputGeometryCursor.next()) ? (h(e), this.m_index = this.m_inputGeometryCursor.getGeometryID(), f(e, this.m_envelope, this.m_tolerance, 0, this.m_progressTracker)) : null;\n  }\n  getGeometryID() {\n    return this.m_index;\n  }\n  tock() {\n    return !0;\n  }\n  getRank() {\n    return 1;\n  }\n}\nfunction X(e, t, s, i) {\n  return v(e, t, s, Number.NaN, 0, i);\n}\nexport { I as O, d as a, f as c };","map":{"version":3,"names":["G","e","t","i","s","g","n","c","r","d","h","m","Envelope2D","a","E","o","x","L","p","S","l","_","P","u","f","y","v","getGeometryType","enumPoint","getXY","contains","createInstance","enumEnvelope","constructEmpty","queryEnvelope","intersect","clone","setEnvelope","isEmpty","queryLooseEnvelope","containsEnvelope","isIntersecting","inflate","Math","max","maxDimension","assign","Number","isNaN","total","enumGeometryCollection","getGeometryCount","getGeometry","addGeometry","getImpl","getAccelerators","getRasterizedGeometry","enumMultiPoint","getPointCount","getAttributeStreamRef","readPoint2D","addPoints","enumPolygon","enumPolyline","clipPolesOut","clipMultiPath2","constructor","m_shape","m_geometry","m_verticesOnExtentIndex","m_verticesOnExtent","m_progressCounter","m_extent","m_progressTracker","progress_","clipPolygonOrProjectedPolyline2","clipPolyline","width","height","NaN","I","xmin","xmax","ymin","ymax","getFirstPath","getFirstVertex","getSegment","getNextVertex","push","queryXY","setStartXY","setEndXY","checkSegmentIntersection","isCurve","getStartXY","getEndXY","replaceCurveWithLine","V","X","intersectionWithAxis2D","setCoords","splitSegmentAxisAware","abs","setXY","checkSegmentIntersectionLoose","length","snapVertexForPoleClipping","removeVertex","at","getPathSize","removePath","getNextPath","removeSpikesAlongPoles","resolveBoundaryOverlaps","densifyAlongClipExtent","setFillRule","getFillRule","querySegmentIterator","resetToFirstPath","nextPath","hasNextSegment","nextSegment","isDegenerate","queryCut","get","equals","normalizeAfterEndpointChange","addSegment","splitSegments","createUserIndex","setUserIndex","dbgCheckPathFirst","resolveOverlaps","fixPaths","floor","trunc","add","mul","splitSegment","getUserIndex","removeUserIndex","sort","compareVertices","setNAN","isEqualPoint2D","setCoordsPoint2D","getPrevVertex","compare","distance","EPSILON","beforeRemoveVertex","removeOverlap","getPathFromVertex","setFirstVertex","setLastVertex","setNextVertex","setPrevVertex","removeVertexInternal","removeSpikesOnPole","setPathToVertex","hasCurves","removePathOnly","setRingAreaValid","setPathSize","insertPath","setClosedPath","setGeometryPathCount","setGeometryVertexCount","getFirstGeometry","getNextGeometry","setTotalPointCount","getOperatorType","supportsCurves","accelerateGeometry","canAccelerateGeometry","executeMany","execute","m_index","m_envelope","m_inputGeometryCursor","m_spatialRefImpl","m_tolerance","next","getGeometryID","tock","getRank","O"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/chunks/OperatorClip.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{G as e}from\"./SimpleGeometryCursor.js\";import{G as t,i as s,t as i,g as n,c as r,d as h}from\"./Geometry.js\";import{c as m}from\"./Envelope.js\";import{Envelope2D as a}from\"./Envelope2D.js\";import{E as o,n as x,L as p,S as c}from\"./QuadraticBezier.js\";import{d as l,m as _,P as u,e as g,f as y}from\"./Point2D.js\";function f(e,t,s,i,n){return v(e,t,null,s,i,n)}function v(e,h,o,x,p,c){const l=e.getGeometryType();if(l===t.enumPoint){const t=e.getXY();return h.contains(t)?e:e.createInstance()}if(l===t.enumEnvelope){const t=a.constructEmpty();if(e.queryEnvelope(t),t.intersect(h)){const s=e.clone();return s.setEnvelope(t),s}return e.createInstance()}if(e.isEmpty())return e;if(h.isEmpty())return e.createInstance();const _=h.clone();{const t=new a;if(e.queryLooseEnvelope(t),_.containsEnvelope(t))return e;if(!_.isIntersecting(t))return e.createInstance();0===p&&(t.intersect(_),t.inflate(Math.max(.1*t.maxDimension(),1)),t.intersect(_),_.assign(t))}let u=x;if((null!==o||Number.isNaN(u))&&(u=m(o,_,!1).total()),l===t.enumGeometryCollection){const t=e,s=e.createInstance();for(let e=0,i=t.getGeometryCount();e<i;e++){const i=t.getGeometry(e);if(i.isEmpty())continue;const n=f(i,_,u,p,c);n.isEmpty()||(n===i?s.addGeometry(n.clone()):s.addGeometry(n))}return s}s(l)||i(\"Clip: geometry not supported\");const g=e.getImpl().getAccelerators();if(null!==g){const e=g.getRasterizedGeometry();n(null===e)}switch(l){case t.enumMultiPoint:{const t=e;let s;const i=t.getPointCount(),r=t.getImpl().getAttributeStreamRef(0);let h=0;for(let e=0;e<i;e++){const i=r.readPoint2D(2*e);_.contains(i)||(0===h&&(s=t.createInstance()),h<e&&s.addPoints(t,h,e),h=e+1)}return h>0&&s.addPoints(t,h,i),0===h?t:(n(null!==s),s)}case t.enumPolygon:case t.enumPolyline:return P(e,_,u,p,c);default:r(\"\")}}function d(e,t,s,i,n,r){const h=new E(t,r),m=new a;return e.queryLooseEnvelope(m),t.containsEnvelope(m)?e:t.isIntersecting(m)?h.clipPolesOut(e,n):e.createInstance()}function P(e,t,s,i,n){return new E(t,n).clipMultiPath2(e,s,i)}class E{constructor(e,t){this.m_shape=new o,this.m_geometry=x,this.m_verticesOnExtentIndex=-1,this.m_verticesOnExtent=[],this.m_progressCounter=0,this.m_extent=new a(e),this.m_progressTracker=t}progress_(){}clipMultiPath2(e,s,i){return e.getGeometryType()===t.enumPolygon?this.clipPolygonOrProjectedPolyline2(e,i):this.clipPolyline(e,s)}clipPolygonOrProjectedPolyline2(e,s){const i=e.getGeometryType()===t.enumPolyline;if(0===this.m_extent.width()||0===this.m_extent.height())return e.createInstance();const r=a.constructEmpty();e.queryLooseEnvelope(r),this.m_geometry=i?this.m_shape.addGeometry(e):this.m_shape.addGeometry(e,this.m_extent);const h=a.constructEmpty(),m=a.constructEmpty(),o=new u,c=new u,g=l(9,Number.NaN),y=l(9,Number.NaN),f=_(u,9);let v=null;const d=new p,P=[];let I=!1;for(let t=0;!I&&t<4;t++){let e=!1;const s=!!(1&t);let a=0;switch(t){case 0:a=this.m_extent.xmin,e=r.xmin<=a&&r.xmax>=a;break;case 1:a=this.m_extent.ymin,e=r.ymin<=a&&r.ymax>=a;break;case 2:a=this.m_extent.xmax,e=r.xmin<=a&&r.xmax>=a;break;case 3:a=this.m_extent.ymax,e=r.ymin<=a&&r.ymax>=a}if(e){I=!0;for(let e=this.m_shape.getFirstPath(this.m_geometry);e!==x;){let r=!0,p=-1,l=-1;const _=this.m_shape.getFirstVertex(e);let u=_;do{this.progress_(),v=this.m_shape.getSegment(u);let e=v;if(null===e){const t=this.m_shape.getNextVertex(u);if(t===x){n(i),0===p&&P.push(u);break}this.m_shape.queryXY(u,o),d.setStartXY(o),this.m_shape.queryXY(t,c),d.setEndXY(c),e=d}e.queryLooseEnvelope(h);let _=E.checkSegmentIntersection(h,t,a);e.isCurve()&&0===_&&e.isCurve()&&(d.setStartXY(e.getStartXY()),d.setEndXY(e.getEndXY()),this.m_shape.replaceCurveWithLine(u),e=d,d.queryEnvelope(h),_=E.checkSegmentIntersection(h,t,a));let V=0,X=x;if(-1===_){const i=e.intersectionWithAxis2D(s,a,g,y);if(i>0){let t=null;if(e.isCurve()){t=f,n(i<=9);for(let e=0;e<i;e++)s?f[e].setCoords(g[e],a):f[e].setCoords(a,g[e]);V=this.m_shape.splitSegmentAxisAware(u,y,i,t,s?1:0)}else V=this.m_shape.splitSegmentAxisAware(u,y,i,null,-1)}else V=0;V+=1;let h=u,x=this.m_shape.getNextVertex(h);e=null;for(let e=0;e<V;e++){this.m_shape.queryXY(h,o),this.m_shape.queryXY(x,c),v=this.m_shape.getSegment(h);let e=v;null===e&&(d.setStartXY(o),d.setEndXY(c),e=d),e.queryEnvelope(m);let i=E.checkSegmentIntersection(m,t,a);if(e.isCurve()&&0===i&&(this.m_shape.replaceCurveWithLine(h),d.setStartXY(o),d.setEndXY(c),e=d,e.queryEnvelope(m),i=E.checkSegmentIntersection(m,t,a)),-1===i){if(s){Math.abs(o.y-a)<Math.abs(c.y-a)?(o.y=a,this.m_shape.setXY(h,o)):(c.y=a,this.m_shape.setXY(x,c))}else{Math.abs(o.x-a)<Math.abs(c.x-a)?(o.x=a,this.m_shape.setXY(h,o)):(c.x=a,this.m_shape.setXY(x,c))}v=this.m_shape.getSegment(h),e=v,null===e&&(d.setStartXY(o),d.setEndXY(c),e=d),e.queryEnvelope(m),i=E.checkSegmentIntersection(m,t,a),-1===i&&(i=E.checkSegmentIntersectionLoose(m,t,a))}const n=p;p=i,-1===l&&(l=p),0===n&&1===p||1===n&&0===p||0===n&&0===p&&P.push(h),1===p&&(I=!1,r=!1),h=x,X=h,x=this.m_shape.getNextVertex(x)}}if(0===V){const e=p;p=_,-1===l&&(l=p),0===e&&p>=1||e>=1&&0===p||0===e&&0===p&&P.push(u),1===p&&(I=!1,r=!1),X=this.m_shape.getNextVertex(u)}if(u=X,P.length>=256){for(let e=1,t=P.length-1;e<t;e++){const t=P[e];i?this.m_shape.snapVertexForPoleClipping(t,a):this.m_shape.removeVertex(t,!1)}P[1]=P.at(-1),P.length=2}}while(u!==_);if(!r){0!==l||!i&&0!==p&&2!==p||P.push(_);for(let e=0,t=P.length;e<t;e++){const t=P[e];i?this.m_shape.snapVertexForPoleClipping(t,a):this.m_shape.removeVertex(t,!1)}}P.length=0,e=r||0===this.m_shape.getPathSize(e)?this.m_shape.removePath(e):this.m_shape.getNextPath(e)}}}if(I)return e.createInstance();v=null,i?this.removeSpikesAlongPoles():this.resolveBoundaryOverlaps(),s>0&&this.densifyAlongClipExtent(s);const V=this.m_shape.getGeometry(this.m_geometry);if(V.getGeometryType()===t.enumPolygon){V.setFillRule(e.getFillRule())}return V}clipPolyline(e,t){const s=a.constructEmpty(),i=a.constructEmpty(),n=l(9,Number.NaN),r=l(9,Number.NaN),h=new c;let m=e;const o=a.constructEmpty();e.queryLooseEnvelope(o);for(let a=0;a<4;a++){let t=!1;const x=!!(1&a);let p=0;switch(a){case 0:p=this.m_extent.xmin,t=o.xmin<=p&&o.xmax>=p;break;case 1:p=this.m_extent.ymin,t=o.ymin<=p&&o.ymax>=p;break;case 2:p=this.m_extent.xmax,t=o.xmin<=p&&o.xmax>=p;break;case 3:p=this.m_extent.ymax,t=o.ymin<=p&&o.ymax>=p}if(!t)continue;const c=m;m=e.createInstance();const l=c.getImpl().querySegmentIterator();l.resetToFirstPath();const _=new u,g=new u;for(;l.nextPath();){let e=-1,t=!0;for(;l.hasNextSegment();){this.progress_();const o=l.nextSegment(),c=o.isDegenerate(0);o.queryLooseEnvelope(s);const u=E.checkSegmentIntersection(s,a,p);if(-1===u){const s=o.intersectionWithAxis2D(x,p,n,r);let l=0;_.assign(o.getStartXY());for(let u=0;u<=s;u++){const y=u<s?r[u]:1;if(l===y)continue;o.queryCut(l,y,h,!1);const f=h.get();let v=!1;if(f.getStartXY().equals(_)||(f.setStartXY(_),v=!0),u<s&&(x?(g.x=n[u],g.y=p):(g.x=p,g.y=n[u]),f.getEndXY().equals(g)||(f.setEndXY(g),v=!0)),v&&f.normalizeAfterEndpointChange(),!c&&f.isDegenerate(0))continue;f.queryEnvelope(i);let d=E.checkSegmentIntersection(i,a,p);if(-1===d){const e=f.getStartXY(),t=f.getEndXY();if(v=!1,x){Math.abs(e.y-p)<Math.abs(t.y-p)?(e.y=p,f.setStartXY(e),e.equals(f.getStartXY())||(f.setStartXY(e),v=!0)):(t.y=p,t.equals(f.getEndXY())||(f.setEndXY(t),v=!0))}else{Math.abs(e.x-p)<Math.abs(t.x-p)?(e.x=p,e.equals(f.getStartXY())||(f.setStartXY(e),v=!0)):(t.x=p,t.equals(f.getEndXY())||(f.setEndXY(t),v=!0))}v&&f.normalizeAfterEndpointChange(),f.queryEnvelope(i),d=E.checkSegmentIntersection(i,a,p),-1===d&&(d=E.checkSegmentIntersectionLoose(i,a,p))}_.assign(f.getEndXY()),l=y,e=d,e>=1?(m.addSegment(f,t),t=!1):t=!0}}else e=u,e>=1?(m.addSegment(o,t),t=!1):t=!0}}}return m}static checkSegmentIntersection(e,t,s){switch(t){case 0:return e.xmin<s&&e.xmax<=s?0:e.xmin>=s?e.xmax===s?2:1:-1;case 1:return e.ymin<s&&e.ymax<=s?0:e.ymin>=s?e.ymax===s?2:1:-1;case 2:return e.xmin>=s&&e.xmax>s?0:e.xmax<=s?e.xmin===s?2:1:-1;case 3:return e.ymin>=s&&e.ymax>s?0:e.ymax<=s?e.ymin===s?2:1:-1}return r(\"\"),0}static checkSegmentIntersectionLoose(e,t,s){switch(t){case 0:{const t=Math.abs(e.xmin-s),i=Math.abs(e.xmax-s);return e.xmin<s?t>i?0:1:(r(\"\"),1)}case 1:{const t=Math.abs(e.ymin-s),i=Math.abs(e.ymax-s);return e.ymin<s?t>i?0:1:(r(\"\"),1)}case 2:{const t=Math.abs(e.xmin-s),i=Math.abs(e.xmax-s);return e.xmax>s?t<i?0:1:(r(\"\"),1)}case 3:{const t=Math.abs(e.ymin-s),i=Math.abs(e.ymax-s);return e.ymax>s?t<i?0:1:(r(\"\"),1)}}return r(\"\"),0}resolveBoundaryOverlaps(){this.m_verticesOnExtentIndex=-1,this.splitSegments(!1,this.m_extent.xmin),this.splitSegments(!1,this.m_extent.xmax),this.splitSegments(!0,this.m_extent.ymin),this.splitSegments(!0,this.m_extent.ymax),this.m_verticesOnExtent.length=0,this.m_verticesOnExtentIndex=this.m_shape.createUserIndex();const e=new u;for(let t=this.m_shape.getFirstPath(this.m_geometry);t!==x;t=this.m_shape.getNextPath(t)){let s=this.m_shape.getFirstVertex(t);for(let i=0,n=this.m_shape.getPathSize(t);i<n;i++,s=this.m_shape.getNextVertex(s))this.progress_(),this.m_shape.queryXY(s,e),this.m_extent.xmin!==e.x&&this.m_extent.xmax!==e.x&&this.m_extent.ymin!==e.y&&this.m_extent.ymax!==e.y||(this.m_shape.setUserIndex(s,this.m_verticesOnExtentIndex,this.m_verticesOnExtent.length),this.m_verticesOnExtent.push(s))}this.dbgCheckPathFirst(),this.resolveOverlaps(!1,this.m_extent.xmin),this.dbgCheckPathFirst(),this.resolveOverlaps(!1,this.m_extent.xmax),this.dbgCheckPathFirst(),this.resolveOverlaps(!0,this.m_extent.ymin),this.dbgCheckPathFirst(),this.resolveOverlaps(!0,this.m_extent.ymax),this.fixPaths()}densifyAlongClipExtent(e){const t=new u(0,0),s=new u(0,0),i=l(2048,Number.NaN);for(let h=this.m_shape.getFirstPath(this.m_geometry);h!==x;h=this.m_shape.getNextPath(h)){const m=this.m_shape.getFirstVertex(h);let a=m;do{const h=this.m_shape.getNextVertex(a);this.m_shape.queryXY(a,t);let m=-1;if(t.x===this.m_extent.xmin?(this.m_shape.queryXY(h,s),s.x===this.m_extent.xmin&&(m=1)):t.x===this.m_extent.xmax&&(this.m_shape.queryXY(h,s),s.x===this.m_extent.xmax&&(m=1)),t.y===this.m_extent.ymin?(this.m_shape.queryXY(h,s),s.y===this.m_extent.ymin&&(m=0)):t.y===this.m_extent.ymax&&(this.m_shape.queryXY(h,s),s.y===this.m_extent.ymax&&(m=0)),-1===m){a=h;continue}if(this.isCurve(a)){a=h;continue}const o=t.clone(),x=new u(0,0);if(m){const i=t.y-this.m_extent.ymin;x.y=g(s.y-t.y),o.y=e*y(Math.floor(Math.abs(i)/e),i)+this.m_extent.ymin,x.y<0&&(o.y+=e)}else{const i=t.x-this.m_extent.xmin;x.x=g(s.x-t.x),o.x=e*y(Math.floor(Math.abs(i)/e),i)+this.m_extent.xmin,x.x<0&&(o.x+=e)}const p=m?s.y-t.y:s.x-t.x,c=Math.abs(p);if(c/e>65536&&r(\"\"),c>0){const s=Math.trunc(c/e)+2;i.length<s&&(i.length=s);let r=0;for(let h=0;;h++){const s=o.add(x.mul(h*e)),a=(m?s.y-t.y:s.x-t.x)/p;if(a>=1)break;a<=0||(n(r<=i.length),i[r]=a,r++)}0!==r&&this.m_shape.splitSegment(a,i,r)}a=h}while(a!==m)}}splitSegments(e,t){let s=-1;const i=new u,n=[];for(let _=this.m_shape.getFirstPath(this.m_geometry);_!==x;_=this.m_shape.getNextPath(_)){let r=this.m_shape.getFirstVertex(_),h=x;for(let m=0,a=this.m_shape.getPathSize(_);m<a;m++,r=h)if(this.progress_(),h=this.m_shape.getNextVertex(r),this.m_shape.queryXY(r,i),(e?i.y===t:i.x===t)&&(this.m_shape.queryXY(h,i),e?i.y===t:i.x===t)){if(this.isCurve(r))continue;-1===s&&(s=this.m_shape.createUserIndex()),1!==this.m_shape.getUserIndex(r,s)&&(n.push(r),this.m_shape.setUserIndex(r,s,1)),1!==this.m_shape.getUserIndex(h,s)&&(n.push(h),this.m_shape.setUserIndex(h,s,1))}}if(-1!==s&&this.m_shape.removeUserIndex(s),n.length<3)return;n.sort(((e,t)=>this.compareVertices(e,t)));const r=new u,h=new u,m=new u;h.setNAN();let a=-1;let o=[],p=[];const c=this.m_shape.createUserIndex(),l=this.m_shape.createUserIndex();for(let x=0,_=n.length;x<_;x++){const s=n[x];if(this.m_shape.queryXY(s,i),!i.isEqualPoint2D(h)){if(-1===a){a=x,h.setCoordsPoint2D(i);continue}for(let i=a;i<x;i++){const s=n[i],m=this.m_shape.getNextVertex(s),a=this.m_shape.getPrevVertex(s);let x=!1;this.m_shape.queryXY(m,r),h.compare(r)<0&&(e?r.y===t:r.x===t)&&(this.isCurve(s)||(o.push(s),x=!0,this.m_shape.setUserIndex(s,l,1))),this.m_shape.queryXY(a,r),h.compare(r)<0&&(e?r.y===t:r.x===t)&&(this.isCurve(a)||(x||o.push(s),this.m_shape.setUserIndex(s,c,1)))}for(let e=0,t=o.length;e<t;e++){const t=o[e],s=this.m_shape.getUserIndex(t,c),n=this.m_shape.getUserIndex(t,l);if(1===s){const e=this.m_shape.getPrevVertex(t);this.m_shape.queryXY(e,m);let s=0;if(!m.isEqualPoint2D(i)){const n=u.distance(h,m);s=u.distance(m,i)/n,0===s?s=Number.EPSILON:1===s&&(s=1-Number.EPSILON),this.m_shape.splitSegment(e,[s],1);const r=this.m_shape.getPrevVertex(t);this.m_shape.setXY(r,i),p.push(r),this.m_shape.setUserIndex(r,c,1),this.m_shape.setUserIndex(r,l,-1)}}if(1===n){const e=this.m_shape.getNextVertex(t);this.m_shape.queryXY(e,m);let s=0;if(!m.isEqualPoint2D(i)){const e=u.distance(h,m);s=u.distance(h,i)/e,0===s?s=Number.EPSILON:1===s&&(s=1-Number.EPSILON),this.m_shape.splitSegment(t,[s],1);const n=this.m_shape.getNextVertex(t);this.m_shape.setXY(n,i),p.push(n),this.m_shape.setUserIndex(n,c,-1),this.m_shape.setUserIndex(n,l,1)}}}const s=o;o=p,p=s,p.length=0,a=x,h.setCoordsPoint2D(i)}}this.m_shape.removeUserIndex(c),this.m_shape.removeUserIndex(l)}resolveOverlaps(e,t){const s=new u,i=[];let r=-1;for(let n=0,o=this.m_verticesOnExtent.length;n<o;n++){this.progress_();const h=this.m_verticesOnExtent[n];if(h===x)continue;const m=this.m_shape.getNextVertex(h);if(this.m_shape.queryXY(h,s),(e?s.y===t:s.x===t)&&(this.m_shape.queryXY(m,s),e?s.y===t:s.x===t)){if(this.isCurve(h))continue;-1===r&&(r=this.m_shape.createUserIndex()),-2!==this.m_shape.getUserIndex(h,r)&&(i.push(h),this.m_shape.setUserIndex(h,r,-2)),-2!==this.m_shape.getUserIndex(m,r)&&(i.push(m),this.m_shape.setUserIndex(m,r,-2))}}if(0===i.length)return void(-1!==r&&this.m_shape.removeUserIndex(r));n(-1!==r),i.sort(((e,t)=>this.compareVertices(e,t)));for(let n=0,o=i.length;n<o;n++){const e=i[n];this.m_shape.setUserIndex(e,r,n)}const h=new u,m=new u;m.setNAN();let a=-1;for(let n=0,o=i.length;n<o;n++){this.progress_();const o=i[n];if(o!==x&&(this.m_shape.queryXY(o,s),!s.isEqualPoint2D(m))){if(-1!==a)for(;;){let s=!1;const o=n;for(let p=a;p<o;p++){const a=i[p];if(a===x)continue;let o=x;const c=this.m_shape.getNextVertex(a);this.m_shape.queryXY(c,h),m.compare(h)<0&&(e?h.y===t:h.x===t)&&(this.isCurve(a)||(o=c));let l=x;const _=this.m_shape.getPrevVertex(a);if(this.m_shape.queryXY(_,h),m.compare(h)<0&&(e?h.y===t:h.x===t)&&(this.isCurve(_)||(l=_)),o===x||l===x){if(o!==x||l!==x){for(let c=p+1;c<n;c++){const n=i[c];if(n===x)continue;const p=this.m_shape.getNextVertex(n);let _=x;this.m_shape.queryXY(p,h),m.compare(h)<0&&(e?h.y===t:h.x===t)&&(this.isCurve(n)||(_=p));const u=this.m_shape.getPrevVertex(n);let g=x;if(this.m_shape.queryXY(u,h),m.compare(h)<0&&(e?h.y===t:h.x===t)&&(this.isCurve(u)||(g=u)),_!==x&&g!==x){this.beforeRemoveVertex(n,i,r),this.m_shape.removeVertex(n,!1),this.beforeRemoveVertex(_,i,r),this.m_shape.removeVertex(_,!1),s=!0;break}if(o!==x&&g!==x){this.removeOverlap(i,a,o,n,g,r),s=!0;break}if(l!==x&&_!==x){this.removeOverlap(i,n,_,a,l,r),s=!0;break}}if(s)break}}else this.beforeRemoveVertex(a,i,r),this.m_shape.removeVertex(a,!1),this.beforeRemoveVertex(o,i,r),this.m_shape.removeVertex(o,!1),s=!0}if(!s)break}a=n,m.setCoordsPoint2D(s)}}this.m_shape.removeUserIndex(r)}beforeRemoveVertex(e,t,s){let i=this.m_shape.getUserIndex(e,s);n(i>=0),t[i]=x,i=this.m_shape.getUserIndex(e,this.m_verticesOnExtentIndex),n(i>=0),this.m_verticesOnExtent[i]=x;const r=this.m_shape.getPathFromVertex(e);if(r!==x){this.m_shape.getFirstVertex(r)===e&&(this.m_shape.setFirstVertex(r,x),this.m_shape.setLastVertex(r,x))}}removeOverlap(e,t,s,i,n,r){this.m_shape.setNextVertex(t,i),this.m_shape.setPrevVertex(i,t),this.m_shape.setPrevVertex(s,n),this.m_shape.setNextVertex(n,s),this.beforeRemoveVertex(i,e,r),this.m_shape.removeVertexInternal(i,!1),this.beforeRemoveVertex(n,e,r),this.m_shape.removeVertexInternal(n,!0)}removeSpikesAlongPoles(){this.removeSpikesOnPole(this.m_extent.ymin),this.removeSpikesOnPole(this.m_extent.ymax)}removeSpikesOnPole(e){for(let t=this.m_shape.getFirstPath(this.m_geometry);t!==x;t=this.m_shape.getNextPath(t)){const s=this.m_shape.getPathSize(t);if(s<3)continue;let i=this.m_shape.getFirstVertex(t);const n=new u;this.m_shape.queryXY(i,n);let r=n.y===e&&!this.isCurve(i);i=this.m_shape.getNextVertex(i);const h=new u;this.m_shape.queryXY(i,h);let m=h.y===e&&!this.isCurve(i);i=this.m_shape.getNextVertex(i);const a=new u;for(let t=0,o=s-2;t<o;t++,i=this.m_shape.getNextVertex(i)){this.progress_(),this.m_shape.queryXY(i,a);const t=a.y===e;if(m&&r&&t){if((h.x-n.x)*(a.x-h.x)<=0){this.m_shape.removeVertex(this.m_shape.getPrevVertex(i),!1),h.setCoordsPoint2D(a),m=t&&!this.isCurve(i);continue}}n.setCoordsPoint2D(h),r=m,h.setCoordsPoint2D(a),m=t&&!this.isCurve(i)}}}fixPaths(){for(let n=0,r=this.m_verticesOnExtent.length;n<r;n++){const e=this.m_verticesOnExtent[n];e!==x&&this.m_shape.setPathToVertex(e,x)}const e=this.m_shape.hasCurves();let t=0,s=0;for(let n=this.m_shape.getFirstPath(this.m_geometry);n!==x;){const e=this.m_shape.getFirstVertex(n);if(e===x||n!==this.m_shape.getPathFromVertex(e)){const e=n;n=this.m_shape.getNextPath(n),this.m_shape.setFirstVertex(e,x),this.m_shape.removePathOnly(e);continue}let i=e,r=0;do{this.m_shape.setPathToVertex(i,n),r++,i=this.m_shape.getNextVertex(i)}while(i!==e);this.m_shape.setRingAreaValid(n,!1),this.m_shape.setLastVertex(n,this.m_shape.getPrevVertex(e)),this.m_shape.setPathSize(n,r),s+=r,t++,n=this.m_shape.getNextPath(n)}for(let r=0,h=this.m_verticesOnExtent.length;r<h;r++){let i=this.m_verticesOnExtent[r];if(i===x)continue;let h=this.m_shape.getPathFromVertex(i);if(h!==x)continue;h=this.m_shape.insertPath(this.m_geometry,x);let m=!1,a=0;const o=i;do{this.m_shape.setPathToVertex(i,h),a++,e&&a<=2&&(m||=this.isCurve(i)),i=this.m_shape.getNextVertex(i)}while(i!==o);if(m?0===a:a<=2){let e=this.m_shape.getUserIndex(o,this.m_verticesOnExtentIndex);n(e>=0),this.m_verticesOnExtent[e]=x;const t=this.m_shape.removeVertex(o,!1);2===a&&(e=this.m_shape.getUserIndex(t,this.m_verticesOnExtentIndex),e>=0&&(this.m_verticesOnExtent[e]=x),this.m_shape.removeVertex(t,!1));const s=h;h=this.m_shape.getNextPath(h),this.m_shape.setFirstVertex(s,x),this.m_shape.removePathOnly(s)}else this.m_shape.setClosedPath(h,!0),this.m_shape.setPathSize(h,a),this.m_shape.setFirstVertex(h,o),this.m_shape.setLastVertex(h,this.m_shape.getPrevVertex(o)),this.m_shape.setRingAreaValid(h,!1),s+=a,t++}this.m_shape.setGeometryPathCount(this.m_geometry,t),this.m_shape.setGeometryVertexCount(this.m_geometry,s);let i=0;for(let n=this.m_shape.getFirstGeometry();n!==x;n=this.m_shape.getNextGeometry(n))i+=this.m_shape.getPointCount(n);this.m_shape.setTotalPointCount(i)}dbgCheckPathFirst(){}isCurve(e){return null!==this.m_shape.getSegment(e)}compareVertices(e,t){const s=new u;this.m_shape.queryXY(e,s);const i=new u;this.m_shape.queryXY(t,i);return s.compare(i)}clipPolesOut(e,t){return this.clipPolygonOrProjectedPolyline2(e,t)}}class I{getOperatorType(){return 10004}supportsCurves(){return!0}accelerateGeometry(e,t,s){return!1}canAccelerateGeometry(e){return!1}executeMany(e,t,s,i){return new V(e,t,s,i)}execute(e,t,s,i){return X(e,t,s,i)}}class V extends e{constructor(e,t,s,n){super(),this.m_progressTracker=n,this.m_index=-1,e||i(\"\"),this.m_envelope=t,this.m_inputGeometryCursor=e,this.m_spatialRefImpl=s,this.m_tolerance=m(s,t,!1).total()}next(){let e;return(e=this.m_inputGeometryCursor.next())?(h(e),this.m_index=this.m_inputGeometryCursor.getGeometryID(),f(e,this.m_envelope,this.m_tolerance,0,this.m_progressTracker)):null}getGeometryID(){return this.m_index}tock(){return!0}getRank(){return 1}}function X(e,t,s,i){return v(e,t,s,Number.NaN,0,i)}export{I as O,d as a,f as c};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}