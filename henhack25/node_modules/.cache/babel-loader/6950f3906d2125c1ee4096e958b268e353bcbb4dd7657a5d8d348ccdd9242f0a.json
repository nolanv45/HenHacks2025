{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport t from \"../../request.js\";\nimport e from \"../../core/Error.js\";\nimport i from \"../../core/Logger.js\";\nimport { isArrayBuffer as s, isUint8ClampedArray as r } from \"../../core/typedArrayUtil.js\";\nimport { urlToObject as a, objectToQuery as o } from \"../../core/urlUtils.js\";\nconst h = 1.15;\nclass n {\n  constructor(t, e) {\n    this._spriteSource = t, this._maxTextureSize = e, this.devicePixelRatio = 1, this._spriteImageFormat = \"png\", this._isRetina = !1, this._spritesData = {}, this.image = null, this.width = null, this.height = null, this.loadStatus = \"not-loaded\", \"url\" === t.type && t.spriteFormat && (this._spriteImageFormat = t.spriteFormat), t.pixelRatio && (this.devicePixelRatio = t.pixelRatio), this.baseURL = t.spriteUrl;\n  }\n  get spriteNames() {\n    const t = [];\n    for (const e in this._spritesData) t.push(e);\n    return t.sort(), t;\n  }\n  getSpriteInfo(t) {\n    return this._spritesData ? this._spritesData[t] : null;\n  }\n  async load(t) {\n    if (this.baseURL) {\n      this.loadStatus = \"loading\";\n      try {\n        await this._loadSprites(t), this.loadStatus = \"loaded\";\n      } catch {\n        this.loadStatus = \"failed\";\n      }\n    } else this.loadStatus = \"failed\";\n  }\n  async _loadSprites(t) {\n    this._isRetina = this.devicePixelRatio > h;\n    const {\n        width: s,\n        height: r,\n        data: a,\n        json: o\n      } = await this._getSpriteData(this._spriteSource, t),\n      n = Object.keys(o);\n    if (!n || 0 === n.length || !a) return this._spritesData = this.image = null, void (this.width = this.height = 0);\n    this._spritesData = o, this.width = s, this.height = r;\n    const d = Math.max(this._maxTextureSize, 4096);\n    if (s > d || r > d) {\n      const t = `Sprite resource for style ${this.baseURL} is bigger than the maximum allowed of ${d} pixels}`;\n      throw i.getLogger(\"esri.layers.support.SpriteSource\").error(t), new e(\"SpriteSource\", t);\n    }\n    let p;\n    for (let e = 0; e < a.length; e += 4) p = a[e + 3] / 255, a[e] = a[e] * p, a[e + 1] = a[e + 1] * p, a[e + 2] = a[e + 2] * p;\n    this.image = a;\n  }\n  async _getSpriteData(i, n) {\n    if (\"image\" === i.type) {\n      let t, a;\n      if (this.devicePixelRatio < h) {\n        if (!i.spriteSource1x) throw new e(\"SpriteSource\", \"no image data provided for low resolution sprites!\");\n        t = i.spriteSource1x.image, a = i.spriteSource1x.json;\n      } else {\n        if (!i.spriteSource2x) throw new e(\"SpriteSource\", \"no image data provided for high resolution sprites!\");\n        t = i.spriteSource2x.image, a = i.spriteSource2x.json;\n      }\n      return \"width\" in t && \"height\" in t && \"data\" in t && (s(t.data) || r(t.data)) ? {\n        width: t.width,\n        height: t.height,\n        data: new Uint8Array(t.data),\n        json: a\n      } : {\n        ...d(t),\n        json: a\n      };\n    }\n    const p = a(this.baseURL),\n      l = p.query ? \"?\" + o(p.query) : \"\",\n      g = this._isRetina ? \"@2x\" : \"\",\n      u = `${p.path}${g}.${this._spriteImageFormat}${l}`,\n      c = `${p.path}${g}.json${l}`,\n      [m, S] = await Promise.all([t(c, n), t(u, {\n        responseType: \"image\",\n        ...n\n      })]);\n    return {\n      ...d(S.data),\n      json: m.data\n    };\n  }\n}\nfunction d(t) {\n  const e = document.createElement(\"canvas\"),\n    i = e.getContext(\"2d\");\n  e.width = t.width, e.height = t.height, i.drawImage(t, 0, 0, t.width, t.height);\n  const s = i.getImageData(0, 0, t.width, t.height);\n  return {\n    width: t.width,\n    height: t.height,\n    data: new Uint8Array(s.data)\n  };\n}\nexport { n as default };","map":{"version":3,"names":["t","e","i","isArrayBuffer","s","isUint8ClampedArray","r","urlToObject","a","objectToQuery","o","h","n","constructor","_spriteSource","_maxTextureSize","devicePixelRatio","_spriteImageFormat","_isRetina","_spritesData","image","width","height","loadStatus","type","spriteFormat","pixelRatio","baseURL","spriteUrl","spriteNames","push","sort","getSpriteInfo","load","_loadSprites","data","json","_getSpriteData","Object","keys","length","d","Math","max","getLogger","error","p","spriteSource1x","spriteSource2x","Uint8Array","l","query","g","u","path","c","m","S","Promise","all","responseType","document","createElement","getContext","drawImage","getImageData","default"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/layers/support/SpriteSource.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport t from\"../../request.js\";import e from\"../../core/Error.js\";import i from\"../../core/Logger.js\";import{isArrayBuffer as s,isUint8ClampedArray as r}from\"../../core/typedArrayUtil.js\";import{urlToObject as a,objectToQuery as o}from\"../../core/urlUtils.js\";const h=1.15;class n{constructor(t,e){this._spriteSource=t,this._maxTextureSize=e,this.devicePixelRatio=1,this._spriteImageFormat=\"png\",this._isRetina=!1,this._spritesData={},this.image=null,this.width=null,this.height=null,this.loadStatus=\"not-loaded\",\"url\"===t.type&&t.spriteFormat&&(this._spriteImageFormat=t.spriteFormat),t.pixelRatio&&(this.devicePixelRatio=t.pixelRatio),this.baseURL=t.spriteUrl}get spriteNames(){const t=[];for(const e in this._spritesData)t.push(e);return t.sort(),t}getSpriteInfo(t){return this._spritesData?this._spritesData[t]:null}async load(t){if(this.baseURL){this.loadStatus=\"loading\";try{await this._loadSprites(t),this.loadStatus=\"loaded\"}catch{this.loadStatus=\"failed\"}}else this.loadStatus=\"failed\"}async _loadSprites(t){this._isRetina=this.devicePixelRatio>h;const{width:s,height:r,data:a,json:o}=await this._getSpriteData(this._spriteSource,t),n=Object.keys(o);if(!n||0===n.length||!a)return this._spritesData=this.image=null,void(this.width=this.height=0);this._spritesData=o,this.width=s,this.height=r;const d=Math.max(this._maxTextureSize,4096);if(s>d||r>d){const t=`Sprite resource for style ${this.baseURL} is bigger than the maximum allowed of ${d} pixels}`;throw i.getLogger(\"esri.layers.support.SpriteSource\").error(t),new e(\"SpriteSource\",t)}let p;for(let e=0;e<a.length;e+=4)p=a[e+3]/255,a[e]=a[e]*p,a[e+1]=a[e+1]*p,a[e+2]=a[e+2]*p;this.image=a}async _getSpriteData(i,n){if(\"image\"===i.type){let t,a;if(this.devicePixelRatio<h){if(!i.spriteSource1x)throw new e(\"SpriteSource\",\"no image data provided for low resolution sprites!\");t=i.spriteSource1x.image,a=i.spriteSource1x.json}else{if(!i.spriteSource2x)throw new e(\"SpriteSource\",\"no image data provided for high resolution sprites!\");t=i.spriteSource2x.image,a=i.spriteSource2x.json}return\"width\"in t&&\"height\"in t&&\"data\"in t&&(s(t.data)||r(t.data))?{width:t.width,height:t.height,data:new Uint8Array(t.data),json:a}:{...d(t),json:a}}const p=a(this.baseURL),l=p.query?\"?\"+o(p.query):\"\",g=this._isRetina?\"@2x\":\"\",u=`${p.path}${g}.${this._spriteImageFormat}${l}`,c=`${p.path}${g}.json${l}`,[m,S]=await Promise.all([t(c,n),t(u,{responseType:\"image\",...n})]);return{...d(S.data),json:m.data}}}function d(t){const e=document.createElement(\"canvas\"),i=e.getContext(\"2d\");e.width=t.width,e.height=t.height,i.drawImage(t,0,0,t.width,t.height);const s=i.getImageData(0,0,t.width,t.height);return{width:t.width,height:t.height,data:new Uint8Array(s.data)}}export{n as default};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}