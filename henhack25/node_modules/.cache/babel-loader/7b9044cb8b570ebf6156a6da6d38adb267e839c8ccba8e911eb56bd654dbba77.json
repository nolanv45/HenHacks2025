{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { glsl as e } from \"../../shaderModules/glsl.js\";\nimport { Texture2DBindUniform as s } from \"../../shaderModules/Texture2DBindUniform.js\";\nimport { blurSizePixels as r } from \"../../../effects/ssao/SSAO.js\";\nfunction t(t, o) {\n  const n = t.fragment;\n  o.receiveAmbientOcclusion ? (n.uniforms.add(new s(\"ssaoTex\", e => e.ssao?.getTexture())), n.constants.add(\"blurSizePixelsInverse\", \"float\", 1 / r), n.code.add(e`float evaluateAmbientOcclusionInverse() {\nvec2 ssaoTextureSizeInverse = 1.0 / vec2(textureSize(ssaoTex, 0));\nreturn texture(ssaoTex, gl_FragCoord.xy * blurSizePixelsInverse * ssaoTextureSizeInverse).r;\n}\nfloat evaluateAmbientOcclusion() {\nreturn 1.0 - evaluateAmbientOcclusionInverse();\n}`)) : n.code.add(e`float evaluateAmbientOcclusionInverse() { return 1.0; }\nfloat evaluateAmbientOcclusion() { return 0.0; }`);\n}\nexport { t as EvaluateAmbientOcclusion };","map":{"version":3,"names":["glsl","e","Texture2DBindUniform","s","blurSizePixels","r","t","o","n","fragment","receiveAmbientOcclusion","uniforms","add","ssao","getTexture","constants","code","EvaluateAmbientOcclusion"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateAmbientOcclusion.glsl.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{glsl as e}from\"../../shaderModules/glsl.js\";import{Texture2DBindUniform as s}from\"../../shaderModules/Texture2DBindUniform.js\";import{blurSizePixels as r}from\"../../../effects/ssao/SSAO.js\";function t(t,o){const n=t.fragment;o.receiveAmbientOcclusion?(n.uniforms.add(new s(\"ssaoTex\",(e=>e.ssao?.getTexture()))),n.constants.add(\"blurSizePixelsInverse\",\"float\",1/r),n.code.add(e`float evaluateAmbientOcclusionInverse() {\nvec2 ssaoTextureSizeInverse = 1.0 / vec2(textureSize(ssaoTex, 0));\nreturn texture(ssaoTex, gl_FragCoord.xy * blurSizePixelsInverse * ssaoTextureSizeInverse).r;\n}\nfloat evaluateAmbientOcclusion() {\nreturn 1.0 - evaluateAmbientOcclusionInverse();\n}`)):n.code.add(e`float evaluateAmbientOcclusionInverse() { return 1.0; }\nfloat evaluateAmbientOcclusion() { return 0.0; }`)}export{t as EvaluateAmbientOcclusion};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,IAAI,IAAIC,CAAC,QAAK,6BAA6B;AAAC,SAAOC,oBAAoB,IAAIC,CAAC,QAAK,6CAA6C;AAAC,SAAOC,cAAc,IAAIC,CAAC,QAAK,+BAA+B;AAAC,SAASC,CAACA,CAACA,CAAC,EAACC,CAAC,EAAC;EAAC,MAAMC,CAAC,GAACF,CAAC,CAACG,QAAQ;EAACF,CAAC,CAACG,uBAAuB,IAAEF,CAAC,CAACG,QAAQ,CAACC,GAAG,CAAC,IAAIT,CAAC,CAAC,SAAS,EAAEF,CAAC,IAAEA,CAAC,CAACY,IAAI,EAAEC,UAAU,CAAC,CAAE,CAAC,CAAC,EAACN,CAAC,CAACO,SAAS,CAACH,GAAG,CAAC,uBAAuB,EAAC,OAAO,EAAC,CAAC,GAACP,CAAC,CAAC,EAACG,CAAC,CAACQ,IAAI,CAACJ,GAAG,CAACX,CAAC;AAC/X;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC,IAAEO,CAAC,CAACQ,IAAI,CAACJ,GAAG,CAACX,CAAC;AACjB,iDAAiD,CAAC;AAAA;AAAC,SAAOK,CAAC,IAAIW,wBAAwB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}