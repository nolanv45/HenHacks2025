{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { G as t, S as s } from \"../../../chunks/SimpleGeometryCursor.js\";\nimport { b as e } from \"../../../chunks/Envelope.js\";\nimport { d as i, t as n, G as o, f as h, b as r } from \"../../../chunks/Geometry.js\";\nimport { P as m, a, d as f } from \"../../../chunks/QuadraticBezier.js\";\nimport { l as _, P as c, k as d, t as P, e as u } from \"../../../chunks/Point2D.js\";\nfunction l(t, s, e, o, h, r) {\n  if (null === t && n(\"\"), t.getDimension() < 1 && n(\"\"), h > 0 || n(\"\"), i(t), 0 === s || t.isEmpty()) return t;\n  const m = new A(r);\n  return m.m_bUseZ = t.hasAttribute(1), m.m_bUseM = t.hasAttribute(2), m.m_inputGeometry = t, m.m_distance = s, m.m_tolerance = h, m.m_joins = e, m.m_miterLimit = o > 1 ? o : 1, m.m_progressCounter = 0, m.constructOffset();\n}\nconst y = 1.4142135623730951,\n  x = .017453292519943295,\n  p = 256,\n  b = 512,\n  M = 1024;\nclass g {\n  static construct(t, s, e) {\n    const i = new g();\n    return i.x = t.x, i.y = t.y, i.m_next = -1, i.m_prev = -1, i.z = s, i.m = e, i.type = 0, i;\n  }\n  clone() {\n    const t = new g();\n    return t.x = this.x, t.y = this.y, t.m_next = this.m_next, t.m_prev = this.m_prev, t.z = this.z, t.m = this.m, t.type = this.type, t;\n  }\n  asPoint2D() {\n    return new c(this.x, this.y);\n  }\n}\nfunction C() {\n  return {\n    pt: new g(),\n    bAtExistingPt: !1\n  };\n}\nclass A {\n  constructor(t) {\n    this.m_distance = -1, this.m_tolerance = -1, this.m_miterLimit = 10, this.m_joins = 0, this.m_progressCounter = 0, this.m_bUseZ = !1, this.m_bUseM = !1, this.m_srcPts = [], this.m_srcPtCount = 0, this.m_offsetPts = [], this.m_offsetPtCount = 0, this.m_a1 = 0, this.m_a2 = 0, this.m_progressTracker = t;\n  }\n  constructOffset() {\n    const t = this.m_inputGeometry.getGeometryType();\n    if (t === o.enumLine) return this.offsetLine();\n    if (t === o.enumEnvelope) return this.offsetEnvelope();\n    if (h(t)) {\n      const t = new m();\n      return t.addSegment(this.m_inputGeometry, !0), this.m_inputGeometry = t, this.constructOffset();\n    }\n    if (t === o.enumPolyline) {\n      const t = new m();\n      return this.offsetMultiPath(t), t;\n    }\n    if (t === o.enumPolygon) {\n      const t = new a();\n      return this.offsetMultiPath(t), t;\n    }\n    r(\"\");\n  }\n  offsetLine() {\n    const t = this.m_inputGeometry,\n      s = t.getStartXY(),\n      e = t.getEndXY(),\n      i = new c();\n    i.setSub(e, s), i.normalize(), i.leftPerpendicularThis(), i.scale(this.m_distance), s.addThis(i), e.addThis(i);\n    const n = t.clone();\n    return n.setStartXY(s), n.setEndXY(e), n;\n  }\n  offsetEnvelope() {\n    const t = this.m_inputGeometry;\n    if (this.m_distance > 0 && 2 !== this.m_joins) {\n      const s = new a();\n      return s.addEnvelope(t, !1), this.m_inputGeometry = s, this.constructOffset();\n    }\n    const s = t.clone();\n    return s.inflateCoords(this.m_distance, this.m_distance), s;\n  }\n  progress() {}\n  static buildPoint(t, s, e, i) {\n    i.x = t.x + s * Math.cos(e), i.y = t.y + s * Math.sin(e), i.type = t.type, i.z = t.z, i.m = t.m, i.m_next = -1, i.m_prev = -1;\n  }\n  addPoint(t) {\n    this.m_offsetPts.push(t.clone()), this.m_offsetPtCount++;\n  }\n  addPointEx(t, s) {\n    if (0 === this.m_offsetPtCount) return void this.addPoint(t);\n    const e = this.m_srcPtCount,\n      i = this.m_srcPts[0 === s ? e - 1 : s - 1],\n      n = this.m_srcPts[s],\n      o = A.dotSign(i, n, this.m_offsetPts[this.m_offsetPtCount - 1], t);\n    if (o > 0) this.addPoint(t);else if (o < 0) if (A.dotSign(i, n, n, this.m_offsetPts[this.m_offsetPtCount - 1]) > 0) {\n      const n = new g();\n      let o;\n      o = 0 === s ? e - 2 : 1 === s ? e - 1 : s - 2;\n      const h = this.m_srcPts[o],\n        r = Math.atan2(i.y - h.y, i.x - h.x);\n      if (A.buildPoint(i, this.m_distance, r - _, n), this.m_offsetPts[this.m_offsetPtCount - 1] = n, 1 === this.m_joins || 2 === this.m_joins) {\n        n.x = .5 * (n.x + i.x), n.y = .5 * (n.y + i.y), this.addPoint(n), A.buildPoint(i, this.m_distance, this.m_a1 + _, n);\n        const t = n.clone();\n        t.x = .5 * (t.x + i.x), t.y = .5 * (t.y + i.y), t.type |= p, this.addPoint(t), this.addPoint(n);\n      } else A.buildPoint(i, this.m_distance, this.m_a1 + _, n), n.type |= p, this.addPoint(n);\n      this.addPointEx(t, s);\n    } else {\n      const t = new g();\n      if (A.buildPoint(n, this.m_distance, this.m_a1 + _, t), this.addPoint(t), 1 === this.m_joins || 2 === this.m_joins) {\n        t.x = .5 * (t.x + n.x), t.y = .5 * (t.y + n.y), this.addPoint(t), A.buildPoint(n, this.m_distance, this.m_a2 - _, t);\n        const s = t.clone();\n        s.x = .5 * (s.x + n.x), s.y = .5 * (s.y + n.y), s.type |= p, this.addPoint(s), this.addPoint(t);\n      } else A.buildPoint(n, this.m_distance, this.m_a2 - _, t), t.type |= p, this.addPoint(t);\n    }\n  }\n  buildOffset() {\n    const t = new g(),\n      s = this.m_srcPtCount;\n    this.m_offsetPtCount = 0;\n    const e = .5 * this.m_tolerance;\n    let i = 0,\n      n = 0;\n    for (let o = 0; o < s; o++) {\n      const h = this.m_srcPts[o],\n        r = 0 === o ? this.m_srcPts[s - 1] : this.m_srcPts[o - 1],\n        m = o === s - 1 ? this.m_srcPts[0] : this.m_srcPts[o + 1];\n      let a,\n        f,\n        P = 0;\n      {\n        const t = r.x - h.x,\n          s = r.y - h.y,\n          e = m.x - h.x,\n          _ = m.y - h.y;\n        a = Math.atan2(s, t), f = Math.atan2(_, e), this.m_a1 = a, this.m_a2 = f, 0 === o && (i = a, n = f), P = c.orientationRobust(h.asPoint2D(), r.asPoint2D(), m.asPoint2D());\n      }\n      const u = f;\n      if (f < a && (f += d), P * this.m_distance > 0) {\n        if (1 === this.m_joins || 2 === this.m_joins) {\n          A.buildPoint(h, this.m_distance, a + _, t), this.addPoint(t);\n          const s = .001;\n          t.x = h.x + (t.x - h.x) * s, t.y = h.y + (t.y - h.y) * s, this.addPoint(t), A.buildPoint(h, this.m_distance, f - _, t);\n          const e = t.clone();\n          e.x = h.x + (e.x - h.x) * s, e.y = h.y + (e.y - h.y) * s, e.type |= p, this.addPoint(e), this.addPoint(t);\n        } else {\n          const s = .5 * (f - a),\n            e = 0 === s ? this.m_distance : this.m_distance / Math.abs(Math.sin(s));\n          A.buildPoint(h, e, .5 * (a + f), t), this.addPointEx(t, o);\n        }\n      } else if (h.type & b) {\n        const s = 1 - e / Math.abs(this.m_distance);\n        let i = 1,\n          n = this.m_distance < 0 ? -Math.PI : Math.PI;\n        if (s > -1 && s < 1) {\n          let t = 2 * Math.acos(s);\n          t < x && (t = x), i = Math.trunc(Math.PI / t + 1.5), i > 1 && (n /= i);\n        }\n        i <= 1 && (i = 2, n /= 2);\n        let r = a + _;\n        A.buildPoint(h, this.m_distance, r, t), 0 === o && (t.type |= M), this.addPointEx(t, o);\n        const m = this.m_distance / Math.cos(n / 2);\n        for (r += n / 2, A.buildPoint(h, m, r, t), t.type |= M, this.addPoint(t); --i > 0;) r += n, A.buildPoint(h, m, r, t), t.type |= M, this.addPoint(t);\n        A.buildPoint(h, this.m_distance, f - _, t), t.type |= M, this.addPoint(t);\n      } else if (1 !== this.m_joins) {\n        if (0 !== this.m_joins) {\n          if (2 !== this.m_joins) {\n            let s;\n            if (f = u, this.m_distance > 0 ? (f > a && (f -= d), s = a - f < _) : (f < a && (f += d), s = f - a < _), s) {\n              const s = this.m_distance * y;\n              let e;\n              e = s < 0 ? a + .25 * Math.PI : a + 3 * Math.PI * .25, A.buildPoint(h, s, e, t), this.addPointEx(t, o), e = s < 0 ? f - .25 * Math.PI : f - 3 * Math.PI * .25, A.buildPoint(h, s, e, t), this.addPoint(t);\n            } else {\n              const s = .5 * (f - a),\n                e = this.m_distance / Math.abs(Math.sin(s));\n              f < a && (f += d), A.buildPoint(h, e, (a + f) / 2, t), this.addPointEx(t, o);\n            }\n          } else {\n            const s = r.x - h.x,\n              e = r.y - h.y,\n              i = m.x - h.x,\n              n = m.y - h.y,\n              _ = (s * i + e * n) / Math.sqrt(s * s + e * e) / Math.sqrt(i * i + n * n);\n            if (_ > 1 - 1e-8) {\n              A.buildPoint(h, y * this.m_distance, f - .25 * Math.PI, t), this.addPointEx(t, o), A.buildPoint(h, y * this.m_distance, f + .25 * Math.PI, t), this.addPoint(t);\n              continue;\n            }\n            const d = Math.abs(this.m_distance / Math.sin(.5 * Math.acos(_))),\n              P = Math.abs(this.m_miterLimit * this.m_distance);\n            if (d > P) {\n              const s = .5 * (f - a),\n                e = this.m_distance / Math.abs(Math.sin(s));\n              A.buildPoint(h, e, .5 * (a + f), t);\n              const i = c.construct(t.x, t.y),\n                n = c.construct(h.x, h.y),\n                r = new c();\n              r.setSub(i, n);\n              const m = new c();\n              m.setScaleAdd(P / r.length(), r, n);\n              const _ = Math.sqrt(d * d - this.m_distance * this.m_distance),\n                u = (d - P) * Math.abs(this.m_distance) / _;\n              this.m_distance > 0 ? r.leftPerpendicularThis() : r.rightPerpendicularThis(), r.scale(u / r.length());\n              const l = new c();\n              l.setAdd(m, r);\n              const y = new c();\n              y.setSub(m, r), t.x = l.x, t.y = l.y, this.addPointEx(t, o), t.x = y.x, t.y = y.y, this.addPoint(t);\n              continue;\n            }\n            const u = .5 * (f - a),\n              l = this.m_distance / Math.abs(Math.sin(u));\n            A.buildPoint(h, l, .5 * (a + f), t), this.addPointEx(t, o);\n          }\n        } else {\n          const s = 1 - e / Math.abs(this.m_distance);\n          let i = 1,\n            n = f - _ - (a + _);\n          if (s > -1 && s < 1) {\n            let t = 2 * Math.acos(s);\n            t < x && (t = x), i = Math.trunc(Math.abs(n) / t + 1.5), i > 1 && (n /= i);\n          }\n          const r = this.m_distance / Math.cos(.5 * n);\n          let m = a + _ + .5 * n;\n          for (A.buildPoint(h, r, m, t), this.addPointEx(t, o); --i > 0;) m += n, A.buildPoint(h, r, m, t), this.addPoint(t);\n        }\n      } else A.buildPoint(h, this.m_distance, a + _, t), this.addPointEx(t, o), A.buildPoint(h, this.m_distance, f - _, t), this.addPoint(t);\n    }\n    return this.m_a1 = i, this.m_a2 = n, this.addPointEx(this.m_offsetPts[0], 0), this.m_offsetPts[0] = this.m_offsetPts[this.m_offsetPtCount - 1].clone(), this.removeBadSegsFast();\n  }\n  removeBadSegsFast() {\n    let t = !1;\n    for (let e = 0; e < this.m_offsetPtCount; e++) {\n      const t = this.m_offsetPts[e];\n      t.m_next = e + 1, t.m_prev = e - 1;\n    }\n    this.m_offsetPts[0].m_prev = this.m_offsetPtCount - 2, this.m_offsetPts[this.m_offsetPtCount - 2].m_next = 0;\n    let s = 0;\n    for (let e = 0; e < this.m_offsetPtCount; e++) if (this.m_offsetPts[s].type & p) {\n      const e = this.deleteClosedSeg(s);\n      if (-1 === e) {\n        t = !0;\n        break;\n      }\n      s = e;\n    } else s = this.m_offsetPts[s].m_next;\n    return !t && (this.compressOffsetArray(s), !0);\n  }\n  deleteClosedSeg(t) {\n    const s = this.m_offsetPtCount - 1;\n    let e,\n      i,\n      n = t;\n    for (let o = 1; o <= s - 2; o++) {\n      n = this.m_offsetPts[n].m_next, e = n, i = t;\n      for (let t = 1; t <= o; t++) {\n        if (i = this.m_offsetPts[i].m_prev, !(this.m_offsetPts[i].type & p || this.m_offsetPts[e].type & p)) {\n          const t = this.handleClosedIntersection(i, e);\n          if (-1 !== t) return t;\n        }\n        e = this.m_offsetPts[e].m_prev;\n      }\n    }\n    return -1;\n  }\n  handleClosedIntersection(t, s) {\n    const e = this.m_offsetPts[this.m_offsetPts[t].m_prev],\n      i = this.m_offsetPts[t],\n      n = this.m_offsetPts[this.m_offsetPts[s].m_prev],\n      o = this.m_offsetPts[s];\n    if (!this.sectGraphicRect(e, i, n, o)) return -1;\n    const h = C();\n    if (((i.x - e.x) * (o.y - n.y) - (i.y - e.y) * (o.x - n.x)) * this.m_distance < 0) {\n      if (this.findIntersection(e, i, n, o, h) && !h.bAtExistingPt) {\n        const r = 1e-8,\n          m = Math.sqrt((i.x - e.x) * (i.x - e.x) + (i.y - e.y) * (i.y - e.y)),\n          a = (i.x - e.x) / m,\n          f = (i.y - e.y) / m,\n          _ = Math.sqrt((o.x - n.x) * (o.x - n.x) + (o.y - n.y) * (o.y - n.y)),\n          c = (o.x - n.x) / _,\n          d = (o.y - n.y) / _;\n        let P = !1;\n        const u = h.pt.clone();\n        u.x += (a + c) * r, u.y += (f + d) * r;\n        let l = n,\n          y = h.pt,\n          x = this.m_offsetPts[t].m_prev;\n        for (; y.y > u.y != l.y > u.y && u.x < (l.x - y.x) * (u.y - y.y) / (l.y - y.y) + y.x && (P = !P), l = y, x = this.m_offsetPts[x].m_next, x !== s;) y = this.m_offsetPts[x];\n        if (P) return -1;\n        const p = this.m_offsetPts[t].m_prev;\n        return h.pt.type = i.type, h.pt.m_next = s, h.pt.m_prev = p, this.m_offsetPts[t] = h.pt, this.m_offsetPts[s].m_prev = t, s;\n      }\n    }\n    return -1;\n  }\n  sectGraphicRect(t, s, e, i) {\n    return Math.max(t.x, s.x) >= Math.min(e.x, i.x) && Math.max(e.x, i.x) >= Math.min(t.x, s.x) && Math.max(t.y, s.y) >= Math.min(e.y, i.y) && Math.max(e.y, i.y) >= Math.min(t.y, s.y);\n  }\n  findIntersection(t, s, e, i, n) {\n    let o, h, r, m;\n    return n.bAtExistingPt = !1, o = (s.y - t.y) * (i.x - e.x) - (s.x - t.x) * (i.y - e.y), h = (e.y - t.y) * (s.x - t.x) - (e.x - t.x) * (s.y - t.y), r = 0 === o ? 2 : h / o, r >= 0 && r <= 1 && (m = r, o = (i.y - e.y) * (s.x - t.x) - (i.x - e.x) * (s.y - t.y), h = (t.y - e.y) * (i.x - e.x) - (t.x - e.x) * (i.y - e.y), r = 0 === o ? 2 : h / o, r >= 0 && r <= 1) && (n.pt.x = t.x + r * (s.x - t.x), n.pt.y = t.y + r * (s.y - t.y), this.m_bUseZ && (n.pt.z = e.z + m * (i.z - e.z)), this.m_bUseM && (n.pt.m = e.m + m * (i.m - e.m)), 0 !== m && 1 !== m || 0 !== r && 1 !== r || (n.bAtExistingPt = !0), !((0 === m || 1 === m) && r > 0 && r < 1 || (0 === r || 1 === r) && m > 0 && m < 1));\n  }\n  compressOffsetArray(t) {\n    for (; this.m_offsetPts[t].m_prev < t;) t = this.m_offsetPts[t].m_prev;\n    let s = 0,\n      e = t;\n    do {\n      const t = this.m_offsetPts[e].clone();\n      this.m_offsetPts[s] = t, e = t.m_next, s++;\n    } while (e !== t);\n    this.m_offsetPts[s] = this.m_offsetPts[0].clone(), this.m_offsetPtCount = s + 1;\n  }\n  addPart(t, s) {\n    if (!(s < 2)) for (let e = 0; e < s; e++) {\n      const s = this.m_offsetPts[t + e];\n      if (e ? this.m_bUseZ ? this.m_resultPath.lineTo3DCoords(s.x, s.y, s.z) : this.m_resultPath.lineToCoords(s.x, s.y) : this.m_bUseZ ? this.m_resultPath.startPath3DCoords(s.x, s.y, s.z) : this.m_resultPath.startPathCoords(s.x, s.y), this.m_bUseM) {\n        const t = this.m_resultPath.getPointCount() - 1;\n        this.m_resultPath.setAttribute(2, t, 0, s.m);\n      }\n    }\n  }\n  offsetMultiPath(t) {\n    const s = f(this.m_inputGeometry, 0, this.m_tolerance, 0, this.m_progressTracker, 12e3),\n      e = s.querySegmentIterator();\n    e.resetToFirstPath();\n    let i = -1;\n    for (; e.nextPath();) i++, this.offsetPath(s, i, t);\n  }\n  offsetPath(t, s, e) {\n    let i = t.getPathStart(s),\n      n = t.getPathEnd(s);\n    if (this.m_resultPath = e, t.isClosedPath(s)) {\n      const s = t.getXY(i);\n      for (; n > i && t.getXY(n - 1).equals(s);) n--;\n      if (n - i >= 2) {\n        this.m_srcPtCount = n - i, this.m_srcPts.length = this.m_srcPtCount;\n        for (let s = i; s < n; s++) this.progress(), this.m_srcPts[s - i] = g.construct(t.getXY(s), this.m_bUseZ ? t.getAttributeAsDbl(1, s, 0) : 0, this.m_bUseM ? t.getAttributeAsDbl(2, s, 0) : 0);\n        this.buildOffset() && this.addPart(0, this.m_offsetPtCount - 1);\n      }\n    } else {\n      const s = t.getXY(i);\n      for (; i < n - 1 && t.getXY(i + 1).equals(s);) i++;\n      const e = t.getXY(n - 1);\n      for (; i < n - 1 && t.getXY(n - 2).equals(e);) n--;\n      if (n - i >= 2) {\n        this.m_srcPtCount = 2 * (n - i) - 2, this.m_srcPts.length = this.m_srcPtCount;\n        let e = g.construct(s, this.m_bUseZ ? t.getAttributeAsDbl(1, i, 0) : 0, this.m_bUseM ? t.getAttributeAsDbl(2, i, 0) : 0);\n        e.type |= b + M, this.m_srcPts[0] = e;\n        let o = 1,\n          h = this.m_srcPtCount - 1;\n        for (let s = i + 1; s < n - 1; s++, o++, h--) this.progress(), e = g.construct(t.getXY(s), this.m_bUseZ ? t.getAttributeAsDbl(1, s, 0) : 0, this.m_bUseM ? t.getAttributeAsDbl(2, s, 0) : 0), this.m_srcPts[o] = e.clone(), e.type |= M, this.m_srcPts[h] = e.clone();\n        if (e = g.construct(t.getXY(n - 1), this.m_bUseZ ? t.getAttributeAsDbl(1, n - 1, 0) : 0, this.m_bUseM ? t.getAttributeAsDbl(2, n - 1, 0) : 0), e.type |= b, this.m_srcPts[o] = e.clone(), this.buildOffset()) if (this.m_offsetPts.length >= 2) {\n          let t = -1,\n            s = -1,\n            e = !!(this.m_offsetPts[this.m_offsetPtCount - 1].type & M);\n          e || (t = 0);\n          for (let i = 1; i < this.m_offsetPtCount; i++) {\n            this.progress();\n            const n = !!(this.m_offsetPts[i].type & M);\n            n ? e || (s = i - 1, s - t + 1 > 1 && this.addPart(t, s - t + 1)) : e && (t = i - 1), e = n;\n          }\n          e || (s = this.m_offsetPtCount - 1, s - t + 1 > 1 && this.addPart(t, s - t + 1));\n        } else {\n          const t = 0,\n            s = this.m_offsetPtCount - 1;\n          s - t >= 1 && this.addPart(t, s - t + 1);\n        }\n      }\n    }\n    this.m_srcPts.length = 0, this.m_srcPtCount = 0, this.m_offsetPts.length = 0, this.m_offsetPtCount = 0;\n  }\n  static dotSign(t, s, e, i) {\n    const n = s.x - t.x,\n      o = s.y - t.y,\n      h = i.x - e.x,\n      r = i.y - e.y,\n      m = P(n, o, h, r);\n    return u(m);\n  }\n}\nclass E {\n  getOperatorType() {\n    return 10108;\n  }\n  accelerateGeometry(t, s, e) {\n    return !1;\n  }\n  canAccelerateGeometry(t) {\n    return !1;\n  }\n  supportsCurves() {\n    return !0;\n  }\n  executeMany(t, s, e, i, n, o, h) {\n    return new v(t, s, e, i, n, o, h);\n  }\n  execute(t, s, e, i, n, o, h) {\n    return new v(null, s, e, i, n, o, h).offset(t);\n  }\n}\nclass v extends t {\n  constructor(t, s, e, i, n, o, h) {\n    super(), this.m_progressTracker = h, this.m_index = -1, this.m_inputGeoms = t, this.m_spatialReference = s, this.m_distance = e, this.m_joins = i, this.m_miterLimit = n, this.m_flattenError = o;\n  }\n  tock() {\n    return !0;\n  }\n  getRank() {\n    return 1;\n  }\n  next() {\n    if (!this.m_inputGeoms) return null;\n    let t;\n    for (; t = this.m_inputGeoms.next();) return this.m_index = this.m_inputGeoms.getGeometryID(), this.offset(t);\n    return null;\n  }\n  getGeometryID() {\n    return this.m_index;\n  }\n  offset(t) {\n    let s;\n    return i(t), s = this.m_flattenError <= 0 ? e(this.m_spatialReference, t, !0).total() : this.m_flattenError, l(t, this.m_distance, this.m_joins, this.m_miterLimit, s, this.m_progressTracker);\n  }\n}\nconst G = new E();\nfunction w(t, s, e, i, n, o) {\n  return G.execute(t, s, e, i, n, o, null);\n}\nfunction j(t, e, i, n, o, h) {\n  const r = G.executeMany(new s(t), e, i, n, o, h, null);\n  return Array.from(r);\n}\nfunction D() {\n  return G.supportsCurves();\n}\nexport { w as execute, j as executeMany, D as supportsCurves };","map":{"version":3,"names":["G","t","S","s","b","e","d","i","n","o","f","h","r","P","m","a","l","_","c","k","u","getDimension","isEmpty","A","m_bUseZ","hasAttribute","m_bUseM","m_inputGeometry","m_distance","m_tolerance","m_joins","m_miterLimit","m_progressCounter","constructOffset","y","x","p","M","g","construct","m_next","m_prev","z","type","clone","asPoint2D","C","pt","bAtExistingPt","constructor","m_srcPts","m_srcPtCount","m_offsetPts","m_offsetPtCount","m_a1","m_a2","m_progressTracker","getGeometryType","enumLine","offsetLine","enumEnvelope","offsetEnvelope","addSegment","enumPolyline","offsetMultiPath","enumPolygon","getStartXY","getEndXY","setSub","normalize","leftPerpendicularThis","scale","addThis","setStartXY","setEndXY","addEnvelope","inflateCoords","progress","buildPoint","Math","cos","sin","addPoint","push","addPointEx","dotSign","atan2","buildOffset","orientationRobust","abs","PI","acos","trunc","sqrt","setScaleAdd","length","rightPerpendicularThis","setAdd","removeBadSegsFast","deleteClosedSeg","compressOffsetArray","handleClosedIntersection","sectGraphicRect","findIntersection","max","min","addPart","m_resultPath","lineTo3DCoords","lineToCoords","startPath3DCoords","startPathCoords","getPointCount","setAttribute","querySegmentIterator","resetToFirstPath","nextPath","offsetPath","getPathStart","getPathEnd","isClosedPath","getXY","equals","getAttributeAsDbl","E","getOperatorType","accelerateGeometry","canAccelerateGeometry","supportsCurves","executeMany","v","execute","offset","m_index","m_inputGeoms","m_spatialReference","m_flattenError","tock","getRank","next","getGeometryID","total","w","j","Array","from","D"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/geometry/operators/gx/operatorOffset.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{G as t,S as s}from\"../../../chunks/SimpleGeometryCursor.js\";import{b as e}from\"../../../chunks/Envelope.js\";import{d as i,t as n,G as o,f as h,b as r}from\"../../../chunks/Geometry.js\";import{P as m,a,d as f}from\"../../../chunks/QuadraticBezier.js\";import{l as _,P as c,k as d,t as P,e as u}from\"../../../chunks/Point2D.js\";function l(t,s,e,o,h,r){if(null===t&&n(\"\"),t.getDimension()<1&&n(\"\"),h>0||n(\"\"),i(t),0===s||t.isEmpty())return t;const m=new A(r);return m.m_bUseZ=t.hasAttribute(1),m.m_bUseM=t.hasAttribute(2),m.m_inputGeometry=t,m.m_distance=s,m.m_tolerance=h,m.m_joins=e,m.m_miterLimit=o>1?o:1,m.m_progressCounter=0,m.constructOffset()}const y=1.4142135623730951,x=.017453292519943295,p=256,b=512,M=1024;class g{static construct(t,s,e){const i=new g;return i.x=t.x,i.y=t.y,i.m_next=-1,i.m_prev=-1,i.z=s,i.m=e,i.type=0,i}clone(){const t=new g;return t.x=this.x,t.y=this.y,t.m_next=this.m_next,t.m_prev=this.m_prev,t.z=this.z,t.m=this.m,t.type=this.type,t}asPoint2D(){return new c(this.x,this.y)}}function C(){return{pt:new g,bAtExistingPt:!1}}class A{constructor(t){this.m_distance=-1,this.m_tolerance=-1,this.m_miterLimit=10,this.m_joins=0,this.m_progressCounter=0,this.m_bUseZ=!1,this.m_bUseM=!1,this.m_srcPts=[],this.m_srcPtCount=0,this.m_offsetPts=[],this.m_offsetPtCount=0,this.m_a1=0,this.m_a2=0,this.m_progressTracker=t}constructOffset(){const t=this.m_inputGeometry.getGeometryType();if(t===o.enumLine)return this.offsetLine();if(t===o.enumEnvelope)return this.offsetEnvelope();if(h(t)){const t=new m;return t.addSegment(this.m_inputGeometry,!0),this.m_inputGeometry=t,this.constructOffset()}if(t===o.enumPolyline){const t=new m;return this.offsetMultiPath(t),t}if(t===o.enumPolygon){const t=new a;return this.offsetMultiPath(t),t}r(\"\")}offsetLine(){const t=this.m_inputGeometry,s=t.getStartXY(),e=t.getEndXY(),i=new c;i.setSub(e,s),i.normalize(),i.leftPerpendicularThis(),i.scale(this.m_distance),s.addThis(i),e.addThis(i);const n=t.clone();return n.setStartXY(s),n.setEndXY(e),n}offsetEnvelope(){const t=this.m_inputGeometry;if(this.m_distance>0&&2!==this.m_joins){const s=new a;return s.addEnvelope(t,!1),this.m_inputGeometry=s,this.constructOffset()}const s=t.clone();return s.inflateCoords(this.m_distance,this.m_distance),s}progress(){}static buildPoint(t,s,e,i){i.x=t.x+s*Math.cos(e),i.y=t.y+s*Math.sin(e),i.type=t.type,i.z=t.z,i.m=t.m,i.m_next=-1,i.m_prev=-1}addPoint(t){this.m_offsetPts.push(t.clone()),this.m_offsetPtCount++}addPointEx(t,s){if(0===this.m_offsetPtCount)return void this.addPoint(t);const e=this.m_srcPtCount,i=this.m_srcPts[0===s?e-1:s-1],n=this.m_srcPts[s],o=A.dotSign(i,n,this.m_offsetPts[this.m_offsetPtCount-1],t);if(o>0)this.addPoint(t);else if(o<0)if(A.dotSign(i,n,n,this.m_offsetPts[this.m_offsetPtCount-1])>0){const n=new g;let o;o=0===s?e-2:1===s?e-1:s-2;const h=this.m_srcPts[o],r=Math.atan2(i.y-h.y,i.x-h.x);if(A.buildPoint(i,this.m_distance,r-_,n),this.m_offsetPts[this.m_offsetPtCount-1]=n,1===this.m_joins||2===this.m_joins){n.x=.5*(n.x+i.x),n.y=.5*(n.y+i.y),this.addPoint(n),A.buildPoint(i,this.m_distance,this.m_a1+_,n);const t=n.clone();t.x=.5*(t.x+i.x),t.y=.5*(t.y+i.y),t.type|=p,this.addPoint(t),this.addPoint(n)}else A.buildPoint(i,this.m_distance,this.m_a1+_,n),n.type|=p,this.addPoint(n);this.addPointEx(t,s)}else{const t=new g;if(A.buildPoint(n,this.m_distance,this.m_a1+_,t),this.addPoint(t),1===this.m_joins||2===this.m_joins){t.x=.5*(t.x+n.x),t.y=.5*(t.y+n.y),this.addPoint(t),A.buildPoint(n,this.m_distance,this.m_a2-_,t);const s=t.clone();s.x=.5*(s.x+n.x),s.y=.5*(s.y+n.y),s.type|=p,this.addPoint(s),this.addPoint(t)}else A.buildPoint(n,this.m_distance,this.m_a2-_,t),t.type|=p,this.addPoint(t)}}buildOffset(){const t=new g,s=this.m_srcPtCount;this.m_offsetPtCount=0;const e=.5*this.m_tolerance;let i=0,n=0;for(let o=0;o<s;o++){const h=this.m_srcPts[o],r=0===o?this.m_srcPts[s-1]:this.m_srcPts[o-1],m=o===s-1?this.m_srcPts[0]:this.m_srcPts[o+1];let a,f,P=0;{const t=r.x-h.x,s=r.y-h.y,e=m.x-h.x,_=m.y-h.y;a=Math.atan2(s,t),f=Math.atan2(_,e),this.m_a1=a,this.m_a2=f,0===o&&(i=a,n=f),P=c.orientationRobust(h.asPoint2D(),r.asPoint2D(),m.asPoint2D())}const u=f;if(f<a&&(f+=d),P*this.m_distance>0)if(1===this.m_joins||2===this.m_joins){A.buildPoint(h,this.m_distance,a+_,t),this.addPoint(t);const s=.001;t.x=h.x+(t.x-h.x)*s,t.y=h.y+(t.y-h.y)*s,this.addPoint(t),A.buildPoint(h,this.m_distance,f-_,t);const e=t.clone();e.x=h.x+(e.x-h.x)*s,e.y=h.y+(e.y-h.y)*s,e.type|=p,this.addPoint(e),this.addPoint(t)}else{const s=.5*(f-a),e=0===s?this.m_distance:this.m_distance/Math.abs(Math.sin(s));A.buildPoint(h,e,.5*(a+f),t),this.addPointEx(t,o)}else if(h.type&b){const s=1-e/Math.abs(this.m_distance);let i=1,n=this.m_distance<0?-Math.PI:Math.PI;if(s>-1&&s<1){let t=2*Math.acos(s);t<x&&(t=x),i=Math.trunc(Math.PI/t+1.5),i>1&&(n/=i)}i<=1&&(i=2,n/=2);let r=a+_;A.buildPoint(h,this.m_distance,r,t),0===o&&(t.type|=M),this.addPointEx(t,o);const m=this.m_distance/Math.cos(n/2);for(r+=n/2,A.buildPoint(h,m,r,t),t.type|=M,this.addPoint(t);--i>0;)r+=n,A.buildPoint(h,m,r,t),t.type|=M,this.addPoint(t);A.buildPoint(h,this.m_distance,f-_,t),t.type|=M,this.addPoint(t)}else if(1!==this.m_joins)if(0!==this.m_joins)if(2!==this.m_joins){let s;if(f=u,this.m_distance>0?(f>a&&(f-=d),s=a-f<_):(f<a&&(f+=d),s=f-a<_),s){const s=this.m_distance*y;let e;e=s<0?a+.25*Math.PI:a+3*Math.PI*.25,A.buildPoint(h,s,e,t),this.addPointEx(t,o),e=s<0?f-.25*Math.PI:f-3*Math.PI*.25,A.buildPoint(h,s,e,t),this.addPoint(t)}else{const s=.5*(f-a),e=this.m_distance/Math.abs(Math.sin(s));f<a&&(f+=d),A.buildPoint(h,e,(a+f)/2,t),this.addPointEx(t,o)}}else{const s=r.x-h.x,e=r.y-h.y,i=m.x-h.x,n=m.y-h.y,_=(s*i+e*n)/Math.sqrt(s*s+e*e)/Math.sqrt(i*i+n*n);if(_>1-1e-8){A.buildPoint(h,y*this.m_distance,f-.25*Math.PI,t),this.addPointEx(t,o),A.buildPoint(h,y*this.m_distance,f+.25*Math.PI,t),this.addPoint(t);continue}const d=Math.abs(this.m_distance/Math.sin(.5*Math.acos(_))),P=Math.abs(this.m_miterLimit*this.m_distance);if(d>P){const s=.5*(f-a),e=this.m_distance/Math.abs(Math.sin(s));A.buildPoint(h,e,.5*(a+f),t);const i=c.construct(t.x,t.y),n=c.construct(h.x,h.y),r=new c;r.setSub(i,n);const m=new c;m.setScaleAdd(P/r.length(),r,n);const _=Math.sqrt(d*d-this.m_distance*this.m_distance),u=(d-P)*Math.abs(this.m_distance)/_;this.m_distance>0?r.leftPerpendicularThis():r.rightPerpendicularThis(),r.scale(u/r.length());const l=new c;l.setAdd(m,r);const y=new c;y.setSub(m,r),t.x=l.x,t.y=l.y,this.addPointEx(t,o),t.x=y.x,t.y=y.y,this.addPoint(t);continue}const u=.5*(f-a),l=this.m_distance/Math.abs(Math.sin(u));A.buildPoint(h,l,.5*(a+f),t),this.addPointEx(t,o)}else{const s=1-e/Math.abs(this.m_distance);let i=1,n=f-_-(a+_);if(s>-1&&s<1){let t=2*Math.acos(s);t<x&&(t=x),i=Math.trunc(Math.abs(n)/t+1.5),i>1&&(n/=i)}const r=this.m_distance/Math.cos(.5*n);let m=a+_+.5*n;for(A.buildPoint(h,r,m,t),this.addPointEx(t,o);--i>0;)m+=n,A.buildPoint(h,r,m,t),this.addPoint(t)}else A.buildPoint(h,this.m_distance,a+_,t),this.addPointEx(t,o),A.buildPoint(h,this.m_distance,f-_,t),this.addPoint(t)}return this.m_a1=i,this.m_a2=n,this.addPointEx(this.m_offsetPts[0],0),this.m_offsetPts[0]=this.m_offsetPts[this.m_offsetPtCount-1].clone(),this.removeBadSegsFast()}removeBadSegsFast(){let t=!1;for(let e=0;e<this.m_offsetPtCount;e++){const t=this.m_offsetPts[e];t.m_next=e+1,t.m_prev=e-1}this.m_offsetPts[0].m_prev=this.m_offsetPtCount-2,this.m_offsetPts[this.m_offsetPtCount-2].m_next=0;let s=0;for(let e=0;e<this.m_offsetPtCount;e++)if(this.m_offsetPts[s].type&p){const e=this.deleteClosedSeg(s);if(-1===e){t=!0;break}s=e}else s=this.m_offsetPts[s].m_next;return!t&&(this.compressOffsetArray(s),!0)}deleteClosedSeg(t){const s=this.m_offsetPtCount-1;let e,i,n=t;for(let o=1;o<=s-2;o++){n=this.m_offsetPts[n].m_next,e=n,i=t;for(let t=1;t<=o;t++){if(i=this.m_offsetPts[i].m_prev,!(this.m_offsetPts[i].type&p||this.m_offsetPts[e].type&p)){const t=this.handleClosedIntersection(i,e);if(-1!==t)return t}e=this.m_offsetPts[e].m_prev}}return-1}handleClosedIntersection(t,s){const e=this.m_offsetPts[this.m_offsetPts[t].m_prev],i=this.m_offsetPts[t],n=this.m_offsetPts[this.m_offsetPts[s].m_prev],o=this.m_offsetPts[s];if(!this.sectGraphicRect(e,i,n,o))return-1;const h=C();if(((i.x-e.x)*(o.y-n.y)-(i.y-e.y)*(o.x-n.x))*this.m_distance<0){if(this.findIntersection(e,i,n,o,h)&&!h.bAtExistingPt){const r=1e-8,m=Math.sqrt((i.x-e.x)*(i.x-e.x)+(i.y-e.y)*(i.y-e.y)),a=(i.x-e.x)/m,f=(i.y-e.y)/m,_=Math.sqrt((o.x-n.x)*(o.x-n.x)+(o.y-n.y)*(o.y-n.y)),c=(o.x-n.x)/_,d=(o.y-n.y)/_;let P=!1;const u=h.pt.clone();u.x+=(a+c)*r,u.y+=(f+d)*r;let l=n,y=h.pt,x=this.m_offsetPts[t].m_prev;for(;y.y>u.y!=l.y>u.y&&u.x<(l.x-y.x)*(u.y-y.y)/(l.y-y.y)+y.x&&(P=!P),l=y,x=this.m_offsetPts[x].m_next,x!==s;)y=this.m_offsetPts[x];if(P)return-1;const p=this.m_offsetPts[t].m_prev;return h.pt.type=i.type,h.pt.m_next=s,h.pt.m_prev=p,this.m_offsetPts[t]=h.pt,this.m_offsetPts[s].m_prev=t,s}}return-1}sectGraphicRect(t,s,e,i){return Math.max(t.x,s.x)>=Math.min(e.x,i.x)&&Math.max(e.x,i.x)>=Math.min(t.x,s.x)&&Math.max(t.y,s.y)>=Math.min(e.y,i.y)&&Math.max(e.y,i.y)>=Math.min(t.y,s.y)}findIntersection(t,s,e,i,n){let o,h,r,m;return n.bAtExistingPt=!1,o=(s.y-t.y)*(i.x-e.x)-(s.x-t.x)*(i.y-e.y),h=(e.y-t.y)*(s.x-t.x)-(e.x-t.x)*(s.y-t.y),r=0===o?2:h/o,r>=0&&r<=1&&(m=r,o=(i.y-e.y)*(s.x-t.x)-(i.x-e.x)*(s.y-t.y),h=(t.y-e.y)*(i.x-e.x)-(t.x-e.x)*(i.y-e.y),r=0===o?2:h/o,r>=0&&r<=1)&&(n.pt.x=t.x+r*(s.x-t.x),n.pt.y=t.y+r*(s.y-t.y),this.m_bUseZ&&(n.pt.z=e.z+m*(i.z-e.z)),this.m_bUseM&&(n.pt.m=e.m+m*(i.m-e.m)),0!==m&&1!==m||0!==r&&1!==r||(n.bAtExistingPt=!0),!((0===m||1===m)&&r>0&&r<1||(0===r||1===r)&&m>0&&m<1))}compressOffsetArray(t){for(;this.m_offsetPts[t].m_prev<t;)t=this.m_offsetPts[t].m_prev;let s=0,e=t;do{const t=this.m_offsetPts[e].clone();this.m_offsetPts[s]=t,e=t.m_next,s++}while(e!==t);this.m_offsetPts[s]=this.m_offsetPts[0].clone(),this.m_offsetPtCount=s+1}addPart(t,s){if(!(s<2))for(let e=0;e<s;e++){const s=this.m_offsetPts[t+e];if(e?this.m_bUseZ?this.m_resultPath.lineTo3DCoords(s.x,s.y,s.z):this.m_resultPath.lineToCoords(s.x,s.y):this.m_bUseZ?this.m_resultPath.startPath3DCoords(s.x,s.y,s.z):this.m_resultPath.startPathCoords(s.x,s.y),this.m_bUseM){const t=this.m_resultPath.getPointCount()-1;this.m_resultPath.setAttribute(2,t,0,s.m)}}}offsetMultiPath(t){const s=f(this.m_inputGeometry,0,this.m_tolerance,0,this.m_progressTracker,12e3),e=s.querySegmentIterator();e.resetToFirstPath();let i=-1;for(;e.nextPath();)i++,this.offsetPath(s,i,t)}offsetPath(t,s,e){let i=t.getPathStart(s),n=t.getPathEnd(s);if(this.m_resultPath=e,t.isClosedPath(s)){const s=t.getXY(i);for(;n>i&&t.getXY(n-1).equals(s);)n--;if(n-i>=2){this.m_srcPtCount=n-i,this.m_srcPts.length=this.m_srcPtCount;for(let s=i;s<n;s++)this.progress(),this.m_srcPts[s-i]=g.construct(t.getXY(s),this.m_bUseZ?t.getAttributeAsDbl(1,s,0):0,this.m_bUseM?t.getAttributeAsDbl(2,s,0):0);this.buildOffset()&&this.addPart(0,this.m_offsetPtCount-1)}}else{const s=t.getXY(i);for(;i<n-1&&t.getXY(i+1).equals(s);)i++;const e=t.getXY(n-1);for(;i<n-1&&t.getXY(n-2).equals(e);)n--;if(n-i>=2){this.m_srcPtCount=2*(n-i)-2,this.m_srcPts.length=this.m_srcPtCount;let e=g.construct(s,this.m_bUseZ?t.getAttributeAsDbl(1,i,0):0,this.m_bUseM?t.getAttributeAsDbl(2,i,0):0);e.type|=b+M,this.m_srcPts[0]=e;let o=1,h=this.m_srcPtCount-1;for(let s=i+1;s<n-1;s++,o++,h--)this.progress(),e=g.construct(t.getXY(s),this.m_bUseZ?t.getAttributeAsDbl(1,s,0):0,this.m_bUseM?t.getAttributeAsDbl(2,s,0):0),this.m_srcPts[o]=e.clone(),e.type|=M,this.m_srcPts[h]=e.clone();if(e=g.construct(t.getXY(n-1),this.m_bUseZ?t.getAttributeAsDbl(1,n-1,0):0,this.m_bUseM?t.getAttributeAsDbl(2,n-1,0):0),e.type|=b,this.m_srcPts[o]=e.clone(),this.buildOffset())if(this.m_offsetPts.length>=2){let t=-1,s=-1,e=!!(this.m_offsetPts[this.m_offsetPtCount-1].type&M);e||(t=0);for(let i=1;i<this.m_offsetPtCount;i++){this.progress();const n=!!(this.m_offsetPts[i].type&M);n?e||(s=i-1,s-t+1>1&&this.addPart(t,s-t+1)):e&&(t=i-1),e=n}e||(s=this.m_offsetPtCount-1,s-t+1>1&&this.addPart(t,s-t+1))}else{const t=0,s=this.m_offsetPtCount-1;s-t>=1&&this.addPart(t,s-t+1)}}}this.m_srcPts.length=0,this.m_srcPtCount=0,this.m_offsetPts.length=0,this.m_offsetPtCount=0}static dotSign(t,s,e,i){const n=s.x-t.x,o=s.y-t.y,h=i.x-e.x,r=i.y-e.y,m=P(n,o,h,r);return u(m)}}class E{getOperatorType(){return 10108}accelerateGeometry(t,s,e){return!1}canAccelerateGeometry(t){return!1}supportsCurves(){return!0}executeMany(t,s,e,i,n,o,h){return new v(t,s,e,i,n,o,h)}execute(t,s,e,i,n,o,h){return new v(null,s,e,i,n,o,h).offset(t)}}class v extends t{constructor(t,s,e,i,n,o,h){super(),this.m_progressTracker=h,this.m_index=-1,this.m_inputGeoms=t,this.m_spatialReference=s,this.m_distance=e,this.m_joins=i,this.m_miterLimit=n,this.m_flattenError=o}tock(){return!0}getRank(){return 1}next(){if(!this.m_inputGeoms)return null;let t;for(;t=this.m_inputGeoms.next();)return this.m_index=this.m_inputGeoms.getGeometryID(),this.offset(t);return null}getGeometryID(){return this.m_index}offset(t){let s;return i(t),s=this.m_flattenError<=0?e(this.m_spatialReference,t,!0).total():this.m_flattenError,l(t,this.m_distance,this.m_joins,this.m_miterLimit,s,this.m_progressTracker)}}const G=new E;function w(t,s,e,i,n,o){return G.execute(t,s,e,i,n,o,null)}function j(t,e,i,n,o,h){const r=G.executeMany(new s(t),e,i,n,o,h,null);return Array.from(r)}function D(){return G.supportsCurves()}export{w as execute,j as executeMany,D as supportsCurves};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}