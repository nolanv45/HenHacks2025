{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { setMultipleImageTextures as t, setCoordsAndTransforms as e } from \"./utils.js\";\nconst n = {\n  vsPath: \"raster/rfx/vs\",\n  fsPath: \"raster/rfx/computechange\",\n  attributes: new Map([[\"a_position\", 0], [\"a_texcoord\", 1]])\n};\nfunction r(t) {\n  const {\n      painter: e,\n      rasterFunction: r\n    } = t,\n    {\n      method: a,\n      rasters: s,\n      isOutputRounded: o\n    } = r.parameters,\n    i = [a.includes(\"-\") ? a.slice(0, a.indexOf(\"-\")) : a];\n  return s.filter(t => \"Constant\" === t.name).length && i.push(\"oneConstant\"), o && i.push(\"roundOutput\"), e.materialManager.getProgram(n, i);\n}\nfunction a(n, r, a) {\n  t(n, r, a), e(r);\n  const {\n    domainRange: s\n  } = n.rasterFunction.parameters;\n  r.setUniform2fv(\"u_domainRange\", s);\n}\nconst s = {\n  createProgram: r,\n  bindTextureAndUniforms: a\n};\nexport { s as default };","map":{"version":3,"names":["setMultipleImageTextures","t","setCoordsAndTransforms","e","n","vsPath","fsPath","attributes","Map","r","painter","rasterFunction","method","a","rasters","s","isOutputRounded","o","parameters","i","includes","slice","indexOf","filter","name","length","push","materialManager","getProgram","domainRange","setUniform2fv","createProgram","bindTextureAndUniforms","default"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/2d/engine/imagery/processor/computeChangeProcessor.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{setMultipleImageTextures as t,setCoordsAndTransforms as e}from\"./utils.js\";const n={vsPath:\"raster/rfx/vs\",fsPath:\"raster/rfx/computechange\",attributes:new Map([[\"a_position\",0],[\"a_texcoord\",1]])};function r(t){const{painter:e,rasterFunction:r}=t,{method:a,rasters:s,isOutputRounded:o}=r.parameters,i=[a.includes(\"-\")?a.slice(0,a.indexOf(\"-\")):a];return s.filter((t=>\"Constant\"===t.name)).length&&i.push(\"oneConstant\"),o&&i.push(\"roundOutput\"),e.materialManager.getProgram(n,i)}function a(n,r,a){t(n,r,a),e(r);const{domainRange:s}=n.rasterFunction.parameters;r.setUniform2fv(\"u_domainRange\",s)}const s={createProgram:r,bindTextureAndUniforms:a};export{s as default};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,wBAAwB,IAAIC,CAAC,EAACC,sBAAsB,IAAIC,CAAC,QAAK,YAAY;AAAC,MAAMC,CAAC,GAAC;EAACC,MAAM,EAAC,eAAe;EAACC,MAAM,EAAC,0BAA0B;EAACC,UAAU,EAAC,IAAIC,GAAG,CAAC,CAAC,CAAC,YAAY,EAAC,CAAC,CAAC,EAAC,CAAC,YAAY,EAAC,CAAC,CAAC,CAAC;AAAC,CAAC;AAAC,SAASC,CAACA,CAACR,CAAC,EAAC;EAAC,MAAK;MAACS,OAAO,EAACP,CAAC;MAACQ,cAAc,EAACF;IAAC,CAAC,GAACR,CAAC;IAAC;MAACW,MAAM,EAACC,CAAC;MAACC,OAAO,EAACC,CAAC;MAACC,eAAe,EAACC;IAAC,CAAC,GAACR,CAAC,CAACS,UAAU;IAACC,CAAC,GAAC,CAACN,CAAC,CAACO,QAAQ,CAAC,GAAG,CAAC,GAACP,CAAC,CAACQ,KAAK,CAAC,CAAC,EAACR,CAAC,CAACS,OAAO,CAAC,GAAG,CAAC,CAAC,GAACT,CAAC,CAAC;EAAC,OAAOE,CAAC,CAACQ,MAAM,CAAEtB,CAAC,IAAE,UAAU,KAAGA,CAAC,CAACuB,IAAK,CAAC,CAACC,MAAM,IAAEN,CAAC,CAACO,IAAI,CAAC,aAAa,CAAC,EAACT,CAAC,IAAEE,CAAC,CAACO,IAAI,CAAC,aAAa,CAAC,EAACvB,CAAC,CAACwB,eAAe,CAACC,UAAU,CAACxB,CAAC,EAACe,CAAC,CAAC;AAAA;AAAC,SAASN,CAACA,CAACT,CAAC,EAACK,CAAC,EAACI,CAAC,EAAC;EAACZ,CAAC,CAACG,CAAC,EAACK,CAAC,EAACI,CAAC,CAAC,EAACV,CAAC,CAACM,CAAC,CAAC;EAAC,MAAK;IAACoB,WAAW,EAACd;EAAC,CAAC,GAACX,CAAC,CAACO,cAAc,CAACO,UAAU;EAACT,CAAC,CAACqB,aAAa,CAAC,eAAe,EAACf,CAAC,CAAC;AAAA;AAAC,MAAMA,CAAC,GAAC;EAACgB,aAAa,EAACtB,CAAC;EAACuB,sBAAsB,EAACnB;AAAC,CAAC;AAAC,SAAOE,CAAC,IAAIkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}