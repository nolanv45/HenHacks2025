{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { clamp as t } from \"../../../../../../../core/mathUtils.js\";\nimport { pt2px as e } from \"../../../../../../../core/screenUtils.js\";\nimport { GeometryCursor as o } from \"../../../../../../../geometry/GeometryCursor.js\";\nimport { CIMMarkerPlacementHelper as r } from \"../../../../../../../symbols/cim/placements/CIMMarkerPlacementHelper.js\";\nimport { getXDirection as i, getYDirection as s } from \"../../../alignmentUtils.js\";\nimport { minMaxZoomPrecisionFactor as n, maxTextLineWidth as a, minTextLineWidth as c, magicLabelLineHeight as l, glyphSize as h } from \"../../../definitions.js\";\nimport { shapeGlyphs as f } from \"../../../mesh/templates/shapingUtils.js\";\nimport { packBitset as p, processColorInput as m, getMinMaxZoom as d } from \"../fill/meshWriterUtils.js\";\nimport { getGeometryEngine as u } from \"../mesh/loadGeometryEngine.js\";\nimport { MeshWriter as g } from \"../mesh/MeshWriter.js\";\nimport { bitsetTextIsBackground as x, bitsetTextIsMapAligned as y } from \"../shaders/constants.js\";\nimport { TextMeshTransformProps as S } from \"./TextParams.js\";\nimport { DataType as _ } from \"../../../../../../webgl/enums.js\";\nconst P = 28,\n  T = [4, 4],\n  b = [16, 4],\n  k = {\n    topLeft: b,\n    topRight: b,\n    bottomLeft: b,\n    bottomRight: b\n  },\n  z = [4, 2],\n  B = [4, 6],\n  M = {\n    topLeft: z,\n    topRight: z,\n    bottomLeft: B,\n    bottomRight: B\n  },\n  R = {\n    topLeft: z,\n    topRight: B,\n    bottomLeft: z,\n    bottomRight: B\n  },\n  w = {\n    topLeft: B,\n    topRight: B,\n    bottomLeft: T,\n    bottomRight: T\n  },\n  L = {\n    topLeft: T,\n    topRight: T,\n    bottomLeft: B,\n    bottomRight: B\n  },\n  I = {\n    topLeft: B,\n    topRight: T,\n    bottomLeft: B,\n    bottomRight: T\n  },\n  E = {\n    topLeft: T,\n    topRight: B,\n    bottomLeft: T,\n    bottomRight: B\n  },\n  G = {\n    createComputedParams: t => t,\n    optionalAttributes: {\n      zoomRange: {\n        type: _.UNSIGNED_SHORT,\n        count: 2,\n        packPrecisionFactor: n,\n        packTessellation: ({\n          minZoom: t,\n          maxZoom: e\n        }) => [t || 0, e || P]\n      },\n      clipAngle: {\n        type: _.UNSIGNED_BYTE,\n        count: 1,\n        packTessellation: ({\n          clipAngle: t\n        }) => A(t || 0)\n      },\n      referenceSymbol: {\n        type: _.BYTE,\n        count: 4,\n        packPrecisionFactor: 1,\n        packTessellation: (t, o) => {\n          const r = t.isLineLabel || !t.referenceBounds,\n            n = i(r ? \"center\" : o.horizontalAlignment),\n            a = s(r ? \"middle\" : o.verticalAlignment),\n            {\n              offsetX: c,\n              offsetY: l,\n              size: h\n            } = r ? {\n              offsetX: 0,\n              offsetY: 0,\n              size: 0\n            } : t.referenceBounds;\n          return [e(c), -e(l), Math.round(e(h)), n + 1 << 2 | a + 1];\n        }\n      }\n    },\n    attributes: {\n      pos: {\n        type: _.SHORT,\n        count: 2,\n        pack: \"position\",\n        packPrecisionFactor: 10\n      },\n      id: {\n        type: _.UNSIGNED_BYTE,\n        count: 3,\n        pack: \"id\"\n      },\n      bitset: {\n        type: _.UNSIGNED_BYTE,\n        count: 1,\n        packTessellation: ({\n          isBackground: t,\n          mapAligned: e\n        }) => p([[x, t], [y, !!e]])\n      },\n      offset: {\n        type: _.SHORT,\n        count: 2,\n        packPrecisionFactor: 8,\n        packAlternating: {\n          count: 4,\n          packTessellation: ({\n            offsets: t\n          }) => {\n            const {\n              bottomLeft: e,\n              bottomRight: o,\n              topLeft: r,\n              topRight: i\n            } = t;\n            return [r, i, e, o];\n          }\n        }\n      },\n      textureUV: {\n        type: _.SHORT,\n        count: 2,\n        packPrecisionFactor: 4,\n        packAlternating: {\n          count: 4,\n          packTessellation: ({\n            texcoords: t\n          }) => {\n            const {\n              bottomLeft: e,\n              bottomRight: o,\n              topLeft: r,\n              topRight: i\n            } = t;\n            return [r, i, e, o];\n          }\n        }\n      },\n      color: {\n        type: _.UNSIGNED_BYTE,\n        count: 4,\n        normalized: !0,\n        packTessellation: ({\n          color: t\n        }) => t\n      },\n      fontSize: {\n        type: _.UNSIGNED_SHORT,\n        count: 1,\n        packPrecisionFactor: 4,\n        packTessellation: ({\n          fontSize: t\n        }) => Math.round(e(t))\n      },\n      referenceSize: {\n        type: _.UNSIGNED_BYTE,\n        count: 1,\n        packPrecisionFactor: 4,\n        packTessellation: ({\n          fontSize: t\n        }, {\n          referenceSize: o\n        }) => Math.round(e(o ?? t))\n      },\n      outlineColor: {\n        type: _.UNSIGNED_BYTE,\n        count: 4,\n        normalized: !0,\n        pack: ({\n          outlineColor: t\n        }) => m(t)\n      },\n      haloColor: {\n        type: _.UNSIGNED_BYTE,\n        count: 4,\n        normalized: !0,\n        pack: ({\n          haloColor: t\n        }) => m(t)\n      },\n      outlineAndHaloSize: {\n        type: _.UNSIGNED_SHORT,\n        count: 2,\n        packPrecisionFactor: 4,\n        packTessellation: ({\n          outlineSize: t,\n          haloSize: o\n        }) => [Math.round(e(t)), Math.round(e(o))]\n      }\n    }\n  };\nclass N extends g {\n  constructor() {\n    super(...arguments), this.vertexSpec = G, this._textMeshParamsPropsInitialized = !1;\n  }\n  ensurePacked(t, e, o) {\n    super.ensurePacked(t, e, o), this._textMeshParamsPropsInitialized && !this._evaluator.hasDynamicProperties || (this._textMeshTransformProps = new S(this.evaluatedMeshParams), this._textMeshParamsPropsInitialized = !0);\n  }\n  _write(t, e, o) {\n    const r = this._getShaping();\n    if (!r) return;\n    const i = e.getDisplayId();\n    if (null != this.evaluatedMeshParams.placement) return this._writePlacedTextMarkers(t, e, r, o);\n    if (o?.nextPath()) return o.nextPoint(), this._writeGlyphs(t, i, o.x, o.y, r, 0);\n    if (\"esriGeometryPolygon\" === e.geometryType) {\n      const o = e.readCentroidForDisplay();\n      if (!o) return;\n      const [s, n] = o.coords;\n      return this._writeGlyphs(t, i, s, n, r, 0);\n    }\n    if (\"esriGeometryMultipoint\" === e.geometryType) {\n      const o = e.readGeometryForDisplay();\n      return void o?.forEachVertex((e, o) => this._writeGlyphs(t, i, e, o, r, 0));\n    }\n    const s = e.readXForDisplay(),\n      n = e.readYForDisplay();\n    return this._writeGlyphs(t, i, s, n, r, 0);\n  }\n  _writePlacedTextMarkers(t, i, s, n) {\n    const a = n ?? o.fromFeatureSetReaderCIM(i);\n    if (!a) return;\n    const c = -1,\n      l = r.getPlacement(a, c, this.evaluatedMeshParams.placement, e(1), t.id, u());\n    if (!l) return;\n    const h = i.getDisplayId();\n    let f = l.next();\n    for (; null != f;) {\n      const e = f.tx,\n        o = -f.ty,\n        r = -f.getAngle();\n      this._writeGlyphs(t, h, e, o, s, r), f = l.next();\n    }\n  }\n  _getShaping(o) {\n    const r = this._textMeshTransformProps,\n      i = this.evaluatedMeshParams;\n    if (!i.glyphs?.glyphs.length) return null;\n    const s = e(r.fontSize),\n      n = e(r.offsetX),\n      p = e(r.offsetY),\n      m = t(e(i.lineWidth), c, a),\n      d = l * t(i.lineHeightRatio, .25, 4);\n    return f(i.glyphs, {\n      scale: s / h,\n      angle: r.postAngle,\n      xOffset: n,\n      yOffset: p,\n      horizontalAlignment: i.horizontalAlignment,\n      verticalAlignment: o || i.verticalAlignment,\n      maxLineWidth: m,\n      lineHeight: d,\n      decoration: i.decoration,\n      borderLineSizePx: e(i.boxBorderLineSize),\n      hasBackground: !!i.boxBackgroundColor,\n      useCIMAngleBehavior: i.useCIMAngleBehavior\n    });\n  }\n  _writeGlyphs(t, o, r, i, s, n, a, c) {\n    const l = this.evaluatedMeshParams,\n      h = this._textMeshTransformProps,\n      f = e(h.fontSize),\n      p = h.haloSize,\n      u = h.outlineSize,\n      g = e(h.offsetX),\n      x = e(h.offsetY),\n      [y, S] = d(l.scaleInfo, this.getTileInfo());\n    0 !== n && s.setRotation(n);\n    const _ = s.bounds,\n      P = r + _.x + g,\n      T = i + _.y - x,\n      b = 2 * (l.minPixelBuffer ? l.minPixelBuffer / f : 1),\n      k = Math.max(_.width, _.height) * b;\n    s.textBox && (t.recordStart(this.instanceId, this.attributeLayout, s.glyphs[0].textureBinding), t.recordBounds(P, T, k, k), this._writeTextBox(t, o, r, i, s.textBox, a, c), t.recordEnd());\n    for (const e of s.glyphs) {\n      t.recordStart(this.instanceId, this.attributeLayout, e.textureBinding), t.recordBounds(P, T, k, k);\n      const {\n        texcoords: s,\n        offsets: n\n      } = e;\n      this._writeQuad(t, o, r, i, {\n        texcoords: s,\n        offsets: n,\n        fontSize: f,\n        haloSize: p,\n        outlineSize: u,\n        color: m(l.color),\n        isBackground: !1,\n        referenceBounds: a,\n        minZoom: y,\n        maxZoom: S,\n        ...c\n      }), t.recordEnd();\n    }\n    0 !== n && s.setRotation(-n);\n  }\n  _writeTextBox(t, e, o, r, i, s, n) {\n    const a = this.evaluatedMeshParams,\n      {\n        fontSize: c,\n        haloSize: l,\n        outlineSize: h\n      } = this._textMeshTransformProps,\n      {\n        boxBackgroundColor: f,\n        boxBorderLineColor: p\n      } = a,\n      d = {\n        isBackground: !0,\n        fontSize: c,\n        haloSize: l,\n        outlineSize: h,\n        referenceBounds: s,\n        ...n\n      };\n    f && (this._writeQuad(t, e, o, r, {\n      texcoords: k,\n      offsets: i.main,\n      color: m(f),\n      ...d\n    }), p || (this._writeQuad(t, e, o, r, {\n      texcoords: w,\n      offsets: i.top,\n      color: m(f),\n      ...d\n    }), this._writeQuad(t, e, o, r, {\n      texcoords: L,\n      offsets: i.bot,\n      color: m(f),\n      ...d\n    }), this._writeQuad(t, e, o, r, {\n      texcoords: I,\n      offsets: i.left,\n      color: m(f),\n      ...d\n    }), this._writeQuad(t, e, o, r, {\n      texcoords: E,\n      offsets: i.right,\n      color: m(f),\n      ...d\n    }))), p && (this._writeQuad(t, e, o, r, {\n      texcoords: M,\n      offsets: i.top,\n      color: m(p),\n      ...d\n    }), this._writeQuad(t, e, o, r, {\n      texcoords: M,\n      offsets: i.bot,\n      color: m(p),\n      ...d\n    }), this._writeQuad(t, e, o, r, {\n      texcoords: R,\n      offsets: i.left,\n      color: m(p),\n      ...d\n    }), this._writeQuad(t, e, o, r, {\n      texcoords: R,\n      offsets: i.right,\n      color: m(p),\n      ...d\n    }));\n  }\n  _writeQuad(t, e, o, r, i) {\n    const s = t.vertexCount();\n    this._writeVertex(t, e, o, r, i), t.indexWrite(s + 0), t.indexWrite(s + 1), t.indexWrite(s + 2), t.indexWrite(s + 1), t.indexWrite(s + 3), t.indexWrite(s + 2);\n  }\n}\nconst A = t => Math.round(t * (254 / 360));\nexport { N as TextMeshWriter, G as TextVertexSpec, P as maxLabelZoom };","map":{"version":3,"names":["clamp","t","pt2px","e","GeometryCursor","o","CIMMarkerPlacementHelper","r","getXDirection","i","getYDirection","s","minMaxZoomPrecisionFactor","n","maxTextLineWidth","a","minTextLineWidth","c","magicLabelLineHeight","l","glyphSize","h","shapeGlyphs","f","packBitset","p","processColorInput","m","getMinMaxZoom","d","getGeometryEngine","u","MeshWriter","g","bitsetTextIsBackground","x","bitsetTextIsMapAligned","y","TextMeshTransformProps","S","DataType","_","P","T","b","k","topLeft","topRight","bottomLeft","bottomRight","z","B","M","R","w","L","I","E","G","createComputedParams","optionalAttributes","zoomRange","type","UNSIGNED_SHORT","count","packPrecisionFactor","packTessellation","minZoom","maxZoom","clipAngle","UNSIGNED_BYTE","A","referenceSymbol","BYTE","isLineLabel","referenceBounds","horizontalAlignment","verticalAlignment","offsetX","offsetY","size","Math","round","attributes","pos","SHORT","pack","id","bitset","isBackground","mapAligned","offset","packAlternating","offsets","textureUV","texcoords","color","normalized","fontSize","referenceSize","outlineColor","haloColor","outlineAndHaloSize","outlineSize","haloSize","N","constructor","arguments","vertexSpec","_textMeshParamsPropsInitialized","ensurePacked","_evaluator","hasDynamicProperties","_textMeshTransformProps","evaluatedMeshParams","_write","_getShaping","getDisplayId","placement","_writePlacedTextMarkers","nextPath","nextPoint","_writeGlyphs","geometryType","readCentroidForDisplay","coords","readGeometryForDisplay","forEachVertex","readXForDisplay","readYForDisplay","fromFeatureSetReaderCIM","getPlacement","next","tx","ty","getAngle","glyphs","length","lineWidth","lineHeightRatio","scale","angle","postAngle","xOffset","yOffset","maxLineWidth","lineHeight","decoration","borderLineSizePx","boxBorderLineSize","hasBackground","boxBackgroundColor","useCIMAngleBehavior","scaleInfo","getTileInfo","setRotation","bounds","minPixelBuffer","max","width","height","textBox","recordStart","instanceId","attributeLayout","textureBinding","recordBounds","_writeTextBox","recordEnd","_writeQuad","boxBorderLineColor","main","top","bot","left","right","vertexCount","_writeVertex","indexWrite","TextMeshWriter","TextVertexSpec","maxLabelZoom"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/2d/engine/webgl/shaderGraph/techniques/text/TextMeshWriter.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{clamp as t}from\"../../../../../../../core/mathUtils.js\";import{pt2px as e}from\"../../../../../../../core/screenUtils.js\";import{GeometryCursor as o}from\"../../../../../../../geometry/GeometryCursor.js\";import{CIMMarkerPlacementHelper as r}from\"../../../../../../../symbols/cim/placements/CIMMarkerPlacementHelper.js\";import{getXDirection as i,getYDirection as s}from\"../../../alignmentUtils.js\";import{minMaxZoomPrecisionFactor as n,maxTextLineWidth as a,minTextLineWidth as c,magicLabelLineHeight as l,glyphSize as h}from\"../../../definitions.js\";import{shapeGlyphs as f}from\"../../../mesh/templates/shapingUtils.js\";import{packBitset as p,processColorInput as m,getMinMaxZoom as d}from\"../fill/meshWriterUtils.js\";import{getGeometryEngine as u}from\"../mesh/loadGeometryEngine.js\";import{MeshWriter as g}from\"../mesh/MeshWriter.js\";import{bitsetTextIsBackground as x,bitsetTextIsMapAligned as y}from\"../shaders/constants.js\";import{TextMeshTransformProps as S}from\"./TextParams.js\";import{DataType as _}from\"../../../../../../webgl/enums.js\";const P=28,T=[4,4],b=[16,4],k={topLeft:b,topRight:b,bottomLeft:b,bottomRight:b},z=[4,2],B=[4,6],M={topLeft:z,topRight:z,bottomLeft:B,bottomRight:B},R={topLeft:z,topRight:B,bottomLeft:z,bottomRight:B},w={topLeft:B,topRight:B,bottomLeft:T,bottomRight:T},L={topLeft:T,topRight:T,bottomLeft:B,bottomRight:B},I={topLeft:B,topRight:T,bottomLeft:B,bottomRight:T},E={topLeft:T,topRight:B,bottomLeft:T,bottomRight:B},G={createComputedParams:t=>t,optionalAttributes:{zoomRange:{type:_.UNSIGNED_SHORT,count:2,packPrecisionFactor:n,packTessellation:({minZoom:t,maxZoom:e})=>[t||0,e||P]},clipAngle:{type:_.UNSIGNED_BYTE,count:1,packTessellation:({clipAngle:t})=>A(t||0)},referenceSymbol:{type:_.BYTE,count:4,packPrecisionFactor:1,packTessellation:(t,o)=>{const r=t.isLineLabel||!t.referenceBounds,n=i(r?\"center\":o.horizontalAlignment),a=s(r?\"middle\":o.verticalAlignment),{offsetX:c,offsetY:l,size:h}=r?{offsetX:0,offsetY:0,size:0}:t.referenceBounds;return[e(c),-e(l),Math.round(e(h)),n+1<<2|a+1]}}},attributes:{pos:{type:_.SHORT,count:2,pack:\"position\",packPrecisionFactor:10},id:{type:_.UNSIGNED_BYTE,count:3,pack:\"id\"},bitset:{type:_.UNSIGNED_BYTE,count:1,packTessellation:({isBackground:t,mapAligned:e})=>p([[x,t],[y,!!e]])},offset:{type:_.SHORT,count:2,packPrecisionFactor:8,packAlternating:{count:4,packTessellation:({offsets:t})=>{const{bottomLeft:e,bottomRight:o,topLeft:r,topRight:i}=t;return[r,i,e,o]}}},textureUV:{type:_.SHORT,count:2,packPrecisionFactor:4,packAlternating:{count:4,packTessellation:({texcoords:t})=>{const{bottomLeft:e,bottomRight:o,topLeft:r,topRight:i}=t;return[r,i,e,o]}}},color:{type:_.UNSIGNED_BYTE,count:4,normalized:!0,packTessellation:({color:t})=>t},fontSize:{type:_.UNSIGNED_SHORT,count:1,packPrecisionFactor:4,packTessellation:({fontSize:t})=>Math.round(e(t))},referenceSize:{type:_.UNSIGNED_BYTE,count:1,packPrecisionFactor:4,packTessellation:({fontSize:t},{referenceSize:o})=>Math.round(e(o??t))},outlineColor:{type:_.UNSIGNED_BYTE,count:4,normalized:!0,pack:({outlineColor:t})=>m(t)},haloColor:{type:_.UNSIGNED_BYTE,count:4,normalized:!0,pack:({haloColor:t})=>m(t)},outlineAndHaloSize:{type:_.UNSIGNED_SHORT,count:2,packPrecisionFactor:4,packTessellation:({outlineSize:t,haloSize:o})=>[Math.round(e(t)),Math.round(e(o))]}}};class N extends g{constructor(){super(...arguments),this.vertexSpec=G,this._textMeshParamsPropsInitialized=!1}ensurePacked(t,e,o){super.ensurePacked(t,e,o),this._textMeshParamsPropsInitialized&&!this._evaluator.hasDynamicProperties||(this._textMeshTransformProps=new S(this.evaluatedMeshParams),this._textMeshParamsPropsInitialized=!0)}_write(t,e,o){const r=this._getShaping();if(!r)return;const i=e.getDisplayId();if(null!=this.evaluatedMeshParams.placement)return this._writePlacedTextMarkers(t,e,r,o);if(o?.nextPath())return o.nextPoint(),this._writeGlyphs(t,i,o.x,o.y,r,0);if(\"esriGeometryPolygon\"===e.geometryType){const o=e.readCentroidForDisplay();if(!o)return;const[s,n]=o.coords;return this._writeGlyphs(t,i,s,n,r,0)}if(\"esriGeometryMultipoint\"===e.geometryType){const o=e.readGeometryForDisplay();return void o?.forEachVertex(((e,o)=>this._writeGlyphs(t,i,e,o,r,0)))}const s=e.readXForDisplay(),n=e.readYForDisplay();return this._writeGlyphs(t,i,s,n,r,0)}_writePlacedTextMarkers(t,i,s,n){const a=n??o.fromFeatureSetReaderCIM(i);if(!a)return;const c=-1,l=r.getPlacement(a,c,this.evaluatedMeshParams.placement,e(1),t.id,u());if(!l)return;const h=i.getDisplayId();let f=l.next();for(;null!=f;){const e=f.tx,o=-f.ty,r=-f.getAngle();this._writeGlyphs(t,h,e,o,s,r),f=l.next()}}_getShaping(o){const r=this._textMeshTransformProps,i=this.evaluatedMeshParams;if(!i.glyphs?.glyphs.length)return null;const s=e(r.fontSize),n=e(r.offsetX),p=e(r.offsetY),m=t(e(i.lineWidth),c,a),d=l*t(i.lineHeightRatio,.25,4);return f(i.glyphs,{scale:s/h,angle:r.postAngle,xOffset:n,yOffset:p,horizontalAlignment:i.horizontalAlignment,verticalAlignment:o||i.verticalAlignment,maxLineWidth:m,lineHeight:d,decoration:i.decoration,borderLineSizePx:e(i.boxBorderLineSize),hasBackground:!!i.boxBackgroundColor,useCIMAngleBehavior:i.useCIMAngleBehavior})}_writeGlyphs(t,o,r,i,s,n,a,c){const l=this.evaluatedMeshParams,h=this._textMeshTransformProps,f=e(h.fontSize),p=h.haloSize,u=h.outlineSize,g=e(h.offsetX),x=e(h.offsetY),[y,S]=d(l.scaleInfo,this.getTileInfo());0!==n&&s.setRotation(n);const _=s.bounds,P=r+_.x+g,T=i+_.y-x,b=2*(l.minPixelBuffer?l.minPixelBuffer/f:1),k=Math.max(_.width,_.height)*b;s.textBox&&(t.recordStart(this.instanceId,this.attributeLayout,s.glyphs[0].textureBinding),t.recordBounds(P,T,k,k),this._writeTextBox(t,o,r,i,s.textBox,a,c),t.recordEnd());for(const e of s.glyphs){t.recordStart(this.instanceId,this.attributeLayout,e.textureBinding),t.recordBounds(P,T,k,k);const{texcoords:s,offsets:n}=e;this._writeQuad(t,o,r,i,{texcoords:s,offsets:n,fontSize:f,haloSize:p,outlineSize:u,color:m(l.color),isBackground:!1,referenceBounds:a,minZoom:y,maxZoom:S,...c}),t.recordEnd()}0!==n&&s.setRotation(-n)}_writeTextBox(t,e,o,r,i,s,n){const a=this.evaluatedMeshParams,{fontSize:c,haloSize:l,outlineSize:h}=this._textMeshTransformProps,{boxBackgroundColor:f,boxBorderLineColor:p}=a,d={isBackground:!0,fontSize:c,haloSize:l,outlineSize:h,referenceBounds:s,...n};f&&(this._writeQuad(t,e,o,r,{texcoords:k,offsets:i.main,color:m(f),...d}),p||(this._writeQuad(t,e,o,r,{texcoords:w,offsets:i.top,color:m(f),...d}),this._writeQuad(t,e,o,r,{texcoords:L,offsets:i.bot,color:m(f),...d}),this._writeQuad(t,e,o,r,{texcoords:I,offsets:i.left,color:m(f),...d}),this._writeQuad(t,e,o,r,{texcoords:E,offsets:i.right,color:m(f),...d}))),p&&(this._writeQuad(t,e,o,r,{texcoords:M,offsets:i.top,color:m(p),...d}),this._writeQuad(t,e,o,r,{texcoords:M,offsets:i.bot,color:m(p),...d}),this._writeQuad(t,e,o,r,{texcoords:R,offsets:i.left,color:m(p),...d}),this._writeQuad(t,e,o,r,{texcoords:R,offsets:i.right,color:m(p),...d}))}_writeQuad(t,e,o,r,i){const s=t.vertexCount();this._writeVertex(t,e,o,r,i),t.indexWrite(s+0),t.indexWrite(s+1),t.indexWrite(s+2),t.indexWrite(s+1),t.indexWrite(s+3),t.indexWrite(s+2)}}const A=t=>Math.round(t*(254/360));export{N as TextMeshWriter,G as TextVertexSpec,P as maxLabelZoom};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}