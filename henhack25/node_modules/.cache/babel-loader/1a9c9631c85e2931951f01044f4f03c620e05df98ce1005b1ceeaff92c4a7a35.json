{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { isSome as t } from \"../../../../../core/arrayUtils.js\";\nimport e from \"../../../../../core/Logger.js\";\nimport { assertIsSome as s } from \"../../../../../core/maybe.js\";\nimport { isLoaded as r, load as i, execute as a } from \"../../../../../geometry/operators/gx/operatorGeodeticDensify.js\";\nimport { geodeticCurveType as o } from \"../../../../../geometry/operators/support/geodeticCurveType.js\";\nimport { intersectsWithMargin as n, fromValues as l, intersects as c, empty as d, expandPointInPlace as u } from \"../../../../../geometry/support/aaBoundingRect.js\";\nimport { getClosestDenormalizedXToReference as h } from \"../../../../../geometry/support/normalizeUtils.js\";\nimport { normalizeCentralMeridianForDisplay as m } from \"../../../../../geometry/support/normalizeUtilsSync.js\";\nimport { quantizeOptimizedGeometry as p, convertToGeometry as f, convertFromNestedArray as g } from \"../../../../../layers/graphics/featureConversionUtils.js\";\nimport { OptimizedFeature as _ } from \"../../../../../layers/graphics/OptimizedFeature.js\";\nimport b from \"../../../../../layers/graphics/OptimizedGeometry.js\";\nimport { internalTrackPartField as y, TrackPart as I, externalTrackLineOidPrefix as v, internalTimeReceivedField as k } from \"../../../../../layers/support/streamLayerUtils.js\";\nimport { tileSize as F } from \"../../../engine/webgl/definitions.js\";\nimport { AccumulatedStatistics as j } from \"../aggregation/AccumulatedStatistics.js\";\nimport { ComputedAggregateField as O } from \"../aggregation/ComputedAggregateField.js\";\nimport { AAggregateStrategy as x } from \"./AAggregateStrategy.js\";\nimport { ASendState as T } from \"./AProcessorStrategy.js\";\nimport { FeatureTileAppendMessage as S } from \"../sources/FeatureSourceMessage.js\";\nimport { createArcadeEvaluationOptions as R } from \"../support/arcadeUtils.js\";\nimport { ComputedAttributeStorage as D } from \"../support/ComputedAttributeStorage.js\";\nimport L from \"../support/FeatureFilterEvaluator.js\";\nimport { FeatureMetadata as w } from \"../support/FeatureMetadata.js\";\nimport { FeatureSetReaderIndirect as A } from \"../support/FeatureSetReaderIndirect.js\";\nimport { FeatureSetReaderJSON as G } from \"../support/FeatureSetReaderJSON.js\";\nlet P;\nconst C = () => e.getLogger(\"esri.views.2d.layers.features.processor.TrackStrategy\"),\n  M = 32;\nclass W {\n  constructor(t, e, s, r, i) {\n    this.chunkIndex = t, this.featureIndex = e, this.objectId = s, this.displayId = r, this.time = i;\n  }\n}\nclass z {\n  static getOid(t) {\n    return v + t;\n  }\n  constructor(t, e, s, r, i, a, o, n) {\n    this._schema = t, this.trackId = e, this.objectId = s, this.displayId = r, this._fields = i, this._spatialReference = a, this._metadata = o, this._isStream = n, this._maxDisplayDuration = this._schema.maxDisplayDuration > 0 ? this._schema.maxDisplayDuration : 1 / 0, this._maxDisplayObservationsPerTrack = this._schema.maxDisplayObservationsPerTrack >= 1 ? this._schema.maxDisplayObservationsPerTrack : 1 / 0, this._observationRecords = [], this._nextObservationRecords = [], this._trackLinePath = [], this._bounds = [], this._trackLineGeometry = new b();\n  }\n  get _trackLineAttributes() {\n    const t = {\n      ...(this._latestObservationFeature?.attributes ?? {}),\n      aggregateId: this.objectId,\n      [y]: I.TrackLine\n    };\n    if (null != this._statistics) for (const e of this._statistics.values()) t[e.field.name] = e.value;\n    return t;\n  }\n  get _startTimeField() {\n    return this._metadata.timeInfo?.startTimeField;\n  }\n  get length() {\n    return this._observationRecords.length;\n  }\n  *observations() {\n    yield* this._observationRecords;\n  }\n  *previousObservations() {\n    for (let t = 0; t < this._observationRecords.length - 1; t++) yield this._observationRecords[t];\n  }\n  stageObservation(t, e) {\n    this._nextObservationRecords.push(new W(t, e.getIndex(), e.getObjectId(), e.getDisplayId(), null != this._startTimeField ? e.readAttributeAsTimestamp(this._startTimeField) : null));\n  }\n  commitObservations(t, e) {\n    const r = new Set(this._nextObservationRecords.map(t => t.objectId)),\n      i = this._observationRecords.filter(t => !r.has(t.objectId)).map(t => t.objectId);\n    let a, o;\n    switch (this._observationRecords = [], this._trackLinePath = [], this._isStream || null == this._startTimeField || this._nextObservationRecords.sort((t, e) => {\n      const s = t.time,\n        r = e.time;\n      return null != s && null != r ? s - r : 0;\n    }), this._schema.timeField) {\n      case \"startTimeField\":\n        a = this._metadata.timeInfo?.startTimeField;\n        break;\n      case \"endTimeField\":\n        a = this._metadata.timeInfo?.endTimeField;\n        break;\n      case \"timeReceived\":\n        a = this._isStream ? k : null;\n    }\n    o = this._isStream ? e?.end ?? Date.now() : e?.end ?? -1 / 0;\n    const n = t.map(t => t.reader.getCursor());\n    let l;\n    for (let c = this._nextObservationRecords.length - 1; c >= 0 && !(this._observationRecords.length >= this._maxDisplayObservationsPerTrack); c--) {\n      const t = this._nextObservationRecords[c],\n        e = n[t.chunkIndex];\n      s(e), e.setIndex(t.featureIndex);\n      const r = null != a ? e.readAttributeAsTimestamp(a) : null;\n      (null != r ? o - r : 0) >= this._maxDisplayDuration || (this._commitObservation(t, e), l ??= t);\n    }\n    if (null != l) {\n      const {\n          chunkIndex: t,\n          featureIndex: e,\n          objectId: r,\n          displayId: i\n        } = l,\n        a = n[t];\n      s(a), a.setIndex(e);\n      const o = new _(a.readGeometryWorldSpace(), {\n        ...a.readAttributes(),\n        [y]: I.LatestObservation\n      }, null, r, i);\n      this._latestObservationFeature = o;\n    } else this._latestObservationFeature = null;\n    return this._trackLineGeometry = E(this._trackLineGeometry, this._trackLinePath, this._spatialReference), this._bounds = Z(this._trackLineGeometry), this._nextObservationRecords = [], i;\n  }\n  updateStatistics(t, e) {\n    this._statistics = j.create(this._fields);\n    const r = t.map(t => t.reader.getCursor());\n    for (const {\n      chunkIndex: i,\n      featureIndex: a\n    } of this._observationRecords) {\n      const t = r[i];\n      s(t), t.setIndex(a), this._statistics.insert(t, e);\n    }\n  }\n  overlapsTile(t) {\n    for (const e of this._bounds) if (n(e, t.bounds, M)) return !0;\n    return !1;\n  }\n  getLatestObservationFeatureForTile(t) {\n    if (null == this._latestObservationFeature) return null;\n    const {\n        objectId: e,\n        displayId: s,\n        geometry: r,\n        attributes: i\n      } = this._latestObservationFeature,\n      a = new b();\n    p(a, r, !1, !1, this._metadata.geometryType, t.subscription.tile.transform);\n    const o = l(1 / 0, 1 / 0, -1 / 0, -1 / 0);\n    X(a, (t, e) => u(o, [t, e]));\n    if (!c(o, l(0, 0, F, F))) return null;\n    return new _(a, i, null, e, s);\n  }\n  getTrackLineFeatureForTile(t) {\n    const e = new b();\n    p(e, this._trackLineGeometry, !1, !1, \"esriGeometryPolyline\", t.subscription.tile.transform);\n    return new _(e, this._trackLineAttributes, null, this.objectId, this.displayId);\n  }\n  getTrackLineOptimizedFeature() {\n    return new _(this._trackLineGeometry, this._trackLineAttributes, null, this.objectId, this.displayId);\n  }\n  getTrackLineDisplayFeature() {\n    const {\n      _trackLineGeometry: t,\n      _trackLineAttributes: e,\n      displayId: s\n    } = this;\n    return {\n      geometry: f(t, \"esriGeometryPolyline\", !1, !1),\n      attributes: e,\n      displayId: s\n    };\n  }\n  _commitObservation(t, e) {\n    const s = e.readCentroidWorldSpace();\n    let r = s?.coords[0],\n      i = s?.coords[1];\n    null == s && (r = e.readXWorldSpace(), i = e.readYWorldSpace()), null != r && null != i && (this._observationRecords.unshift(t), this._trackLinePath.unshift([r, i]));\n  }\n}\nclass U extends T {\n  constructor(t) {\n    super(t), this.done = !1;\n  }\n}\nclass q extends x {\n  static async create(t, e, s, a, o, n) {\n    const l = new D({\n        spatialReference: e\n      }),\n      c = await Promise.all(t.fields.map(async t => O.create(l, t))),\n      d = t.featureFilter ? await L.create({\n        geometryType: s.metadata.geometryType,\n        hasM: !1,\n        hasZ: !1,\n        timeInfo: s.metadata.timeInfo,\n        fieldsIndex: s.metadata.fieldsIndex,\n        spatialReference: e,\n        filterJSON: t.featureFilter\n      }) : null;\n    return e.isWrappable || r() || (await Promise.all([import(\"../../../../../geometry/operators/support/apiConverter.js\"), import(\"../../../../../geometry/operators/support/jsonConverter.js\"), i()]).then(([t, e, s]) => {\n      P = {\n        fromGeometryToGXGeometry: e.fromGeometryToGXGeometry,\n        toGeometry: e.toGeometry,\n        fromSpatialReference: t.fromSpatialReference\n      };\n    })), new q(t, s, a, e, c, d, o, n);\n  }\n  constructor(t, e, s, r, i, a, o, n) {\n    super(e, s, r, i, n), this._schema = t, this._featureFilter = a, this._arcadeContextInfo = o, this._tracks = new Map(), this._metadata = e.metadata.weakCloneWithAdditionalFields([{\n      name: y,\n      alias: \"trackPart\",\n      type: \"esriFieldTypeSmallInteger\"\n    }]), this._trackLineMetadata = w.createFeature({\n      geometryType: \"esriGeometryPolyline\",\n      objectIdField: \"aggregateId\",\n      fieldsIndex: {\n        fields: [...this._source.metadata.fieldsIndex.fields, ...this.aggregateFields, {\n          name: y,\n          alias: \"trackPart\",\n          type: \"esriFieldTypeSmallInteger\"\n        }, {\n          name: \"aggregateId\",\n          alias: \"aggregateId\",\n          type: \"esriFieldTypeOID\"\n        }],\n        timeZoneByFieldName: null\n      },\n      globalIdField: null,\n      spatialReference: e.metadata.spatialReference,\n      outSpatialReference: e.metadata.outSpatialReference,\n      subtypeField: null,\n      subtypes: null,\n      timeInfo: e.metadata.timeInfo,\n      timeReferenceUnknownClient: null,\n      dateFieldsTimeZone: null,\n      typeIdField: null,\n      types: null\n    });\n  }\n  get _isStream() {\n    return this._source.isStream;\n  }\n  get enablePixelBuffering() {\n    return !0;\n  }\n  get isAggregate() {\n    return !1;\n  }\n  createState(t) {\n    return new U(t);\n  }\n  async *applyOverrideUpdate(t) {\n    C().error(\"Applying override to tracks is not supported\");\n  }\n  displayMap(t, e, s) {\n    const r = new Map(t.map(t => [e(t), t])),\n      i = [];\n    for (const a of this._tracks.values()) {\n      const t = r.get(a.objectId);\n      if (null == t) for (const e of a.observations()) {\n        const t = r.get(e.objectId);\n        if (null != t) {\n          const a = s(e.displayId, t, e.objectId);\n          i.push(a), r.delete(e.objectId);\n        }\n      } else {\n        const e = s(a.displayId, t, a.objectId);\n        i.push(e), r.delete(a.objectId);\n      }\n    }\n    return i;\n  }\n  getDisplayFeatures(t) {\n    const e = new Set(t),\n      s = [],\n      r = [],\n      i = this._source.chunks().map(t => t.reader.getCursor());\n    for (const a of this._tracks.values()) {\n      e.has(a.displayId) && r.push(a.getTrackLineDisplayFeature());\n      for (const {\n        displayId: t,\n        chunkIndex: r,\n        featureIndex: o\n      } of a.observations()) if (e.has(t)) {\n        const e = i[r];\n        e.setIndex(o), s.push({\n          displayId: t,\n          attributes: {},\n          ...e.readLegacyFeatureWorldSpace()\n        });\n      }\n    }\n    return {\n      features: s,\n      aggregates: [],\n      tracks: r\n    };\n  }\n  getFeatureObjectIdsForAggregate(t) {\n    for (const e of this._tracks.values()) if (e.objectId === t) return Array.from(e.observations(), t => t.objectId);\n    return [];\n  }\n  async *updateChunks() {\n    const t = this._source.chunks();\n    if (!t.length) return;\n    const e = this._metadata.timeInfo?.trackIdField;\n    if (null == e) return;\n    const s = new Set();\n    for (let r = 0; r < t.length; r++) {\n      const i = t[r].reader.getCursor();\n      for (; i.next();) {\n        const t = i.readAttribute(e),\n          a = i.getObjectId();\n        if (null != t && null != a && (null === this._featureFilter || this._featureFilter.check(i, this._sqlOptions))) {\n          if (i.getDisplayId() || i.setDisplayId(this._attributeStore.createDisplayIdForObjectId(a)), !this._tracks.has(t)) {\n            const e = z.getOid(t),\n              s = this._attributeStore.createDisplayIdForObjectId(e),\n              r = new z(this._schema, t, e, s, this.aggregateFields, this.spatialReference, this._source.metadata, this._isStream);\n            this._tracks.set(t, r);\n          }\n          this._tracks.get(t).stageObservation(r, i), s.add(t);\n        }\n      }\n    }\n    for (const r of this._tracks.values()) if (s.has(r.trackId)) {\n      const e = r.commitObservations(t, this._featureFilter?.timeExtent);\n      for (const t of e) this._attributeStore.releaseDisplayIdForObjectId(t);\n      r.updateStatistics(t, R(1, this._arcadeContextInfo));\n    } else this._removeTrack(r);\n    for (const r of this._sendStates.values()) yield* this._update(r);\n  }\n  forEachAggregateWorldSpace(t) {\n    for (const e of this._tracks.values()) t(e.getTrackLineOptimizedFeature());\n  }\n  _removeTrack(t) {\n    this._tracks.delete(t.trackId), this._attributeStore.releaseDisplayIdForObjectId(t.objectId);\n    for (const {\n      objectId: e\n    } of t.observations()) this._attributeStore.releaseDisplayIdForObjectId(e);\n  }\n  *_update(e) {\n    if (e.done) return;\n    e.done = !this._source.updateTracking.updating;\n    const s = [],\n      r = [];\n    for (const t of this._tracks.values()) if (t.length > 0) {\n      if (this._schema.showLatestObservation) {\n        const r = t.getLatestObservationFeatureForTile(e);\n        null != r && s.push(r);\n      }\n      this._schema.showTrackLine && t.overlapsTile(e.subscription.tile) && r.push(t.getTrackLineFeatureForTile(e));\n    }\n    const i = G.fromOptimizedFeatures(s, this._metadata, e.subscription.tile.transform),\n      a = G.fromOptimizedFeatures(r, this._trackLineMetadata, e.subscription.tile.transform);\n    let o = [];\n    if (this._schema.showPreviousObservations) {\n      const s = this._source.chunks().map(() => []);\n      for (const t of this._tracks.values()) for (const {\n        chunkIndex: e,\n        featureIndex: r\n      } of t.previousObservations()) s[e].push(r);\n      o = this._source.chunks().map((t, r) => {\n        const i = t.getTileReader(e.subscription.tile);\n        if (null == i) return null;\n        const a = A.from(i, s[r]);\n        return a.setProcessorAttributes({\n          [y]: I.PreviousObservation\n        }), \"esriGeometryPoint\" !== a.geometryType && null != a.getInTransform() || a.setTransformForDisplay(e.subscription.tile.transform), a;\n      }).filter(t);\n    }\n    this.events.emit(\"changed\");\n    const n = e.subscription.tile.createArcadeEvaluationOptions(this._arcadeContextInfo),\n      l = a.getCursor();\n    for (; l.next();) this._attributeStore.setAttributeData(l.getDisplayId(), l, n, this._sqlOptions);\n    for (const t of o) {\n      const e = t.getCursor();\n      for (; e.next();) this._attributeStore.setAttributeData(e.getDisplayId(), e, n, this._sqlOptions);\n    }\n    const c = i.getCursor();\n    for (; c.next();) this._attributeStore.setAttributeData(c.getDisplayId(), c, n, this._sqlOptions);\n    yield new S(e.subscription, a, !0, !1, {});\n    for (const t of o) yield new S(e.subscription, t, !1, !1, {});\n    yield new S(e.subscription, i, !1, e.done, {});\n  }\n}\nfunction E(t, e, s) {\n  if (e.length < 2) return g(t, [e], !1, !1);\n  if (s.isWrappable) {\n    let r = !1;\n    for (let t = 1; t < e.length; t++) {\n      const i = e[t][0],\n        a = h(i, e[t - 1][0], s);\n      i !== a && (e[t][0] = a, r = !0);\n    }\n    if (r) {\n      const r = m({\n        paths: [e],\n        spatialReference: s\n      });\n      if (null != r) return g(t, r.paths, !1, !1);\n    }\n    return g(t, [e], !1, !1);\n  }\n  const r = P.fromGeometryToGXGeometry({\n      hasM: !1,\n      hasZ: !1,\n      paths: [e]\n    }),\n    i = P.fromSpatialReference(s);\n  if (null != i) {\n    const e = a(r, 1e6, i, o.geodesic);\n    if (null != e) {\n      const s = P.toGeometry(e, i);\n      if (null != s && \"paths\" in s) return g(t, s.paths, !1, !1);\n    }\n  }\n  return g(t, [e], !1, !1);\n}\nfunction X(t, e) {\n  const s = 2,\n    {\n      coords: r,\n      lengths: i\n    } = t;\n  if (!i.length) return void e(r[0], r[1]);\n  let a = 0;\n  for (let o = 0; o < i.length; o++) {\n    const t = i[o];\n    let n = 0,\n      l = 0;\n    for (let i = 0; i < t; i++) n += r[s * (i + a)], l += r[s * (i + a) + 1], e(n, l);\n    a += t;\n  }\n}\nfunction Z(t) {\n  const {\n      lengths: e,\n      coords: s\n    } = t,\n    r = 2;\n  if (!e.length) return [d()];\n  const i = [];\n  let a = 0;\n  for (let o = 0; o < e.length; o++) {\n    const t = e[o],\n      n = d();\n    i.push(n);\n    for (let e = 0; e < t; e++) {\n      const t = s[r * (e + a)],\n        i = s[r * (e + a) + 1];\n      u(n, [t, i]);\n    }\n    a += t;\n  }\n  return i;\n}\nexport { q as TrackStrategy };","map":{"version":3,"names":["isSome","t","e","assertIsSome","s","isLoaded","r","load","i","execute","a","geodeticCurveType","o","intersectsWithMargin","n","fromValues","l","intersects","c","empty","d","expandPointInPlace","u","getClosestDenormalizedXToReference","h","normalizeCentralMeridianForDisplay","m","quantizeOptimizedGeometry","p","convertToGeometry","f","convertFromNestedArray","g","OptimizedFeature","_","b","internalTrackPartField","y","TrackPart","I","externalTrackLineOidPrefix","v","internalTimeReceivedField","k","tileSize","F","AccumulatedStatistics","j","ComputedAggregateField","O","AAggregateStrategy","x","ASendState","T","FeatureTileAppendMessage","S","createArcadeEvaluationOptions","R","ComputedAttributeStorage","D","L","FeatureMetadata","w","FeatureSetReaderIndirect","A","FeatureSetReaderJSON","G","P","C","getLogger","M","W","constructor","chunkIndex","featureIndex","objectId","displayId","time","z","getOid","_schema","trackId","_fields","_spatialReference","_metadata","_isStream","_maxDisplayDuration","maxDisplayDuration","_maxDisplayObservationsPerTrack","maxDisplayObservationsPerTrack","_observationRecords","_nextObservationRecords","_trackLinePath","_bounds","_trackLineGeometry","_trackLineAttributes","_latestObservationFeature","attributes","aggregateId","TrackLine","_statistics","values","field","name","value","_startTimeField","timeInfo","startTimeField","length","observations","previousObservations","stageObservation","push","getIndex","getObjectId","getDisplayId","readAttributeAsTimestamp","commitObservations","Set","map","filter","has","sort","timeField","endTimeField","end","Date","now","reader","getCursor","setIndex","_commitObservation","readGeometryWorldSpace","readAttributes","LatestObservation","E","Z","updateStatistics","create","insert","overlapsTile","bounds","getLatestObservationFeatureForTile","geometry","geometryType","subscription","tile","transform","X","getTrackLineFeatureForTile","getTrackLineOptimizedFeature","getTrackLineDisplayFeature","readCentroidWorldSpace","coords","readXWorldSpace","readYWorldSpace","unshift","U","done","q","spatialReference","Promise","all","fields","featureFilter","metadata","hasM","hasZ","fieldsIndex","filterJSON","isWrappable","then","fromGeometryToGXGeometry","toGeometry","fromSpatialReference","_featureFilter","_arcadeContextInfo","_tracks","Map","weakCloneWithAdditionalFields","alias","type","_trackLineMetadata","createFeature","objectIdField","_source","aggregateFields","timeZoneByFieldName","globalIdField","outSpatialReference","subtypeField","subtypes","timeReferenceUnknownClient","dateFieldsTimeZone","typeIdField","types","isStream","enablePixelBuffering","isAggregate","createState","applyOverrideUpdate","error","displayMap","get","delete","getDisplayFeatures","chunks","readLegacyFeatureWorldSpace","features","aggregates","tracks","getFeatureObjectIdsForAggregate","Array","from","updateChunks","trackIdField","next","readAttribute","check","_sqlOptions","setDisplayId","_attributeStore","createDisplayIdForObjectId","set","add","timeExtent","releaseDisplayIdForObjectId","_removeTrack","_sendStates","_update","forEachAggregateWorldSpace","updateTracking","updating","showLatestObservation","showTrackLine","fromOptimizedFeatures","showPreviousObservations","getTileReader","setProcessorAttributes","PreviousObservation","getInTransform","setTransformForDisplay","events","emit","setAttributeData","paths","geodesic","lengths","TrackStrategy"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/2d/layers/features/processor/TrackStrategy.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{isSome as t}from\"../../../../../core/arrayUtils.js\";import e from\"../../../../../core/Logger.js\";import{assertIsSome as s}from\"../../../../../core/maybe.js\";import{isLoaded as r,load as i,execute as a}from\"../../../../../geometry/operators/gx/operatorGeodeticDensify.js\";import{geodeticCurveType as o}from\"../../../../../geometry/operators/support/geodeticCurveType.js\";import{intersectsWithMargin as n,fromValues as l,intersects as c,empty as d,expandPointInPlace as u}from\"../../../../../geometry/support/aaBoundingRect.js\";import{getClosestDenormalizedXToReference as h}from\"../../../../../geometry/support/normalizeUtils.js\";import{normalizeCentralMeridianForDisplay as m}from\"../../../../../geometry/support/normalizeUtilsSync.js\";import{quantizeOptimizedGeometry as p,convertToGeometry as f,convertFromNestedArray as g}from\"../../../../../layers/graphics/featureConversionUtils.js\";import{OptimizedFeature as _}from\"../../../../../layers/graphics/OptimizedFeature.js\";import b from\"../../../../../layers/graphics/OptimizedGeometry.js\";import{internalTrackPartField as y,TrackPart as I,externalTrackLineOidPrefix as v,internalTimeReceivedField as k}from\"../../../../../layers/support/streamLayerUtils.js\";import{tileSize as F}from\"../../../engine/webgl/definitions.js\";import{AccumulatedStatistics as j}from\"../aggregation/AccumulatedStatistics.js\";import{ComputedAggregateField as O}from\"../aggregation/ComputedAggregateField.js\";import{AAggregateStrategy as x}from\"./AAggregateStrategy.js\";import{ASendState as T}from\"./AProcessorStrategy.js\";import{FeatureTileAppendMessage as S}from\"../sources/FeatureSourceMessage.js\";import{createArcadeEvaluationOptions as R}from\"../support/arcadeUtils.js\";import{ComputedAttributeStorage as D}from\"../support/ComputedAttributeStorage.js\";import L from\"../support/FeatureFilterEvaluator.js\";import{FeatureMetadata as w}from\"../support/FeatureMetadata.js\";import{FeatureSetReaderIndirect as A}from\"../support/FeatureSetReaderIndirect.js\";import{FeatureSetReaderJSON as G}from\"../support/FeatureSetReaderJSON.js\";let P;const C=()=>e.getLogger(\"esri.views.2d.layers.features.processor.TrackStrategy\"),M=32;class W{constructor(t,e,s,r,i){this.chunkIndex=t,this.featureIndex=e,this.objectId=s,this.displayId=r,this.time=i}}class z{static getOid(t){return v+t}constructor(t,e,s,r,i,a,o,n){this._schema=t,this.trackId=e,this.objectId=s,this.displayId=r,this._fields=i,this._spatialReference=a,this._metadata=o,this._isStream=n,this._maxDisplayDuration=this._schema.maxDisplayDuration>0?this._schema.maxDisplayDuration:1/0,this._maxDisplayObservationsPerTrack=this._schema.maxDisplayObservationsPerTrack>=1?this._schema.maxDisplayObservationsPerTrack:1/0,this._observationRecords=[],this._nextObservationRecords=[],this._trackLinePath=[],this._bounds=[],this._trackLineGeometry=new b}get _trackLineAttributes(){const t={...this._latestObservationFeature?.attributes??{},aggregateId:this.objectId,[y]:I.TrackLine};if(null!=this._statistics)for(const e of this._statistics.values())t[e.field.name]=e.value;return t}get _startTimeField(){return this._metadata.timeInfo?.startTimeField}get length(){return this._observationRecords.length}*observations(){yield*this._observationRecords}*previousObservations(){for(let t=0;t<this._observationRecords.length-1;t++)yield this._observationRecords[t]}stageObservation(t,e){this._nextObservationRecords.push(new W(t,e.getIndex(),e.getObjectId(),e.getDisplayId(),null!=this._startTimeField?e.readAttributeAsTimestamp(this._startTimeField):null))}commitObservations(t,e){const r=new Set(this._nextObservationRecords.map((t=>t.objectId))),i=this._observationRecords.filter((t=>!r.has(t.objectId))).map((t=>t.objectId));let a,o;switch(this._observationRecords=[],this._trackLinePath=[],this._isStream||null==this._startTimeField||this._nextObservationRecords.sort(((t,e)=>{const s=t.time,r=e.time;return null!=s&&null!=r?s-r:0})),this._schema.timeField){case\"startTimeField\":a=this._metadata.timeInfo?.startTimeField;break;case\"endTimeField\":a=this._metadata.timeInfo?.endTimeField;break;case\"timeReceived\":a=this._isStream?k:null}o=this._isStream?e?.end??Date.now():e?.end??-1/0;const n=t.map((t=>t.reader.getCursor()));let l;for(let c=this._nextObservationRecords.length-1;c>=0&&!(this._observationRecords.length>=this._maxDisplayObservationsPerTrack);c--){const t=this._nextObservationRecords[c],e=n[t.chunkIndex];s(e),e.setIndex(t.featureIndex);const r=null!=a?e.readAttributeAsTimestamp(a):null;(null!=r?o-r:0)>=this._maxDisplayDuration||(this._commitObservation(t,e),l??=t)}if(null!=l){const{chunkIndex:t,featureIndex:e,objectId:r,displayId:i}=l,a=n[t];s(a),a.setIndex(e);const o=new _(a.readGeometryWorldSpace(),{...a.readAttributes(),[y]:I.LatestObservation},null,r,i);this._latestObservationFeature=o}else this._latestObservationFeature=null;return this._trackLineGeometry=E(this._trackLineGeometry,this._trackLinePath,this._spatialReference),this._bounds=Z(this._trackLineGeometry),this._nextObservationRecords=[],i}updateStatistics(t,e){this._statistics=j.create(this._fields);const r=t.map((t=>t.reader.getCursor()));for(const{chunkIndex:i,featureIndex:a}of this._observationRecords){const t=r[i];s(t),t.setIndex(a),this._statistics.insert(t,e)}}overlapsTile(t){for(const e of this._bounds)if(n(e,t.bounds,M))return!0;return!1}getLatestObservationFeatureForTile(t){if(null==this._latestObservationFeature)return null;const{objectId:e,displayId:s,geometry:r,attributes:i}=this._latestObservationFeature,a=new b;p(a,r,!1,!1,this._metadata.geometryType,t.subscription.tile.transform);const o=l(1/0,1/0,-1/0,-1/0);X(a,((t,e)=>u(o,[t,e])));if(!c(o,l(0,0,F,F)))return null;return new _(a,i,null,e,s)}getTrackLineFeatureForTile(t){const e=new b;p(e,this._trackLineGeometry,!1,!1,\"esriGeometryPolyline\",t.subscription.tile.transform);return new _(e,this._trackLineAttributes,null,this.objectId,this.displayId)}getTrackLineOptimizedFeature(){return new _(this._trackLineGeometry,this._trackLineAttributes,null,this.objectId,this.displayId)}getTrackLineDisplayFeature(){const{_trackLineGeometry:t,_trackLineAttributes:e,displayId:s}=this;return{geometry:f(t,\"esriGeometryPolyline\",!1,!1),attributes:e,displayId:s}}_commitObservation(t,e){const s=e.readCentroidWorldSpace();let r=s?.coords[0],i=s?.coords[1];null==s&&(r=e.readXWorldSpace(),i=e.readYWorldSpace()),null!=r&&null!=i&&(this._observationRecords.unshift(t),this._trackLinePath.unshift([r,i]))}}class U extends T{constructor(t){super(t),this.done=!1}}class q extends x{static async create(t,e,s,a,o,n){const l=new D({spatialReference:e}),c=await Promise.all(t.fields.map((async t=>O.create(l,t)))),d=t.featureFilter?await L.create({geometryType:s.metadata.geometryType,hasM:!1,hasZ:!1,timeInfo:s.metadata.timeInfo,fieldsIndex:s.metadata.fieldsIndex,spatialReference:e,filterJSON:t.featureFilter}):null;return e.isWrappable||r()||await Promise.all([import(\"../../../../../geometry/operators/support/apiConverter.js\"),import(\"../../../../../geometry/operators/support/jsonConverter.js\"),i()]).then((([t,e,s])=>{P={fromGeometryToGXGeometry:e.fromGeometryToGXGeometry,toGeometry:e.toGeometry,fromSpatialReference:t.fromSpatialReference}})),new q(t,s,a,e,c,d,o,n)}constructor(t,e,s,r,i,a,o,n){super(e,s,r,i,n),this._schema=t,this._featureFilter=a,this._arcadeContextInfo=o,this._tracks=new Map,this._metadata=e.metadata.weakCloneWithAdditionalFields([{name:y,alias:\"trackPart\",type:\"esriFieldTypeSmallInteger\"}]),this._trackLineMetadata=w.createFeature({geometryType:\"esriGeometryPolyline\",objectIdField:\"aggregateId\",fieldsIndex:{fields:[...this._source.metadata.fieldsIndex.fields,...this.aggregateFields,{name:y,alias:\"trackPart\",type:\"esriFieldTypeSmallInteger\"},{name:\"aggregateId\",alias:\"aggregateId\",type:\"esriFieldTypeOID\"}],timeZoneByFieldName:null},globalIdField:null,spatialReference:e.metadata.spatialReference,outSpatialReference:e.metadata.outSpatialReference,subtypeField:null,subtypes:null,timeInfo:e.metadata.timeInfo,timeReferenceUnknownClient:null,dateFieldsTimeZone:null,typeIdField:null,types:null})}get _isStream(){return this._source.isStream}get enablePixelBuffering(){return!0}get isAggregate(){return!1}createState(t){return new U(t)}async*applyOverrideUpdate(t){C().error(\"Applying override to tracks is not supported\")}displayMap(t,e,s){const r=new Map(t.map((t=>[e(t),t]))),i=[];for(const a of this._tracks.values()){const t=r.get(a.objectId);if(null==t)for(const e of a.observations()){const t=r.get(e.objectId);if(null!=t){const a=s(e.displayId,t,e.objectId);i.push(a),r.delete(e.objectId)}}else{const e=s(a.displayId,t,a.objectId);i.push(e),r.delete(a.objectId)}}return i}getDisplayFeatures(t){const e=new Set(t),s=[],r=[],i=this._source.chunks().map((t=>t.reader.getCursor()));for(const a of this._tracks.values()){e.has(a.displayId)&&r.push(a.getTrackLineDisplayFeature());for(const{displayId:t,chunkIndex:r,featureIndex:o}of a.observations())if(e.has(t)){const e=i[r];e.setIndex(o),s.push({displayId:t,attributes:{},...e.readLegacyFeatureWorldSpace()})}}return{features:s,aggregates:[],tracks:r}}getFeatureObjectIdsForAggregate(t){for(const e of this._tracks.values())if(e.objectId===t)return Array.from(e.observations(),(t=>t.objectId));return[]}async*updateChunks(){const t=this._source.chunks();if(!t.length)return;const e=this._metadata.timeInfo?.trackIdField;if(null==e)return;const s=new Set;for(let r=0;r<t.length;r++){const i=t[r].reader.getCursor();for(;i.next();){const t=i.readAttribute(e),a=i.getObjectId();if(null!=t&&null!=a&&(null===this._featureFilter||this._featureFilter.check(i,this._sqlOptions))){if(i.getDisplayId()||i.setDisplayId(this._attributeStore.createDisplayIdForObjectId(a)),!this._tracks.has(t)){const e=z.getOid(t),s=this._attributeStore.createDisplayIdForObjectId(e),r=new z(this._schema,t,e,s,this.aggregateFields,this.spatialReference,this._source.metadata,this._isStream);this._tracks.set(t,r)}this._tracks.get(t).stageObservation(r,i),s.add(t)}}}for(const r of this._tracks.values())if(s.has(r.trackId)){const e=r.commitObservations(t,this._featureFilter?.timeExtent);for(const t of e)this._attributeStore.releaseDisplayIdForObjectId(t);r.updateStatistics(t,R(1,this._arcadeContextInfo))}else this._removeTrack(r);for(const r of this._sendStates.values())yield*this._update(r)}forEachAggregateWorldSpace(t){for(const e of this._tracks.values())t(e.getTrackLineOptimizedFeature())}_removeTrack(t){this._tracks.delete(t.trackId),this._attributeStore.releaseDisplayIdForObjectId(t.objectId);for(const{objectId:e}of t.observations())this._attributeStore.releaseDisplayIdForObjectId(e)}*_update(e){if(e.done)return;e.done=!this._source.updateTracking.updating;const s=[],r=[];for(const t of this._tracks.values())if(t.length>0){if(this._schema.showLatestObservation){const r=t.getLatestObservationFeatureForTile(e);null!=r&&s.push(r)}this._schema.showTrackLine&&t.overlapsTile(e.subscription.tile)&&r.push(t.getTrackLineFeatureForTile(e))}const i=G.fromOptimizedFeatures(s,this._metadata,e.subscription.tile.transform),a=G.fromOptimizedFeatures(r,this._trackLineMetadata,e.subscription.tile.transform);let o=[];if(this._schema.showPreviousObservations){const s=this._source.chunks().map((()=>[]));for(const t of this._tracks.values())for(const{chunkIndex:e,featureIndex:r}of t.previousObservations())s[e].push(r);o=this._source.chunks().map(((t,r)=>{const i=t.getTileReader(e.subscription.tile);if(null==i)return null;const a=A.from(i,s[r]);return a.setProcessorAttributes({[y]:I.PreviousObservation}),\"esriGeometryPoint\"!==a.geometryType&&null!=a.getInTransform()||a.setTransformForDisplay(e.subscription.tile.transform),a})).filter(t)}this.events.emit(\"changed\");const n=e.subscription.tile.createArcadeEvaluationOptions(this._arcadeContextInfo),l=a.getCursor();for(;l.next();)this._attributeStore.setAttributeData(l.getDisplayId(),l,n,this._sqlOptions);for(const t of o){const e=t.getCursor();for(;e.next();)this._attributeStore.setAttributeData(e.getDisplayId(),e,n,this._sqlOptions)}const c=i.getCursor();for(;c.next();)this._attributeStore.setAttributeData(c.getDisplayId(),c,n,this._sqlOptions);yield new S(e.subscription,a,!0,!1,{});for(const t of o)yield new S(e.subscription,t,!1,!1,{});yield new S(e.subscription,i,!1,e.done,{})}}function E(t,e,s){if(e.length<2)return g(t,[e],!1,!1);if(s.isWrappable){let r=!1;for(let t=1;t<e.length;t++){const i=e[t][0],a=h(i,e[t-1][0],s);i!==a&&(e[t][0]=a,r=!0)}if(r){const r=m({paths:[e],spatialReference:s});if(null!=r)return g(t,r.paths,!1,!1)}return g(t,[e],!1,!1)}const r=P.fromGeometryToGXGeometry({hasM:!1,hasZ:!1,paths:[e]}),i=P.fromSpatialReference(s);if(null!=i){const e=a(r,1e6,i,o.geodesic);if(null!=e){const s=P.toGeometry(e,i);if(null!=s&&\"paths\"in s)return g(t,s.paths,!1,!1)}}return g(t,[e],!1,!1)}function X(t,e){const s=2,{coords:r,lengths:i}=t;if(!i.length)return void e(r[0],r[1]);let a=0;for(let o=0;o<i.length;o++){const t=i[o];let n=0,l=0;for(let i=0;i<t;i++)n+=r[s*(i+a)],l+=r[s*(i+a)+1],e(n,l);a+=t}}function Z(t){const{lengths:e,coords:s}=t,r=2;if(!e.length)return[d()];const i=[];let a=0;for(let o=0;o<e.length;o++){const t=e[o],n=d();i.push(n);for(let e=0;e<t;e++){const t=s[r*(e+a)],i=s[r*(e+a)+1];u(n,[t,i])}a+=t}return i}export{q as TrackStrategy};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}