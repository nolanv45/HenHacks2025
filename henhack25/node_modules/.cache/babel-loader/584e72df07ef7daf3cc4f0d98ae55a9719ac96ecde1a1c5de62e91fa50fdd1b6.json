{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { Lyr3DWasmWorkerOutputStatus as s } from \"../../../layers/ILyr3DWasmPerSceneView.js\";\nimport { loadLyr3DWorkerWASM as t } from \"../../../libs/lyr3d/Lyr3DModule.js\";\nlet e, n;\nasync function r(t) {\n  if (await o(), t.inputs.length < 1) return {\n    result: {\n      status: s.Failed,\n      error: \"\",\n      jobDescJson: \"\",\n      data: new Uint8Array(0),\n      missingInputUrls: []\n    },\n    transferList: []\n  };\n  const e = {\n    ptrs: [],\n    sizes: []\n  };\n  for (const s of t.inputs) {\n    const t = n._malloc(s.byteLength);\n    new Uint8Array(n.HEAPU8.buffer, t, s.byteLength).set(new Uint8Array(s)), e.ptrs.push(t), e.sizes.push(s.byteLength);\n  }\n  const r = n.process(t.jobDescJson, e, t.isMissingResourceCase),\n    i = r.status === s.Succeeded && r.data,\n    a = r.status === s.MissingInputs && r.missingInputUrls.length > 0;\n  if (i) {\n    const s = r.data.slice();\n    r.data = s;\n  } else a && (r.jobDescJson = r.jobDescJson.slice(), r.originalInputs = t.inputs.slice());\n  for (let s = 0; s < e.ptrs.length; ++s) n._free(e.ptrs[s]);\n  const l = [];\n  if (i) l.push(r.data.buffer);else if (a) for (const s of t.inputs) l.push(s);\n  return {\n    result: r,\n    transferList: l\n  };\n}\nfunction i() {\n  n && (n.uninitialize_lyr3d_worker_wasm(), n = null);\n}\nfunction o() {\n  return n ? Promise.resolve() : (e || (e = t().then(s => {\n    n = s, n.initialize_lyr3d_worker_wasm(), e = null;\n  })), e);\n}\nexport { i as destroyWasm, o as initialize, r as process };","map":{"version":3,"names":["Lyr3DWasmWorkerOutputStatus","s","loadLyr3DWorkerWASM","t","e","n","r","o","inputs","length","result","status","Failed","error","jobDescJson","data","Uint8Array","missingInputUrls","transferList","ptrs","sizes","_malloc","byteLength","HEAPU8","buffer","set","push","process","isMissingResourceCase","i","Succeeded","a","MissingInputs","slice","originalInputs","_free","l","uninitialize_lyr3d_worker_wasm","Promise","resolve","then","initialize_lyr3d_worker_wasm","destroyWasm","initialize"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/3d/layers/Lyr3DWorker.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{Lyr3DWasmWorkerOutputStatus as s}from\"../../../layers/ILyr3DWasmPerSceneView.js\";import{loadLyr3DWorkerWASM as t}from\"../../../libs/lyr3d/Lyr3DModule.js\";let e,n;async function r(t){if(await o(),t.inputs.length<1)return{result:{status:s.Failed,error:\"\",jobDescJson:\"\",data:new Uint8Array(0),missingInputUrls:[]},transferList:[]};const e={ptrs:[],sizes:[]};for(const s of t.inputs){const t=n._malloc(s.byteLength);new Uint8Array(n.HEAPU8.buffer,t,s.byteLength).set(new Uint8Array(s)),e.ptrs.push(t),e.sizes.push(s.byteLength)}const r=n.process(t.jobDescJson,e,t.isMissingResourceCase),i=r.status===s.Succeeded&&r.data,a=r.status===s.MissingInputs&&r.missingInputUrls.length>0;if(i){const s=r.data.slice();r.data=s}else a&&(r.jobDescJson=r.jobDescJson.slice(),r.originalInputs=t.inputs.slice());for(let s=0;s<e.ptrs.length;++s)n._free(e.ptrs[s]);const l=[];if(i)l.push(r.data.buffer);else if(a)for(const s of t.inputs)l.push(s);return{result:r,transferList:l}}function i(){n&&(n.uninitialize_lyr3d_worker_wasm(),n=null)}function o(){return n?Promise.resolve():(e||(e=t().then((s=>{n=s,n.initialize_lyr3d_worker_wasm(),e=null}))),e)}export{i as destroyWasm,o as initialize,r as process};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,2BAA2B,IAAIC,CAAC,QAAK,2CAA2C;AAAC,SAAOC,mBAAmB,IAAIC,CAAC,QAAK,oCAAoC;AAAC,IAAIC,CAAC,EAACC,CAAC;AAAC,eAAeC,CAACA,CAACH,CAAC,EAAC;EAAC,IAAG,MAAMI,CAAC,CAAC,CAAC,EAACJ,CAAC,CAACK,MAAM,CAACC,MAAM,GAAC,CAAC,EAAC,OAAM;IAACC,MAAM,EAAC;MAACC,MAAM,EAACV,CAAC,CAACW,MAAM;MAACC,KAAK,EAAC,EAAE;MAACC,WAAW,EAAC,EAAE;MAACC,IAAI,EAAC,IAAIC,UAAU,CAAC,CAAC,CAAC;MAACC,gBAAgB,EAAC;IAAE,CAAC;IAACC,YAAY,EAAC;EAAE,CAAC;EAAC,MAAMd,CAAC,GAAC;IAACe,IAAI,EAAC,EAAE;IAACC,KAAK,EAAC;EAAE,CAAC;EAAC,KAAI,MAAMnB,CAAC,IAAIE,CAAC,CAACK,MAAM,EAAC;IAAC,MAAML,CAAC,GAACE,CAAC,CAACgB,OAAO,CAACpB,CAAC,CAACqB,UAAU,CAAC;IAAC,IAAIN,UAAU,CAACX,CAAC,CAACkB,MAAM,CAACC,MAAM,EAACrB,CAAC,EAACF,CAAC,CAACqB,UAAU,CAAC,CAACG,GAAG,CAAC,IAAIT,UAAU,CAACf,CAAC,CAAC,CAAC,EAACG,CAAC,CAACe,IAAI,CAACO,IAAI,CAACvB,CAAC,CAAC,EAACC,CAAC,CAACgB,KAAK,CAACM,IAAI,CAACzB,CAAC,CAACqB,UAAU,CAAC;EAAA;EAAC,MAAMhB,CAAC,GAACD,CAAC,CAACsB,OAAO,CAACxB,CAAC,CAACW,WAAW,EAACV,CAAC,EAACD,CAAC,CAACyB,qBAAqB,CAAC;IAACC,CAAC,GAACvB,CAAC,CAACK,MAAM,KAAGV,CAAC,CAAC6B,SAAS,IAAExB,CAAC,CAACS,IAAI;IAACgB,CAAC,GAACzB,CAAC,CAACK,MAAM,KAAGV,CAAC,CAAC+B,aAAa,IAAE1B,CAAC,CAACW,gBAAgB,CAACR,MAAM,GAAC,CAAC;EAAC,IAAGoB,CAAC,EAAC;IAAC,MAAM5B,CAAC,GAACK,CAAC,CAACS,IAAI,CAACkB,KAAK,CAAC,CAAC;IAAC3B,CAAC,CAACS,IAAI,GAACd,CAAC;EAAA,CAAC,MAAK8B,CAAC,KAAGzB,CAAC,CAACQ,WAAW,GAACR,CAAC,CAACQ,WAAW,CAACmB,KAAK,CAAC,CAAC,EAAC3B,CAAC,CAAC4B,cAAc,GAAC/B,CAAC,CAACK,MAAM,CAACyB,KAAK,CAAC,CAAC,CAAC;EAAC,KAAI,IAAIhC,CAAC,GAAC,CAAC,EAACA,CAAC,GAACG,CAAC,CAACe,IAAI,CAACV,MAAM,EAAC,EAAER,CAAC,EAACI,CAAC,CAAC8B,KAAK,CAAC/B,CAAC,CAACe,IAAI,CAAClB,CAAC,CAAC,CAAC;EAAC,MAAMmC,CAAC,GAAC,EAAE;EAAC,IAAGP,CAAC,EAACO,CAAC,CAACV,IAAI,CAACpB,CAAC,CAACS,IAAI,CAACS,MAAM,CAAC,CAAC,KAAK,IAAGO,CAAC,EAAC,KAAI,MAAM9B,CAAC,IAAIE,CAAC,CAACK,MAAM,EAAC4B,CAAC,CAACV,IAAI,CAACzB,CAAC,CAAC;EAAC,OAAM;IAACS,MAAM,EAACJ,CAAC;IAACY,YAAY,EAACkB;EAAC,CAAC;AAAA;AAAC,SAASP,CAACA,CAAA,EAAE;EAACxB,CAAC,KAAGA,CAAC,CAACgC,8BAA8B,CAAC,CAAC,EAAChC,CAAC,GAAC,IAAI,CAAC;AAAA;AAAC,SAASE,CAACA,CAAA,EAAE;EAAC,OAAOF,CAAC,GAACiC,OAAO,CAACC,OAAO,CAAC,CAAC,IAAEnC,CAAC,KAAGA,CAAC,GAACD,CAAC,CAAC,CAAC,CAACqC,IAAI,CAAEvC,CAAC,IAAE;IAACI,CAAC,GAACJ,CAAC,EAACI,CAAC,CAACoC,4BAA4B,CAAC,CAAC,EAACrC,CAAC,GAAC,IAAI;EAAA,CAAE,CAAC,CAAC,EAACA,CAAC,CAAC;AAAA;AAAC,SAAOyB,CAAC,IAAIa,WAAW,EAACnC,CAAC,IAAIoC,UAAU,EAACrC,CAAC,IAAIqB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}