{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nclass t {\n  constructor(t) {\n    this._indexOnly = t, this.vertex = {\n      count: 0,\n      operations: []\n    }, this.index = {\n      count: 0,\n      operations: []\n    };\n  }\n  copyRecord(t) {\n    let e = 0;\n    this._indexOnly || (e = this.vertex.count - t.vertexStart, this.vertex.operations.push({\n      srcFrom: t.vertexStart,\n      dstFrom: this.vertex.count,\n      count: t.vertexCount,\n      mutate: 0\n    }), t.vertexStart = this.vertex.count, this.vertex.count += t.vertexCount);\n    let n = !1;\n    if (this._indexOnly && this.index.operations.length >= 1) {\n      const e = this.index.operations[this.index.operations.length - 1];\n      e.srcFrom + e.count === t.indexStart && (e.count += t.indexCount, n = !0);\n    }\n    n || this.index.operations.push({\n      srcFrom: t.indexStart,\n      dstFrom: this.index.count,\n      count: t.indexCount,\n      mutate: e\n    }), t.indexStart = this.index.count, this.index.count += t.indexCount;\n  }\n}\nexport { t as ReshufflePlan };","map":{"version":3,"names":["t","constructor","_indexOnly","vertex","count","operations","index","copyRecord","e","vertexStart","push","srcFrom","dstFrom","vertexCount","mutate","n","length","indexStart","indexCount","ReshufflePlan"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/2d/engine/webgl/ReshufflePlan.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nclass t{constructor(t){this._indexOnly=t,this.vertex={count:0,operations:[]},this.index={count:0,operations:[]}}copyRecord(t){let e=0;this._indexOnly||(e=this.vertex.count-t.vertexStart,this.vertex.operations.push({srcFrom:t.vertexStart,dstFrom:this.vertex.count,count:t.vertexCount,mutate:0}),t.vertexStart=this.vertex.count,this.vertex.count+=t.vertexCount);let n=!1;if(this._indexOnly&&this.index.operations.length>=1){const e=this.index.operations[this.index.operations.length-1];e.srcFrom+e.count===t.indexStart&&(e.count+=t.indexCount,n=!0)}n||this.index.operations.push({srcFrom:t.indexStart,dstFrom:this.index.count,count:t.indexCount,mutate:e}),t.indexStart=this.index.count,this.index.count+=t.indexCount}}export{t as ReshufflePlan};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,MAAMA,CAAC;EAACC,WAAWA,CAACD,CAAC,EAAC;IAAC,IAAI,CAACE,UAAU,GAACF,CAAC,EAAC,IAAI,CAACG,MAAM,GAAC;MAACC,KAAK,EAAC,CAAC;MAACC,UAAU,EAAC;IAAE,CAAC,EAAC,IAAI,CAACC,KAAK,GAAC;MAACF,KAAK,EAAC,CAAC;MAACC,UAAU,EAAC;IAAE,CAAC;EAAA;EAACE,UAAUA,CAACP,CAAC,EAAC;IAAC,IAAIQ,CAAC,GAAC,CAAC;IAAC,IAAI,CAACN,UAAU,KAAGM,CAAC,GAAC,IAAI,CAACL,MAAM,CAACC,KAAK,GAACJ,CAAC,CAACS,WAAW,EAAC,IAAI,CAACN,MAAM,CAACE,UAAU,CAACK,IAAI,CAAC;MAACC,OAAO,EAACX,CAAC,CAACS,WAAW;MAACG,OAAO,EAAC,IAAI,CAACT,MAAM,CAACC,KAAK;MAACA,KAAK,EAACJ,CAAC,CAACa,WAAW;MAACC,MAAM,EAAC;IAAC,CAAC,CAAC,EAACd,CAAC,CAACS,WAAW,GAAC,IAAI,CAACN,MAAM,CAACC,KAAK,EAAC,IAAI,CAACD,MAAM,CAACC,KAAK,IAAEJ,CAAC,CAACa,WAAW,CAAC;IAAC,IAAIE,CAAC,GAAC,CAAC,CAAC;IAAC,IAAG,IAAI,CAACb,UAAU,IAAE,IAAI,CAACI,KAAK,CAACD,UAAU,CAACW,MAAM,IAAE,CAAC,EAAC;MAAC,MAAMR,CAAC,GAAC,IAAI,CAACF,KAAK,CAACD,UAAU,CAAC,IAAI,CAACC,KAAK,CAACD,UAAU,CAACW,MAAM,GAAC,CAAC,CAAC;MAACR,CAAC,CAACG,OAAO,GAACH,CAAC,CAACJ,KAAK,KAAGJ,CAAC,CAACiB,UAAU,KAAGT,CAAC,CAACJ,KAAK,IAAEJ,CAAC,CAACkB,UAAU,EAACH,CAAC,GAAC,CAAC,CAAC,CAAC;IAAA;IAACA,CAAC,IAAE,IAAI,CAACT,KAAK,CAACD,UAAU,CAACK,IAAI,CAAC;MAACC,OAAO,EAACX,CAAC,CAACiB,UAAU;MAACL,OAAO,EAAC,IAAI,CAACN,KAAK,CAACF,KAAK;MAACA,KAAK,EAACJ,CAAC,CAACkB,UAAU;MAACJ,MAAM,EAACN;IAAC,CAAC,CAAC,EAACR,CAAC,CAACiB,UAAU,GAAC,IAAI,CAACX,KAAK,CAACF,KAAK,EAAC,IAAI,CAACE,KAAK,CAACF,KAAK,IAAEJ,CAAC,CAACkB,UAAU;EAAA;AAAC;AAAC,SAAOlB,CAAC,IAAImB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}