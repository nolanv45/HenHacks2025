{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport r from \"../../../core/Error.js\";\nimport { clone as e } from \"../../../core/lang.js\";\nimport { throwIfAborted as o } from \"../../../core/promiseUtils.js\";\nimport { MeshVertexAttributes as t } from \"../MeshVertexAttributes.js\";\nimport { convertVertexSpace as s } from \"./vertexSpaceConversion.js\";\nasync function i(i, n, c) {\n  await Promise.resolve(), o(c);\n  const l = s(i, n, {\n    useEllipsoid: c?.useEllipsoid\n  });\n  if (!l) throw new r(\"meshUtils:convertVertexSpace()\", \"Failed to convert to provided vertex space due to projection errors\");\n  const m = i.cloneAndModifyVertexAttributes(new t({\n    ...l,\n    uv: e(i.vertexAttributes.uv),\n    color: e(i.vertexAttributes.color)\n  }), n);\n  return m.transform = null, m;\n}\nexport { i as convertMeshVertexSpace };","map":{"version":3,"names":["r","clone","e","throwIfAborted","o","MeshVertexAttributes","t","convertVertexSpace","s","i","n","c","Promise","resolve","l","useEllipsoid","m","cloneAndModifyVertexAttributes","uv","vertexAttributes","color","transform","convertMeshVertexSpace"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/geometry/support/meshUtils/convertMeshVertexSpace.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport r from\"../../../core/Error.js\";import{clone as e}from\"../../../core/lang.js\";import{throwIfAborted as o}from\"../../../core/promiseUtils.js\";import{MeshVertexAttributes as t}from\"../MeshVertexAttributes.js\";import{convertVertexSpace as s}from\"./vertexSpaceConversion.js\";async function i(i,n,c){await Promise.resolve(),o(c);const l=s(i,n,{useEllipsoid:c?.useEllipsoid});if(!l)throw new r(\"meshUtils:convertVertexSpace()\",\"Failed to convert to provided vertex space due to projection errors\");const m=i.cloneAndModifyVertexAttributes(new t({...l,uv:e(i.vertexAttributes.uv),color:e(i.vertexAttributes.color)}),n);return m.transform=null,m}export{i as convertMeshVertexSpace};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAOA,CAAC,MAAK,wBAAwB;AAAC,SAAOC,KAAK,IAAIC,CAAC,QAAK,uBAAuB;AAAC,SAAOC,cAAc,IAAIC,CAAC,QAAK,+BAA+B;AAAC,SAAOC,oBAAoB,IAAIC,CAAC,QAAK,4BAA4B;AAAC,SAAOC,kBAAkB,IAAIC,CAAC,QAAK,4BAA4B;AAAC,eAAeC,CAACA,CAACA,CAAC,EAACC,CAAC,EAACC,CAAC,EAAC;EAAC,MAAMC,OAAO,CAACC,OAAO,CAAC,CAAC,EAACT,CAAC,CAACO,CAAC,CAAC;EAAC,MAAMG,CAAC,GAACN,CAAC,CAACC,CAAC,EAACC,CAAC,EAAC;IAACK,YAAY,EAACJ,CAAC,EAAEI;EAAY,CAAC,CAAC;EAAC,IAAG,CAACD,CAAC,EAAC,MAAM,IAAId,CAAC,CAAC,gCAAgC,EAAC,qEAAqE,CAAC;EAAC,MAAMgB,CAAC,GAACP,CAAC,CAACQ,8BAA8B,CAAC,IAAIX,CAAC,CAAC;IAAC,GAAGQ,CAAC;IAACI,EAAE,EAAChB,CAAC,CAACO,CAAC,CAACU,gBAAgB,CAACD,EAAE,CAAC;IAACE,KAAK,EAAClB,CAAC,CAACO,CAAC,CAACU,gBAAgB,CAACC,KAAK;EAAC,CAAC,CAAC,EAACV,CAAC,CAAC;EAAC,OAAOM,CAAC,CAACK,SAAS,GAAC,IAAI,EAACL,CAAC;AAAA;AAAC,SAAOP,CAAC,IAAIa,sBAAsB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}