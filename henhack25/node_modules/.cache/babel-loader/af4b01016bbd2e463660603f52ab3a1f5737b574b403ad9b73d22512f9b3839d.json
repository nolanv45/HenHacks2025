{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport has from \"../../../../core/has.js\";\nimport t from \"../../../../core/Logger.js\";\nimport { deg2rad as e } from \"../../../../core/mathUtils.js\";\nimport { throwIfAborted as n } from \"../../../../core/promiseUtils.js\";\nimport r from \"../../../../core/RandomLCG.js\";\nimport o from \"../../../../geometry/Extent.js\";\nimport { getInfo as l } from \"../../../../geometry/support/spatialReferenceUtils.js\";\nconst i = () => t.getLogger(\"esri.views.2d.engine.flow.dataUtils\"),\n  a = 10;\nasync function s(t, e, r, o) {\n  const l = performance.now(),\n    s = c(e, r),\n    f = performance.now(),\n    h = u(e, s, r.width, r.height),\n    p = performance.now(),\n    g = m(h, !0),\n    y = performance.now(),\n    x = \"Streamlines\" === t ? d(g, a) : w(g),\n    M = performance.now();\n  return has(\"esri-2d-profiler\") && (i().info(\"I.1\", \"_createFlowFieldFromData (ms)\", Math.round(f - l)), i().info(\"I.2\", \"_getStreamlines (ms)\", Math.round(p - f)), i().info(\"I.3\", \"createAnimatedLinesData (ms)\", Math.round(y - p)), i().info(\"I.4\", \"create{Streamlines|Particles}Mesh (ms)\", Math.round(M - y)), i().info(\"I.5\", \"createFlowMesh (ms)\", Math.round(M - l)), i().info(\"I.6\", \"Mesh size (bytes)\", x.vertexData.buffer.byteLength + x.indexData.buffer.byteLength)), await Promise.resolve(), n(o), x;\n}\nfunction c(t, e) {\n  const n = h(e.data, e.width, e.height, t.smoothing);\n  if (t.interpolate) {\n    return (t, r) => {\n      const o = Math.floor(t),\n        l = Math.floor(r);\n      if (o < 0 || o >= e.width) return [0, 0];\n      if (l < 0 || l >= e.height) return [0, 0];\n      const i = t - o,\n        a = r - l,\n        s = o,\n        c = l,\n        f = o < e.width - 1 ? o + 1 : o,\n        u = l < e.height - 1 ? l + 1 : l,\n        h = n[2 * (c * e.width + s)],\n        m = n[2 * (c * e.width + f)],\n        d = n[2 * (u * e.width + s)],\n        w = n[2 * (u * e.width + f)],\n        p = n[2 * (c * e.width + s) + 1],\n        g = n[2 * (c * e.width + f) + 1];\n      return [(h * (1 - a) + d * a) * (1 - i) + (m * (1 - a) + w * a) * i, (p * (1 - a) + n[2 * (u * e.width + s) + 1] * a) * (1 - i) + (g * (1 - a) + n[2 * (u * e.width + f) + 1] * a) * i];\n    };\n  }\n  return (t, r) => {\n    const o = Math.round(t),\n      l = Math.round(r);\n    return o < 0 || o >= e.width || l < 0 || l >= e.height ? [0, 0] : [n[2 * (l * e.width + o)], n[2 * (l * e.width + o) + 1]];\n  };\n}\nfunction f(t, e, n, r, o, l, i, a, s) {\n  const c = [];\n  let f = n,\n    u = r,\n    h = 0,\n    [m, d] = e(f, u);\n  m *= t.velocityScale, d *= t.velocityScale;\n  const w = Math.sqrt(m * m + d * d);\n  let p, g;\n  c.push({\n    x: f,\n    y: u,\n    t: h,\n    speed: w\n  });\n  for (let y = 0; y < t.verticesPerLine; y++) {\n    let [n, r] = e(f, u);\n    n *= t.velocityScale, r *= t.velocityScale;\n    const m = Math.sqrt(n * n + r * r);\n    if (m < t.minSpeedThreshold) return c;\n    const d = n / m,\n      w = r / m;\n    f += d * t.segmentLength, u += w * t.segmentLength;\n    if (h += t.segmentLength / m, Math.acos(d * p + w * g) > t.maxTurnAngle) return c;\n    if (t.collisions) {\n      const t = Math.round(f * s),\n        e = Math.round(u * s);\n      if (t < 0 || t > i - 1 || e < 0 || e > a - 1) return c;\n      const n = l[e * i + t];\n      if (-1 !== n && n !== o) return c;\n      l[e * i + t] = o;\n    }\n    c.push({\n      x: f,\n      y: u,\n      t: h,\n      speed: m\n    }), p = d, g = w;\n  }\n  return c;\n}\nfunction u(t, e, n, o) {\n  const l = [],\n    i = new r(),\n    a = 1 / Math.max(t.lineCollisionWidth, 1),\n    s = Math.round(n * a),\n    c = Math.round(o * a),\n    u = new Int32Array(s * c);\n  for (let r = 0; r < u.length; r++) u[r] = -1;\n  const h = [];\n  for (let r = 0; r < o; r += t.lineSpacing) for (let e = 0; e < n; e += t.lineSpacing) h.push({\n    x: e,\n    y: r,\n    sort: i.getFloat()\n  });\n  h.sort((t, e) => t.sort - e.sort);\n  for (const {\n    x: r,\n    y: m\n  } of h) if (i.getFloat() < t.density) {\n    const n = f(t, e, r, m, l.length, u, s, c, a);\n    if (n.length < 2) continue;\n    l.push(n);\n  }\n  return l;\n}\nfunction h(t, e, n, r) {\n  if (0 === r) return t;\n  const o = Math.round(3 * r),\n    l = new Array(2 * o + 1);\n  let i = 0;\n  for (let c = -o; c <= o; c++) {\n    const t = Math.exp(-c * c / (r * r));\n    l[c + o] = t, i += t;\n  }\n  for (let c = -o; c <= o; c++) l[c + o] /= i;\n  const a = new Float32Array(t.length);\n  for (let c = 0; c < n; c++) for (let n = 0; n < e; n++) {\n    let r = 0,\n      i = 0;\n    for (let a = -o; a <= o; a++) {\n      if (n + a < 0 || n + a >= e) continue;\n      const s = l[a + o];\n      r += s * t[2 * (c * e + (n + a))], i += s * t[2 * (c * e + (n + a)) + 1];\n    }\n    a[2 * (c * e + n)] = r, a[2 * (c * e + n) + 1] = i;\n  }\n  const s = new Float32Array(t.length);\n  for (let c = 0; c < e; c++) for (let t = 0; t < n; t++) {\n    let r = 0,\n      i = 0;\n    for (let s = -o; s <= o; s++) {\n      if (t + s < 0 || t + s >= n) continue;\n      const f = l[s + o];\n      r += f * a[2 * ((t + s) * e + c)], i += f * a[2 * ((t + s) * e + c) + 1];\n    }\n    s[2 * (t * e + c)] = r, s[2 * (t * e + c) + 1] = i;\n  }\n  return s;\n}\nfunction m(t, e) {\n  const n = new r(),\n    o = t.reduce((t, e) => t + e.length, 0),\n    l = new Float32Array(4 * o),\n    i = new Array(t.length);\n  let a = 0,\n    s = 0;\n  for (const r of t) {\n    const t = a;\n    for (const e of r) l[4 * a] = e.x, l[4 * a + 1] = e.y, l[4 * a + 2] = e.t, l[4 * a + 3] = e.speed, a++;\n    i[s++] = {\n      startVertex: t,\n      numberOfVertices: r.length,\n      totalTime: r[r.length - 1].t,\n      timeSeed: e ? n.getFloat() : 0\n    };\n  }\n  return {\n    lineVertices: l,\n    lineDescriptors: i\n  };\n}\nfunction d(t, e) {\n  const n = 9,\n    {\n      lineVertices: r,\n      lineDescriptors: o\n    } = t;\n  let l = 0,\n    i = 0;\n  for (const m of o) {\n    l += 2 * m.numberOfVertices;\n    i += 6 * (m.numberOfVertices - 1);\n  }\n  const a = new Float32Array(l * n),\n    s = new Uint32Array(i);\n  let c = 0,\n    f = 0;\n  function u() {\n    s[f++] = c - 2, s[f++] = c, s[f++] = c - 1, s[f++] = c, s[f++] = c + 1, s[f++] = c - 1;\n  }\n  function h(t, e, r, o, l, i, s, f) {\n    const u = c * n;\n    let h = 0;\n    a[u + h++] = t, a[u + h++] = e, a[u + h++] = 1, a[u + h++] = r, a[u + h++] = i, a[u + h++] = s, a[u + h++] = o / 2, a[u + h++] = l / 2, a[u + h++] = f, c++, a[u + h++] = t, a[u + h++] = e, a[u + h++] = -1, a[u + h++] = r, a[u + h++] = i, a[u + h++] = s, a[u + h++] = -o / 2, a[u + h++] = -l / 2, a[u + h++] = f, c++;\n  }\n  for (const m of o) {\n    const {\n      totalTime: t,\n      timeSeed: n\n    } = m;\n    let o = null,\n      l = null,\n      i = null,\n      a = null,\n      s = null,\n      c = null;\n    for (let f = 0; f < m.numberOfVertices; f++) {\n      const d = r[4 * (m.startVertex + f)],\n        w = r[4 * (m.startVertex + f) + 1],\n        p = r[4 * (m.startVertex + f) + 2],\n        g = r[4 * (m.startVertex + f) + 3];\n      let y = null,\n        x = null,\n        M = null,\n        A = null;\n      if (f > 0) {\n        y = d - o, x = w - l;\n        const r = Math.sqrt(y * y + x * x);\n        if (y /= r, x /= r, f > 1) {\n          let t = y + s,\n            n = x + c;\n          const r = Math.sqrt(t * t + n * n);\n          t /= r, n /= r;\n          const o = Math.min(1 / (t * y + n * x), e);\n          t *= o, n *= o, M = -n, A = t;\n        } else M = -x, A = y;\n        null !== M && null !== A && (h(o, l, i, M, A, t, n, g), u());\n      }\n      o = d, l = w, i = p, s = y, c = x, a = g;\n    }\n    h(o, l, i, -c, s, t, n, a);\n  }\n  return {\n    vertexData: a,\n    indexData: s\n  };\n}\nfunction w(t) {\n  const e = 16,\n    n = 1,\n    r = 2,\n    {\n      lineVertices: o,\n      lineDescriptors: l\n    } = t;\n  let i = 0,\n    a = 0;\n  for (const U of l) {\n    const t = U.numberOfVertices - 1;\n    i += 4 * t * 2, a += 6 * t * 2;\n  }\n  const s = new Float32Array(i * e),\n    c = new Uint32Array(a);\n  let f,\n    u,\n    h,\n    m,\n    d,\n    w,\n    p,\n    g,\n    y,\n    x,\n    M,\n    A,\n    I,\n    V,\n    F = 0,\n    v = 0;\n  function D() {\n    c[v++] = F - 8, c[v++] = F - 7, c[v++] = F - 6, c[v++] = F - 7, c[v++] = F - 5, c[v++] = F - 6, c[v++] = F - 4, c[v++] = F - 3, c[v++] = F - 2, c[v++] = F - 3, c[v++] = F - 1, c[v++] = F - 2;\n  }\n  function b(t, o, l, i, a, c, f, u, h, m, d, w, p, g) {\n    const y = F * e;\n    let x = 0;\n    for (const e of [n, r]) for (const n of [1, 2, 3, 4]) s[y + x++] = t, s[y + x++] = o, s[y + x++] = l, s[y + x++] = i, s[y + x++] = f, s[y + x++] = u, s[y + x++] = h, s[y + x++] = m, s[y + x++] = e, s[y + x++] = n, s[y + x++] = p, s[y + x++] = g, s[y + x++] = a / 2, s[y + x++] = c / 2, s[y + x++] = d / 2, s[y + x++] = w / 2, F++;\n  }\n  function S(t, e) {\n    let n = y + M,\n      r = x + A;\n    const o = Math.sqrt(n * n + r * r);\n    n /= o, r /= o;\n    const l = y * n + x * r;\n    n /= l, r /= l;\n    let i = M + I,\n      a = A + V;\n    const s = Math.sqrt(i * i + a * a);\n    i /= s, a /= s;\n    const c = M * i + A * a;\n    i /= c, a /= c, b(f, u, h, m, -r, n, d, w, p, g, -a, i, t, e), D();\n  }\n  function k(t, e, n, r, o, l) {\n    if (y = M, x = A, M = I, A = V, null == y && null == x && (y = M, x = A), null != d && null != w) {\n      I = t - d, V = e - w;\n      const n = Math.sqrt(I * I + V * V);\n      I /= n, V /= n;\n    }\n    null != y && null != x && S(o, l), f = d, u = w, h = p, m = g, d = t, w = e, p = n, g = r;\n  }\n  function L(t, e) {\n    y = M, x = A, M = I, A = V, null == y && null == x && (y = M, x = A), null != y && null != x && S(t, e);\n  }\n  for (const U of l) {\n    f = null, u = null, h = null, m = null, d = null, w = null, p = null, g = null, y = null, x = null, M = null, A = null, I = null, V = null;\n    const {\n      totalTime: t,\n      timeSeed: e\n    } = U;\n    for (let n = 0; n < U.numberOfVertices; n++) {\n      k(o[4 * (U.startVertex + n)], o[4 * (U.startVertex + n) + 1], o[4 * (U.startVertex + n) + 2], o[4 * (U.startVertex + n) + 3], t, e);\n    }\n    L(t, e);\n  }\n  return {\n    vertexData: s,\n    indexData: c\n  };\n}\nfunction p(t, n) {\n  const r = n.pixels,\n    {\n      width: o,\n      height: l\n    } = n,\n    i = new Float32Array(o * l * 2),\n    a = n.mask || new Uint8Array(o * l * 2);\n  if (n.mask || a.fill(255), \"vector-uv\" === t) for (let e = 0; e < o * l; e++) i[2 * e] = r[0][e], i[2 * e + 1] = -r[1][e];else if (\"vector-magdir\" === t) for (let s = 0; s < o * l; s++) {\n    const t = r[0][s],\n      n = e(r[1][s]),\n      o = Math.cos(n - Math.PI / 2),\n      l = Math.sin(n - Math.PI / 2);\n    i[2 * s] = o * t, i[2 * s + 1] = l * t;\n  }\n  return {\n    data: i,\n    mask: a,\n    width: o,\n    height: l\n  };\n}\nasync function g(t, e, n, r, a, s) {\n  const c = performance.now(),\n    f = l(e.spatialReference);\n  if (!f) {\n    const o = await y(t, e, n, r, a, s);\n    return has(\"esri-2d-profiler\") && i().info(\"I.7\", \"loadImagery, early exit (ms)\", Math.round(performance.now() - c)), has(\"esri-2d-profiler\") && i().info(\"I.9\", \"Number of parts\", 1), o;\n  }\n  const [u, h] = f.valid,\n    m = h - u,\n    d = Math.ceil(e.width / m),\n    w = e.width / d,\n    p = Math.round(n / d);\n  let g = e.xmin;\n  const x = [],\n    M = performance.now();\n  for (let l = 0; l < d; l++) {\n    const n = new o({\n      xmin: g,\n      xmax: g + w,\n      ymin: e.ymin,\n      ymax: e.ymax,\n      spatialReference: e.spatialReference\n    });\n    x.push(y(t, n, p, r, a, s)), g += w;\n  }\n  const A = await Promise.all(x);\n  has(\"esri-2d-profiler\") && i().info(\"I.8\", \"All calls to _fetchPart (ms)\", Math.round(performance.now() - M)), has(\"esri-2d-profiler\") && i().info(\"I.9\", \"Number of parts\", A.length);\n  const I = {\n    data: new Float32Array(n * r * 2),\n    mask: new Uint8Array(n * r),\n    width: n,\n    height: r\n  };\n  let V = 0;\n  for (const o of A) {\n    for (let t = 0; t < o.height; t++) for (let e = 0; e < o.width; e++) V + e >= n || (I.data[2 * (t * n + V + e)] = o.data[2 * (t * o.width + e)], I.data[2 * (t * n + V + e) + 1] = o.data[2 * (t * o.width + e) + 1], I.mask[t * n + V + e] = o.mask[t * o.width + e]);\n    V += o.width;\n  }\n  return has(\"esri-2d-profiler\") && i().info(\"I.10\", \"loadImagery, general exit (ms)\", Math.round(performance.now() - c)), I;\n}\nasync function y(t, e, n, r, o, l) {\n  const i = {\n    requestProjectedLocalDirections: !0,\n    signal: l\n  };\n  if (null != o && (i.timeExtent = o), \"imagery\" === t.type) {\n    await t.load({\n      signal: l\n    });\n    const o = t.rasterInfo.dataType,\n      a = await t.fetchImage(e, n, r, i);\n    return null == a?.pixelData?.pixelBlock ? {\n      data: new Float32Array(n * r * 2),\n      mask: new Uint8Array(n * r),\n      width: n,\n      height: r\n    } : p(o, a.pixelData.pixelBlock);\n  }\n  await t.load({\n    signal: l\n  });\n  const a = t.serviceRasterInfo.dataType,\n    s = await t.fetchPixels(e, n, r, i);\n  return null == s?.pixelBlock ? {\n    data: new Float32Array(n * r * 2),\n    mask: new Uint8Array(n * r),\n    width: n,\n    height: r\n  } : p(a, s.pixelBlock);\n}\nexport { m as createAnimatedLinesData, s as createFlowMesh, w as createParticlesMesh, d as createStreamlinesMesh, g as loadImagery };","map":{"version":3,"names":["has","t","deg2rad","e","throwIfAborted","n","r","o","getInfo","l","i","getLogger","a","s","performance","now","c","f","h","u","width","height","p","g","m","y","x","d","w","M","info","Math","round","vertexData","buffer","byteLength","indexData","Promise","resolve","data","smoothing","interpolate","floor","velocityScale","sqrt","push","speed","verticesPerLine","minSpeedThreshold","segmentLength","acos","maxTurnAngle","collisions","max","lineCollisionWidth","Int32Array","length","lineSpacing","sort","getFloat","density","Array","exp","Float32Array","reduce","startVertex","numberOfVertices","totalTime","timeSeed","lineVertices","lineDescriptors","Uint32Array","A","min","U","I","V","F","v","D","b","S","k","L","pixels","mask","Uint8Array","fill","cos","PI","sin","spatialReference","valid","ceil","xmin","xmax","ymin","ymax","all","requestProjectedLocalDirections","signal","timeExtent","type","load","rasterInfo","dataType","fetchImage","pixelData","pixelBlock","serviceRasterInfo","fetchPixels","createAnimatedLinesData","createFlowMesh","createParticlesMesh","createStreamlinesMesh","loadImagery"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/2d/engine/flow/dataUtils.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport has from\"../../../../core/has.js\";import t from\"../../../../core/Logger.js\";import{deg2rad as e}from\"../../../../core/mathUtils.js\";import{throwIfAborted as n}from\"../../../../core/promiseUtils.js\";import r from\"../../../../core/RandomLCG.js\";import o from\"../../../../geometry/Extent.js\";import{getInfo as l}from\"../../../../geometry/support/spatialReferenceUtils.js\";const i=()=>t.getLogger(\"esri.views.2d.engine.flow.dataUtils\"),a=10;async function s(t,e,r,o){const l=performance.now(),s=c(e,r),f=performance.now(),h=u(e,s,r.width,r.height),p=performance.now(),g=m(h,!0),y=performance.now(),x=\"Streamlines\"===t?d(g,a):w(g),M=performance.now();return has(\"esri-2d-profiler\")&&(i().info(\"I.1\",\"_createFlowFieldFromData (ms)\",Math.round(f-l)),i().info(\"I.2\",\"_getStreamlines (ms)\",Math.round(p-f)),i().info(\"I.3\",\"createAnimatedLinesData (ms)\",Math.round(y-p)),i().info(\"I.4\",\"create{Streamlines|Particles}Mesh (ms)\",Math.round(M-y)),i().info(\"I.5\",\"createFlowMesh (ms)\",Math.round(M-l)),i().info(\"I.6\",\"Mesh size (bytes)\",x.vertexData.buffer.byteLength+x.indexData.buffer.byteLength)),await Promise.resolve(),n(o),x}function c(t,e){const n=h(e.data,e.width,e.height,t.smoothing);if(t.interpolate){return(t,r)=>{const o=Math.floor(t),l=Math.floor(r);if(o<0||o>=e.width)return[0,0];if(l<0||l>=e.height)return[0,0];const i=t-o,a=r-l,s=o,c=l,f=o<e.width-1?o+1:o,u=l<e.height-1?l+1:l,h=n[2*(c*e.width+s)],m=n[2*(c*e.width+f)],d=n[2*(u*e.width+s)],w=n[2*(u*e.width+f)],p=n[2*(c*e.width+s)+1],g=n[2*(c*e.width+f)+1];return[(h*(1-a)+d*a)*(1-i)+(m*(1-a)+w*a)*i,(p*(1-a)+n[2*(u*e.width+s)+1]*a)*(1-i)+(g*(1-a)+n[2*(u*e.width+f)+1]*a)*i]}}return(t,r)=>{const o=Math.round(t),l=Math.round(r);return o<0||o>=e.width||l<0||l>=e.height?[0,0]:[n[2*(l*e.width+o)],n[2*(l*e.width+o)+1]]}}function f(t,e,n,r,o,l,i,a,s){const c=[];let f=n,u=r,h=0,[m,d]=e(f,u);m*=t.velocityScale,d*=t.velocityScale;const w=Math.sqrt(m*m+d*d);let p,g;c.push({x:f,y:u,t:h,speed:w});for(let y=0;y<t.verticesPerLine;y++){let[n,r]=e(f,u);n*=t.velocityScale,r*=t.velocityScale;const m=Math.sqrt(n*n+r*r);if(m<t.minSpeedThreshold)return c;const d=n/m,w=r/m;f+=d*t.segmentLength,u+=w*t.segmentLength;if(h+=t.segmentLength/m,Math.acos(d*p+w*g)>t.maxTurnAngle)return c;if(t.collisions){const t=Math.round(f*s),e=Math.round(u*s);if(t<0||t>i-1||e<0||e>a-1)return c;const n=l[e*i+t];if(-1!==n&&n!==o)return c;l[e*i+t]=o}c.push({x:f,y:u,t:h,speed:m}),p=d,g=w}return c}function u(t,e,n,o){const l=[],i=new r,a=1/Math.max(t.lineCollisionWidth,1),s=Math.round(n*a),c=Math.round(o*a),u=new Int32Array(s*c);for(let r=0;r<u.length;r++)u[r]=-1;const h=[];for(let r=0;r<o;r+=t.lineSpacing)for(let e=0;e<n;e+=t.lineSpacing)h.push({x:e,y:r,sort:i.getFloat()});h.sort(((t,e)=>t.sort-e.sort));for(const{x:r,y:m}of h)if(i.getFloat()<t.density){const n=f(t,e,r,m,l.length,u,s,c,a);if(n.length<2)continue;l.push(n)}return l}function h(t,e,n,r){if(0===r)return t;const o=Math.round(3*r),l=new Array(2*o+1);let i=0;for(let c=-o;c<=o;c++){const t=Math.exp(-c*c/(r*r));l[c+o]=t,i+=t}for(let c=-o;c<=o;c++)l[c+o]/=i;const a=new Float32Array(t.length);for(let c=0;c<n;c++)for(let n=0;n<e;n++){let r=0,i=0;for(let a=-o;a<=o;a++){if(n+a<0||n+a>=e)continue;const s=l[a+o];r+=s*t[2*(c*e+(n+a))],i+=s*t[2*(c*e+(n+a))+1]}a[2*(c*e+n)]=r,a[2*(c*e+n)+1]=i}const s=new Float32Array(t.length);for(let c=0;c<e;c++)for(let t=0;t<n;t++){let r=0,i=0;for(let s=-o;s<=o;s++){if(t+s<0||t+s>=n)continue;const f=l[s+o];r+=f*a[2*((t+s)*e+c)],i+=f*a[2*((t+s)*e+c)+1]}s[2*(t*e+c)]=r,s[2*(t*e+c)+1]=i}return s}function m(t,e){const n=new r,o=t.reduce(((t,e)=>t+e.length),0),l=new Float32Array(4*o),i=new Array(t.length);let a=0,s=0;for(const r of t){const t=a;for(const e of r)l[4*a]=e.x,l[4*a+1]=e.y,l[4*a+2]=e.t,l[4*a+3]=e.speed,a++;i[s++]={startVertex:t,numberOfVertices:r.length,totalTime:r[r.length-1].t,timeSeed:e?n.getFloat():0}}return{lineVertices:l,lineDescriptors:i}}function d(t,e){const n=9,{lineVertices:r,lineDescriptors:o}=t;let l=0,i=0;for(const m of o){l+=2*m.numberOfVertices;i+=6*(m.numberOfVertices-1)}const a=new Float32Array(l*n),s=new Uint32Array(i);let c=0,f=0;function u(){s[f++]=c-2,s[f++]=c,s[f++]=c-1,s[f++]=c,s[f++]=c+1,s[f++]=c-1}function h(t,e,r,o,l,i,s,f){const u=c*n;let h=0;a[u+h++]=t,a[u+h++]=e,a[u+h++]=1,a[u+h++]=r,a[u+h++]=i,a[u+h++]=s,a[u+h++]=o/2,a[u+h++]=l/2,a[u+h++]=f,c++,a[u+h++]=t,a[u+h++]=e,a[u+h++]=-1,a[u+h++]=r,a[u+h++]=i,a[u+h++]=s,a[u+h++]=-o/2,a[u+h++]=-l/2,a[u+h++]=f,c++}for(const m of o){const{totalTime:t,timeSeed:n}=m;let o=null,l=null,i=null,a=null,s=null,c=null;for(let f=0;f<m.numberOfVertices;f++){const d=r[4*(m.startVertex+f)],w=r[4*(m.startVertex+f)+1],p=r[4*(m.startVertex+f)+2],g=r[4*(m.startVertex+f)+3];let y=null,x=null,M=null,A=null;if(f>0){y=d-o,x=w-l;const r=Math.sqrt(y*y+x*x);if(y/=r,x/=r,f>1){let t=y+s,n=x+c;const r=Math.sqrt(t*t+n*n);t/=r,n/=r;const o=Math.min(1/(t*y+n*x),e);t*=o,n*=o,M=-n,A=t}else M=-x,A=y;null!==M&&null!==A&&(h(o,l,i,M,A,t,n,g),u())}o=d,l=w,i=p,s=y,c=x,a=g}h(o,l,i,-c,s,t,n,a)}return{vertexData:a,indexData:s}}function w(t){const e=16,n=1,r=2,{lineVertices:o,lineDescriptors:l}=t;let i=0,a=0;for(const U of l){const t=U.numberOfVertices-1;i+=4*t*2,a+=6*t*2}const s=new Float32Array(i*e),c=new Uint32Array(a);let f,u,h,m,d,w,p,g,y,x,M,A,I,V,F=0,v=0;function D(){c[v++]=F-8,c[v++]=F-7,c[v++]=F-6,c[v++]=F-7,c[v++]=F-5,c[v++]=F-6,c[v++]=F-4,c[v++]=F-3,c[v++]=F-2,c[v++]=F-3,c[v++]=F-1,c[v++]=F-2}function b(t,o,l,i,a,c,f,u,h,m,d,w,p,g){const y=F*e;let x=0;for(const e of[n,r])for(const n of[1,2,3,4])s[y+x++]=t,s[y+x++]=o,s[y+x++]=l,s[y+x++]=i,s[y+x++]=f,s[y+x++]=u,s[y+x++]=h,s[y+x++]=m,s[y+x++]=e,s[y+x++]=n,s[y+x++]=p,s[y+x++]=g,s[y+x++]=a/2,s[y+x++]=c/2,s[y+x++]=d/2,s[y+x++]=w/2,F++}function S(t,e){let n=y+M,r=x+A;const o=Math.sqrt(n*n+r*r);n/=o,r/=o;const l=y*n+x*r;n/=l,r/=l;let i=M+I,a=A+V;const s=Math.sqrt(i*i+a*a);i/=s,a/=s;const c=M*i+A*a;i/=c,a/=c,b(f,u,h,m,-r,n,d,w,p,g,-a,i,t,e),D()}function k(t,e,n,r,o,l){if(y=M,x=A,M=I,A=V,null==y&&null==x&&(y=M,x=A),null!=d&&null!=w){I=t-d,V=e-w;const n=Math.sqrt(I*I+V*V);I/=n,V/=n}null!=y&&null!=x&&S(o,l),f=d,u=w,h=p,m=g,d=t,w=e,p=n,g=r}function L(t,e){y=M,x=A,M=I,A=V,null==y&&null==x&&(y=M,x=A),null!=y&&null!=x&&S(t,e)}for(const U of l){f=null,u=null,h=null,m=null,d=null,w=null,p=null,g=null,y=null,x=null,M=null,A=null,I=null,V=null;const{totalTime:t,timeSeed:e}=U;for(let n=0;n<U.numberOfVertices;n++){k(o[4*(U.startVertex+n)],o[4*(U.startVertex+n)+1],o[4*(U.startVertex+n)+2],o[4*(U.startVertex+n)+3],t,e)}L(t,e)}return{vertexData:s,indexData:c}}function p(t,n){const r=n.pixels,{width:o,height:l}=n,i=new Float32Array(o*l*2),a=n.mask||new Uint8Array(o*l*2);if(n.mask||a.fill(255),\"vector-uv\"===t)for(let e=0;e<o*l;e++)i[2*e]=r[0][e],i[2*e+1]=-r[1][e];else if(\"vector-magdir\"===t)for(let s=0;s<o*l;s++){const t=r[0][s],n=e(r[1][s]),o=Math.cos(n-Math.PI/2),l=Math.sin(n-Math.PI/2);i[2*s]=o*t,i[2*s+1]=l*t}return{data:i,mask:a,width:o,height:l}}async function g(t,e,n,r,a,s){const c=performance.now(),f=l(e.spatialReference);if(!f){const o=await y(t,e,n,r,a,s);return has(\"esri-2d-profiler\")&&i().info(\"I.7\",\"loadImagery, early exit (ms)\",Math.round(performance.now()-c)),has(\"esri-2d-profiler\")&&i().info(\"I.9\",\"Number of parts\",1),o}const[u,h]=f.valid,m=h-u,d=Math.ceil(e.width/m),w=e.width/d,p=Math.round(n/d);let g=e.xmin;const x=[],M=performance.now();for(let l=0;l<d;l++){const n=new o({xmin:g,xmax:g+w,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference});x.push(y(t,n,p,r,a,s)),g+=w}const A=await Promise.all(x);has(\"esri-2d-profiler\")&&i().info(\"I.8\",\"All calls to _fetchPart (ms)\",Math.round(performance.now()-M)),has(\"esri-2d-profiler\")&&i().info(\"I.9\",\"Number of parts\",A.length);const I={data:new Float32Array(n*r*2),mask:new Uint8Array(n*r),width:n,height:r};let V=0;for(const o of A){for(let t=0;t<o.height;t++)for(let e=0;e<o.width;e++)V+e>=n||(I.data[2*(t*n+V+e)]=o.data[2*(t*o.width+e)],I.data[2*(t*n+V+e)+1]=o.data[2*(t*o.width+e)+1],I.mask[t*n+V+e]=o.mask[t*o.width+e]);V+=o.width}return has(\"esri-2d-profiler\")&&i().info(\"I.10\",\"loadImagery, general exit (ms)\",Math.round(performance.now()-c)),I}async function y(t,e,n,r,o,l){const i={requestProjectedLocalDirections:!0,signal:l};if(null!=o&&(i.timeExtent=o),\"imagery\"===t.type){await t.load({signal:l});const o=t.rasterInfo.dataType,a=await t.fetchImage(e,n,r,i);return null==a?.pixelData?.pixelBlock?{data:new Float32Array(n*r*2),mask:new Uint8Array(n*r),width:n,height:r}:p(o,a.pixelData.pixelBlock)}await t.load({signal:l});const a=t.serviceRasterInfo.dataType,s=await t.fetchPixels(e,n,r,i);return null==s?.pixelBlock?{data:new Float32Array(n*r*2),mask:new Uint8Array(n*r),width:n,height:r}:p(a,s.pixelBlock)}export{m as createAnimatedLinesData,s as createFlowMesh,w as createParticlesMesh,d as createStreamlinesMesh,g as loadImagery};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}