{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nclass e {\n  constructor(e) {\n    this._readFile = e;\n  }\n  resolveIncludes(e) {\n    return this._resolve(e);\n  }\n  _resolve(e, t = new Map()) {\n    if (t.has(e)) return t.get(e);\n    const r = this._read(e);\n    if (!r) throw new Error(`cannot find shader file ${e}`);\n    const s = /^[^\\S\\n]*#include\\s+<(\\S+)>[^\\S\\n]?/gm;\n    let n = s.exec(r);\n    const l = [];\n    for (; null != n;) l.push({\n      path: n[1],\n      start: n.index,\n      length: n[0].length\n    }), n = s.exec(r);\n    let a = 0,\n      h = \"\";\n    return l.forEach(e => {\n      h += r.slice(a, e.start), h += t.has(e.path) ? \"\" : this._resolve(e.path, t), a = e.start + e.length;\n    }), h += r.slice(a), t.set(e, h), h;\n  }\n  _read(e) {\n    return this._readFile(e);\n  }\n}\nexport { e as ShaderCompiler };","map":{"version":3,"names":["e","constructor","_readFile","resolveIncludes","_resolve","t","Map","has","get","r","_read","Error","s","n","exec","l","push","path","start","index","length","a","h","forEach","slice","set","ShaderCompiler"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/webgl/ShaderCompiler.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nclass e{constructor(e){this._readFile=e}resolveIncludes(e){return this._resolve(e)}_resolve(e,t=new Map){if(t.has(e))return t.get(e);const r=this._read(e);if(!r)throw new Error(`cannot find shader file ${e}`);const s=/^[^\\S\\n]*#include\\s+<(\\S+)>[^\\S\\n]?/gm;let n=s.exec(r);const l=[];for(;null!=n;)l.push({path:n[1],start:n.index,length:n[0].length}),n=s.exec(r);let a=0,h=\"\";return l.forEach((e=>{h+=r.slice(a,e.start),h+=t.has(e.path)?\"\":this._resolve(e.path,t),a=e.start+e.length})),h+=r.slice(a),t.set(e,h),h}_read(e){return this._readFile(e)}}export{e as ShaderCompiler};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,MAAMA,CAAC;EAACC,WAAWA,CAACD,CAAC,EAAC;IAAC,IAAI,CAACE,SAAS,GAACF,CAAC;EAAA;EAACG,eAAeA,CAACH,CAAC,EAAC;IAAC,OAAO,IAAI,CAACI,QAAQ,CAACJ,CAAC,CAAC;EAAA;EAACI,QAAQA,CAACJ,CAAC,EAACK,CAAC,GAAC,IAAIC,GAAG,CAAD,CAAC,EAAC;IAAC,IAAGD,CAAC,CAACE,GAAG,CAACP,CAAC,CAAC,EAAC,OAAOK,CAAC,CAACG,GAAG,CAACR,CAAC,CAAC;IAAC,MAAMS,CAAC,GAAC,IAAI,CAACC,KAAK,CAACV,CAAC,CAAC;IAAC,IAAG,CAACS,CAAC,EAAC,MAAM,IAAIE,KAAK,CAAC,2BAA2BX,CAAC,EAAE,CAAC;IAAC,MAAMY,CAAC,GAAC,uCAAuC;IAAC,IAAIC,CAAC,GAACD,CAAC,CAACE,IAAI,CAACL,CAAC,CAAC;IAAC,MAAMM,CAAC,GAAC,EAAE;IAAC,OAAK,IAAI,IAAEF,CAAC,GAAEE,CAAC,CAACC,IAAI,CAAC;MAACC,IAAI,EAACJ,CAAC,CAAC,CAAC,CAAC;MAACK,KAAK,EAACL,CAAC,CAACM,KAAK;MAACC,MAAM,EAACP,CAAC,CAAC,CAAC,CAAC,CAACO;IAAM,CAAC,CAAC,EAACP,CAAC,GAACD,CAAC,CAACE,IAAI,CAACL,CAAC,CAAC;IAAC,IAAIY,CAAC,GAAC,CAAC;MAACC,CAAC,GAAC,EAAE;IAAC,OAAOP,CAAC,CAACQ,OAAO,CAAEvB,CAAC,IAAE;MAACsB,CAAC,IAAEb,CAAC,CAACe,KAAK,CAACH,CAAC,EAACrB,CAAC,CAACkB,KAAK,CAAC,EAACI,CAAC,IAAEjB,CAAC,CAACE,GAAG,CAACP,CAAC,CAACiB,IAAI,CAAC,GAAC,EAAE,GAAC,IAAI,CAACb,QAAQ,CAACJ,CAAC,CAACiB,IAAI,EAACZ,CAAC,CAAC,EAACgB,CAAC,GAACrB,CAAC,CAACkB,KAAK,GAAClB,CAAC,CAACoB,MAAM;IAAA,CAAE,CAAC,EAACE,CAAC,IAAEb,CAAC,CAACe,KAAK,CAACH,CAAC,CAAC,EAAChB,CAAC,CAACoB,GAAG,CAACzB,CAAC,EAACsB,CAAC,CAAC,EAACA,CAAC;EAAA;EAACZ,KAAKA,CAACV,CAAC,EAAC;IAAC,OAAO,IAAI,CAACE,SAAS,CAACF,CAAC,CAAC;EAAA;AAAC;AAAC,SAAOA,CAAC,IAAI0B,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}