{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { _ as t } from \"../../../../chunks/tslib.es6.js\";\nimport e from \"../../../../core/Accessor.js\";\nimport i from \"../../../../core/Evented.js\";\nimport { watch as r } from \"../../../../core/reactiveUtils.js\";\nimport { property as s } from \"../../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../../core/has.js\";\nimport \"../../../../core/Logger.js\";\nimport \"../../../../core/RandomLCG.js\";\nimport { subclass as a } from \"../../../../core/accessorSupport/decorators/subclass.js\";\nimport { ExtentSet as n } from \"./ExtentSet.js\";\nimport { UpdatePolicy as o } from \"../../webgl-engine/lib/UpdatePolicy.js\";\nimport { TaskPriority as h } from \"../../../support/Scheduler.js\";\nlet p = class extends e {\n  constructor(t) {\n    super(t), this._dirtyExtents = new n(), this._globalDirty = !1, this._averageExtentUpdateSize = 0, this._dirtyGraphicsSet = new Set(), this._updateElevation = !1, this.graphicsCoreOwner = null, this.graphicsCore = null, this.events = new i();\n  }\n  initialize() {\n    const t = this.elevationProvider,\n      e = this.graphicsCoreOwner.view.resourceController.scheduler;\n    this._task = e.registerTask(d(this.graphicsCore.layer.elevationInfo?.mode), this), this.addHandles([t.on(\"elevation-change\", t => this._elevationChanged(t)), r(() => this.graphicsCoreOwner.suspended, () => this._suspendedChange()), this._task, r(() => d(this.graphicsCore.layer.elevationInfo?.mode), t => this._task.priority = t)]);\n  }\n  destroy() {\n    this._dirtyGraphicsSet.clear(), this.graphicsCoreOwner = null, this.graphicsCore = null, this.queryGraphicUIDsInExtent = null, this.elevationProvider = null;\n  }\n  clear() {\n    this._dirtyGraphicsSet.clear(), this.notifyChange(\"updating\");\n  }\n  _suspendedChange() {\n    !0 === this.graphicsCoreOwner.suspended ? this._updateElevation = !1 : !1 === this.graphicsCoreOwner.suspended && this._updateElevation && (this._globalDirty = !0, this.notifyChange(\"updating\"));\n  }\n  elevationInfoChange() {\n    this._globalDirty = !0, this.notifyChange(\"updating\");\n  }\n  get updating() {\n    return this.running;\n  }\n  get running() {\n    return this._dirtyGraphicsSet.size > 0 || this._dirtyExtents && !this._dirtyExtents.empty || this._globalDirty;\n  }\n  get updatingRemaining() {\n    return this._dirtyGraphicsSet.size + this._dirtyExtents.size * this._averageExtentUpdateSize;\n  }\n  runTask(t) {\n    for (this._globalDirty && (this._markAllGraphicsElevationDirty(), this._globalDirty = !1, t.madeProgress()), t.run(() => this._dirtyExtents.merge(t)); this.running && !t.done;) this._updateDirtyGraphics(t), this._updateDirtyExtents(t);\n    this.notifyChange(\"updating\");\n  }\n  _updateDirtyGraphics(t) {\n    const e = this.graphicsCoreOwner.view.renderCoordsHelper,\n      i = this.graphicsCore.effectiveUpdatePolicy === o.ASYNC;\n    for (const r of this._dirtyGraphicsSet.keys()) {\n      const s = this.graphicsCore.getGraphics3DGraphicById(r);\n      if (this._dirtyGraphicsSet.delete(r), null != s && (s.alignWithElevation(this.elevationProvider, e, i), this.graphicsCore.deconflictor?.setDirty(), t.madeProgress()), t.done) return;\n    }\n  }\n  _updateDirtyExtents(t) {\n    for (; !this._dirtyExtents.empty && !t.done;) {\n      const e = this._dirtyExtents.pop(),\n        i = this.elevationProvider.spatialReference;\n      this.events.emit(\"invalidate-elevation\", {\n        extent: e,\n        spatialReference: i\n      });\n      const r = this._dirtyGraphicsSet.size;\n      this.queryGraphicUIDsInExtent(e, i, t => {\n        const e = this.graphicsCore.getGraphics3DGraphicById(t);\n        null != e && e.needsElevationUpdates() && this._dirtyGraphicsSet.add(t);\n      }), this._averageExtentUpdateSize = .1 * (this._dirtyGraphicsSet.size - r) + .9 * this._averageExtentUpdateSize, t.madeProgress();\n    }\n  }\n  _markAllGraphicsElevationDirty() {\n    this._dirtyExtents.clear(), this._dirtyGraphicsSet.clear(), this.graphicsCore.graphics3DGraphics.forEach((t, e) => this._dirtyGraphicsSet.add(e));\n  }\n  _elevationChanged(t) {\n    if (\"scene\" === t.context && (!this.graphicsCore.layer.elevationInfo || \"relative-to-scene\" !== this.graphicsCore.layer.elevationInfo.mode)) return;\n    const e = t.extent;\n    if (this.graphicsCoreOwner.suspended) {\n      if (!this._updateElevation) {\n        const t = this.graphicsCore.computedExtent;\n        t && e[2] > t.xmin && e[0] < t.xmax && e[3] > t.ymin && e[1] < t.ymax && (this._updateElevation = !0);\n      }\n      this.events.emit(\"invalidate-elevation\", t);\n    } else e[0] === -1 / 0 ? this._globalDirty = !0 : this._dirtyExtents.add(e), this.notifyChange(\"updating\");\n  }\n};\nfunction d(t) {\n  return null == t ? h.ELEVATION_ALIGNMENT : \"relative-to-scene\" === t ? h.ELEVATION_ALIGNMENT_SCENE : h.ELEVATION_ALIGNMENT;\n}\nt([s()], p.prototype, \"graphicsCoreOwner\", void 0), t([s()], p.prototype, \"graphicsCore\", void 0), t([s()], p.prototype, \"queryGraphicUIDsInExtent\", void 0), t([s()], p.prototype, \"elevationProvider\", void 0), t([s({\n  readOnly: !0\n})], p.prototype, \"updating\", null), t([s({\n  readOnly: !0\n})], p.prototype, \"updatingRemaining\", null), p = t([a(\"esri.views.3d.layers.graphics.Graphics3DElevationAlignment\")], p);\nexport { p as Graphics3DElevationAlignment };","map":{"version":3,"names":["_","t","e","i","watch","r","property","s","subclass","a","ExtentSet","n","UpdatePolicy","o","TaskPriority","h","p","constructor","_dirtyExtents","_globalDirty","_averageExtentUpdateSize","_dirtyGraphicsSet","Set","_updateElevation","graphicsCoreOwner","graphicsCore","events","initialize","elevationProvider","view","resourceController","scheduler","_task","registerTask","d","layer","elevationInfo","mode","addHandles","on","_elevationChanged","suspended","_suspendedChange","priority","destroy","clear","queryGraphicUIDsInExtent","notifyChange","elevationInfoChange","updating","running","size","empty","updatingRemaining","runTask","_markAllGraphicsElevationDirty","madeProgress","run","merge","done","_updateDirtyGraphics","_updateDirtyExtents","renderCoordsHelper","effectiveUpdatePolicy","ASYNC","keys","getGraphics3DGraphicById","delete","alignWithElevation","deconflictor","setDirty","pop","spatialReference","emit","extent","needsElevationUpdates","add","graphics3DGraphics","forEach","context","computedExtent","xmin","xmax","ymin","ymax","ELEVATION_ALIGNMENT","ELEVATION_ALIGNMENT_SCENE","prototype","readOnly","Graphics3DElevationAlignment"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/3d/layers/graphics/Graphics3DElevationAlignment.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{_ as t}from\"../../../../chunks/tslib.es6.js\";import e from\"../../../../core/Accessor.js\";import i from\"../../../../core/Evented.js\";import{watch as r}from\"../../../../core/reactiveUtils.js\";import{property as s}from\"../../../../core/accessorSupport/decorators/property.js\";import\"../../../../core/has.js\";import\"../../../../core/Logger.js\";import\"../../../../core/RandomLCG.js\";import{subclass as a}from\"../../../../core/accessorSupport/decorators/subclass.js\";import{ExtentSet as n}from\"./ExtentSet.js\";import{UpdatePolicy as o}from\"../../webgl-engine/lib/UpdatePolicy.js\";import{TaskPriority as h}from\"../../../support/Scheduler.js\";let p=class extends e{constructor(t){super(t),this._dirtyExtents=new n,this._globalDirty=!1,this._averageExtentUpdateSize=0,this._dirtyGraphicsSet=new Set,this._updateElevation=!1,this.graphicsCoreOwner=null,this.graphicsCore=null,this.events=new i}initialize(){const t=this.elevationProvider,e=this.graphicsCoreOwner.view.resourceController.scheduler;this._task=e.registerTask(d(this.graphicsCore.layer.elevationInfo?.mode),this),this.addHandles([t.on(\"elevation-change\",(t=>this._elevationChanged(t))),r((()=>this.graphicsCoreOwner.suspended),(()=>this._suspendedChange())),this._task,r((()=>d(this.graphicsCore.layer.elevationInfo?.mode)),(t=>this._task.priority=t))])}destroy(){this._dirtyGraphicsSet.clear(),this.graphicsCoreOwner=null,this.graphicsCore=null,this.queryGraphicUIDsInExtent=null,this.elevationProvider=null}clear(){this._dirtyGraphicsSet.clear(),this.notifyChange(\"updating\")}_suspendedChange(){!0===this.graphicsCoreOwner.suspended?this._updateElevation=!1:!1===this.graphicsCoreOwner.suspended&&this._updateElevation&&(this._globalDirty=!0,this.notifyChange(\"updating\"))}elevationInfoChange(){this._globalDirty=!0,this.notifyChange(\"updating\")}get updating(){return this.running}get running(){return this._dirtyGraphicsSet.size>0||this._dirtyExtents&&!this._dirtyExtents.empty||this._globalDirty}get updatingRemaining(){return this._dirtyGraphicsSet.size+this._dirtyExtents.size*this._averageExtentUpdateSize}runTask(t){for(this._globalDirty&&(this._markAllGraphicsElevationDirty(),this._globalDirty=!1,t.madeProgress()),t.run((()=>this._dirtyExtents.merge(t)));this.running&&!t.done;)this._updateDirtyGraphics(t),this._updateDirtyExtents(t);this.notifyChange(\"updating\")}_updateDirtyGraphics(t){const e=this.graphicsCoreOwner.view.renderCoordsHelper,i=this.graphicsCore.effectiveUpdatePolicy===o.ASYNC;for(const r of this._dirtyGraphicsSet.keys()){const s=this.graphicsCore.getGraphics3DGraphicById(r);if(this._dirtyGraphicsSet.delete(r),null!=s&&(s.alignWithElevation(this.elevationProvider,e,i),this.graphicsCore.deconflictor?.setDirty(),t.madeProgress()),t.done)return}}_updateDirtyExtents(t){for(;!this._dirtyExtents.empty&&!t.done;){const e=this._dirtyExtents.pop(),i=this.elevationProvider.spatialReference;this.events.emit(\"invalidate-elevation\",{extent:e,spatialReference:i});const r=this._dirtyGraphicsSet.size;this.queryGraphicUIDsInExtent(e,i,(t=>{const e=this.graphicsCore.getGraphics3DGraphicById(t);null!=e&&e.needsElevationUpdates()&&this._dirtyGraphicsSet.add(t)})),this._averageExtentUpdateSize=.1*(this._dirtyGraphicsSet.size-r)+.9*this._averageExtentUpdateSize,t.madeProgress()}}_markAllGraphicsElevationDirty(){this._dirtyExtents.clear(),this._dirtyGraphicsSet.clear(),this.graphicsCore.graphics3DGraphics.forEach(((t,e)=>this._dirtyGraphicsSet.add(e)))}_elevationChanged(t){if(\"scene\"===t.context&&(!this.graphicsCore.layer.elevationInfo||\"relative-to-scene\"!==this.graphicsCore.layer.elevationInfo.mode))return;const e=t.extent;if(this.graphicsCoreOwner.suspended){if(!this._updateElevation){const t=this.graphicsCore.computedExtent;t&&e[2]>t.xmin&&e[0]<t.xmax&&e[3]>t.ymin&&e[1]<t.ymax&&(this._updateElevation=!0)}this.events.emit(\"invalidate-elevation\",t)}else e[0]===-1/0?this._globalDirty=!0:this._dirtyExtents.add(e),this.notifyChange(\"updating\")}};function d(t){return null==t?h.ELEVATION_ALIGNMENT:\"relative-to-scene\"===t?h.ELEVATION_ALIGNMENT_SCENE:h.ELEVATION_ALIGNMENT}t([s()],p.prototype,\"graphicsCoreOwner\",void 0),t([s()],p.prototype,\"graphicsCore\",void 0),t([s()],p.prototype,\"queryGraphicUIDsInExtent\",void 0),t([s()],p.prototype,\"elevationProvider\",void 0),t([s({readOnly:!0})],p.prototype,\"updating\",null),t([s({readOnly:!0})],p.prototype,\"updatingRemaining\",null),p=t([a(\"esri.views.3d.layers.graphics.Graphics3DElevationAlignment\")],p);export{p as Graphics3DElevationAlignment};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}