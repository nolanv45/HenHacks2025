{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nclass i {\n  constructor(i, t, e, s, h, n) {\n    this.semiMajorAxis = i, this.flattening = t, this.outerAtmosphereRimWidth = e, this.atmosphereHeight = s, this.scaleHeight = h;\n    const r = 1 - this.flattening;\n    this.semiMinorAxis = this.semiMajorAxis * r, this.halfSemiMajorAxis = this.semiMajorAxis / 2, this.halfCircumference = Math.PI * this.semiMajorAxis, this.metersPerDegree = this.halfCircumference / 180, this.inverseFlattening = 1 / (1 - this.flattening) - 1, this.eccentricitySquared = n || 2 * this.flattening - this.flattening * this.flattening, this.meanRadiusSemiAxes = (2 * this.semiMajorAxis + this.semiMinorAxis) / 3;\n  }\n  get radius() {\n    return this.semiMajorAxis;\n  }\n}\nconst t = new i(6378137, 1 / 298.257223563, 3e5, 1e5, .085, .006694379990137799),\n  e = new i(3396190, 1 / 169.8944472236118, 23e4, 6e4, .111),\n  s = new i(1737400, 0, 0, 0, 0);\nexport { i as Ellipsoid, t as earth, e as mars, s as moon };","map":{"version":3,"names":["i","constructor","t","e","s","h","n","semiMajorAxis","flattening","outerAtmosphereRimWidth","atmosphereHeight","scaleHeight","r","semiMinorAxis","halfSemiMajorAxis","halfCircumference","Math","PI","metersPerDegree","inverseFlattening","eccentricitySquared","meanRadiusSemiAxes","radius","Ellipsoid","earth","mars","moon"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/geometry/support/Ellipsoid.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nclass i{constructor(i,t,e,s,h,n){this.semiMajorAxis=i,this.flattening=t,this.outerAtmosphereRimWidth=e,this.atmosphereHeight=s,this.scaleHeight=h;const r=1-this.flattening;this.semiMinorAxis=this.semiMajorAxis*r,this.halfSemiMajorAxis=this.semiMajorAxis/2,this.halfCircumference=Math.PI*this.semiMajorAxis,this.metersPerDegree=this.halfCircumference/180,this.inverseFlattening=1/(1-this.flattening)-1,this.eccentricitySquared=n||2*this.flattening-this.flattening*this.flattening,this.meanRadiusSemiAxes=(2*this.semiMajorAxis+this.semiMinorAxis)/3}get radius(){return this.semiMajorAxis}}const t=new i(6378137,1/298.257223563,3e5,1e5,.085,.006694379990137799),e=new i(3396190,1/169.8944472236118,23e4,6e4,.111),s=new i(1737400,0,0,0,0);export{i as Ellipsoid,t as earth,e as mars,s as moon};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,MAAMA,CAAC;EAACC,WAAWA,CAACD,CAAC,EAACE,CAAC,EAACC,CAAC,EAACC,CAAC,EAACC,CAAC,EAACC,CAAC,EAAC;IAAC,IAAI,CAACC,aAAa,GAACP,CAAC,EAAC,IAAI,CAACQ,UAAU,GAACN,CAAC,EAAC,IAAI,CAACO,uBAAuB,GAACN,CAAC,EAAC,IAAI,CAACO,gBAAgB,GAACN,CAAC,EAAC,IAAI,CAACO,WAAW,GAACN,CAAC;IAAC,MAAMO,CAAC,GAAC,CAAC,GAAC,IAAI,CAACJ,UAAU;IAAC,IAAI,CAACK,aAAa,GAAC,IAAI,CAACN,aAAa,GAACK,CAAC,EAAC,IAAI,CAACE,iBAAiB,GAAC,IAAI,CAACP,aAAa,GAAC,CAAC,EAAC,IAAI,CAACQ,iBAAiB,GAACC,IAAI,CAACC,EAAE,GAAC,IAAI,CAACV,aAAa,EAAC,IAAI,CAACW,eAAe,GAAC,IAAI,CAACH,iBAAiB,GAAC,GAAG,EAAC,IAAI,CAACI,iBAAiB,GAAC,CAAC,IAAE,CAAC,GAAC,IAAI,CAACX,UAAU,CAAC,GAAC,CAAC,EAAC,IAAI,CAACY,mBAAmB,GAACd,CAAC,IAAE,CAAC,GAAC,IAAI,CAACE,UAAU,GAAC,IAAI,CAACA,UAAU,GAAC,IAAI,CAACA,UAAU,EAAC,IAAI,CAACa,kBAAkB,GAAC,CAAC,CAAC,GAAC,IAAI,CAACd,aAAa,GAAC,IAAI,CAACM,aAAa,IAAE,CAAC;EAAA;EAAC,IAAIS,MAAMA,CAAA,EAAE;IAAC,OAAO,IAAI,CAACf,aAAa;EAAA;AAAC;AAAC,MAAML,CAAC,GAAC,IAAIF,CAAC,CAAC,OAAO,EAAC,CAAC,GAAC,aAAa,EAAC,GAAG,EAAC,GAAG,EAAC,IAAI,EAAC,mBAAmB,CAAC;EAACG,CAAC,GAAC,IAAIH,CAAC,CAAC,OAAO,EAAC,CAAC,GAAC,iBAAiB,EAAC,IAAI,EAAC,GAAG,EAAC,IAAI,CAAC;EAACI,CAAC,GAAC,IAAIJ,CAAC,CAAC,OAAO,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;AAAC,SAAOA,CAAC,IAAIuB,SAAS,EAACrB,CAAC,IAAIsB,KAAK,EAACrB,CAAC,IAAIsB,IAAI,EAACrB,CAAC,IAAIsB,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}