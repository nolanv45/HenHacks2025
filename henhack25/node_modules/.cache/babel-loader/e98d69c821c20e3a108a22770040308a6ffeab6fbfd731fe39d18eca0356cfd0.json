{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { t as e, b as t, G as r } from \"./Geometry.js\";\nimport { Envelope2D as n } from \"./Envelope2D.js\";\nimport { m as s, a as o, c as i } from \"./SideCalculator2D-BNwb5gvz.js\";\nimport { a } from \"./Envelope.js\";\nimport { P as u } from \"./Point2D.js\";\nimport { g as c } from \"./ProjectionTransformation.js\";\nclass m {\n  getOperatorType() {\n    return 10500;\n  }\n  accelerateGeometry(e, t, r) {\n    return !1;\n  }\n  canAccelerateGeometry(e) {\n    return !1;\n  }\n  supportsCurves() {\n    return !0;\n  }\n  getNearestCoordinate(n, o, i, a) {\n    if (o.isNAN() && e(\"NAN xy coordinates are not allowed\"), n.isEmpty()) return s();\n    switch (n.getGeometryType()) {\n      case r.enumPoint:\n        return this.pointGetNearestVertex(n, o);\n      case r.enumMultiPoint:\n        return this.multiVertexGetNearestVertex(n, o);\n      case r.enumPolyline:\n      case r.enumPolygon:\n        return this.multiPathGetNearestCoordinate(n, o, i, a);\n      default:\n        t(\"\");\n    }\n  }\n  getNearestVertex(n, o) {\n    if (o.isNAN() && e(\"NAN xy coordinates are not allowed\"), n.isEmpty()) return s();\n    switch (n.getGeometryType()) {\n      case r.enumPoint:\n        return this.pointGetNearestVertex(n, o);\n      case r.enumMultiPoint:\n      case r.enumPolyline:\n      case r.enumPolygon:\n        return this.multiVertexGetNearestVertex(n, o);\n      default:\n        t(\"\");\n    }\n  }\n  getNearestVertices(n, s, o, i) {\n    if (0 === i && e(\"\"), s.isNAN() && e(\"NAN xy coordinates are not allowed\"), n.isEmpty()) return [];\n    switch (n.getGeometryType()) {\n      case r.enumPoint:\n        return this.pointGetNearestVertices(n, s, o, i);\n      case r.enumMultiPoint:\n      case r.enumPolyline:\n      case r.enumPolygon:\n        return this.multiVertexGetNearestVertices(n, s, o, i);\n      default:\n        t(\"\");\n    }\n  }\n  multiPathGetNearestCoordinate(t, s, m, l) {\n    if (t.getGeometryType() === r.enumPolygon && m) {\n      const e = new n();\n      t.queryEnvelope(e);\n      const r = a(null, e, !1);\n      let i;\n      if (i = c(t, s, l ? 0 : r), 0 !== i) {\n        const e = o(s, -1, 0);\n        return l && (e.m_bRightSide = !0), e;\n      }\n    }\n    const g = t.querySegmentIterator(),\n      y = new u();\n    let N = -1,\n      p = -1,\n      f = Number.MAX_VALUE,\n      d = 0;\n    for (; g.nextPath();) for (; g.hasNextSegment();) {\n      const e = g.nextSegment(),\n        t = e.getClosestCoordinate(s, !1),\n        r = e.getCoord2D(t),\n        n = u.sqrDistance(r, s);\n      n < f ? (d = 1, y.assign(r), N = g.getStartPointIndex(), p = g.getPathIndex(), f = n) : n === f && d++;\n    }\n    -1 === N && e(\"\");\n    const h = o(y, N, Math.sqrt(f));\n    if (l) if (t.getGeometryType() !== r.enumPolygon) {\n      let e = !1;\n      if (d > 1) {\n        const r = i(t, s, N, p);\n        e = 0 !== r && 3 !== r;\n      } else {\n        g.resetToVertex(N, p);\n        const t = g.nextSegment();\n        e = 0 !== i(t, s);\n      }\n      h.m_bRightSide = e;\n    } else if (!m) {\n      0 !== c(t, s, 0) && (h.m_bRightSide = !0);\n    }\n    return h;\n  }\n  pointGetNearestVertex(e, t) {\n    const r = e.getXY(),\n      n = u.distance(r, t);\n    return o(r, 0, n);\n  }\n  multiVertexGetNearestVertex(e, t) {\n    const r = e.getAttributeStreamRef(0),\n      n = e.getPointCount();\n    let s = -1;\n    const i = new u();\n    let a = Number.MAX_VALUE;\n    const c = new u();\n    for (let o = 0; o < n; o++) {\n      r.queryPoint2D(2 * o, c);\n      const e = u.sqrDistance(c, t);\n      e < a && (i.assign(c), s = o, a = e);\n    }\n    return o(i, s, Math.sqrt(a));\n  }\n  pointGetNearestVertices(e, t, r, n) {\n    const s = [];\n    if (0 !== n) {\n      const n = r * r,\n        i = e.getXY(),\n        a = u.sqrDistance(i, t);\n      a <= n && s.push(o(i, 0, Math.sqrt(a)));\n    }\n    return s;\n  }\n  multiVertexGetNearestVertices(e, t, r, n) {\n    const s = [];\n    if (0 !== n) {\n      const i = e.getAttributeStreamRef(0),\n        a = e.getPointCount();\n      s.length = n + 1;\n      const c = r * r;\n      for (let e = 0; e < a; e++) {\n        const r = i.read(2 * e),\n          n = i.read(2 * e + 1),\n          a = t.x - r,\n          m = t.y - n,\n          l = a * a + m * m;\n        l <= c && s.push(o(u.construct(r, n), e, Math.sqrt(l)));\n      }\n      s.sort((e, t) => e.m_distance - t.m_distance);\n    }\n    return s.slice(0, n);\n  }\n}\nexport { m as O };","map":{"version":3,"names":["t","e","b","G","r","Envelope2D","n","m","s","a","o","c","i","P","u","g","getOperatorType","accelerateGeometry","canAccelerateGeometry","supportsCurves","getNearestCoordinate","isNAN","isEmpty","getGeometryType","enumPoint","pointGetNearestVertex","enumMultiPoint","multiVertexGetNearestVertex","enumPolyline","enumPolygon","multiPathGetNearestCoordinate","getNearestVertex","getNearestVertices","pointGetNearestVertices","multiVertexGetNearestVertices","l","queryEnvelope","m_bRightSide","querySegmentIterator","y","N","p","f","Number","MAX_VALUE","d","nextPath","hasNextSegment","nextSegment","getClosestCoordinate","getCoord2D","sqrDistance","assign","getStartPointIndex","getPathIndex","h","Math","sqrt","resetToVertex","getXY","distance","getAttributeStreamRef","getPointCount","queryPoint2D","push","length","read","x","construct","sort","m_distance","slice","O"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/chunks/OperatorProximity.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{t as e,b as t,G as r}from\"./Geometry.js\";import{Envelope2D as n}from\"./Envelope2D.js\";import{m as s,a as o,c as i}from\"./SideCalculator2D-BNwb5gvz.js\";import{a}from\"./Envelope.js\";import{P as u}from\"./Point2D.js\";import{g as c}from\"./ProjectionTransformation.js\";class m{getOperatorType(){return 10500}accelerateGeometry(e,t,r){return!1}canAccelerateGeometry(e){return!1}supportsCurves(){return!0}getNearestCoordinate(n,o,i,a){if(o.isNAN()&&e(\"NAN xy coordinates are not allowed\"),n.isEmpty())return s();switch(n.getGeometryType()){case r.enumPoint:return this.pointGetNearestVertex(n,o);case r.enumMultiPoint:return this.multiVertexGetNearestVertex(n,o);case r.enumPolyline:case r.enumPolygon:return this.multiPathGetNearestCoordinate(n,o,i,a);default:t(\"\")}}getNearestVertex(n,o){if(o.isNAN()&&e(\"NAN xy coordinates are not allowed\"),n.isEmpty())return s();switch(n.getGeometryType()){case r.enumPoint:return this.pointGetNearestVertex(n,o);case r.enumMultiPoint:case r.enumPolyline:case r.enumPolygon:return this.multiVertexGetNearestVertex(n,o);default:t(\"\")}}getNearestVertices(n,s,o,i){if(0===i&&e(\"\"),s.isNAN()&&e(\"NAN xy coordinates are not allowed\"),n.isEmpty())return[];switch(n.getGeometryType()){case r.enumPoint:return this.pointGetNearestVertices(n,s,o,i);case r.enumMultiPoint:case r.enumPolyline:case r.enumPolygon:return this.multiVertexGetNearestVertices(n,s,o,i);default:t(\"\")}}multiPathGetNearestCoordinate(t,s,m,l){if(t.getGeometryType()===r.enumPolygon&&m){const e=new n;t.queryEnvelope(e);const r=a(null,e,!1);let i;if(i=c(t,s,l?0:r),0!==i){const e=o(s,-1,0);return l&&(e.m_bRightSide=!0),e}}const g=t.querySegmentIterator(),y=new u;let N=-1,p=-1,f=Number.MAX_VALUE,d=0;for(;g.nextPath();)for(;g.hasNextSegment();){const e=g.nextSegment(),t=e.getClosestCoordinate(s,!1),r=e.getCoord2D(t),n=u.sqrDistance(r,s);n<f?(d=1,y.assign(r),N=g.getStartPointIndex(),p=g.getPathIndex(),f=n):n===f&&d++}-1===N&&e(\"\");const h=o(y,N,Math.sqrt(f));if(l)if(t.getGeometryType()!==r.enumPolygon){let e=!1;if(d>1){const r=i(t,s,N,p);e=0!==r&&3!==r}else{g.resetToVertex(N,p);const t=g.nextSegment();e=0!==i(t,s)}h.m_bRightSide=e}else if(!m){0!==c(t,s,0)&&(h.m_bRightSide=!0)}return h}pointGetNearestVertex(e,t){const r=e.getXY(),n=u.distance(r,t);return o(r,0,n)}multiVertexGetNearestVertex(e,t){const r=e.getAttributeStreamRef(0),n=e.getPointCount();let s=-1;const i=new u;let a=Number.MAX_VALUE;const c=new u;for(let o=0;o<n;o++){r.queryPoint2D(2*o,c);const e=u.sqrDistance(c,t);e<a&&(i.assign(c),s=o,a=e)}return o(i,s,Math.sqrt(a))}pointGetNearestVertices(e,t,r,n){const s=[];if(0!==n){const n=r*r,i=e.getXY(),a=u.sqrDistance(i,t);a<=n&&s.push(o(i,0,Math.sqrt(a)))}return s}multiVertexGetNearestVertices(e,t,r,n){const s=[];if(0!==n){const i=e.getAttributeStreamRef(0),a=e.getPointCount();s.length=n+1;const c=r*r;for(let e=0;e<a;e++){const r=i.read(2*e),n=i.read(2*e+1),a=t.x-r,m=t.y-n,l=a*a+m*m;l<=c&&s.push(o(u.construct(r,n),e,Math.sqrt(l)))}s.sort(((e,t)=>e.m_distance-t.m_distance))}return s.slice(0,n)}}export{m as O};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}