{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport t from \"../PixelBlock.js\";\nimport { getPixelValueRange as e } from \"../rasterFormats/pixelRangeUtils.js\";\nvar n, l;\n!function (t) {\n  t[t.matchAny = 0] = \"matchAny\", t[t.matchAll = 1] = \"matchAll\";\n}(n || (n = {})), function (t) {\n  t[t.bestMatch = 0] = \"bestMatch\", t[t.fail = 1] = \"fail\";\n}(l || (l = {}));\nconst i = 6;\nfunction o(t) {\n  return null != t && \"esri.layers.support.PixelBlock\" === t.declaredClass && t.pixels && t.pixels.length > 0;\n}\nfunction s(t, e) {\n  return e?.length && o(t) ? t.extractBands(e) : t;\n}\nfunction r(e) {\n  if (!e?.length || e.some(t => !o(t))) return null;\n  if (1 === e.length) return e[0]?.clone() ?? null;\n  const n = e,\n    {\n      width: l,\n      height: i,\n      pixelType: s\n    } = n[0];\n  if (n.some(t => t.width !== l || t.height !== i)) return null;\n  const r = n.map(({\n    mask: t\n  }) => t).filter(t => null != t);\n  let a = null;\n  r.length && (a = new Uint8Array(l * i), a.set(r[0]), r.length > 1 && m(r.slice(1), a));\n  const h = [];\n  n.forEach(({\n    pixels: t\n  }) => h.push(...t));\n  const f = n.map(({\n      statistics: t\n    }) => t).filter(t => t?.length),\n    c = [];\n  return f.forEach(t => c.push(...t)), new t({\n    pixelType: s,\n    width: l,\n    height: i,\n    mask: a,\n    pixels: h,\n    statistics: c.length ? c : null\n  });\n}\nfunction a(t) {\n  if (!t) return;\n  const e = t.colormap;\n  if (!e || 0 === e.length) return;\n  const n = e.sort((t, e) => t[0] - e[0]);\n  let l = 0;\n  n[0][0] < 0 && (l = n[0][0]);\n  const i = Math.max(256, n[n.length - 1][0] - l + 1),\n    o = new Uint8Array(4 * i),\n    s = [];\n  let r,\n    a = 0,\n    h = 0;\n  const f = 5 === n[0].length;\n  if (i > 65536) return n.forEach(t => {\n    s[t[0] - l] = f ? t.slice(1) : t.slice(1).concat([255]);\n  }), {\n    indexed2DColormap: s,\n    offset: l,\n    alphaSpecified: f\n  };\n  if (t.fillUnspecified) for (r = n[h], a = r[0] - l; a < i; a++) o[4 * a] = r[1], o[4 * a + 1] = r[2], o[4 * a + 2] = r[3], o[4 * a + 3] = f ? r[4] : 255, a === r[0] - l && (r = h === n.length - 1 ? r : n[++h]);else for (a = 0; a < n.length; a++) r = n[a], h = 4 * (r[0] - l), o[h] = r[1], o[h + 1] = r[2], o[h + 2] = r[3], o[h + 3] = f ? r[4] : 255;\n  return {\n    indexedColormap: o,\n    offset: l,\n    alphaSpecified: f\n  };\n}\nfunction h(t, e) {\n  if (!o(t)) return t;\n  if (!e || !e.indexedColormap && !e.indexed2DColormap) return t;\n  const n = t.clone(),\n    l = n.pixels;\n  let i = n.mask;\n  const s = n.width * n.height;\n  if (1 !== l.length) return t;\n  const {\n    indexedColormap: r,\n    indexed2DColormap: a,\n    offset: h,\n    alphaSpecified: f\n  } = e;\n  let c = 0;\n  const u = l[0],\n    p = new Uint8Array(u.length),\n    x = new Uint8Array(u.length),\n    d = new Uint8Array(u.length);\n  let m,\n    g = 0;\n  if (r) {\n    const t = r.length - 1;\n    if (null != i) for (c = 0; c < s; c++) i[c] && (g = 4 * (u[c] - h), g < h || g > t ? i[c] = 0 : (p[c] = r[g], x[c] = r[g + 1], d[c] = r[g + 2], i[c] = r[g + 3]));else {\n      for (i = new Uint8Array(s), c = 0; c < s; c++) g = 4 * (u[c] - h), g < h || g > t ? i[c] = 0 : (p[c] = r[g], x[c] = r[g + 1], d[c] = r[g + 2], i[c] = r[g + 3]);\n      n.mask = i;\n    }\n  } else if (a) if (null != i) for (c = 0; c < s; c++) i[c] && (m = a[u[c]], p[c] = m[0], x[c] = m[1], d[c] = m[2], i[c] = m[3]);else {\n    for (i = new Uint8Array(s), c = 0; c < s; c++) m = a[u[c]], p[c] = m[0], x[c] = m[1], d[c] = m[2], i[c] = m[3];\n    n.mask = i;\n  }\n  return n.pixels = [p, x, d], n.statistics = null, n.pixelType = \"u8\", n.maskIsAlpha = f, n;\n}\nfunction f(e, n) {\n  if (!o(e)) return null;\n  const {\n      pixels: l,\n      mask: i\n    } = e,\n    s = l.length;\n  let r = n.lut;\n  const {\n    offset: a\n  } = n;\n  r && 1 === r[0].length && (r = l.map(() => r));\n  const h = [],\n    f = n.outputPixelType || \"u8\";\n  for (let t = 0; t < s; t++) {\n    const e = c(l[t], i, r[t], a || 0, f);\n    h.push(e);\n  }\n  const u = new t({\n    width: e.width,\n    height: e.height,\n    pixels: h,\n    mask: i,\n    pixelType: f\n  });\n  return u.updateStatistics(), u;\n}\nfunction c(e, n, l, i, o) {\n  const s = e.length,\n    r = t.createEmptyBand(o, s);\n  if (n) for (let t = 0; t < s; t++) n[t] && (r[t] = l[e[t] - i]);else for (let t = 0; t < s; t++) r[t] = l[e[t] - i];\n  return r;\n}\nfunction u(t, e) {\n  if (!o(t)) return null;\n  const n = t.clone(),\n    {\n      pixels: l\n    } = n,\n    i = n.width * n.height,\n    s = e.length,\n    r = Math.floor(s / 2),\n    a = e[Math.floor(r)],\n    h = l[0];\n  let f,\n    c,\n    u,\n    p,\n    x,\n    d,\n    m = !1;\n  const g = new Uint8Array(i),\n    y = new Uint8Array(i),\n    w = new Uint8Array(i);\n  let k = n.mask;\n  const M = 4 === e[0].mappedColor.length;\n  for (k || (k = new Uint8Array(i), k.fill(M ? 255 : 1), n.mask = k), x = 0; x < i; x++) if (k[x]) {\n    for (f = h[x], m = !1, d = r, c = a, u = 0, p = s - 1; p - u > 1;) {\n      if (f === c.value) {\n        m = !0;\n        break;\n      }\n      f > c.value ? u = d : p = d, d = Math.floor((u + p) / 2), c = e[Math.floor(d)];\n    }\n    m || (f === e[u].value ? (c = e[u], m = !0) : f === e[p].value ? (c = e[p], m = !0) : f < e[u].value ? (m = !1, c = null) : f > e[u].value && (f < e[p].value ? (c = e[u], m = !0) : p === s - 1 ? (m = !1, c = null) : (c = e[p], m = !0))), m ? (g[x] = c.mappedColor[0], y[x] = c.mappedColor[1], w[x] = c.mappedColor[2], k[x] = c.mappedColor[3]) : g[x] = y[x] = w[x] = k[x] = 0;\n  }\n  return n.pixels = [g, y, w], n.mask = k, n.pixelType = \"u8\", n.maskIsAlpha = M, n;\n}\nfunction p(n, l) {\n  if (!o(n)) return null;\n  const {\n      width: i,\n      height: s\n    } = n,\n    {\n      inputRanges: r,\n      outputValues: a,\n      outputPixelType: h,\n      noDataRanges: f,\n      allowUnmatched: c,\n      isLastInputRangeInclusive: u\n    } = l,\n    p = n.pixels[0],\n    x = t.createEmptyBand(h, p.length),\n    d = n.mask,\n    m = new Uint8Array(i * s);\n  d ? m.set(d) : m.fill(255);\n  const g = n.pixelType.startsWith(\"f\") ? 1e-6 : 0,\n    y = r.map(t => t - g);\n  y[0] = r[0], y[y.length - 1] = r[r.length - 1] + (u ? 1e-6 : 0);\n  const w = r.length / 2,\n    [k, M] = e(h);\n  for (let t = 0; t < s; t++) for (let e = 0; e < i; e++) {\n    const n = t * i + e;\n    if (m[n]) {\n      const t = p[n];\n      let e = !1;\n      for (let l = w - 1; l >= 0; l--) if (t === y[2 * l] || t > y[2 * l] && t < y[2 * l + 1]) {\n        x[n] = a[l], e = !0;\n        break;\n      }\n      e || (c ? x[n] = t > M ? M : t < k ? k : t : m[n] = 0);\n    }\n  }\n  const A = f?.length;\n  if (A) for (let t = 0; t < s; t++) for (let e = 0; e < i; e++) {\n    const n = t * i + e;\n    if (!d || d[n]) {\n      const t = p[n];\n      for (let e = 0; e < A; e += 2) if (t >= f[e] && t <= f[e + 1]) {\n        x[n] = 0, m[n] = 0;\n        break;\n      }\n    }\n  }\n  return new t({\n    width: i,\n    height: s,\n    pixelType: h,\n    pixels: [x],\n    mask: m\n  });\n}\nfunction x(t, e, n, l) {\n  const i = null != n && n.length >= 2 ? new Set(n) : null,\n    o = 1 === n?.length ? n[0] : null,\n    s = !!e?.length;\n  for (let r = 0; r < t.length; r++) if (l[r]) {\n    const n = t[r];\n    if (s) {\n      let t = !1;\n      for (let l = 0; l < e.length; l += 2) if (n >= e[l] && n <= e[l + 1]) {\n        t = !0;\n        break;\n      }\n      t || (l[r] = 0);\n    }\n    l[r] && (n === o || i?.has(n)) && (l[r] = 0);\n  }\n}\nfunction d(t, e) {\n  const n = t[0].length;\n  for (let l = 0; l < n; l++) if (e[l]) {\n    let n = !1;\n    for (let e = 0; e < t.length; e++) if (t[e][l]) {\n      n = !0;\n      break;\n    }\n    n || (e[l] = 0);\n  }\n}\nfunction m(t, e) {\n  const n = t[0].length;\n  for (let l = 0; l < n; l++) if (e[l]) {\n    let n = !1;\n    for (let e = 0; e < t.length; e++) if (0 === t[e][l]) {\n      n = !0;\n      break;\n    }\n    n && (e[l] = 0);\n  }\n}\nfunction g(e, n) {\n  if (!o(e)) return null;\n  const {\n      width: l,\n      height: i,\n      pixels: s\n    } = e,\n    r = l * i,\n    a = new Uint8Array(r);\n  e.mask ? a.set(e.mask) : a.fill(255);\n  const h = s.length,\n    {\n      includedRanges: f,\n      noDataValues: u,\n      outputPixelType: p,\n      matchAll: g,\n      lookups: y\n    } = n;\n  if (y) {\n    const t = [];\n    for (let e = 0; e < h; e++) {\n      const n = y[e],\n        l = c(s[e], a, n.lut, n.offset || 0, \"u8\");\n      t.push(l);\n    }\n    1 === t.length ? a.set(t[0]) : g ? d(t, a) : m(t, a);\n  } else if (g) {\n    const t = [];\n    for (let e = 0; e < h; e++) {\n      const n = new Uint8Array(r);\n      n.set(a), x(s[e], f?.slice(2 * e, 2 * e + 2), u?.[e], n), t.push(n);\n    }\n    1 === t.length ? a.set(t[0]) : d(t, a);\n  } else for (let t = 0; t < h; t++) x(s[t], f?.slice(2 * t, 2 * t + 2), u?.[t], a);\n  return new t({\n    width: l,\n    height: i,\n    pixelType: p,\n    pixels: s,\n    mask: a\n  });\n}\nfunction y(n) {\n  const {\n    srcPixelType: l,\n    inputRanges: i,\n    outputValues: o,\n    allowUnmatched: s,\n    noDataRanges: r,\n    isLastInputRangeInclusive: a,\n    outputPixelType: h\n  } = n;\n  if (\"u8\" !== l && \"s8\" !== l && \"u16\" !== l && \"s16\" !== l) return null;\n  const f = l.includes(\"16\") ? 65536 : 256,\n    c = l.includes(\"s\") ? -f / 2 : 0,\n    u = t.createEmptyBand(h, f),\n    p = new Uint8Array(f);\n  s && p.fill(255);\n  const [x, d] = e(h);\n  if (i?.length && o?.length) {\n    const t = 1e-6,\n      e = i.map(e => e - t);\n    e[0] = i[0], a && (e[e.length - 1] = i[i.length - 1]);\n    for (let n = 0; n < e.length; n++) {\n      const t = o[n] > d ? d : o[n] < x ? x : o[n],\n        l = Math.ceil(e[2 * n] - c),\n        i = Math.floor(e[2 * n + 1] - c);\n      for (let e = l; e <= i; e++) u[e] = t, p[e] = 255;\n    }\n  }\n  if (r?.length) for (let t = 0; t < r.length; t++) {\n    const e = Math.ceil(r[2 * t] - c),\n      n = Math.floor(r[2 * t + 1] - c);\n    for (let t = e; t <= n; t++) p[t] = 0;\n  }\n  return {\n    lut: u,\n    offset: c,\n    mask: p\n  };\n}\nfunction w(t, e, n) {\n  if (\"u8\" !== t && \"s8\" !== t && \"u16\" !== t && \"s16\" !== t) return null;\n  const l = t.includes(\"16\") ? 65536 : 256,\n    i = t.includes(\"s\") ? -l / 2 : 0,\n    o = new Uint8Array(l);\n  if (e) for (let s = 0; s < e.length; s++) {\n    const t = Math.ceil(e[2 * s] - i),\n      n = Math.floor(e[2 * s + 1] - i);\n    for (let e = t; e <= n; e++) o[e] = 255;\n  } else o.fill(255);\n  if (n) for (let s = 0; s < n.length; s++) o[n[s] - i] = 0;\n  return {\n    lut: o,\n    offset: i\n  };\n}\nfunction k(t, e, n, l, i, o, s, r) {\n  return {\n    xmin: i <= n * t ? 0 : i < n * t + t ? i - n * t : t,\n    ymin: o <= l * e ? 0 : o < l * e + e ? o - l * e : e,\n    xmax: i + s <= n * t ? 0 : i + s < n * t + t ? i + s - n * t : t,\n    ymax: o + r <= l * e ? 0 : o + r < l * e + e ? o + r - l * e : e\n  };\n}\nfunction M(t, e) {\n  if (!t || 0 === t.length) return null;\n  const n = t.find(t => t.pixelBlock);\n  if (null == n?.pixelBlock) return null;\n  const l = (n.extent.xmax - n.extent.xmin) / n.pixelBlock.width,\n    i = (n.extent.ymax - n.extent.ymin) / n.pixelBlock.height,\n    o = .01 * Math.min(l, i),\n    s = t.sort((t, e) => Math.abs(t.extent.ymax - e.extent.ymax) > o ? e.extent.ymax - t.extent.ymax : Math.abs(t.extent.xmin - e.extent.xmin) > o ? t.extent.xmin - e.extent.xmin : 0),\n    r = Math.min.apply(null, s.map(t => t.extent.xmin)),\n    a = Math.min.apply(null, s.map(t => t.extent.ymin)),\n    h = Math.max.apply(null, s.map(t => t.extent.xmax)),\n    f = Math.max.apply(null, s.map(t => t.extent.ymax)),\n    c = {\n      x: Math.round((e.xmin - r) / l),\n      y: Math.round((f - e.ymax) / i)\n    },\n    u = {\n      width: Math.round((h - r) / l),\n      height: Math.round((f - a) / i)\n    },\n    p = {\n      width: Math.round((e.xmax - e.xmin) / l),\n      height: Math.round((e.ymax - e.ymin) / i)\n    };\n  if (Math.round(u.width / n.pixelBlock.width) * Math.round(u.height / n.pixelBlock.height) !== s.length || c.x < 0 || c.y < 0 || u.width < p.width || u.height < p.height) return null;\n  return {\n    extent: e,\n    pixelBlock: U(s.map(t => t.pixelBlock), u, {\n      clipOffset: c,\n      clipSize: p\n    })\n  };\n}\nfunction A(t, e, n, l, i, o) {\n  const {\n      width: s,\n      height: r\n    } = n.block,\n    {\n      x: a,\n      y: h\n    } = n.offset,\n    {\n      width: f,\n      height: c\n    } = n.mosaic,\n    u = k(s, r, l, i, a, h, f, c);\n  let p = 0,\n    x = 0;\n  if (o) {\n    const t = o.hasGCSSShiftTransform ? 360 : o.halfWorldWidth ?? 0,\n      e = s * o.resolutionX,\n      n = o.startX + l * e;\n    n < t && n + e > t ? x = o.rightPadding : n >= t && (p = o.leftMargin - o.rightPadding, x = 0);\n  }\n  if (u.xmax -= x, \"number\" != typeof e) for (let d = u.ymin; d < u.ymax; d++) {\n    const n = (i * r + d - h) * f + (l * s - a) + p,\n      o = d * s;\n    for (let l = u.xmin; l < u.xmax; l++) t[n + l] = e[o + l];\n  } else for (let d = u.ymin; d < u.ymax; d++) {\n    const n = (i * r + d - h) * f + (l * s - a) + p;\n    for (let l = u.xmin; l < u.xmax; l++) t[n + l] = e;\n  }\n}\nfunction U(e, n, l = {}) {\n  const {\n    clipOffset: i,\n    clipSize: s,\n    alignmentInfo: r,\n    blockWidths: a\n  } = l;\n  if (a) return b(e, n, {\n    blockWidths: a\n  });\n  const h = e.find(t => o(t));\n  if (null == h) return null;\n  const f = s ? s.width : n.width,\n    c = s ? s.height : n.height,\n    u = h.width,\n    p = h.height,\n    x = n.width / u,\n    d = n.height / p,\n    m = {\n      offset: i || {\n        x: 0,\n        y: 0\n      },\n      mosaic: s || n,\n      block: {\n        width: u,\n        height: p\n      }\n    },\n    g = h.pixelType,\n    y = t.getPixelArrayConstructor(g),\n    w = h.pixels.length,\n    k = [];\n  let M, U;\n  for (let t = 0; t < w; t++) {\n    U = new y(f * c);\n    for (let n = 0; n < d; n++) for (let l = 0; l < x; l++) {\n      const i = e[n * x + l];\n      o(i) && (M = i.pixels[t], A(U, M, m, l, n, r));\n    }\n    k.push(U);\n  }\n  const T = e.some(t => null == t || null != t.mask && t.mask.length > 0),\n    v = e.some(t => t?.bandMasks && t.bandMasks.length > 1),\n    B = T ? new Uint8Array(f * c) : void 0,\n    C = v ? [] : void 0;\n  if (B) {\n    for (let t = 0; t < d; t++) for (let n = 0; n < x; n++) {\n      const l = e[t * x + n],\n        i = null != l ? l.mask : null;\n      A(B, null != i ? i : l ? 255 : 0, m, n, t, r);\n    }\n    if (C) for (let t = 0; t < w; t++) {\n      const n = new Uint8Array(f * c);\n      for (let l = 0; l < d; l++) for (let i = 0; i < x; i++) {\n        const o = e[l * x + i],\n          s = o?.bandMasks?.[t] ?? o?.mask;\n        A(n, null != s ? s : o ? 255 : 0, m, i, l, r);\n      }\n      C.push(n);\n    }\n  }\n  const S = new t({\n    width: f,\n    height: c,\n    pixels: k,\n    pixelType: g,\n    bandMasks: C,\n    mask: B\n  });\n  return S.updateStatistics(), S;\n}\nfunction b(e, n, l) {\n  const i = e.find(t => null != t);\n  if (null == i) return null;\n  const s = e.some(t => null == t || !!t.mask),\n    {\n      width: r,\n      height: a\n    } = n,\n    h = s ? new Uint8Array(r * a) : null,\n    {\n      blockWidths: f\n    } = l,\n    c = [],\n    u = i.getPlaneCount(),\n    p = t.getPixelArrayConstructor(i.pixelType);\n  if (s) for (let t = 0, y = 0; t < e.length; y += f[t], t++) {\n    const n = e[t];\n    if (!o(n)) continue;\n    const l = n.mask;\n    for (let e = 0; e < a; e++) for (let i = 0; i < f[t]; i++) h[e * r + i + y] = null == l ? 255 : l[e * n.width + i];\n  }\n  const x = e.some(t => t?.bandMasks && t.bandMasks.length > 1),\n    d = x ? [] : void 0,\n    m = r * a;\n  for (let t = 0; t < u; t++) {\n    const n = new p(m),\n      l = x ? new Uint8Array(m) : void 0;\n    for (let i = 0, s = 0; i < e.length; s += f[i], i++) {\n      const h = e[i];\n      if (!o(h)) continue;\n      const c = h.pixels[t];\n      if (null != c) {\n        for (let t = 0; t < a; t++) for (let e = 0; e < f[i]; e++) n[t * r + e + s] = c[t * h.width + e];\n        if (l) {\n          const e = h.bandMasks?.[t] ?? h.mask;\n          for (let t = 0; t < a; t++) for (let n = 0; n < f[i]; n++) l[t * r + n + s] = e ? e[t * h.width + n] : 255;\n        }\n      }\n    }\n    c.push(n), d && l && d.push(l);\n  }\n  const g = new t({\n    width: r,\n    height: a,\n    mask: h,\n    bandMasks: d,\n    pixels: c,\n    pixelType: i.pixelType\n  });\n  return g.updateStatistics(), g;\n}\nfunction T(t, e, n) {\n  if (!o(t)) return null;\n  const {\n      width: l,\n      height: i\n    } = t,\n    s = e.x,\n    r = e.y,\n    a = n.width + s,\n    h = n.height + r;\n  if (s < 0 || r < 0 || a > l || h > i) return t;\n  if (0 === s && 0 === r && a === l && h === i) return t;\n  t.mask || (t.mask = new Uint8Array(l * i));\n  const f = t.mask;\n  for (let o = 0; o < i; o++) {\n    const t = o * l;\n    for (let e = 0; e < l; e++) f[t + e] = o < r || o >= h || e < s || e >= a ? 0 : 1;\n  }\n  return t.updateStatistics(), t;\n}\nfunction v(t) {\n  if (!o(t)) return null;\n  const e = t.clone(),\n    {\n      width: n,\n      height: l,\n      pixels: i\n    } = t,\n    s = i[0],\n    r = e.pixels[0],\n    a = t.mask;\n  for (let o = 2; o < l - 1; o++) {\n    const t = new Map();\n    for (let l = o - 2; l < o + 2; l++) for (let e = 0; e < 4; e++) {\n      const i = l * n + e;\n      S(t, s[i], a ? a[i] : 1);\n    }\n    r[o * n] = B(t), r[o * n + 1] = r[o * n + 2] = r[o * n];\n    let e = 3;\n    for (; e < n - 1; e++) {\n      let l = (o - 2) * n + e + 1;\n      S(t, s[l], a ? a[l] : 1), l = (o - 1) * n + e + 1, S(t, s[l], a ? a[l] : 1), l = o * n + e + 1, S(t, s[l], a ? a[l] : 1), l = (o + 1) * n + e + 1, S(t, s[l], a ? a[l] : 1), l = (o - 2) * n + e - 3, C(t, s[l], a ? a[l] : 1), l = (o - 1) * n + e - 3, C(t, s[l], a ? a[l] : 1), l = o * n + e - 3, C(t, s[l], a ? a[l] : 1), l = (o + 1) * n + e - 3, C(t, s[l], a ? a[l] : 1), r[o * n + e] = B(t);\n    }\n    r[o * n + e + 1] = r[o * n + e];\n  }\n  for (let o = 0; o < n; o++) r[o] = r[n + o] = r[2 * n + o], r[(l - 1) * n + o] = r[(l - 2) * n + o];\n  return e.updateStatistics(), e;\n}\nfunction B(t) {\n  if (0 === t.size) return 0;\n  let e = 0,\n    n = -1,\n    l = 0;\n  const i = t.keys();\n  let o = i.next();\n  for (; !o.done;) l = t.get(o.value), l > e && (n = o.value, e = l), o = i.next();\n  return n;\n}\nfunction C(t, e, n) {\n  if (0 === n) return;\n  const l = t.get(e);\n  1 === l ? t.delete(e) : t.set(e, l - 1);\n}\nfunction S(t, e, n) {\n  0 !== n && t.set(e, t.has(e) ? t.get(e) + 1 : 1);\n}\nfunction P(e, n, l) {\n  let {\n    x: i,\n    y: s\n  } = n;\n  const {\n    width: r,\n    height: a\n  } = l;\n  if (0 === i && 0 === s && a === e.height && r === e.width) return e;\n  const {\n      width: h,\n      height: f\n    } = e,\n    c = Math.max(0, s),\n    u = Math.max(0, i),\n    p = Math.min(i + r, h),\n    x = Math.min(s + a, f);\n  if (p < 0 || x < 0 || !o(e)) return null;\n  i = Math.max(0, -i), s = Math.max(0, -s);\n  const {\n      pixels: d\n    } = e,\n    m = r * a,\n    g = d.length,\n    y = [];\n  for (let o = 0; o < g; o++) {\n    const n = d[o],\n      l = t.createEmptyBand(e.pixelType, m);\n    for (let t = c; t < x; t++) {\n      const e = t * h;\n      let o = (t + s - c) * r + i;\n      for (let t = u; t < p; t++) l[o++] = n[e + t];\n    }\n    y.push(l);\n  }\n  const w = new Uint8Array(m),\n    k = e.mask;\n  for (let t = c; t < x; t++) {\n    const e = t * h;\n    let n = (t + s - c) * r + i;\n    for (let t = u; t < p; t++) w[n++] = k ? k[e + t] : 1;\n  }\n  const M = new t({\n    width: l.width,\n    height: l.height,\n    pixelType: e.pixelType,\n    pixels: y,\n    mask: w\n  });\n  return M.updateStatistics(), M;\n}\nfunction _(e, n = !0) {\n  if (!o(e)) return null;\n  const {\n      pixels: l,\n      width: i,\n      height: s,\n      mask: r,\n      pixelType: a\n    } = e,\n    h = [],\n    f = Math.round(i / 2),\n    c = Math.round(s / 2),\n    u = s - 1,\n    p = i - 1;\n  for (let o = 0; o < l.length; o++) {\n    const e = l[o],\n      r = t.createEmptyBand(a, f * c);\n    let x = 0;\n    for (let t = 0; t < s; t += 2) for (let l = 0; l < i; l += 2) {\n      const o = e[t * i + l];\n      if (n) {\n        const n = l === p ? o : e[t * i + l + 1],\n          s = t === u ? o : e[t * i + l + i],\n          a = l === p ? s : t === u ? n : e[t * i + l + i + 1];\n        r[x++] = (o + n + s + a) / 4;\n      } else r[x++] = o;\n    }\n    h.push(r);\n  }\n  let x = null;\n  if (null != r) {\n    x = new Uint8Array(f * c);\n    let t = 0;\n    for (let e = 0; e < s; e += 2) for (let l = 0; l < i; l += 2) {\n      const o = r[e * i + l];\n      if (n) {\n        const n = l === p ? o : r[e * i + l + 1],\n          s = e === u ? o : r[e * i + l + i],\n          a = l === p ? s : e === u ? n : r[e * i + l + i + 1];\n        x[t++] = o * n * s * a ? 1 : 0;\n      } else x[t++] = o;\n    }\n  }\n  return new t({\n    width: f,\n    height: c,\n    pixelType: a,\n    pixels: h,\n    mask: x\n  });\n}\nfunction W(t, e, n = 0, l = !0) {\n  if (!o(t)) return null;\n  const {\n    width: i,\n    height: s\n  } = e;\n  let {\n    width: r,\n    height: a\n  } = t;\n  const h = new Map(),\n    f = {\n      x: 0,\n      y: 0\n    },\n    c = 1 + n;\n  let u = t;\n  for (let o = 0; o < c; o++) {\n    const t = Math.ceil(r / i),\n      n = Math.ceil(a / s);\n    for (let l = 0; l < n; l++) {\n      f.y = l * s;\n      for (let n = 0; n < t; n++) {\n        f.x = n * i;\n        const t = P(u, f, e);\n        h.set(`${o}/${l}/${n}`, t);\n      }\n    }\n    o < c - 1 && (u = _(u, l)), r = Math.round(r / 2), a = Math.round(a / 2);\n  }\n  return h;\n}\nfunction E(t) {\n  const {\n    pixelBlock: e,\n    tileSize: n,\n    level: l,\n    row: i,\n    col: s,\n    useBilinear: r\n  } = t;\n  if (!o(e)) return null;\n  const {\n      width: a,\n      height: h\n    } = n,\n    f = 2 ** l,\n    c = f * a,\n    u = f * h;\n  let p = P(e, {\n    y: i * u,\n    x: s * c\n  }, {\n    width: c,\n    height: u\n  });\n  if (!p) return null;\n  for (let o = l; o > 0; o--) p = _(p, r);\n  return p;\n}\nfunction I(t, e, n, l, i = 0) {\n  const {\n      width: o,\n      height: s\n    } = t,\n    {\n      width: r,\n      height: a\n    } = e,\n    h = l.cols,\n    f = l.rows,\n    c = Math.ceil(r / h - .1 / h),\n    u = Math.ceil(a / f - .1 / f);\n  let p, x, d, m, g, y, w;\n  const k = c * h,\n    M = k * u * f,\n    A = new Float32Array(M),\n    U = new Float32Array(M),\n    b = new Uint32Array(M),\n    T = new Uint32Array(M);\n  let v,\n    B,\n    C = 0;\n  for (let S = 0; S < u; S++) for (let t = 0; t < c; t++) {\n    p = 12 * (S * c + t), x = n[p], d = n[p + 1], m = n[p + 2], g = n[p + 3], y = n[p + 4], w = n[p + 5];\n    for (let e = 0; e < f; e++) {\n      C = (S * f + e) * k + t * h, B = (e + .5) / f;\n      for (let t = 0; t < e; t++) v = (t + .5) / h, A[C + t] = (x * v + d * B + m) * o + i, U[C + t] = (g * v + y * B + w) * s + i, b[C + t] = Math.floor(A[C + t]), T[C + t] = Math.floor(U[C + t]);\n    }\n    p += 6, x = n[p], d = n[p + 1], m = n[p + 2], g = n[p + 3], y = n[p + 4], w = n[p + 5];\n    for (let e = 0; e < f; e++) {\n      C = (S * f + e) * k + t * h, B = (e + .5) / f;\n      for (let t = e; t < h; t++) v = (t + .5) / h, A[C + t] = (x * v + d * B + m) * o + i, U[C + t] = (g * v + y * B + w) * s + i, b[C + t] = Math.floor(A[C + t]), T[C + t] = Math.floor(U[C + t]);\n    }\n  }\n  return {\n    offsets_x: A,\n    offsets_y: U,\n    offsets_xi: b,\n    offsets_yi: T,\n    gridWidth: k\n  };\n}\nfunction R(t, e) {\n  const {\n      coefficients: n,\n      spacing: l\n    } = e,\n    {\n      offsets_x: i,\n      offsets_y: o,\n      gridWidth: s\n    } = I(t, t, n, {\n      rows: l[0],\n      cols: l[1]\n    }),\n    {\n      width: r,\n      height: a\n    } = t,\n    h = new Float32Array(r * a),\n    f = 180 / Math.PI;\n  for (let c = 0; c < a; c++) for (let t = 0; t < r; t++) {\n    const e = c * s + t,\n      n = 0 === c ? e : e - s,\n      l = c === a - 1 ? e : e + s,\n      u = i[n] - i[l],\n      p = o[l] - o[n];\n    if (isNaN(u) || isNaN(p)) h[c * r + t] = 90;else {\n      let e = Math.atan2(p, u) * f;\n      e = (360 + e) % 360, h[c * r + t] = e;\n    }\n  }\n  return h;\n}\nfunction D(e, n, l, i, s = \"nearest\") {\n  if (!o(e)) return null;\n  \"majority\" === s && (e = v(e));\n  const {\n      pixels: r,\n      mask: a,\n      bandMasks: h,\n      pixelType: f\n    } = e,\n    c = e.width,\n    u = e.height,\n    p = t.getPixelArrayConstructor(f),\n    x = r.length,\n    {\n      width: d,\n      height: m\n    } = n;\n  let g = !1;\n  for (let t = 0; t < l.length; t += 3) -1 === l[t] && -1 === l[t + 1] && -1 === l[t + 2] && (g = !0);\n  const {\n    offsets_x: y,\n    offsets_y: w,\n    offsets_xi: k,\n    offsets_yi: M,\n    gridWidth: A\n  } = I({\n    width: c,\n    height: u\n  }, n, l, i, \"majority\" === s ? .5 : 0);\n  let U;\n  const b = (t, e, n, l) => {\n      const i = t instanceof Float32Array || t instanceof Float64Array ? 0 : .5;\n      for (let o = 0; o < m; o++) {\n        U = o * A;\n        for (let s = 0; s < d; s++) {\n          if (y[U] < 0 || w[U] < 0) t[o * d + s] = 0;else if (l) t[o * d + s] = e[k[U] + M[U] * c];else {\n            const l = Math.floor(y[U]),\n              r = Math.floor(w[U]),\n              a = Math.ceil(y[U]),\n              h = Math.ceil(w[U]),\n              f = y[U] - l,\n              u = w[U] - r;\n            if (!n || n[l + r * c] && n[a + r * c] && n[l + h * c] && n[a + h * c]) {\n              const n = (1 - f) * e[l + r * c] + f * e[a + r * c],\n                p = (1 - f) * e[l + h * c] + f * e[a + h * c];\n              t[o * d + s] = (1 - u) * n + u * p + i;\n            } else t[o * d + s] = e[k[U] + M[U] * c];\n          }\n          U++;\n        }\n      }\n    },\n    T = [];\n  let B;\n  const C = h?.length === x,\n    S = [];\n  for (let t = 0; t < x; t++) {\n    if (C) {\n      const e = new Uint8Array(d * m);\n      b(e, h[t], h[t], !0), S.push(e);\n    }\n    B = new p(d * m), b(B, r[t], C ? h[t] : a, \"nearest\" === s || \"majority\" === s), T.push(B);\n  }\n  const P = new t({\n    width: d,\n    height: m,\n    pixelType: f,\n    pixels: T,\n    bandMasks: C ? S : void 0\n  });\n  if (null != a) P.mask = new Uint8Array(d * m), b(P.mask, a, a, !0);else if (g) {\n    P.mask = new Uint8Array(d * m);\n    for (let t = 0; t < d * m; t++) P.mask[t] = y[t] < 0 || w[t] < 0 ? 0 : 1;\n  }\n  return P.updateStatistics(), P;\n}\nexport { l as MissingBandAction, n as NoDataInterpretation, D as approximateTransform, P as clip, E as clipTile, h as colorize, r as compositeBands, a as createColormapLUT, w as createMaskLUT, y as createRemapLUT, s as extractBands, k as getClipBounds, R as getLocalArithmeticNorthRotations, I as interpolateOffsets, o as isValidPixelBlock, c as lookupBandValues, f as lookupPixels, g as mask, i as maxMapSizeGpu, U as mosaic, M as mosaicPixelData, p as remap, u as remapColor, v as resampleByMajority, T as setValidBoundary, W as split };","map":{"version":3,"names":["t","getPixelValueRange","e","n","l","matchAny","matchAll","bestMatch","fail","i","o","declaredClass","pixels","length","s","extractBands","r","some","clone","width","height","pixelType","map","mask","filter","a","Uint8Array","set","m","slice","h","forEach","push","f","statistics","c","colormap","sort","Math","max","concat","indexed2DColormap","offset","alphaSpecified","fillUnspecified","indexedColormap","u","p","x","d","g","maskIsAlpha","lut","outputPixelType","updateStatistics","createEmptyBand","floor","y","w","k","M","mappedColor","fill","value","inputRanges","outputValues","noDataRanges","allowUnmatched","isLastInputRangeInclusive","startsWith","A","Set","has","includedRanges","noDataValues","lookups","srcPixelType","includes","ceil","xmin","ymin","xmax","ymax","find","pixelBlock","extent","min","abs","apply","round","U","clipOffset","clipSize","block","mosaic","hasGCSSShiftTransform","halfWorldWidth","resolutionX","startX","rightPadding","leftMargin","alignmentInfo","blockWidths","b","getPixelArrayConstructor","T","v","bandMasks","B","C","S","getPlaneCount","Map","size","keys","next","done","get","delete","P","_","W","E","tileSize","level","row","col","useBilinear","I","cols","rows","Float32Array","Uint32Array","offsets_x","offsets_y","offsets_xi","offsets_yi","gridWidth","R","coefficients","spacing","PI","isNaN","atan2","D","Float64Array","MissingBandAction","NoDataInterpretation","approximateTransform","clip","clipTile","colorize","compositeBands","createColormapLUT","createMaskLUT","createRemapLUT","getClipBounds","getLocalArithmeticNorthRotations","interpolateOffsets","isValidPixelBlock","lookupBandValues","lookupPixels","maxMapSizeGpu","mosaicPixelData","remap","remapColor","resampleByMajority","setValidBoundary","split"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/layers/support/rasterFunctions/pixelUtils.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport t from\"../PixelBlock.js\";import{getPixelValueRange as e}from\"../rasterFormats/pixelRangeUtils.js\";var n,l;!function(t){t[t.matchAny=0]=\"matchAny\",t[t.matchAll=1]=\"matchAll\"}(n||(n={})),function(t){t[t.bestMatch=0]=\"bestMatch\",t[t.fail=1]=\"fail\"}(l||(l={}));const i=6;function o(t){return null!=t&&\"esri.layers.support.PixelBlock\"===t.declaredClass&&t.pixels&&t.pixels.length>0}function s(t,e){return e?.length&&o(t)?t.extractBands(e):t}function r(e){if(!e?.length||e.some((t=>!o(t))))return null;if(1===e.length)return e[0]?.clone()??null;const n=e,{width:l,height:i,pixelType:s}=n[0];if(n.some((t=>t.width!==l||t.height!==i)))return null;const r=n.map((({mask:t})=>t)).filter((t=>null!=t));let a=null;r.length&&(a=new Uint8Array(l*i),a.set(r[0]),r.length>1&&m(r.slice(1),a));const h=[];n.forEach((({pixels:t})=>h.push(...t)));const f=n.map((({statistics:t})=>t)).filter((t=>t?.length)),c=[];return f.forEach((t=>c.push(...t))),new t({pixelType:s,width:l,height:i,mask:a,pixels:h,statistics:c.length?c:null})}function a(t){if(!t)return;const e=t.colormap;if(!e||0===e.length)return;const n=e.sort(((t,e)=>t[0]-e[0]));let l=0;n[0][0]<0&&(l=n[0][0]);const i=Math.max(256,n[n.length-1][0]-l+1),o=new Uint8Array(4*i),s=[];let r,a=0,h=0;const f=5===n[0].length;if(i>65536)return n.forEach((t=>{s[t[0]-l]=f?t.slice(1):t.slice(1).concat([255])})),{indexed2DColormap:s,offset:l,alphaSpecified:f};if(t.fillUnspecified)for(r=n[h],a=r[0]-l;a<i;a++)o[4*a]=r[1],o[4*a+1]=r[2],o[4*a+2]=r[3],o[4*a+3]=f?r[4]:255,a===r[0]-l&&(r=h===n.length-1?r:n[++h]);else for(a=0;a<n.length;a++)r=n[a],h=4*(r[0]-l),o[h]=r[1],o[h+1]=r[2],o[h+2]=r[3],o[h+3]=f?r[4]:255;return{indexedColormap:o,offset:l,alphaSpecified:f}}function h(t,e){if(!o(t))return t;if(!e||!e.indexedColormap&&!e.indexed2DColormap)return t;const n=t.clone(),l=n.pixels;let i=n.mask;const s=n.width*n.height;if(1!==l.length)return t;const{indexedColormap:r,indexed2DColormap:a,offset:h,alphaSpecified:f}=e;let c=0;const u=l[0],p=new Uint8Array(u.length),x=new Uint8Array(u.length),d=new Uint8Array(u.length);let m,g=0;if(r){const t=r.length-1;if(null!=i)for(c=0;c<s;c++)i[c]&&(g=4*(u[c]-h),g<h||g>t?i[c]=0:(p[c]=r[g],x[c]=r[g+1],d[c]=r[g+2],i[c]=r[g+3]));else{for(i=new Uint8Array(s),c=0;c<s;c++)g=4*(u[c]-h),g<h||g>t?i[c]=0:(p[c]=r[g],x[c]=r[g+1],d[c]=r[g+2],i[c]=r[g+3]);n.mask=i}}else if(a)if(null!=i)for(c=0;c<s;c++)i[c]&&(m=a[u[c]],p[c]=m[0],x[c]=m[1],d[c]=m[2],i[c]=m[3]);else{for(i=new Uint8Array(s),c=0;c<s;c++)m=a[u[c]],p[c]=m[0],x[c]=m[1],d[c]=m[2],i[c]=m[3];n.mask=i}return n.pixels=[p,x,d],n.statistics=null,n.pixelType=\"u8\",n.maskIsAlpha=f,n}function f(e,n){if(!o(e))return null;const{pixels:l,mask:i}=e,s=l.length;let r=n.lut;const{offset:a}=n;r&&1===r[0].length&&(r=l.map((()=>r)));const h=[],f=n.outputPixelType||\"u8\";for(let t=0;t<s;t++){const e=c(l[t],i,r[t],a||0,f);h.push(e)}const u=new t({width:e.width,height:e.height,pixels:h,mask:i,pixelType:f});return u.updateStatistics(),u}function c(e,n,l,i,o){const s=e.length,r=t.createEmptyBand(o,s);if(n)for(let t=0;t<s;t++)n[t]&&(r[t]=l[e[t]-i]);else for(let t=0;t<s;t++)r[t]=l[e[t]-i];return r}function u(t,e){if(!o(t))return null;const n=t.clone(),{pixels:l}=n,i=n.width*n.height,s=e.length,r=Math.floor(s/2),a=e[Math.floor(r)],h=l[0];let f,c,u,p,x,d,m=!1;const g=new Uint8Array(i),y=new Uint8Array(i),w=new Uint8Array(i);let k=n.mask;const M=4===e[0].mappedColor.length;for(k||(k=new Uint8Array(i),k.fill(M?255:1),n.mask=k),x=0;x<i;x++)if(k[x]){for(f=h[x],m=!1,d=r,c=a,u=0,p=s-1;p-u>1;){if(f===c.value){m=!0;break}f>c.value?u=d:p=d,d=Math.floor((u+p)/2),c=e[Math.floor(d)]}m||(f===e[u].value?(c=e[u],m=!0):f===e[p].value?(c=e[p],m=!0):f<e[u].value?(m=!1,c=null):f>e[u].value&&(f<e[p].value?(c=e[u],m=!0):p===s-1?(m=!1,c=null):(c=e[p],m=!0))),m?(g[x]=c.mappedColor[0],y[x]=c.mappedColor[1],w[x]=c.mappedColor[2],k[x]=c.mappedColor[3]):g[x]=y[x]=w[x]=k[x]=0}return n.pixels=[g,y,w],n.mask=k,n.pixelType=\"u8\",n.maskIsAlpha=M,n}function p(n,l){if(!o(n))return null;const{width:i,height:s}=n,{inputRanges:r,outputValues:a,outputPixelType:h,noDataRanges:f,allowUnmatched:c,isLastInputRangeInclusive:u}=l,p=n.pixels[0],x=t.createEmptyBand(h,p.length),d=n.mask,m=new Uint8Array(i*s);d?m.set(d):m.fill(255);const g=n.pixelType.startsWith(\"f\")?1e-6:0,y=r.map((t=>t-g));y[0]=r[0],y[y.length-1]=r[r.length-1]+(u?1e-6:0);const w=r.length/2,[k,M]=e(h);for(let t=0;t<s;t++)for(let e=0;e<i;e++){const n=t*i+e;if(m[n]){const t=p[n];let e=!1;for(let l=w-1;l>=0;l--)if(t===y[2*l]||t>y[2*l]&&t<y[2*l+1]){x[n]=a[l],e=!0;break}e||(c?x[n]=t>M?M:t<k?k:t:m[n]=0)}}const A=f?.length;if(A)for(let t=0;t<s;t++)for(let e=0;e<i;e++){const n=t*i+e;if(!d||d[n]){const t=p[n];for(let e=0;e<A;e+=2)if(t>=f[e]&&t<=f[e+1]){x[n]=0,m[n]=0;break}}}return new t({width:i,height:s,pixelType:h,pixels:[x],mask:m})}function x(t,e,n,l){const i=null!=n&&n.length>=2?new Set(n):null,o=1===n?.length?n[0]:null,s=!!e?.length;for(let r=0;r<t.length;r++)if(l[r]){const n=t[r];if(s){let t=!1;for(let l=0;l<e.length;l+=2)if(n>=e[l]&&n<=e[l+1]){t=!0;break}t||(l[r]=0)}l[r]&&(n===o||i?.has(n))&&(l[r]=0)}}function d(t,e){const n=t[0].length;for(let l=0;l<n;l++)if(e[l]){let n=!1;for(let e=0;e<t.length;e++)if(t[e][l]){n=!0;break}n||(e[l]=0)}}function m(t,e){const n=t[0].length;for(let l=0;l<n;l++)if(e[l]){let n=!1;for(let e=0;e<t.length;e++)if(0===t[e][l]){n=!0;break}n&&(e[l]=0)}}function g(e,n){if(!o(e))return null;const{width:l,height:i,pixels:s}=e,r=l*i,a=new Uint8Array(r);e.mask?a.set(e.mask):a.fill(255);const h=s.length,{includedRanges:f,noDataValues:u,outputPixelType:p,matchAll:g,lookups:y}=n;if(y){const t=[];for(let e=0;e<h;e++){const n=y[e],l=c(s[e],a,n.lut,n.offset||0,\"u8\");t.push(l)}1===t.length?a.set(t[0]):g?d(t,a):m(t,a)}else if(g){const t=[];for(let e=0;e<h;e++){const n=new Uint8Array(r);n.set(a),x(s[e],f?.slice(2*e,2*e+2),u?.[e],n),t.push(n)}1===t.length?a.set(t[0]):d(t,a)}else for(let t=0;t<h;t++)x(s[t],f?.slice(2*t,2*t+2),u?.[t],a);return new t({width:l,height:i,pixelType:p,pixels:s,mask:a})}function y(n){const{srcPixelType:l,inputRanges:i,outputValues:o,allowUnmatched:s,noDataRanges:r,isLastInputRangeInclusive:a,outputPixelType:h}=n;if(\"u8\"!==l&&\"s8\"!==l&&\"u16\"!==l&&\"s16\"!==l)return null;const f=l.includes(\"16\")?65536:256,c=l.includes(\"s\")?-f/2:0,u=t.createEmptyBand(h,f),p=new Uint8Array(f);s&&p.fill(255);const[x,d]=e(h);if(i?.length&&o?.length){const t=1e-6,e=i.map((e=>e-t));e[0]=i[0],a&&(e[e.length-1]=i[i.length-1]);for(let n=0;n<e.length;n++){const t=o[n]>d?d:o[n]<x?x:o[n],l=Math.ceil(e[2*n]-c),i=Math.floor(e[2*n+1]-c);for(let e=l;e<=i;e++)u[e]=t,p[e]=255}}if(r?.length)for(let t=0;t<r.length;t++){const e=Math.ceil(r[2*t]-c),n=Math.floor(r[2*t+1]-c);for(let t=e;t<=n;t++)p[t]=0}return{lut:u,offset:c,mask:p}}function w(t,e,n){if(\"u8\"!==t&&\"s8\"!==t&&\"u16\"!==t&&\"s16\"!==t)return null;const l=t.includes(\"16\")?65536:256,i=t.includes(\"s\")?-l/2:0,o=new Uint8Array(l);if(e)for(let s=0;s<e.length;s++){const t=Math.ceil(e[2*s]-i),n=Math.floor(e[2*s+1]-i);for(let e=t;e<=n;e++)o[e]=255}else o.fill(255);if(n)for(let s=0;s<n.length;s++)o[n[s]-i]=0;return{lut:o,offset:i}}function k(t,e,n,l,i,o,s,r){return{xmin:i<=n*t?0:i<n*t+t?i-n*t:t,ymin:o<=l*e?0:o<l*e+e?o-l*e:e,xmax:i+s<=n*t?0:i+s<n*t+t?i+s-n*t:t,ymax:o+r<=l*e?0:o+r<l*e+e?o+r-l*e:e}}function M(t,e){if(!t||0===t.length)return null;const n=t.find((t=>t.pixelBlock));if(null==n?.pixelBlock)return null;const l=(n.extent.xmax-n.extent.xmin)/n.pixelBlock.width,i=(n.extent.ymax-n.extent.ymin)/n.pixelBlock.height,o=.01*Math.min(l,i),s=t.sort(((t,e)=>Math.abs(t.extent.ymax-e.extent.ymax)>o?e.extent.ymax-t.extent.ymax:Math.abs(t.extent.xmin-e.extent.xmin)>o?t.extent.xmin-e.extent.xmin:0)),r=Math.min.apply(null,s.map((t=>t.extent.xmin))),a=Math.min.apply(null,s.map((t=>t.extent.ymin))),h=Math.max.apply(null,s.map((t=>t.extent.xmax))),f=Math.max.apply(null,s.map((t=>t.extent.ymax))),c={x:Math.round((e.xmin-r)/l),y:Math.round((f-e.ymax)/i)},u={width:Math.round((h-r)/l),height:Math.round((f-a)/i)},p={width:Math.round((e.xmax-e.xmin)/l),height:Math.round((e.ymax-e.ymin)/i)};if(Math.round(u.width/n.pixelBlock.width)*Math.round(u.height/n.pixelBlock.height)!==s.length||c.x<0||c.y<0||u.width<p.width||u.height<p.height)return null;return{extent:e,pixelBlock:U(s.map((t=>t.pixelBlock)),u,{clipOffset:c,clipSize:p})}}function A(t,e,n,l,i,o){const{width:s,height:r}=n.block,{x:a,y:h}=n.offset,{width:f,height:c}=n.mosaic,u=k(s,r,l,i,a,h,f,c);let p=0,x=0;if(o){const t=o.hasGCSSShiftTransform?360:o.halfWorldWidth??0,e=s*o.resolutionX,n=o.startX+l*e;n<t&&n+e>t?x=o.rightPadding:n>=t&&(p=o.leftMargin-o.rightPadding,x=0)}if(u.xmax-=x,\"number\"!=typeof e)for(let d=u.ymin;d<u.ymax;d++){const n=(i*r+d-h)*f+(l*s-a)+p,o=d*s;for(let l=u.xmin;l<u.xmax;l++)t[n+l]=e[o+l]}else for(let d=u.ymin;d<u.ymax;d++){const n=(i*r+d-h)*f+(l*s-a)+p;for(let l=u.xmin;l<u.xmax;l++)t[n+l]=e}}function U(e,n,l={}){const{clipOffset:i,clipSize:s,alignmentInfo:r,blockWidths:a}=l;if(a)return b(e,n,{blockWidths:a});const h=e.find((t=>o(t)));if(null==h)return null;const f=s?s.width:n.width,c=s?s.height:n.height,u=h.width,p=h.height,x=n.width/u,d=n.height/p,m={offset:i||{x:0,y:0},mosaic:s||n,block:{width:u,height:p}},g=h.pixelType,y=t.getPixelArrayConstructor(g),w=h.pixels.length,k=[];let M,U;for(let t=0;t<w;t++){U=new y(f*c);for(let n=0;n<d;n++)for(let l=0;l<x;l++){const i=e[n*x+l];o(i)&&(M=i.pixels[t],A(U,M,m,l,n,r))}k.push(U)}const T=e.some((t=>null==t||null!=t.mask&&t.mask.length>0)),v=e.some((t=>t?.bandMasks&&t.bandMasks.length>1)),B=T?new Uint8Array(f*c):void 0,C=v?[]:void 0;if(B){for(let t=0;t<d;t++)for(let n=0;n<x;n++){const l=e[t*x+n],i=null!=l?l.mask:null;A(B,null!=i?i:l?255:0,m,n,t,r)}if(C)for(let t=0;t<w;t++){const n=new Uint8Array(f*c);for(let l=0;l<d;l++)for(let i=0;i<x;i++){const o=e[l*x+i],s=o?.bandMasks?.[t]??o?.mask;A(n,null!=s?s:o?255:0,m,i,l,r)}C.push(n)}}const S=new t({width:f,height:c,pixels:k,pixelType:g,bandMasks:C,mask:B});return S.updateStatistics(),S}function b(e,n,l){const i=e.find((t=>null!=t));if(null==i)return null;const s=e.some((t=>null==t||!!t.mask)),{width:r,height:a}=n,h=s?new Uint8Array(r*a):null,{blockWidths:f}=l,c=[],u=i.getPlaneCount(),p=t.getPixelArrayConstructor(i.pixelType);if(s)for(let t=0,y=0;t<e.length;y+=f[t],t++){const n=e[t];if(!o(n))continue;const l=n.mask;for(let e=0;e<a;e++)for(let i=0;i<f[t];i++)h[e*r+i+y]=null==l?255:l[e*n.width+i]}const x=e.some((t=>t?.bandMasks&&t.bandMasks.length>1)),d=x?[]:void 0,m=r*a;for(let t=0;t<u;t++){const n=new p(m),l=x?new Uint8Array(m):void 0;for(let i=0,s=0;i<e.length;s+=f[i],i++){const h=e[i];if(!o(h))continue;const c=h.pixels[t];if(null!=c){for(let t=0;t<a;t++)for(let e=0;e<f[i];e++)n[t*r+e+s]=c[t*h.width+e];if(l){const e=h.bandMasks?.[t]??h.mask;for(let t=0;t<a;t++)for(let n=0;n<f[i];n++)l[t*r+n+s]=e?e[t*h.width+n]:255}}}c.push(n),d&&l&&d.push(l)}const g=new t({width:r,height:a,mask:h,bandMasks:d,pixels:c,pixelType:i.pixelType});return g.updateStatistics(),g}function T(t,e,n){if(!o(t))return null;const{width:l,height:i}=t,s=e.x,r=e.y,a=n.width+s,h=n.height+r;if(s<0||r<0||a>l||h>i)return t;if(0===s&&0===r&&a===l&&h===i)return t;t.mask||(t.mask=new Uint8Array(l*i));const f=t.mask;for(let o=0;o<i;o++){const t=o*l;for(let e=0;e<l;e++)f[t+e]=o<r||o>=h||e<s||e>=a?0:1}return t.updateStatistics(),t}function v(t){if(!o(t))return null;const e=t.clone(),{width:n,height:l,pixels:i}=t,s=i[0],r=e.pixels[0],a=t.mask;for(let o=2;o<l-1;o++){const t=new Map;for(let l=o-2;l<o+2;l++)for(let e=0;e<4;e++){const i=l*n+e;S(t,s[i],a?a[i]:1)}r[o*n]=B(t),r[o*n+1]=r[o*n+2]=r[o*n];let e=3;for(;e<n-1;e++){let l=(o-2)*n+e+1;S(t,s[l],a?a[l]:1),l=(o-1)*n+e+1,S(t,s[l],a?a[l]:1),l=o*n+e+1,S(t,s[l],a?a[l]:1),l=(o+1)*n+e+1,S(t,s[l],a?a[l]:1),l=(o-2)*n+e-3,C(t,s[l],a?a[l]:1),l=(o-1)*n+e-3,C(t,s[l],a?a[l]:1),l=o*n+e-3,C(t,s[l],a?a[l]:1),l=(o+1)*n+e-3,C(t,s[l],a?a[l]:1),r[o*n+e]=B(t)}r[o*n+e+1]=r[o*n+e]}for(let o=0;o<n;o++)r[o]=r[n+o]=r[2*n+o],r[(l-1)*n+o]=r[(l-2)*n+o];return e.updateStatistics(),e}function B(t){if(0===t.size)return 0;let e=0,n=-1,l=0;const i=t.keys();let o=i.next();for(;!o.done;)l=t.get(o.value),l>e&&(n=o.value,e=l),o=i.next();return n}function C(t,e,n){if(0===n)return;const l=t.get(e);1===l?t.delete(e):t.set(e,l-1)}function S(t,e,n){0!==n&&t.set(e,t.has(e)?t.get(e)+1:1)}function P(e,n,l){let{x:i,y:s}=n;const{width:r,height:a}=l;if(0===i&&0===s&&a===e.height&&r===e.width)return e;const{width:h,height:f}=e,c=Math.max(0,s),u=Math.max(0,i),p=Math.min(i+r,h),x=Math.min(s+a,f);if(p<0||x<0||!o(e))return null;i=Math.max(0,-i),s=Math.max(0,-s);const{pixels:d}=e,m=r*a,g=d.length,y=[];for(let o=0;o<g;o++){const n=d[o],l=t.createEmptyBand(e.pixelType,m);for(let t=c;t<x;t++){const e=t*h;let o=(t+s-c)*r+i;for(let t=u;t<p;t++)l[o++]=n[e+t]}y.push(l)}const w=new Uint8Array(m),k=e.mask;for(let t=c;t<x;t++){const e=t*h;let n=(t+s-c)*r+i;for(let t=u;t<p;t++)w[n++]=k?k[e+t]:1}const M=new t({width:l.width,height:l.height,pixelType:e.pixelType,pixels:y,mask:w});return M.updateStatistics(),M}function _(e,n=!0){if(!o(e))return null;const{pixels:l,width:i,height:s,mask:r,pixelType:a}=e,h=[],f=Math.round(i/2),c=Math.round(s/2),u=s-1,p=i-1;for(let o=0;o<l.length;o++){const e=l[o],r=t.createEmptyBand(a,f*c);let x=0;for(let t=0;t<s;t+=2)for(let l=0;l<i;l+=2){const o=e[t*i+l];if(n){const n=l===p?o:e[t*i+l+1],s=t===u?o:e[t*i+l+i],a=l===p?s:t===u?n:e[t*i+l+i+1];r[x++]=(o+n+s+a)/4}else r[x++]=o}h.push(r)}let x=null;if(null!=r){x=new Uint8Array(f*c);let t=0;for(let e=0;e<s;e+=2)for(let l=0;l<i;l+=2){const o=r[e*i+l];if(n){const n=l===p?o:r[e*i+l+1],s=e===u?o:r[e*i+l+i],a=l===p?s:e===u?n:r[e*i+l+i+1];x[t++]=o*n*s*a?1:0}else x[t++]=o}}return new t({width:f,height:c,pixelType:a,pixels:h,mask:x})}function W(t,e,n=0,l=!0){if(!o(t))return null;const{width:i,height:s}=e;let{width:r,height:a}=t;const h=new Map,f={x:0,y:0},c=1+n;let u=t;for(let o=0;o<c;o++){const t=Math.ceil(r/i),n=Math.ceil(a/s);for(let l=0;l<n;l++){f.y=l*s;for(let n=0;n<t;n++){f.x=n*i;const t=P(u,f,e);h.set(`${o}/${l}/${n}`,t)}}o<c-1&&(u=_(u,l)),r=Math.round(r/2),a=Math.round(a/2)}return h}function E(t){const{pixelBlock:e,tileSize:n,level:l,row:i,col:s,useBilinear:r}=t;if(!o(e))return null;const{width:a,height:h}=n,f=2**l,c=f*a,u=f*h;let p=P(e,{y:i*u,x:s*c},{width:c,height:u});if(!p)return null;for(let o=l;o>0;o--)p=_(p,r);return p}function I(t,e,n,l,i=0){const{width:o,height:s}=t,{width:r,height:a}=e,h=l.cols,f=l.rows,c=Math.ceil(r/h-.1/h),u=Math.ceil(a/f-.1/f);let p,x,d,m,g,y,w;const k=c*h,M=k*u*f,A=new Float32Array(M),U=new Float32Array(M),b=new Uint32Array(M),T=new Uint32Array(M);let v,B,C=0;for(let S=0;S<u;S++)for(let t=0;t<c;t++){p=12*(S*c+t),x=n[p],d=n[p+1],m=n[p+2],g=n[p+3],y=n[p+4],w=n[p+5];for(let e=0;e<f;e++){C=(S*f+e)*k+t*h,B=(e+.5)/f;for(let t=0;t<e;t++)v=(t+.5)/h,A[C+t]=(x*v+d*B+m)*o+i,U[C+t]=(g*v+y*B+w)*s+i,b[C+t]=Math.floor(A[C+t]),T[C+t]=Math.floor(U[C+t])}p+=6,x=n[p],d=n[p+1],m=n[p+2],g=n[p+3],y=n[p+4],w=n[p+5];for(let e=0;e<f;e++){C=(S*f+e)*k+t*h,B=(e+.5)/f;for(let t=e;t<h;t++)v=(t+.5)/h,A[C+t]=(x*v+d*B+m)*o+i,U[C+t]=(g*v+y*B+w)*s+i,b[C+t]=Math.floor(A[C+t]),T[C+t]=Math.floor(U[C+t])}}return{offsets_x:A,offsets_y:U,offsets_xi:b,offsets_yi:T,gridWidth:k}}function R(t,e){const{coefficients:n,spacing:l}=e,{offsets_x:i,offsets_y:o,gridWidth:s}=I(t,t,n,{rows:l[0],cols:l[1]}),{width:r,height:a}=t,h=new Float32Array(r*a),f=180/Math.PI;for(let c=0;c<a;c++)for(let t=0;t<r;t++){const e=c*s+t,n=0===c?e:e-s,l=c===a-1?e:e+s,u=i[n]-i[l],p=o[l]-o[n];if(isNaN(u)||isNaN(p))h[c*r+t]=90;else{let e=Math.atan2(p,u)*f;e=(360+e)%360,h[c*r+t]=e}}return h}function D(e,n,l,i,s=\"nearest\"){if(!o(e))return null;\"majority\"===s&&(e=v(e));const{pixels:r,mask:a,bandMasks:h,pixelType:f}=e,c=e.width,u=e.height,p=t.getPixelArrayConstructor(f),x=r.length,{width:d,height:m}=n;let g=!1;for(let t=0;t<l.length;t+=3)-1===l[t]&&-1===l[t+1]&&-1===l[t+2]&&(g=!0);const{offsets_x:y,offsets_y:w,offsets_xi:k,offsets_yi:M,gridWidth:A}=I({width:c,height:u},n,l,i,\"majority\"===s?.5:0);let U;const b=(t,e,n,l)=>{const i=t instanceof Float32Array||t instanceof Float64Array?0:.5;for(let o=0;o<m;o++){U=o*A;for(let s=0;s<d;s++){if(y[U]<0||w[U]<0)t[o*d+s]=0;else if(l)t[o*d+s]=e[k[U]+M[U]*c];else{const l=Math.floor(y[U]),r=Math.floor(w[U]),a=Math.ceil(y[U]),h=Math.ceil(w[U]),f=y[U]-l,u=w[U]-r;if(!n||n[l+r*c]&&n[a+r*c]&&n[l+h*c]&&n[a+h*c]){const n=(1-f)*e[l+r*c]+f*e[a+r*c],p=(1-f)*e[l+h*c]+f*e[a+h*c];t[o*d+s]=(1-u)*n+u*p+i}else t[o*d+s]=e[k[U]+M[U]*c]}U++}}},T=[];let B;const C=h?.length===x,S=[];for(let t=0;t<x;t++){if(C){const e=new Uint8Array(d*m);b(e,h[t],h[t],!0),S.push(e)}B=new p(d*m),b(B,r[t],C?h[t]:a,\"nearest\"===s||\"majority\"===s),T.push(B)}const P=new t({width:d,height:m,pixelType:f,pixels:T,bandMasks:C?S:void 0});if(null!=a)P.mask=new Uint8Array(d*m),b(P.mask,a,a,!0);else if(g){P.mask=new Uint8Array(d*m);for(let t=0;t<d*m;t++)P.mask[t]=y[t]<0||w[t]<0?0:1}return P.updateStatistics(),P}export{l as MissingBandAction,n as NoDataInterpretation,D as approximateTransform,P as clip,E as clipTile,h as colorize,r as compositeBands,a as createColormapLUT,w as createMaskLUT,y as createRemapLUT,s as extractBands,k as getClipBounds,R as getLocalArithmeticNorthRotations,I as interpolateOffsets,o as isValidPixelBlock,c as lookupBandValues,f as lookupPixels,g as mask,i as maxMapSizeGpu,U as mosaic,M as mosaicPixelData,p as remap,u as remapColor,v as resampleByMajority,T as setValidBoundary,W as split};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}