{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../chunks/tslib.es6.js\";\nimport t from \"../../../core/Error.js\";\nimport { property as r } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/has.js\";\nimport \"../../../core/Logger.js\";\nimport \"../../../core/RandomLCG.js\";\nimport { subclass as s } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport a from \"./BaseRaster.js\";\nimport { isXAxis as o, isYAxis as i, parseGridCoverage as n } from \"./covJSONParser.js\";\nimport c from \"./InMemoryRaster.js\";\nimport { computeStatisticsHistograms as l } from \"../rasterFunctions/stretchUtils.js\";\nimport p from \"../../../rest/support/FeatureSet.js\";\nlet m = class extends a {\n  constructor() {\n    super(...arguments), this.datasetFormat = \"CovJSON\";\n  }\n  fetchRawTile(e, t, r, s = {}) {\n    return this._inMemoryRaster.fetchRawTile(e, t, r, s);\n  }\n  async _open(e) {\n    const {\n        extent: t,\n        pixelBlocks: r,\n        multidimensionalInfo: s,\n        attributeTable: a,\n        bandNames: o\n      } = await this._fetchData(e),\n      {\n        statistics: i,\n        histograms: n\n      } = l(r[0]),\n      m = o?.map(e => ({\n        BandName: e\n      })),\n      h = {\n        DataType: a ? \"Thematic\" : s ? \"Scientific\" : \"Generic\",\n        BandProperties: m\n      },\n      d = new c({\n        source: {\n          extent: t,\n          pixelBlocks: r,\n          attributeTable: a ? p.fromJSON(a) : null,\n          multidimensionalInfo: s,\n          statistics: i,\n          histograms: n,\n          keyProperties: h,\n          isPseudoSpatialReference: !1\n        }\n      });\n    await d.open(), this._inMemoryRaster = d;\n    const u = this.source ? \"\" : this.url.slice(this.url.lastIndexOf(\"/\") + 1);\n    this._set(\"datasetName\", u.slice(0, u.indexOf(\".\"))), this._set(\"rasterInfo\", d.rasterInfo);\n  }\n  async _fetchData(e) {\n    const r = this.source ?? (await this.request(this.url, {\n        signal: e?.signal\n      })).data,\n      s = \"imagery-tile-layer:open-coverage-json\";\n    if (\"coverage\" !== r.type?.toLowerCase() || \"grid\" !== r.domain?.domainType?.toLowerCase()) throw new t(s, \"Only coverage with Grid domain type is supported\");\n    if (!r.ranges) throw new t(s, \"Missing ranges in the grid coverage data\");\n    if (!r.domain.referencing?.length) throw new t(s, \"Missing domain referencing in the grid coverage data\");\n    const a = Object.values(r.ranges);\n    for (let n = 0; n < a.length; n++) {\n      const {\n        axisNames: e,\n        shape: r,\n        type: c,\n        values: l\n      } = a[n];\n      if (!(\"ndarray\" === c.toLowerCase() && l?.length && e?.length && r?.length)) throw new t(s, \"Only ranges with valid NdArray, axisNames, shape, and inline values are supported\");\n      if (!(o(e[e.length - 1]) && i(e[e.length - 2]))) throw new t(s, \"Only row-major ordered pixel values are supported. X axis must be the last axis.\");\n    }\n    return n(r);\n  }\n};\ne([r({\n  type: String,\n  json: {\n    write: !0\n  }\n})], m.prototype, \"datasetFormat\", void 0), e([r({\n  constructOnly: !0\n})], m.prototype, \"source\", void 0), m = e([s(\"esri.layers.support.rasterDatasets.CovJSONRaster\")], m);\nconst h = m;\nexport { h as default };","map":{"version":3,"names":["_","e","t","property","r","subclass","s","a","isXAxis","o","isYAxis","i","parseGridCoverage","n","c","computeStatisticsHistograms","l","p","m","constructor","arguments","datasetFormat","fetchRawTile","_inMemoryRaster","_open","extent","pixelBlocks","multidimensionalInfo","attributeTable","bandNames","_fetchData","statistics","histograms","map","BandName","h","DataType","BandProperties","d","source","fromJSON","keyProperties","isPseudoSpatialReference","open","u","url","slice","lastIndexOf","_set","indexOf","rasterInfo","request","signal","data","type","toLowerCase","domain","domainType","ranges","referencing","length","Object","values","axisNames","shape","String","json","write","prototype","constructOnly","default"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/layers/support/rasterDatasets/CovJSONRaster.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../chunks/tslib.es6.js\";import t from\"../../../core/Error.js\";import{property as r}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/has.js\";import\"../../../core/Logger.js\";import\"../../../core/RandomLCG.js\";import{subclass as s}from\"../../../core/accessorSupport/decorators/subclass.js\";import a from\"./BaseRaster.js\";import{isXAxis as o,isYAxis as i,parseGridCoverage as n}from\"./covJSONParser.js\";import c from\"./InMemoryRaster.js\";import{computeStatisticsHistograms as l}from\"../rasterFunctions/stretchUtils.js\";import p from\"../../../rest/support/FeatureSet.js\";let m=class extends a{constructor(){super(...arguments),this.datasetFormat=\"CovJSON\"}fetchRawTile(e,t,r,s={}){return this._inMemoryRaster.fetchRawTile(e,t,r,s)}async _open(e){const{extent:t,pixelBlocks:r,multidimensionalInfo:s,attributeTable:a,bandNames:o}=await this._fetchData(e),{statistics:i,histograms:n}=l(r[0]),m=o?.map((e=>({BandName:e}))),h={DataType:a?\"Thematic\":s?\"Scientific\":\"Generic\",BandProperties:m},d=new c({source:{extent:t,pixelBlocks:r,attributeTable:a?p.fromJSON(a):null,multidimensionalInfo:s,statistics:i,histograms:n,keyProperties:h,isPseudoSpatialReference:!1}});await d.open(),this._inMemoryRaster=d;const u=this.source?\"\":this.url.slice(this.url.lastIndexOf(\"/\")+1);this._set(\"datasetName\",u.slice(0,u.indexOf(\".\"))),this._set(\"rasterInfo\",d.rasterInfo)}async _fetchData(e){const r=this.source??(await this.request(this.url,{signal:e?.signal})).data,s=\"imagery-tile-layer:open-coverage-json\";if(\"coverage\"!==r.type?.toLowerCase()||\"grid\"!==r.domain?.domainType?.toLowerCase())throw new t(s,\"Only coverage with Grid domain type is supported\");if(!r.ranges)throw new t(s,\"Missing ranges in the grid coverage data\");if(!r.domain.referencing?.length)throw new t(s,\"Missing domain referencing in the grid coverage data\");const a=Object.values(r.ranges);for(let n=0;n<a.length;n++){const{axisNames:e,shape:r,type:c,values:l}=a[n];if(!(\"ndarray\"===c.toLowerCase()&&l?.length&&e?.length&&r?.length))throw new t(s,\"Only ranges with valid NdArray, axisNames, shape, and inline values are supported\");if(!(o(e[e.length-1])&&i(e[e.length-2])))throw new t(s,\"Only row-major ordered pixel values are supported. X axis must be the last axis.\")}return n(r)}};e([r({type:String,json:{write:!0}})],m.prototype,\"datasetFormat\",void 0),e([r({constructOnly:!0})],m.prototype,\"source\",void 0),m=e([s(\"esri.layers.support.rasterDatasets.CovJSONRaster\")],m);const h=m;export{h as default};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,CAAC,IAAIC,CAAC,QAAK,8BAA8B;AAAC,OAAOC,CAAC,MAAK,wBAAwB;AAAC,SAAOC,QAAQ,IAAIC,CAAC,QAAK,sDAAsD;AAAC,OAAM,sBAAsB;AAAC,OAAM,yBAAyB;AAAC,OAAM,4BAA4B;AAAC,SAAOC,QAAQ,IAAIC,CAAC,QAAK,sDAAsD;AAAC,OAAOC,CAAC,MAAK,iBAAiB;AAAC,SAAOC,OAAO,IAAIC,CAAC,EAACC,OAAO,IAAIC,CAAC,EAACC,iBAAiB,IAAIC,CAAC,QAAK,oBAAoB;AAAC,OAAOC,CAAC,MAAK,qBAAqB;AAAC,SAAOC,2BAA2B,IAAIC,CAAC,QAAK,oCAAoC;AAAC,OAAOC,CAAC,MAAK,qCAAqC;AAAC,IAAIC,CAAC,GAAC,cAAcX,CAAC;EAACY,WAAWA,CAAA,EAAE;IAAC,KAAK,CAAC,GAAGC,SAAS,CAAC,EAAC,IAAI,CAACC,aAAa,GAAC,SAAS;EAAA;EAACC,YAAYA,CAACrB,CAAC,EAACC,CAAC,EAACE,CAAC,EAACE,CAAC,GAAC,CAAC,CAAC,EAAC;IAAC,OAAO,IAAI,CAACiB,eAAe,CAACD,YAAY,CAACrB,CAAC,EAACC,CAAC,EAACE,CAAC,EAACE,CAAC,CAAC;EAAA;EAAC,MAAMkB,KAAKA,CAACvB,CAAC,EAAC;IAAC,MAAK;QAACwB,MAAM,EAACvB,CAAC;QAACwB,WAAW,EAACtB,CAAC;QAACuB,oBAAoB,EAACrB,CAAC;QAACsB,cAAc,EAACrB,CAAC;QAACsB,SAAS,EAACpB;MAAC,CAAC,GAAC,MAAM,IAAI,CAACqB,UAAU,CAAC7B,CAAC,CAAC;MAAC;QAAC8B,UAAU,EAACpB,CAAC;QAACqB,UAAU,EAACnB;MAAC,CAAC,GAACG,CAAC,CAACZ,CAAC,CAAC,CAAC,CAAC,CAAC;MAACc,CAAC,GAACT,CAAC,EAAEwB,GAAG,CAAEhC,CAAC,KAAG;QAACiC,QAAQ,EAACjC;MAAC,CAAC,CAAE,CAAC;MAACkC,CAAC,GAAC;QAACC,QAAQ,EAAC7B,CAAC,GAAC,UAAU,GAACD,CAAC,GAAC,YAAY,GAAC,SAAS;QAAC+B,cAAc,EAACnB;MAAC,CAAC;MAACoB,CAAC,GAAC,IAAIxB,CAAC,CAAC;QAACyB,MAAM,EAAC;UAACd,MAAM,EAACvB,CAAC;UAACwB,WAAW,EAACtB,CAAC;UAACwB,cAAc,EAACrB,CAAC,GAACU,CAAC,CAACuB,QAAQ,CAACjC,CAAC,CAAC,GAAC,IAAI;UAACoB,oBAAoB,EAACrB,CAAC;UAACyB,UAAU,EAACpB,CAAC;UAACqB,UAAU,EAACnB,CAAC;UAAC4B,aAAa,EAACN,CAAC;UAACO,wBAAwB,EAAC,CAAC;QAAC;MAAC,CAAC,CAAC;IAAC,MAAMJ,CAAC,CAACK,IAAI,CAAC,CAAC,EAAC,IAAI,CAACpB,eAAe,GAACe,CAAC;IAAC,MAAMM,CAAC,GAAC,IAAI,CAACL,MAAM,GAAC,EAAE,GAAC,IAAI,CAACM,GAAG,CAACC,KAAK,CAAC,IAAI,CAACD,GAAG,CAACE,WAAW,CAAC,GAAG,CAAC,GAAC,CAAC,CAAC;IAAC,IAAI,CAACC,IAAI,CAAC,aAAa,EAACJ,CAAC,CAACE,KAAK,CAAC,CAAC,EAACF,CAAC,CAACK,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAC,IAAI,CAACD,IAAI,CAAC,YAAY,EAACV,CAAC,CAACY,UAAU,CAAC;EAAA;EAAC,MAAMpB,UAAUA,CAAC7B,CAAC,EAAC;IAAC,MAAMG,CAAC,GAAC,IAAI,CAACmC,MAAM,IAAE,CAAC,MAAM,IAAI,CAACY,OAAO,CAAC,IAAI,CAACN,GAAG,EAAC;QAACO,MAAM,EAACnD,CAAC,EAAEmD;MAAM,CAAC,CAAC,EAAEC,IAAI;MAAC/C,CAAC,GAAC,uCAAuC;IAAC,IAAG,UAAU,KAAGF,CAAC,CAACkD,IAAI,EAAEC,WAAW,CAAC,CAAC,IAAE,MAAM,KAAGnD,CAAC,CAACoD,MAAM,EAAEC,UAAU,EAAEF,WAAW,CAAC,CAAC,EAAC,MAAM,IAAIrD,CAAC,CAACI,CAAC,EAAC,kDAAkD,CAAC;IAAC,IAAG,CAACF,CAAC,CAACsD,MAAM,EAAC,MAAM,IAAIxD,CAAC,CAACI,CAAC,EAAC,0CAA0C,CAAC;IAAC,IAAG,CAACF,CAAC,CAACoD,MAAM,CAACG,WAAW,EAAEC,MAAM,EAAC,MAAM,IAAI1D,CAAC,CAACI,CAAC,EAAC,sDAAsD,CAAC;IAAC,MAAMC,CAAC,GAACsD,MAAM,CAACC,MAAM,CAAC1D,CAAC,CAACsD,MAAM,CAAC;IAAC,KAAI,IAAI7C,CAAC,GAAC,CAAC,EAACA,CAAC,GAACN,CAAC,CAACqD,MAAM,EAAC/C,CAAC,EAAE,EAAC;MAAC,MAAK;QAACkD,SAAS,EAAC9D,CAAC;QAAC+D,KAAK,EAAC5D,CAAC;QAACkD,IAAI,EAACxC,CAAC;QAACgD,MAAM,EAAC9C;MAAC,CAAC,GAACT,CAAC,CAACM,CAAC,CAAC;MAAC,IAAG,EAAE,SAAS,KAAGC,CAAC,CAACyC,WAAW,CAAC,CAAC,IAAEvC,CAAC,EAAE4C,MAAM,IAAE3D,CAAC,EAAE2D,MAAM,IAAExD,CAAC,EAAEwD,MAAM,CAAC,EAAC,MAAM,IAAI1D,CAAC,CAACI,CAAC,EAAC,mFAAmF,CAAC;MAAC,IAAG,EAAEG,CAAC,CAACR,CAAC,CAACA,CAAC,CAAC2D,MAAM,GAAC,CAAC,CAAC,CAAC,IAAEjD,CAAC,CAACV,CAAC,CAACA,CAAC,CAAC2D,MAAM,GAAC,CAAC,CAAC,CAAC,CAAC,EAAC,MAAM,IAAI1D,CAAC,CAACI,CAAC,EAAC,kFAAkF,CAAC;IAAA;IAAC,OAAOO,CAAC,CAACT,CAAC,CAAC;EAAA;AAAC,CAAC;AAACH,CAAC,CAAC,CAACG,CAAC,CAAC;EAACkD,IAAI,EAACW,MAAM;EAACC,IAAI,EAAC;IAACC,KAAK,EAAC,CAAC;EAAC;AAAC,CAAC,CAAC,CAAC,EAACjD,CAAC,CAACkD,SAAS,EAAC,eAAe,EAAC,KAAK,CAAC,CAAC,EAACnE,CAAC,CAAC,CAACG,CAAC,CAAC;EAACiE,aAAa,EAAC,CAAC;AAAC,CAAC,CAAC,CAAC,EAACnD,CAAC,CAACkD,SAAS,EAAC,QAAQ,EAAC,KAAK,CAAC,CAAC,EAAClD,CAAC,GAACjB,CAAC,CAAC,CAACK,CAAC,CAAC,kDAAkD,CAAC,CAAC,EAACY,CAAC,CAAC;AAAC,MAAMiB,CAAC,GAACjB,CAAC;AAAC,SAAOiB,CAAC,IAAImC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}