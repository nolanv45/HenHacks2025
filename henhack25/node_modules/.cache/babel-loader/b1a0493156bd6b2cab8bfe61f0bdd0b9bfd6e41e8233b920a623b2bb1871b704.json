{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport t from \"../PixelBlock.js\";\nimport { getPixelValueRange as e } from \"../rasterFormats/pixelRangeUtils.js\";\nfunction i(i, s, a) {\n  const {\n      pixels: l,\n      width: n,\n      height: r,\n      mask: o,\n      bandMasks: h\n    } = i,\n    p = n * r,\n    m = h?.length ? t.combineBandMasks(h) : o,\n    f = Math.min(s.length, l.length),\n    c = a.startsWith(\"f\"),\n    d = !c && a !== i.pixelType,\n    [x, g] = e(a),\n    k = t.createEmptyBand(a, p);\n  for (let t = 0; t < r; t++) {\n    let e = t * n;\n    for (let t = 0; t < n; t++, e++) if (!m || m[e]) {\n      let t = 0;\n      for (let i = 0; i < f; i++) t += s[i] * l[i][e];\n      c || (t = Math.round(t), d && (t = t > g ? g : t < x ? x : t)), k[e] = t;\n    }\n  }\n  const u = new t({\n    width: n,\n    height: r,\n    pixels: [k],\n    pixelType: a,\n    mask: m\n  });\n  return u.updateStatistics(), u;\n}\nexport { i as grayscale };","map":{"version":3,"names":["t","getPixelValueRange","e","i","s","a","pixels","l","width","n","height","r","mask","o","bandMasks","h","p","m","length","combineBandMasks","f","Math","min","c","startsWith","d","pixelType","x","g","k","createEmptyBand","round","u","updateStatistics","grayscale"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/layers/support/rasterFunctions/conversionUtils.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport t from\"../PixelBlock.js\";import{getPixelValueRange as e}from\"../rasterFormats/pixelRangeUtils.js\";function i(i,s,a){const{pixels:l,width:n,height:r,mask:o,bandMasks:h}=i,p=n*r,m=h?.length?t.combineBandMasks(h):o,f=Math.min(s.length,l.length),c=a.startsWith(\"f\"),d=!c&&a!==i.pixelType,[x,g]=e(a),k=t.createEmptyBand(a,p);for(let t=0;t<r;t++){let e=t*n;for(let t=0;t<n;t++,e++)if(!m||m[e]){let t=0;for(let i=0;i<f;i++)t+=s[i]*l[i][e];c||(t=Math.round(t),d&&(t=t>g?g:t<x?x:t)),k[e]=t}}const u=new t({width:n,height:r,pixels:[k],pixelType:a,mask:m});return u.updateStatistics(),u}export{i as grayscale};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAOA,CAAC,MAAK,kBAAkB;AAAC,SAAOC,kBAAkB,IAAIC,CAAC,QAAK,qCAAqC;AAAC,SAASC,CAACA,CAACA,CAAC,EAACC,CAAC,EAACC,CAAC,EAAC;EAAC,MAAK;MAACC,MAAM,EAACC,CAAC;MAACC,KAAK,EAACC,CAAC;MAACC,MAAM,EAACC,CAAC;MAACC,IAAI,EAACC,CAAC;MAACC,SAAS,EAACC;IAAC,CAAC,GAACZ,CAAC;IAACa,CAAC,GAACP,CAAC,GAACE,CAAC;IAACM,CAAC,GAACF,CAAC,EAAEG,MAAM,GAAClB,CAAC,CAACmB,gBAAgB,CAACJ,CAAC,CAAC,GAACF,CAAC;IAACO,CAAC,GAACC,IAAI,CAACC,GAAG,CAAClB,CAAC,CAACc,MAAM,EAACX,CAAC,CAACW,MAAM,CAAC;IAACK,CAAC,GAAClB,CAAC,CAACmB,UAAU,CAAC,GAAG,CAAC;IAACC,CAAC,GAAC,CAACF,CAAC,IAAElB,CAAC,KAAGF,CAAC,CAACuB,SAAS;IAAC,CAACC,CAAC,EAACC,CAAC,CAAC,GAAC1B,CAAC,CAACG,CAAC,CAAC;IAACwB,CAAC,GAAC7B,CAAC,CAAC8B,eAAe,CAACzB,CAAC,EAACW,CAAC,CAAC;EAAC,KAAI,IAAIhB,CAAC,GAAC,CAAC,EAACA,CAAC,GAACW,CAAC,EAACX,CAAC,EAAE,EAAC;IAAC,IAAIE,CAAC,GAACF,CAAC,GAACS,CAAC;IAAC,KAAI,IAAIT,CAAC,GAAC,CAAC,EAACA,CAAC,GAACS,CAAC,EAACT,CAAC,EAAE,EAACE,CAAC,EAAE,EAAC,IAAG,CAACe,CAAC,IAAEA,CAAC,CAACf,CAAC,CAAC,EAAC;MAAC,IAAIF,CAAC,GAAC,CAAC;MAAC,KAAI,IAAIG,CAAC,GAAC,CAAC,EAACA,CAAC,GAACiB,CAAC,EAACjB,CAAC,EAAE,EAACH,CAAC,IAAEI,CAAC,CAACD,CAAC,CAAC,GAACI,CAAC,CAACJ,CAAC,CAAC,CAACD,CAAC,CAAC;MAACqB,CAAC,KAAGvB,CAAC,GAACqB,IAAI,CAACU,KAAK,CAAC/B,CAAC,CAAC,EAACyB,CAAC,KAAGzB,CAAC,GAACA,CAAC,GAAC4B,CAAC,GAACA,CAAC,GAAC5B,CAAC,GAAC2B,CAAC,GAACA,CAAC,GAAC3B,CAAC,CAAC,CAAC,EAAC6B,CAAC,CAAC3B,CAAC,CAAC,GAACF,CAAC;IAAA;EAAC;EAAC,MAAMgC,CAAC,GAAC,IAAIhC,CAAC,CAAC;IAACQ,KAAK,EAACC,CAAC;IAACC,MAAM,EAACC,CAAC;IAACL,MAAM,EAAC,CAACuB,CAAC,CAAC;IAACH,SAAS,EAACrB,CAAC;IAACO,IAAI,EAACK;EAAC,CAAC,CAAC;EAAC,OAAOe,CAAC,CAACC,gBAAgB,CAAC,CAAC,EAACD,CAAC;AAAA;AAAC,SAAO7B,CAAC,IAAI+B,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}