{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { getBasisEncoder as e } from \"../../../../libs/basisu/BasisUEncoder.js\";\nimport { TextureFormat as t } from \"../../../../libs/basisu/TextureFormat.js\";\nimport { getDXTEncoder as n } from \"../../../../libs/dxtEncoder/DXTEncoder.js\";\nimport { CompressedTextureFormat as r } from \"../../../webgl/enums.js\";\nlet s,\n  a,\n  l = null,\n  i = null;\nclass o {\n  constructor(e, t) {\n    this.internalFormat = e, this.compressedTexture = t;\n  }\n}\nasync function c(e) {\n  const t = m(e.data, e.flipped);\n  if (e.hasS3TC) {\n    i || (await f());\n    const n = new Uint8Array(t.length);\n    i?.encode(new Uint8Array(t), e.width, e.height, n);\n    const r = R(n, !0),\n      s = [n.buffer];\n    return {\n      result: new o(r?.internalFormat ?? null, r?.textureData ?? null),\n      transferList: s\n    };\n  }\n  if (e.hasETC) {\n    l || (await u());\n    const n = await h(t, e.width, e.height, e.hasMipmap),\n      r = n ? await d(n) : null,\n      s = r?.compressedTexture?.levels.map(e => e.buffer) || [];\n    return {\n      result: new o(r?.internalFormat ?? null, r?.compressedTexture ?? null),\n      transferList: s\n    };\n  }\n  return {\n    result: new o(null, null)\n  };\n}\nasync function u() {\n  l || (l = await (s ??= e()));\n}\nasync function f() {\n  i || (i = await (a ??= n()));\n}\nasync function h(e, t, n, r, s = 255, a = 0, i = !1, o = !1) {\n  if (!l) return null;\n  const c = new l.BasisEncoder();\n  c.setPerceptual(!o), c.setCheckForAlpha(!0), c.setForceAlpha(!1), c.setRenormalize(o), c.setMipGen(r), c.setMipSRGB(!o), c.setCreateKTX2File(!0), c.setKTX2SRGBTransferFunc(!o), c.setQualityLevel(s), c.setCompressionLevel(a);\n  const u = new Uint8Array(e.byteLength);\n  c.setSliceSourceImage(0, new Uint8Array(e), t, n, i);\n  const f = c.encode(u),\n    h = new Uint8Array(u.buffer, 0, f),\n    d = new l.KTX2File(new Uint8Array(h));\n  return d.isValid() ? (c.delete(), h) : (d.close(), d.delete(), c.delete(), null);\n}\nasync function d(e) {\n  if (!l) return new o(null, null);\n  const n = new l.KTX2File(new Uint8Array(e));\n  n.startTranscoding();\n  const [s, a] = n.getHasAlpha() ? [t.ETC2_RGBA, r.COMPRESSED_RGBA8_ETC2_EAC] : [t.ETC1_RGB, r.COMPRESSED_RGB8_ETC2],\n    i = n.getLevels(),\n    c = [];\n  for (let t = 0; t < i; t++) c.push(new Uint8Array(n.getImageTranscodedSizeInBytes(t, 0, 0, s))), n.transcodeImage(c[t], t, 0, 0, s, 0, -1, -1);\n  return n.close(), n.delete(), {\n    internalFormat: a,\n    compressedTexture: {\n      type: \"compressed\",\n      levels: c\n    }\n  };\n}\nfunction m(e, t = !1) {\n  const n = new OffscreenCanvas(e.width, e.height),\n    r = n.getContext(\"2d\");\n  t && r.scale(1, -1), r.drawImage(e, 0, t ? -e.height : 0);\n  return r.getImageData(0, 0, n.width, n.height).data;\n}\nconst w = 31,\n  T = 1,\n  p = 2,\n  C = 3,\n  E = 4,\n  y = 7,\n  A = 21,\n  g = 131072;\nfunction S(e) {\n  return e.charCodeAt(0) + (e.charCodeAt(1) << 8) + (e.charCodeAt(2) << 16) + (e.charCodeAt(3) << 24);\n}\nconst _ = S(\"DXT1\"),\n  b = S(\"DXT3\"),\n  D = S(\"DXT5\");\nfunction R(e, t) {\n  const n = new Int32Array(e.buffer, e.byteOffset, w);\n  let s, a;\n  switch (n[A]) {\n    case _:\n      s = 8, a = r.COMPRESSED_RGB_S3TC_DXT1_EXT;\n      break;\n    case b:\n      s = 16, a = r.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n      break;\n    case D:\n      s = 16, a = r.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n      break;\n    default:\n      return null;\n  }\n  let l = 1,\n    i = n[E],\n    o = n[C];\n  (3 & i || 3 & o) && (i = i + 3 & -4, o = o + 3 & -4);\n  const c = i,\n    u = o;\n  let f, h;\n  n[p] & g && !1 !== t && (l = Math.max(1, n[y]));\n  let d = e.byteOffset + n[T] + 4;\n  const m = [];\n  for (let r = 0; r < l; ++r) h = (i + 3 >> 2) * (o + 3 >> 2) * s, f = new Uint8Array(e.buffer, d, h), m.push(f), d += h, i = Math.max(1, i >> 1), o = Math.max(1, o >> 1);\n  return {\n    textureData: {\n      type: \"compressed\",\n      levels: m\n    },\n    internalFormat: a,\n    width: c,\n    height: u\n  };\n}\nexport { o as TextureCompressionWorkerOutput, c as compress, h as compressRGBADataToKTX2, d as createTextureDataKTX2, u as initializeBasisEncoder, f as initializeDXTEncoder };","map":{"version":3,"names":["getBasisEncoder","e","TextureFormat","t","getDXTEncoder","n","CompressedTextureFormat","r","s","a","l","i","o","constructor","internalFormat","compressedTexture","c","m","data","flipped","hasS3TC","f","Uint8Array","length","encode","width","height","R","buffer","result","textureData","transferList","hasETC","u","h","hasMipmap","d","levels","map","BasisEncoder","setPerceptual","setCheckForAlpha","setForceAlpha","setRenormalize","setMipGen","setMipSRGB","setCreateKTX2File","setKTX2SRGBTransferFunc","setQualityLevel","setCompressionLevel","byteLength","setSliceSourceImage","KTX2File","isValid","delete","close","startTranscoding","getHasAlpha","ETC2_RGBA","COMPRESSED_RGBA8_ETC2_EAC","ETC1_RGB","COMPRESSED_RGB8_ETC2","getLevels","push","getImageTranscodedSizeInBytes","transcodeImage","type","OffscreenCanvas","getContext","scale","drawImage","getImageData","w","T","p","C","E","y","A","g","S","charCodeAt","_","b","D","Int32Array","byteOffset","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","Math","max","TextureCompressionWorkerOutput","compress","compressRGBADataToKTX2","createTextureDataKTX2","initializeBasisEncoder","initializeDXTEncoder"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/3d/webgl-engine/lib/TextureCompressionWorker.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{getBasisEncoder as e}from\"../../../../libs/basisu/BasisUEncoder.js\";import{TextureFormat as t}from\"../../../../libs/basisu/TextureFormat.js\";import{getDXTEncoder as n}from\"../../../../libs/dxtEncoder/DXTEncoder.js\";import{CompressedTextureFormat as r}from\"../../../webgl/enums.js\";let s,a,l=null,i=null;class o{constructor(e,t){this.internalFormat=e,this.compressedTexture=t}}async function c(e){const t=m(e.data,e.flipped);if(e.hasS3TC){i||await f();const n=new Uint8Array(t.length);i?.encode(new Uint8Array(t),e.width,e.height,n);const r=R(n,!0),s=[n.buffer];return{result:new o(r?.internalFormat??null,r?.textureData??null),transferList:s}}if(e.hasETC){l||await u();const n=await h(t,e.width,e.height,e.hasMipmap),r=n?await d(n):null,s=r?.compressedTexture?.levels.map((e=>e.buffer))||[];return{result:new o(r?.internalFormat??null,r?.compressedTexture??null),transferList:s}}return{result:new o(null,null)}}async function u(){l||(l=await(s??=e()))}async function f(){i||(i=await(a??=n()))}async function h(e,t,n,r,s=255,a=0,i=!1,o=!1){if(!l)return null;const c=new l.BasisEncoder;c.setPerceptual(!o),c.setCheckForAlpha(!0),c.setForceAlpha(!1),c.setRenormalize(o),c.setMipGen(r),c.setMipSRGB(!o),c.setCreateKTX2File(!0),c.setKTX2SRGBTransferFunc(!o),c.setQualityLevel(s),c.setCompressionLevel(a);const u=new Uint8Array(e.byteLength);c.setSliceSourceImage(0,new Uint8Array(e),t,n,i);const f=c.encode(u),h=new Uint8Array(u.buffer,0,f),d=new l.KTX2File(new Uint8Array(h));return d.isValid()?(c.delete(),h):(d.close(),d.delete(),c.delete(),null)}async function d(e){if(!l)return new o(null,null);const n=new l.KTX2File(new Uint8Array(e));n.startTranscoding();const[s,a]=n.getHasAlpha()?[t.ETC2_RGBA,r.COMPRESSED_RGBA8_ETC2_EAC]:[t.ETC1_RGB,r.COMPRESSED_RGB8_ETC2],i=n.getLevels(),c=[];for(let t=0;t<i;t++)c.push(new Uint8Array(n.getImageTranscodedSizeInBytes(t,0,0,s))),n.transcodeImage(c[t],t,0,0,s,0,-1,-1);return n.close(),n.delete(),{internalFormat:a,compressedTexture:{type:\"compressed\",levels:c}}}function m(e,t=!1){const n=new OffscreenCanvas(e.width,e.height),r=n.getContext(\"2d\");t&&r.scale(1,-1),r.drawImage(e,0,t?-e.height:0);return r.getImageData(0,0,n.width,n.height).data}const w=31,T=1,p=2,C=3,E=4,y=7,A=21,g=131072;function S(e){return e.charCodeAt(0)+(e.charCodeAt(1)<<8)+(e.charCodeAt(2)<<16)+(e.charCodeAt(3)<<24)}const _=S(\"DXT1\"),b=S(\"DXT3\"),D=S(\"DXT5\");function R(e,t){const n=new Int32Array(e.buffer,e.byteOffset,w);let s,a;switch(n[A]){case _:s=8,a=r.COMPRESSED_RGB_S3TC_DXT1_EXT;break;case b:s=16,a=r.COMPRESSED_RGBA_S3TC_DXT3_EXT;break;case D:s=16,a=r.COMPRESSED_RGBA_S3TC_DXT5_EXT;break;default:return null}let l=1,i=n[E],o=n[C];(3&i||3&o)&&(i=i+3&-4,o=o+3&-4);const c=i,u=o;let f,h;n[p]&g&&!1!==t&&(l=Math.max(1,n[y]));let d=e.byteOffset+n[T]+4;const m=[];for(let r=0;r<l;++r)h=(i+3>>2)*(o+3>>2)*s,f=new Uint8Array(e.buffer,d,h),m.push(f),d+=h,i=Math.max(1,i>>1),o=Math.max(1,o>>1);return{textureData:{type:\"compressed\",levels:m},internalFormat:a,width:c,height:u}}export{o as TextureCompressionWorkerOutput,c as compress,h as compressRGBADataToKTX2,d as createTextureDataKTX2,u as initializeBasisEncoder,f as initializeDXTEncoder};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}