{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../chunks/tslib.es6.js\";\nimport { isSome as t } from \"../../../core/arrayUtils.js\";\nimport r from \"../../../core/Error.js\";\nimport i from \"../../../core/Logger.js\";\nimport { property as s } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/has.js\";\nimport { subclass as a } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport n from \"../../../geometry/Extent.js\";\nimport o from \"../../../geometry/Point.js\";\nimport f from \"../../../geometry/SpatialReference.js\";\nimport l from \"../RasterInfo.js\";\nimport u from \"../RasterStorageInfo.js\";\nimport p from \"./BaseRaster.js\";\nimport c from \"./DBFParser.js\";\nimport { parsePAMInfo as h, parseSpatialReference as m } from \"./pamParser.js\";\nimport { parseSignature as d, getPyramidIFDs as y, getMaskIFDs as g, parseIFD as x, parseFieldValues as T, isBSQConfig as I, getImageInfo as w } from \"../rasterFormats/TiffDecoder.js\";\nimport R from \"../rasterFormats/TiffTags.js\";\nimport { estimateStatisticsFromHistograms as b } from \"../rasterFunctions/stretchUtils.js\";\nimport E from \"../rasterTransforms/PolynomialTransform.js\";\nimport S from \"../../../rest/support/FeatureSet.js\";\nconst _ = (e, t) => e.get(t)?.values,\n  F = (e, t) => e.get(t)?.values?.[0];\nlet v = class extends p {\n  constructor() {\n    super(...arguments), this._files = null, this._headerInfo = null, this._bufferSize = 1048576, this.datasetFormat = \"TIFF\";\n  }\n  async fetchRawTile(e, t, r) {\n    let i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    if (!this._headerInfo?.isSupported || this.isBlockOutside(e, t, r)) return null;\n    const s = await this._fetchRawTiffTile(e, t, r, !1, i);\n    if (null != s && this._headerInfo.hasMaskBand) {\n      const a = await this._fetchRawTiffTile(e, t, r, !0, i);\n      null != a && a.pixels[0] instanceof Uint8Array && (s.mask = a.pixels[0]);\n    }\n    return s;\n  }\n  async _open(e) {\n    const t = e ? e.signal : null,\n      {\n        data: s\n      } = await this.request(this.url, {\n        range: {\n          from: 0,\n          to: this._bufferSize\n        },\n        responseType: \"array-buffer\",\n        signal: t\n      });\n    if (!s) throw new r(\"tiffraster:open\", \"failed to open url \" + this.url);\n    this.datasetName = this.url.slice(this.url.lastIndexOf(\"/\") + 1, this.url.lastIndexOf(\".\"));\n    const {\n        littleEndian: a,\n        firstIFDPos: n,\n        isBigTiff: o\n      } = d(s),\n      f = [];\n    await this._readIFDs(f, s, a, n, 0, o ? 8 : 4, t);\n    const {\n        imageInfo: l,\n        rasterInfo: u\n      } = k(f),\n      p = y(f),\n      c = g(f);\n    if (this._headerInfo = {\n      littleEndian: a,\n      isBigTiff: o,\n      ifds: f,\n      pyramidIFDs: p,\n      maskIFDs: c,\n      ...l\n    }, this._set(\"rasterInfo\", u), !l.isSupported) throw new r(\"tiffraster:open\", \"this tiff is not supported: \" + l.message);\n    if (!l.tileWidth) throw new r(\"tiffraster:open\", \"none-tiled tiff is not optimized for access, convert to COG and retry.\");\n    u.isPseudoSpatialReference && i.getLogger(this).warn(\"The spatial reference for this tiff is unsupported. Only EPSG spatial reference codes and Esri WKTs are supported.\");\n    const h = f[0].get(\"PREDICTOR\")?.values?.[0],\n      m = f[0].get(\"SAMPLEFORMAT\")?.values?.[0];\n    if (3 === m && 2 === h) throw new r(\"tiffraster:open\", \"unsupported horizontal difference encoding. Predictor=3 is supported for floating point data\");\n    const {\n      skipMapInfo: x,\n      skipExtensions: T = []\n    } = this.ioConfig;\n    if (!T.includes(\"aux.xml\") && !x) {\n      const t = await this._fetchAuxiliaryMetaData(e);\n      null != t && P(t, u);\n    }\n    T.includes(\"vat.dbf\") || 1 !== u.bandCount || \"u8\" !== u.pixelType || x || (u.attributeTable = await this._fetchAuxiliaryTable(e), null != u.attributeTable && (u.keyProperties.DataType = \"thematic\")), x && this.updateImageSpaceRasterInfo(u), this.updateTileInfo();\n  }\n  async _readIFDs(e, t, r, i, s) {\n    let a = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 4;\n    let n = arguments.length > 6 ? arguments[6] : undefined;\n    if (!i) return null;\n    if (i >= t.byteLength || i < 0) {\n      t = (await this.request(this.url, {\n        range: {\n          from: i + s,\n          to: i + s + this._bufferSize\n        },\n        responseType: \"array-buffer\",\n        signal: n\n      })).data, s = i + s, i = 0;\n    }\n    const o = await this._readIFD(t, r, i, s, R.tiffTags, a, n);\n    if (e.push(o.ifd), !o.nextIFD) return null;\n    await this._readIFDs(e, t, r, o.nextIFD - s, s, a, n);\n  }\n  async _readIFD(e, r, i, s) {\n    let a = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : R.tiffTags;\n    let n = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 4;\n    let o = arguments.length > 6 ? arguments[6] : undefined;\n    if (!e) return null;\n    const f = x(e, r, i, s, a, n);\n    if (f.success) {\n      const i = [];\n      if (f.ifd?.forEach(e => {\n        e.values || i.push(e);\n      }), i.length > 0) {\n        const a = i.map(e => e.offlineOffsetSize).filter(t),\n          n = Math.min.apply(null, a.map(e => e[0]));\n        if (Math.min.apply(null, a.map(e => e[0] + e[1])) - n <= this._bufferSize) {\n          const {\n            data: t\n          } = await this.request(this.url, {\n            range: {\n              from: n,\n              to: n + this._bufferSize\n            },\n            responseType: \"array-buffer\",\n            signal: o\n          });\n          e = t, s = n, i.forEach(t => T(e, r, t, s));\n        }\n      }\n      if (f.ifd?.has(\"GEOKEYDIRECTORY\")) {\n        const t = f.ifd.get(\"GEOKEYDIRECTORY\"),\n          i = t?.values;\n        if (i && i.length > 4) {\n          const a = i[0] + \".\" + i[1] + \".\" + i[2],\n            n = await this._readIFD(e, r, t.valueOffset + 6 - s, s, R.geoKeys, 2, o);\n          t.data = n.ifd, t.data && t.data.set(\"GEOTIFFVersion\", {\n            id: 0,\n            type: 2,\n            valueCount: 1,\n            valueOffset: null,\n            values: [a]\n          });\n        }\n      }\n      return f;\n    }\n    if (f.requiredBufferSize && f.requiredBufferSize !== e.byteLength) {\n      const t = await this.request(this.url, {\n        range: {\n          from: s,\n          to: s + f.requiredBufferSize + 4\n        },\n        responseType: \"array-buffer\",\n        signal: o\n      });\n      return (e = t.data).byteLength < f.requiredBufferSize ? null : this._readIFD(e, r, 0, s, R.tiffTags, 4, o);\n    }\n  }\n  async _fetchRawTiffTile(e, t, r, i) {\n    let s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n    const a = this._getTileLocation(e, t, r, i);\n    if (!a) return null;\n    const {\n        ranges: n,\n        actualTileWidth: o,\n        actualTileHeight: f,\n        ifd: l\n      } = a,\n      u = n.map(e => this.request(this.url, {\n        range: e,\n        responseType: \"array-buffer\",\n        signal: s.signal\n      })),\n      p = await Promise.all(u),\n      c = p.map(e => e.data.byteLength).reduce((e, t) => e + t),\n      h = 1 === p.length ? p[0].data : new ArrayBuffer(c),\n      m = [0],\n      d = [0];\n    if (p.length > 1) {\n      const e = new Uint8Array(h);\n      for (let t = 0, r = 0; t < p.length; t++) {\n        const i = p[t].data;\n        e.set(new Uint8Array(i), r), m[t] = r, r += i.byteLength, d[t] = i.byteLength;\n      }\n    }\n    const {\n        blockWidth: y,\n        blockHeight: g\n      } = this.getBlockWidthHeight(e),\n      x = await this.decodePixelBlock(h, {\n        format: \"tiff\",\n        customOptions: {\n          headerInfo: this._headerInfo,\n          ifd: l,\n          offsets: m,\n          sizes: d\n        },\n        width: y,\n        height: g,\n        planes: null,\n        pixelType: null\n      });\n    if (null == x) return null;\n    let T, I, w;\n    if (o !== y || f !== g) {\n      let e = x.mask;\n      if (e) {\n        for (T = 0; T < g; T++) if (w = T * y, T < f) for (I = o; I < y; I++) e[w + I] = 0;else for (I = 0; I < y; I++) e[w + I] = 0;\n      } else for (e = new Uint8Array(y * g), x.mask = e, T = 0; T < f; T++) for (w = T * y, I = 0; I < o; I++) e[w + I] = 1;\n    }\n    return x;\n  }\n  _getTileLocation(e, t, r) {\n    let i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !1;\n    const {\n        firstPyramidLevel: s,\n        blockBoundary: a\n      } = this.rasterInfo.storageInfo,\n      n = 0 === e ? 0 : e - (s - 1),\n      {\n        _headerInfo: o\n      } = this;\n    if (!o) return null;\n    const f = i ? o.maskIFDs[n] : 0 === n ? o?.ifds[0] : o?.pyramidIFDs[n - 1];\n    if (!f) return null;\n    const l = I(f, o),\n      u = _(f, \"TILEOFFSETS\");\n    if (void 0 === u) return null;\n    const p = _(f, \"TILEBYTECOUNTS\"),\n      {\n        minRow: c,\n        minCol: h,\n        maxRow: m,\n        maxCol: d\n      } = a[n];\n    if (t > m || r > d || t < c || r < h) return null;\n    const y = F(f, \"IMAGEWIDTH\"),\n      g = F(f, \"IMAGELENGTH\"),\n      x = F(f, \"TILEWIDTH\"),\n      T = F(f, \"TILELENGTH\"),\n      w = [];\n    if (l) {\n      const {\n        bandCount: e\n      } = this.rasterInfo;\n      for (let i = 0; i < e; i++) {\n        const e = i * (m + 1) * (d + 1) + t * (d + 1) + r;\n        w[i] = {\n          from: u[e],\n          to: u[e] + p[e] - 1\n        };\n      }\n    } else {\n      const e = t * (d + 1) + r;\n      w.push({\n        from: u[e],\n        to: u[e] + p[e] - 1\n      });\n    }\n    for (let I = 0; I < w.length; I++) if (null == w[I].from || !w[I].to || w[I].to < 0) return null;\n    return {\n      ranges: w,\n      ifd: f,\n      actualTileWidth: r === d && y % x || x,\n      actualTileHeight: t === m && g % T || T\n    };\n  }\n  async _fetchAuxiliaryMetaData(e) {\n    try {\n      const {\n        data: t\n      } = await this.request(this.url + \".aux.xml\", {\n        responseType: \"xml\",\n        signal: e?.signal\n      });\n      return h(t);\n    } catch {\n      return null;\n    }\n  }\n  async _fetchAuxiliaryTable(e) {\n    try {\n      const {\n          data: t\n        } = await this.request(this.url + \".vat.dbf\", {\n          responseType: \"array-buffer\",\n          signal: e?.signal\n        }),\n        r = c.parse(t);\n      return r?.recordSet ? S.fromJSON(r.recordSet) : null;\n    } catch {\n      return null;\n    }\n  }\n};\nfunction k(e) {\n  const t = w(e),\n    {\n      width: r,\n      height: i,\n      tileWidth: s,\n      tileHeight: a,\n      planes: p,\n      pixelType: c,\n      compression: h,\n      firstPyramidLevel: d,\n      maximumPyramidLevel: y,\n      pyramidBlockWidth: g,\n      pyramidBlockHeight: x,\n      pyramidResolutions: T,\n      tileBoundary: I,\n      affine: R,\n      metadata: b\n    } = t,\n    S = t.extent.spatialReference?.wkt || t.extent.spatialReference?.wkid;\n  let v = m(S),\n    k = !!t.isPseudoGeographic;\n  null == v && (k = !0, v = new f({\n    wkid: 3857\n  }));\n  const P = new n({\n      ...t.extent,\n      spatialReference: v\n    }),\n    D = new o(P ? {\n      x: P.xmin,\n      y: P.ymax,\n      spatialReference: v\n    } : {\n      x: 0,\n      y: 0\n    }),\n    O = new u({\n      blockWidth: s,\n      blockHeight: a,\n      pyramidBlockWidth: g,\n      pyramidBlockHeight: x,\n      compression: h,\n      origin: D,\n      firstPyramidLevel: d,\n      maximumPyramidLevel: y,\n      pyramidResolutions: T,\n      blockBoundary: I\n    }),\n    L = new o({\n      x: (P.xmax - P.xmin) / r,\n      y: (P.ymax - P.ymin) / i,\n      spatialReference: v\n    }),\n    B = b ? {\n      BandProperties: b.bandProperties,\n      DataType: b.dataType\n    } : {};\n  let j = null;\n  const z = F(e[0], \"PHOTOMETRICINTERPRETATION\"),\n    A = _(e[0], \"COLORMAP\");\n  if (z <= 3 && A?.length > 3 && A.length % 3 == 0) {\n    j = [];\n    const e = A.length / 3;\n    for (let t = 0; t < e; t++) j.push([t, A[t] >>> 8, A[t + e] >>> 8, A[t + 2 * e] >>> 8]);\n  }\n  const C = new l({\n    width: r,\n    height: i,\n    bandCount: p,\n    pixelType: c,\n    pixelSize: L,\n    storageInfo: O,\n    spatialReference: v,\n    isPseudoSpatialReference: k,\n    keyProperties: B,\n    extent: P,\n    colormap: j,\n    statistics: b ? b.statistics : null\n  });\n  if (R?.length && (C.nativeExtent = new n({\n    xmin: -.5,\n    ymin: .5 - i,\n    xmax: r - .5,\n    ymax: .5,\n    spatialReference: v\n  }), C.transform = new E({\n    polynomialOrder: 1,\n    forwardCoefficients: [R[2] + R[0] / 2, R[5] - R[3] / 2, R[0], R[3], -R[1], -R[4]]\n  }), C.extent = C.transform.forwardTransform(C.nativeExtent), C.pixelSize = new o({\n    x: (P.xmax - P.xmin) / r,\n    y: (P.ymax - P.ymin) / i,\n    spatialReference: v\n  }), O.origin.x = -.5, O.origin.y = .5), T) {\n    const {\n      x: e,\n      y: t\n    } = C.pixelSize;\n    T.forEach(r => {\n      r.x *= e, r.y *= t;\n    });\n  }\n  return {\n    imageInfo: t,\n    rasterInfo: C\n  };\n}\nfunction P(e, t) {\n  if (t.statistics = e.statistics ?? t.statistics, t.histograms = e.histograms, e.histograms && null == t.statistics && (t.statistics = b(e.histograms)), e.transform && null == t.transform) {\n    t.transform = e.transform, t.nativeExtent = t.extent;\n    const r = t.transform.forwardTransform(t.nativeExtent);\n    t.pixelSize = new o({\n      x: (r.xmax - r.xmin) / t.width,\n      y: (r.ymax - r.ymin) / t.height,\n      spatialReference: t.spatialReference\n    }), t.extent = r;\n  }\n  t.isPseudoSpatialReference && e.spatialReference && (t.spatialReference = e.spatialReference, t.extent.spatialReference = t.nativeExtent.spatialReference = t.storageInfo.origin.spatialReference = t.spatialReference);\n}\ne([s()], v.prototype, \"_files\", void 0), e([s()], v.prototype, \"_headerInfo\", void 0), e([s()], v.prototype, \"_bufferSize\", void 0), e([s({\n  type: String,\n  json: {\n    write: !0\n  }\n})], v.prototype, \"datasetFormat\", void 0), v = e([a(\"esri.layers.support.rasterDatasets.TIFFRaster\")], v);\nconst D = v;\nexport { D as default };","map":{"version":3,"names":["_","e","isSome","t","r","i","property","s","subclass","a","n","o","f","l","u","p","c","parsePAMInfo","h","parseSpatialReference","m","parseSignature","d","getPyramidIFDs","y","getMaskIFDs","g","parseIFD","x","parseFieldValues","T","isBSQConfig","I","getImageInfo","w","R","estimateStatisticsFromHistograms","b","E","S","get","values","F","v","constructor","arguments","_files","_headerInfo","_bufferSize","datasetFormat","fetchRawTile","length","undefined","isSupported","isBlockOutside","_fetchRawTiffTile","hasMaskBand","pixels","Uint8Array","mask","_open","signal","data","request","url","range","from","to","responseType","datasetName","slice","lastIndexOf","littleEndian","firstIFDPos","isBigTiff","_readIFDs","imageInfo","rasterInfo","k","ifds","pyramidIFDs","maskIFDs","_set","message","tileWidth","isPseudoSpatialReference","getLogger","warn","skipMapInfo","skipExtensions","ioConfig","includes","_fetchAuxiliaryMetaData","P","bandCount","pixelType","attributeTable","_fetchAuxiliaryTable","keyProperties","DataType","updateImageSpaceRasterInfo","updateTileInfo","byteLength","_readIFD","tiffTags","push","ifd","nextIFD","success","forEach","map","offlineOffsetSize","filter","Math","min","apply","has","valueOffset","geoKeys","set","id","type","valueCount","requiredBufferSize","_getTileLocation","ranges","actualTileWidth","actualTileHeight","Promise","all","reduce","ArrayBuffer","blockWidth","blockHeight","getBlockWidthHeight","decodePixelBlock","format","customOptions","headerInfo","offsets","sizes","width","height","planes","firstPyramidLevel","blockBoundary","storageInfo","minRow","minCol","maxRow","maxCol","parse","recordSet","fromJSON","tileHeight","compression","maximumPyramidLevel","pyramidBlockWidth","pyramidBlockHeight","pyramidResolutions","tileBoundary","affine","metadata","extent","spatialReference","wkt","wkid","isPseudoGeographic","D","xmin","ymax","O","origin","L","xmax","ymin","B","BandProperties","bandProperties","dataType","j","z","A","C","pixelSize","colormap","statistics","nativeExtent","transform","polynomialOrder","forwardCoefficients","forwardTransform","histograms","prototype","String","json","write","default"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/layers/support/rasterDatasets/TIFFRaster.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../chunks/tslib.es6.js\";import{isSome as t}from\"../../../core/arrayUtils.js\";import r from\"../../../core/Error.js\";import i from\"../../../core/Logger.js\";import{property as s}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/has.js\";import{subclass as a}from\"../../../core/accessorSupport/decorators/subclass.js\";import n from\"../../../geometry/Extent.js\";import o from\"../../../geometry/Point.js\";import f from\"../../../geometry/SpatialReference.js\";import l from\"../RasterInfo.js\";import u from\"../RasterStorageInfo.js\";import p from\"./BaseRaster.js\";import c from\"./DBFParser.js\";import{parsePAMInfo as h,parseSpatialReference as m}from\"./pamParser.js\";import{parseSignature as d,getPyramidIFDs as y,getMaskIFDs as g,parseIFD as x,parseFieldValues as T,isBSQConfig as I,getImageInfo as w}from\"../rasterFormats/TiffDecoder.js\";import R from\"../rasterFormats/TiffTags.js\";import{estimateStatisticsFromHistograms as b}from\"../rasterFunctions/stretchUtils.js\";import E from\"../rasterTransforms/PolynomialTransform.js\";import S from\"../../../rest/support/FeatureSet.js\";const _=(e,t)=>e.get(t)?.values,F=(e,t)=>e.get(t)?.values?.[0];let v=class extends p{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat=\"TIFF\"}async fetchRawTile(e,t,r,i={}){if(!this._headerInfo?.isSupported||this.isBlockOutside(e,t,r))return null;const s=await this._fetchRawTiffTile(e,t,r,!1,i);if(null!=s&&this._headerInfo.hasMaskBand){const a=await this._fetchRawTiffTile(e,t,r,!0,i);null!=a&&a.pixels[0]instanceof Uint8Array&&(s.mask=a.pixels[0])}return s}async _open(e){const t=e?e.signal:null,{data:s}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:\"array-buffer\",signal:t});if(!s)throw new r(\"tiffraster:open\",\"failed to open url \"+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf(\"/\")+1,this.url.lastIndexOf(\".\"));const{littleEndian:a,firstIFDPos:n,isBigTiff:o}=d(s),f=[];await this._readIFDs(f,s,a,n,0,o?8:4,t);const{imageInfo:l,rasterInfo:u}=k(f),p=y(f),c=g(f);if(this._headerInfo={littleEndian:a,isBigTiff:o,ifds:f,pyramidIFDs:p,maskIFDs:c,...l},this._set(\"rasterInfo\",u),!l.isSupported)throw new r(\"tiffraster:open\",\"this tiff is not supported: \"+l.message);if(!l.tileWidth)throw new r(\"tiffraster:open\",\"none-tiled tiff is not optimized for access, convert to COG and retry.\");u.isPseudoSpatialReference&&i.getLogger(this).warn(\"The spatial reference for this tiff is unsupported. Only EPSG spatial reference codes and Esri WKTs are supported.\");const h=f[0].get(\"PREDICTOR\")?.values?.[0],m=f[0].get(\"SAMPLEFORMAT\")?.values?.[0];if(3===m&&2===h)throw new r(\"tiffraster:open\",\"unsupported horizontal difference encoding. Predictor=3 is supported for floating point data\");const{skipMapInfo:x,skipExtensions:T=[]}=this.ioConfig;if(!T.includes(\"aux.xml\")&&!x){const t=await this._fetchAuxiliaryMetaData(e);null!=t&&P(t,u)}T.includes(\"vat.dbf\")||1!==u.bandCount||\"u8\"!==u.pixelType||x||(u.attributeTable=await this._fetchAuxiliaryTable(e),null!=u.attributeTable&&(u.keyProperties.DataType=\"thematic\")),x&&this.updateImageSpaceRasterInfo(u),this.updateTileInfo()}async _readIFDs(e,t,r,i,s,a=4,n){if(!i)return null;if(i>=t.byteLength||i<0){t=(await this.request(this.url,{range:{from:i+s,to:i+s+this._bufferSize},responseType:\"array-buffer\",signal:n})).data,s=i+s,i=0}const o=await this._readIFD(t,r,i,s,R.tiffTags,a,n);if(e.push(o.ifd),!o.nextIFD)return null;await this._readIFDs(e,t,r,o.nextIFD-s,s,a,n)}async _readIFD(e,r,i,s,a=R.tiffTags,n=4,o){if(!e)return null;const f=x(e,r,i,s,a,n);if(f.success){const i=[];if(f.ifd?.forEach((e=>{e.values||i.push(e)})),i.length>0){const a=i.map((e=>e.offlineOffsetSize)).filter(t),n=Math.min.apply(null,a.map((e=>e[0])));if(Math.min.apply(null,a.map((e=>e[0]+e[1])))-n<=this._bufferSize){const{data:t}=await this.request(this.url,{range:{from:n,to:n+this._bufferSize},responseType:\"array-buffer\",signal:o});e=t,s=n,i.forEach((t=>T(e,r,t,s)))}}if(f.ifd?.has(\"GEOKEYDIRECTORY\")){const t=f.ifd.get(\"GEOKEYDIRECTORY\"),i=t?.values;if(i&&i.length>4){const a=i[0]+\".\"+i[1]+\".\"+i[2],n=await this._readIFD(e,r,t.valueOffset+6-s,s,R.geoKeys,2,o);t.data=n.ifd,t.data&&t.data.set(\"GEOTIFFVersion\",{id:0,type:2,valueCount:1,valueOffset:null,values:[a]})}}return f}if(f.requiredBufferSize&&f.requiredBufferSize!==e.byteLength){const t=await this.request(this.url,{range:{from:s,to:s+f.requiredBufferSize+4},responseType:\"array-buffer\",signal:o});return(e=t.data).byteLength<f.requiredBufferSize?null:this._readIFD(e,r,0,s,R.tiffTags,4,o)}}async _fetchRawTiffTile(e,t,r,i,s={}){const a=this._getTileLocation(e,t,r,i);if(!a)return null;const{ranges:n,actualTileWidth:o,actualTileHeight:f,ifd:l}=a,u=n.map((e=>this.request(this.url,{range:e,responseType:\"array-buffer\",signal:s.signal}))),p=await Promise.all(u),c=p.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),h=1===p.length?p[0].data:new ArrayBuffer(c),m=[0],d=[0];if(p.length>1){const e=new Uint8Array(h);for(let t=0,r=0;t<p.length;t++){const i=p[t].data;e.set(new Uint8Array(i),r),m[t]=r,r+=i.byteLength,d[t]=i.byteLength}}const{blockWidth:y,blockHeight:g}=this.getBlockWidthHeight(e),x=await this.decodePixelBlock(h,{format:\"tiff\",customOptions:{headerInfo:this._headerInfo,ifd:l,offsets:m,sizes:d},width:y,height:g,planes:null,pixelType:null});if(null==x)return null;let T,I,w;if(o!==y||f!==g){let e=x.mask;if(e)for(T=0;T<g;T++)if(w=T*y,T<f)for(I=o;I<y;I++)e[w+I]=0;else for(I=0;I<y;I++)e[w+I]=0;else for(e=new Uint8Array(y*g),x.mask=e,T=0;T<f;T++)for(w=T*y,I=0;I<o;I++)e[w+I]=1}return x}_getTileLocation(e,t,r,i=!1){const{firstPyramidLevel:s,blockBoundary:a}=this.rasterInfo.storageInfo,n=0===e?0:e-(s-1),{_headerInfo:o}=this;if(!o)return null;const f=i?o.maskIFDs[n]:0===n?o?.ifds[0]:o?.pyramidIFDs[n-1];if(!f)return null;const l=I(f,o),u=_(f,\"TILEOFFSETS\");if(void 0===u)return null;const p=_(f,\"TILEBYTECOUNTS\"),{minRow:c,minCol:h,maxRow:m,maxCol:d}=a[n];if(t>m||r>d||t<c||r<h)return null;const y=F(f,\"IMAGEWIDTH\"),g=F(f,\"IMAGELENGTH\"),x=F(f,\"TILEWIDTH\"),T=F(f,\"TILELENGTH\"),w=[];if(l){const{bandCount:e}=this.rasterInfo;for(let i=0;i<e;i++){const e=i*(m+1)*(d+1)+t*(d+1)+r;w[i]={from:u[e],to:u[e]+p[e]-1}}}else{const e=t*(d+1)+r;w.push({from:u[e],to:u[e]+p[e]-1})}for(let I=0;I<w.length;I++)if(null==w[I].from||!w[I].to||w[I].to<0)return null;return{ranges:w,ifd:f,actualTileWidth:r===d&&y%x||x,actualTileHeight:t===m&&g%T||T}}async _fetchAuxiliaryMetaData(e){try{const{data:t}=await this.request(this.url+\".aux.xml\",{responseType:\"xml\",signal:e?.signal});return h(t)}catch{return null}}async _fetchAuxiliaryTable(e){try{const{data:t}=await this.request(this.url+\".vat.dbf\",{responseType:\"array-buffer\",signal:e?.signal}),r=c.parse(t);return r?.recordSet?S.fromJSON(r.recordSet):null}catch{return null}}};function k(e){const t=w(e),{width:r,height:i,tileWidth:s,tileHeight:a,planes:p,pixelType:c,compression:h,firstPyramidLevel:d,maximumPyramidLevel:y,pyramidBlockWidth:g,pyramidBlockHeight:x,pyramidResolutions:T,tileBoundary:I,affine:R,metadata:b}=t,S=t.extent.spatialReference?.wkt||t.extent.spatialReference?.wkid;let v=m(S),k=!!t.isPseudoGeographic;null==v&&(k=!0,v=new f({wkid:3857}));const P=new n({...t.extent,spatialReference:v}),D=new o(P?{x:P.xmin,y:P.ymax,spatialReference:v}:{x:0,y:0}),O=new u({blockWidth:s,blockHeight:a,pyramidBlockWidth:g,pyramidBlockHeight:x,compression:h,origin:D,firstPyramidLevel:d,maximumPyramidLevel:y,pyramidResolutions:T,blockBoundary:I}),L=new o({x:(P.xmax-P.xmin)/r,y:(P.ymax-P.ymin)/i,spatialReference:v}),B=b?{BandProperties:b.bandProperties,DataType:b.dataType}:{};let j=null;const z=F(e[0],\"PHOTOMETRICINTERPRETATION\"),A=_(e[0],\"COLORMAP\");if(z<=3&&A?.length>3&&A.length%3==0){j=[];const e=A.length/3;for(let t=0;t<e;t++)j.push([t,A[t]>>>8,A[t+e]>>>8,A[t+2*e]>>>8])}const C=new l({width:r,height:i,bandCount:p,pixelType:c,pixelSize:L,storageInfo:O,spatialReference:v,isPseudoSpatialReference:k,keyProperties:B,extent:P,colormap:j,statistics:b?b.statistics:null});if(R?.length&&(C.nativeExtent=new n({xmin:-.5,ymin:.5-i,xmax:r-.5,ymax:.5,spatialReference:v}),C.transform=new E({polynomialOrder:1,forwardCoefficients:[R[2]+R[0]/2,R[5]-R[3]/2,R[0],R[3],-R[1],-R[4]]}),C.extent=C.transform.forwardTransform(C.nativeExtent),C.pixelSize=new o({x:(P.xmax-P.xmin)/r,y:(P.ymax-P.ymin)/i,spatialReference:v}),O.origin.x=-.5,O.origin.y=.5),T){const{x:e,y:t}=C.pixelSize;T.forEach((r=>{r.x*=e,r.y*=t}))}return{imageInfo:t,rasterInfo:C}}function P(e,t){if(t.statistics=e.statistics??t.statistics,t.histograms=e.histograms,e.histograms&&null==t.statistics&&(t.statistics=b(e.histograms)),e.transform&&null==t.transform){t.transform=e.transform,t.nativeExtent=t.extent;const r=t.transform.forwardTransform(t.nativeExtent);t.pixelSize=new o({x:(r.xmax-r.xmin)/t.width,y:(r.ymax-r.ymin)/t.height,spatialReference:t.spatialReference}),t.extent=r}t.isPseudoSpatialReference&&e.spatialReference&&(t.spatialReference=e.spatialReference,t.extent.spatialReference=t.nativeExtent.spatialReference=t.storageInfo.origin.spatialReference=t.spatialReference)}e([s()],v.prototype,\"_files\",void 0),e([s()],v.prototype,\"_headerInfo\",void 0),e([s()],v.prototype,\"_bufferSize\",void 0),e([s({type:String,json:{write:!0}})],v.prototype,\"datasetFormat\",void 0),v=e([a(\"esri.layers.support.rasterDatasets.TIFFRaster\")],v);const D=v;export{D as default};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}