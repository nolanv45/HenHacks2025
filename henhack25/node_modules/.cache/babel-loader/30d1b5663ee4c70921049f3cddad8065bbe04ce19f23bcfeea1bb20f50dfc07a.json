{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { _ as t } from \"../../../chunks/tslib.es6.js\";\nimport { property as e } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/has.js\";\nimport \"../../../core/Logger.js\";\nimport \"../../../core/RandomLCG.js\";\nimport { subclass as s } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport r from \"./BaseRasterFunction.js\";\nimport { grayscale as o } from \"./conversionUtils.js\";\nimport n from \"./GrayscaleFunctionArguments.js\";\nlet i = class extends r {\n  constructor() {\n    super(...arguments), this.functionName = \"Grayscale\", this.functionArguments = null, this.rasterArgumentNames = [\"raster\"];\n  }\n  get _normalizedWeights() {\n    const {\n        conversionParameters: t\n      } = this.functionArguments,\n      e = t.reduce((t, e) => t + e);\n    return t.map(t => t / e);\n  }\n  _bindSourceRasters() {\n    const {\n      conversionParameters: t\n    } = this.functionArguments;\n    if (!t?.length) return {\n      success: !1,\n      supportsGPU: !1,\n      error: \"missing valid conversion parameters.\"\n    };\n    const e = this.sourceRasterInfos[0].clone();\n    this.outputPixelType = this._getOutputPixelType(e.pixelType), e.pixelType = this.outputPixelType;\n    const s = 3 === t.length || 3 === e.bandCount && t.length > 3;\n    return e.bandCount = 1, this._removeStatsHistColormapVAT(e), this.rasterInfo = e, {\n      success: !0,\n      supportsGPU: s\n    };\n  }\n  _processPixels(t) {\n    const e = t.pixelBlocks?.[0];\n    return null == e ? null : o(e, this._normalizedWeights, this.outputPixelType);\n  }\n  _getWebGLParameters() {\n    return {\n      weights: this._normalizedWeights\n    };\n  }\n};\nt([e({\n  json: {\n    write: !0,\n    name: \"rasterFunction\"\n  }\n})], i.prototype, \"functionName\", void 0), t([e({\n  type: n,\n  json: {\n    write: !0,\n    name: \"rasterFunctionArguments\"\n  }\n})], i.prototype, \"functionArguments\", void 0), t([e()], i.prototype, \"rasterArgumentNames\", void 0), t([e()], i.prototype, \"_normalizedWeights\", null), i = t([s(\"esri.layers.support.rasterFunctions.GrayscaleFunction\")], i);\nconst u = i;\nexport { u as default };","map":{"version":3,"names":["_","t","property","e","subclass","s","r","grayscale","o","n","i","constructor","arguments","functionName","functionArguments","rasterArgumentNames","_normalizedWeights","conversionParameters","reduce","map","_bindSourceRasters","length","success","supportsGPU","error","sourceRasterInfos","clone","outputPixelType","_getOutputPixelType","pixelType","bandCount","_removeStatsHistColormapVAT","rasterInfo","_processPixels","pixelBlocks","_getWebGLParameters","weights","json","write","name","prototype","type","u","default"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/layers/support/rasterFunctions/GrayscaleFunction.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{_ as t}from\"../../../chunks/tslib.es6.js\";import{property as e}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/has.js\";import\"../../../core/Logger.js\";import\"../../../core/RandomLCG.js\";import{subclass as s}from\"../../../core/accessorSupport/decorators/subclass.js\";import r from\"./BaseRasterFunction.js\";import{grayscale as o}from\"./conversionUtils.js\";import n from\"./GrayscaleFunctionArguments.js\";let i=class extends r{constructor(){super(...arguments),this.functionName=\"Grayscale\",this.functionArguments=null,this.rasterArgumentNames=[\"raster\"]}get _normalizedWeights(){const{conversionParameters:t}=this.functionArguments,e=t.reduce(((t,e)=>t+e));return t.map((t=>t/e))}_bindSourceRasters(){const{conversionParameters:t}=this.functionArguments;if(!t?.length)return{success:!1,supportsGPU:!1,error:\"missing valid conversion parameters.\"};const e=this.sourceRasterInfos[0].clone();this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType;const s=3===t.length||3===e.bandCount&&t.length>3;return e.bandCount=1,this._removeStatsHistColormapVAT(e),this.rasterInfo=e,{success:!0,supportsGPU:s}}_processPixels(t){const e=t.pixelBlocks?.[0];return null==e?null:o(e,this._normalizedWeights,this.outputPixelType)}_getWebGLParameters(){return{weights:this._normalizedWeights}}};t([e({json:{write:!0,name:\"rasterFunction\"}})],i.prototype,\"functionName\",void 0),t([e({type:n,json:{write:!0,name:\"rasterFunctionArguments\"}})],i.prototype,\"functionArguments\",void 0),t([e()],i.prototype,\"rasterArgumentNames\",void 0),t([e()],i.prototype,\"_normalizedWeights\",null),i=t([s(\"esri.layers.support.rasterFunctions.GrayscaleFunction\")],i);const u=i;export{u as default};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}