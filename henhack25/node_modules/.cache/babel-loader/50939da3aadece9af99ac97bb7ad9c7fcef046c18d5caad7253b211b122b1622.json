{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { baseObjectMemory as t } from \"../../../../../../core/memoryEstimations.js\";\nclass e {\n  constructor(t, e) {\n    this.tile = t, this._tileIndices = e;\n  }\n  get id() {\n    return this.tile.id;\n  }\n  get featureCount() {\n    return this._tileIndices?.length ?? this.tile.featureCount;\n  }\n  get usedMemory() {\n    return t + (this._tileIndices?.byteLength ?? 0);\n  }\n  get extent() {\n    return this.tile.descriptor.extent;\n  }\n  readObjectIds(t, e) {\n    const {\n      _tileIndices: i,\n      tile: r\n    } = this;\n    return r.readObjectIds(t, i, e);\n  }\n  readCoordinates(t, e) {\n    const {\n      _tileIndices: i,\n      tile: r\n    } = this;\n    return r.readCoordinates(t, i, e);\n  }\n  subset(t) {\n    const {\n      _tileIndices: i,\n      tile: r\n    } = this;\n    if (null == i) return new e(r, t);\n    const n = new Uint32Array(t.length);\n    for (let e = 0; e < n.length; ++e) n[e] = i[t[e]];\n    return new e(r, n);\n  }\n}\nexport { e as FeatureData };","map":{"version":3,"names":["baseObjectMemory","t","e","constructor","tile","_tileIndices","id","featureCount","length","usedMemory","byteLength","extent","descriptor","readObjectIds","i","r","readCoordinates","subset","n","Uint32Array","FeatureData"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/3d/layers/graphics/pipeline/featureData/FeatureData.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{baseObjectMemory as t}from\"../../../../../../core/memoryEstimations.js\";class e{constructor(t,e){this.tile=t,this._tileIndices=e}get id(){return this.tile.id}get featureCount(){return this._tileIndices?.length??this.tile.featureCount}get usedMemory(){return t+(this._tileIndices?.byteLength??0)}get extent(){return this.tile.descriptor.extent}readObjectIds(t,e){const{_tileIndices:i,tile:r}=this;return r.readObjectIds(t,i,e)}readCoordinates(t,e){const{_tileIndices:i,tile:r}=this;return r.readCoordinates(t,i,e)}subset(t){const{_tileIndices:i,tile:r}=this;if(null==i)return new e(r,t);const n=new Uint32Array(t.length);for(let e=0;e<n.length;++e)n[e]=i[t[e]];return new e(r,n)}}export{e as FeatureData};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,gBAAgB,IAAIC,CAAC,QAAK,6CAA6C;AAAC,MAAMC,CAAC;EAACC,WAAWA,CAACF,CAAC,EAACC,CAAC,EAAC;IAAC,IAAI,CAACE,IAAI,GAACH,CAAC,EAAC,IAAI,CAACI,YAAY,GAACH,CAAC;EAAA;EAAC,IAAII,EAAEA,CAAA,EAAE;IAAC,OAAO,IAAI,CAACF,IAAI,CAACE,EAAE;EAAA;EAAC,IAAIC,YAAYA,CAAA,EAAE;IAAC,OAAO,IAAI,CAACF,YAAY,EAAEG,MAAM,IAAE,IAAI,CAACJ,IAAI,CAACG,YAAY;EAAA;EAAC,IAAIE,UAAUA,CAAA,EAAE;IAAC,OAAOR,CAAC,IAAE,IAAI,CAACI,YAAY,EAAEK,UAAU,IAAE,CAAC,CAAC;EAAA;EAAC,IAAIC,MAAMA,CAAA,EAAE;IAAC,OAAO,IAAI,CAACP,IAAI,CAACQ,UAAU,CAACD,MAAM;EAAA;EAACE,aAAaA,CAACZ,CAAC,EAACC,CAAC,EAAC;IAAC,MAAK;MAACG,YAAY,EAACS,CAAC;MAACV,IAAI,EAACW;IAAC,CAAC,GAAC,IAAI;IAAC,OAAOA,CAAC,CAACF,aAAa,CAACZ,CAAC,EAACa,CAAC,EAACZ,CAAC,CAAC;EAAA;EAACc,eAAeA,CAACf,CAAC,EAACC,CAAC,EAAC;IAAC,MAAK;MAACG,YAAY,EAACS,CAAC;MAACV,IAAI,EAACW;IAAC,CAAC,GAAC,IAAI;IAAC,OAAOA,CAAC,CAACC,eAAe,CAACf,CAAC,EAACa,CAAC,EAACZ,CAAC,CAAC;EAAA;EAACe,MAAMA,CAAChB,CAAC,EAAC;IAAC,MAAK;MAACI,YAAY,EAACS,CAAC;MAACV,IAAI,EAACW;IAAC,CAAC,GAAC,IAAI;IAAC,IAAG,IAAI,IAAED,CAAC,EAAC,OAAO,IAAIZ,CAAC,CAACa,CAAC,EAACd,CAAC,CAAC;IAAC,MAAMiB,CAAC,GAAC,IAAIC,WAAW,CAAClB,CAAC,CAACO,MAAM,CAAC;IAAC,KAAI,IAAIN,CAAC,GAAC,CAAC,EAACA,CAAC,GAACgB,CAAC,CAACV,MAAM,EAAC,EAAEN,CAAC,EAACgB,CAAC,CAAChB,CAAC,CAAC,GAACY,CAAC,CAACb,CAAC,CAACC,CAAC,CAAC,CAAC;IAAC,OAAO,IAAIA,CAAC,CAACa,CAAC,EAACG,CAAC,CAAC;EAAA;AAAC;AAAC,SAAOhB,CAAC,IAAIkB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}