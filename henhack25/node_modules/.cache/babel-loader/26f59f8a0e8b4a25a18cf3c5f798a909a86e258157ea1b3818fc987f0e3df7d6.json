{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { getBasisTranscoder as e } from \"../../../../libs/basisu/BasisUTranscoder.js\";\nimport { TextureFormat as t } from \"../../../../libs/basisu/TextureFormat.js\";\nimport { CompressedTextureFormat as n, PixelFormat as s, TextureSamplingMode as r } from \"../../../webgl/enums.js\";\nimport { Texture as i } from \"../../../webgl/Texture.js\";\nimport { getBytesPerElementFormat as a } from \"../../../webgl/Util.js\";\nlet l = null,\n  o = null;\nasync function g() {\n  return null == o && (o = e(), l = await o), o;\n}\nfunction u(e, t) {\n  if (null == l) return e.byteLength;\n  const n = new l.BasisFile(new Uint8Array(e)),\n    s = T(n) ? m(n.getNumLevels(0), n.getHasAlpha(), n.getImageWidth(0, 0), n.getImageHeight(0, 0), t) : 0;\n  return n.close(), n.delete(), s;\n}\nfunction c(e, t) {\n  if (null == l) return e.byteLength;\n  const n = new l.KTX2File(new Uint8Array(e)),\n    s = E(n) ? m(n.getLevels(), n.getHasAlpha(), n.getWidth(), n.getHeight(), t) : 0;\n  return n.close(), n.delete(), s;\n}\nfunction m(e, t, s, r, i) {\n  const l = a(t ? n.COMPRESSED_RGBA8_ETC2_EAC : n.COMPRESSED_RGB8_ETC2),\n    o = i && e > 1 ? (4 ** e - 1) / (3 * 4 ** (e - 1)) : 1;\n  return Math.ceil(s * r * l * o);\n}\nfunction T(e) {\n  return e.getNumImages() >= 1 && !e.isUASTC();\n}\nfunction E(e) {\n  return e.getFaces() >= 1 && e.isETC1S();\n}\nasync function h(e, t, n) {\n  null == l && (l = await g());\n  const s = new l.BasisFile(new Uint8Array(n));\n  if (!T(s)) return null;\n  s.startTranscoding();\n  const r = p(e, t, s.getNumLevels(0), s.getHasAlpha(), s.getImageWidth(0, 0), s.getImageHeight(0, 0), (e, t) => s.getImageTranscodedSizeInBytes(0, e, t), (e, t, n) => s.transcodeImage(n, 0, e, t, 0, 0));\n  return s.close(), s.delete(), r;\n}\nasync function _(e, t, n) {\n  null == l && (l = await g());\n  const s = new l.KTX2File(new Uint8Array(n));\n  if (!E(s)) return null;\n  s.startTranscoding();\n  const r = p(e, t, s.getLevels(), s.getHasAlpha(), s.getWidth(), s.getHeight(), (e, t) => s.getImageTranscodedSizeInBytes(e, 0, 0, t), (e, t, n) => s.transcodeImage(n, e, 0, 0, t, 0, -1, -1));\n  return s.close(), s.delete(), r;\n}\nfunction p(e, a, l, o, g, u, c, m) {\n  const {\n      compressedTextureETC: T,\n      compressedTextureS3TC: E\n    } = e.capabilities,\n    [h, _] = T ? o ? [t.ETC2_RGBA, n.COMPRESSED_RGBA8_ETC2_EAC] : [t.ETC1_RGB, n.COMPRESSED_RGB8_ETC2] : E ? o ? [t.BC3_RGBA, n.COMPRESSED_RGBA_S3TC_DXT5_EXT] : [t.BC1_RGB, n.COMPRESSED_RGB_S3TC_DXT1_EXT] : [t.RGBA32, s.RGBA],\n    p = a.hasMipmap ? l : Math.min(1, l),\n    A = [];\n  for (let t = 0; t < p; t++) A.push(new Uint8Array(c(t, h))), m(t, h, A[t]);\n  return a.internalFormat = _, a.hasMipmap = A.length > 1, a.samplingMode = a.hasMipmap ? r.LINEAR_MIPMAP_LINEAR : r.LINEAR, a.width = g, a.height = u, new i(e, a, {\n    type: \"compressed\",\n    levels: A\n  });\n}\nexport { E as checkKTX2, h as createTextureBasis, _ as createTextureKTX2, u as estimateMemoryBasis, c as estimateMemoryKTX2, g as loadBasisTranscoder };","map":{"version":3,"names":["getBasisTranscoder","e","TextureFormat","t","CompressedTextureFormat","n","PixelFormat","s","TextureSamplingMode","r","Texture","i","getBytesPerElementFormat","a","l","o","g","u","byteLength","BasisFile","Uint8Array","T","m","getNumLevels","getHasAlpha","getImageWidth","getImageHeight","close","delete","c","KTX2File","E","getLevels","getWidth","getHeight","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_RGB8_ETC2","Math","ceil","getNumImages","isUASTC","getFaces","isETC1S","h","startTranscoding","p","getImageTranscodedSizeInBytes","transcodeImage","_","compressedTextureETC","compressedTextureS3TC","capabilities","ETC2_RGBA","ETC1_RGB","BC3_RGBA","COMPRESSED_RGBA_S3TC_DXT5_EXT","BC1_RGB","COMPRESSED_RGB_S3TC_DXT1_EXT","RGBA32","RGBA","hasMipmap","min","A","push","internalFormat","length","samplingMode","LINEAR_MIPMAP_LINEAR","LINEAR","width","height","type","levels","checkKTX2","createTextureBasis","createTextureKTX2","estimateMemoryBasis","estimateMemoryKTX2","loadBasisTranscoder"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/3d/webgl-engine/lib/BasisUtil.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{getBasisTranscoder as e}from\"../../../../libs/basisu/BasisUTranscoder.js\";import{TextureFormat as t}from\"../../../../libs/basisu/TextureFormat.js\";import{CompressedTextureFormat as n,PixelFormat as s,TextureSamplingMode as r}from\"../../../webgl/enums.js\";import{Texture as i}from\"../../../webgl/Texture.js\";import{getBytesPerElementFormat as a}from\"../../../webgl/Util.js\";let l=null,o=null;async function g(){return null==o&&(o=e(),l=await o),o}function u(e,t){if(null==l)return e.byteLength;const n=new l.BasisFile(new Uint8Array(e)),s=T(n)?m(n.getNumLevels(0),n.getHasAlpha(),n.getImageWidth(0,0),n.getImageHeight(0,0),t):0;return n.close(),n.delete(),s}function c(e,t){if(null==l)return e.byteLength;const n=new l.KTX2File(new Uint8Array(e)),s=E(n)?m(n.getLevels(),n.getHasAlpha(),n.getWidth(),n.getHeight(),t):0;return n.close(),n.delete(),s}function m(e,t,s,r,i){const l=a(t?n.COMPRESSED_RGBA8_ETC2_EAC:n.COMPRESSED_RGB8_ETC2),o=i&&e>1?(4**e-1)/(3*4**(e-1)):1;return Math.ceil(s*r*l*o)}function T(e){return e.getNumImages()>=1&&!e.isUASTC()}function E(e){return e.getFaces()>=1&&e.isETC1S()}async function h(e,t,n){null==l&&(l=await g());const s=new l.BasisFile(new Uint8Array(n));if(!T(s))return null;s.startTranscoding();const r=p(e,t,s.getNumLevels(0),s.getHasAlpha(),s.getImageWidth(0,0),s.getImageHeight(0,0),((e,t)=>s.getImageTranscodedSizeInBytes(0,e,t)),((e,t,n)=>s.transcodeImage(n,0,e,t,0,0)));return s.close(),s.delete(),r}async function _(e,t,n){null==l&&(l=await g());const s=new l.KTX2File(new Uint8Array(n));if(!E(s))return null;s.startTranscoding();const r=p(e,t,s.getLevels(),s.getHasAlpha(),s.getWidth(),s.getHeight(),((e,t)=>s.getImageTranscodedSizeInBytes(e,0,0,t)),((e,t,n)=>s.transcodeImage(n,e,0,0,t,0,-1,-1)));return s.close(),s.delete(),r}function p(e,a,l,o,g,u,c,m){const{compressedTextureETC:T,compressedTextureS3TC:E}=e.capabilities,[h,_]=T?o?[t.ETC2_RGBA,n.COMPRESSED_RGBA8_ETC2_EAC]:[t.ETC1_RGB,n.COMPRESSED_RGB8_ETC2]:E?o?[t.BC3_RGBA,n.COMPRESSED_RGBA_S3TC_DXT5_EXT]:[t.BC1_RGB,n.COMPRESSED_RGB_S3TC_DXT1_EXT]:[t.RGBA32,s.RGBA],p=a.hasMipmap?l:Math.min(1,l),A=[];for(let t=0;t<p;t++)A.push(new Uint8Array(c(t,h))),m(t,h,A[t]);return a.internalFormat=_,a.hasMipmap=A.length>1,a.samplingMode=a.hasMipmap?r.LINEAR_MIPMAP_LINEAR:r.LINEAR,a.width=g,a.height=u,new i(e,a,{type:\"compressed\",levels:A})}export{E as checkKTX2,h as createTextureBasis,_ as createTextureKTX2,u as estimateMemoryBasis,c as estimateMemoryKTX2,g as loadBasisTranscoder};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}