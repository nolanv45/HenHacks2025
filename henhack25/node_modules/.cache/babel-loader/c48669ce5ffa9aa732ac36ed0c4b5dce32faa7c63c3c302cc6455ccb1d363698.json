{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { areaUnitFromSpatialReference as e, convertUnit as r, getMetersPerUnitForSR as t } from \"../core/unitUtils.js\";\nimport { fromGeometry as o, getSpatialReference as a } from \"../geometry/operators/support/apiConverter.js\";\nfunction n(n) {\n  let s = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    unit: i\n  } = s;\n  let u = o(n).calculateArea2D();\n  if (u && i) {\n    const o = a(n);\n    if (o.isGeographic) throw new Error(\"Unable to convert from an angular area unit to a linear area unit.\");\n    const s = e(o);\n    s !== i && (s ? u = r(u, s, i) : (u = Math.sqrt(u), u *= t(o), u **= 2, u = r(u, \"square-meters\", i)));\n  }\n  return u;\n}\nconst s = !0,\n  i = Object.freeze(Object.defineProperty({\n    __proto__: null,\n    execute: n,\n    supportsCurves: s\n  }, Symbol.toStringTag, {\n    value: \"Module\"\n  }));\nexport { i as a, n as e, s };","map":{"version":3,"names":["areaUnitFromSpatialReference","e","convertUnit","r","getMetersPerUnitForSR","t","fromGeometry","o","getSpatialReference","a","n","s","arguments","length","undefined","unit","i","u","calculateArea2D","isGeographic","Error","Math","sqrt","Object","freeze","defineProperty","__proto__","execute","supportsCurves","Symbol","toStringTag","value"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/chunks/areaOperator.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{areaUnitFromSpatialReference as e,convertUnit as r,getMetersPerUnitForSR as t}from\"../core/unitUtils.js\";import{fromGeometry as o,getSpatialReference as a}from\"../geometry/operators/support/apiConverter.js\";function n(n,s={}){const{unit:i}=s;let u=o(n).calculateArea2D();if(u&&i){const o=a(n);if(o.isGeographic)throw new Error(\"Unable to convert from an angular area unit to a linear area unit.\");const s=e(o);s!==i&&(s?u=r(u,s,i):(u=Math.sqrt(u),u*=t(o),u**=2,u=r(u,\"square-meters\",i)))}return u}const s=!0,i=Object.freeze(Object.defineProperty({__proto__:null,execute:n,supportsCurves:s},Symbol.toStringTag,{value:\"Module\"}));export{i as a,n as e,s};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,4BAA4B,IAAIC,CAAC,EAACC,WAAW,IAAIC,CAAC,EAACC,qBAAqB,IAAIC,CAAC,QAAK,sBAAsB;AAAC,SAAOC,YAAY,IAAIC,CAAC,EAACC,mBAAmB,IAAIC,CAAC,QAAK,+CAA+C;AAAC,SAASC,CAACA,CAACA,CAAC,EAAM;EAAA,IAALC,CAAC,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,CAAC,CAAC;EAAE,MAAK;IAACG,IAAI,EAACC;EAAC,CAAC,GAACL,CAAC;EAAC,IAAIM,CAAC,GAACV,CAAC,CAACG,CAAC,CAAC,CAACQ,eAAe,CAAC,CAAC;EAAC,IAAGD,CAAC,IAAED,CAAC,EAAC;IAAC,MAAMT,CAAC,GAACE,CAAC,CAACC,CAAC,CAAC;IAAC,IAAGH,CAAC,CAACY,YAAY,EAAC,MAAM,IAAIC,KAAK,CAAC,oEAAoE,CAAC;IAAC,MAAMT,CAAC,GAACV,CAAC,CAACM,CAAC,CAAC;IAACI,CAAC,KAAGK,CAAC,KAAGL,CAAC,GAACM,CAAC,GAACd,CAAC,CAACc,CAAC,EAACN,CAAC,EAACK,CAAC,CAAC,IAAEC,CAAC,GAACI,IAAI,CAACC,IAAI,CAACL,CAAC,CAAC,EAACA,CAAC,IAAEZ,CAAC,CAACE,CAAC,CAAC,EAACU,CAAC,KAAG,CAAC,EAACA,CAAC,GAACd,CAAC,CAACc,CAAC,EAAC,eAAe,EAACD,CAAC,CAAC,CAAC,CAAC;EAAA;EAAC,OAAOC,CAAC;AAAA;AAAC,MAAMN,CAAC,GAAC,CAAC,CAAC;EAACK,CAAC,GAACO,MAAM,CAACC,MAAM,CAACD,MAAM,CAACE,cAAc,CAAC;IAACC,SAAS,EAAC,IAAI;IAACC,OAAO,EAACjB,CAAC;IAACkB,cAAc,EAACjB;EAAC,CAAC,EAACkB,MAAM,CAACC,WAAW,EAAC;IAACC,KAAK,EAAC;EAAQ,CAAC,CAAC,CAAC;AAAC,SAAOf,CAAC,IAAIP,CAAC,EAACC,CAAC,IAAIT,CAAC,EAACU,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}