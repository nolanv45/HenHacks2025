{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { _ as t } from \"../../chunks/tslib.es6.js\";\nimport e from \"../../core/Accessor.js\";\nimport { property as o } from \"../../core/accessorSupport/decorators/property.js\";\nimport \"../../core/has.js\";\nimport \"../../core/Logger.js\";\nimport \"../../core/RandomLCG.js\";\nimport { subclass as s } from \"../../core/accessorSupport/decorators/subclass.js\";\nimport { fromValues as i, create as a } from \"../../core/libs/gl-matrix-2/factories/mat3f64.js\";\nimport { fromValues as r, create as l } from \"../../core/libs/gl-matrix-2/factories/vec3f64.js\";\nimport { multiply as n, transpose as h } from \"../../core/libs/gl-matrix-2/math/mat3.js\";\nimport { f as m, b as g, d as u, q as c } from \"../../chunks/vec32.js\";\nimport p from \"../../geometry/Point.js\";\nimport d from \"../../geometry/SpatialReference.js\";\nimport { WGS84ECEFSpatialReference as f } from \"../../geometry/spatialReferenceEllipsoidUtils.js\";\nimport { projectBuffer as v } from \"../../geometry/projection/projectBuffer.js\";\nimport { earth as _ } from \"../../geometry/support/Ellipsoid.js\";\nimport { videoMetadataEntryId as A } from \"./videoUtils.js\";\nconst M = Math.PI / 180;\nlet V = class extends e {\n  constructor(t) {\n    super(), this.averageElevation = 0, this.imageHeight = 0, this.imageWidth = 0, this.metadataSupportsTransforms = !1, this.platformHeadingAngle = 0, this.platformPitchAngle = 0, this.platformRollAngle = 0, this.sensorHeadingAngle = 0, this.sensorAltitude = 0, this.sensorHorizontalFieldOfView = 0, this.sensorLatitude = 0, this.sensorLongitude = 0, this.sensorPitchAngle = 0, this.sensorRollAngle = 0, this.sensorVerticalFieldOfView = 0, this.vttMetadata = new Map(), this._createMat3FromValues = t => {\n      const e = t[0],\n        o = t[1],\n        s = t[2];\n      return i(e[0], o[0], s[0], e[1], o[1], s[1], e[2], o[2], s[2]);\n    }, this._multiplyMat3 = (t, e) => {\n      const o = a();\n      return n(o, t, e), o;\n    }, this._transposeMat3 = t => {\n      const e = a();\n      return h(e, t), e;\n    }, this._calculateCameraFovForward = () => this._createMat3FromValues([[0, 0, 1], [Math.tan(.5 * this.sensorHorizontalFieldOfView * M), 0, 0], [0, Math.tan(.5 * this.sensorVerticalFieldOfView * M), 0]]), this._calculateCameraFovReverse = () => this._createMat3FromValues([[0, 1 / Math.tan(.5 * this.sensorHorizontalFieldOfView * M), 0], [0, 0, 1 / Math.tan(.5 * this.sensorVerticalFieldOfView * M)], [1, 0, 0]]), this._calculateCameraLook = () => this._getRotationMatrixZYX(this.sensorHeadingAngle * M, this.sensorPitchAngle * M, this.sensorRollAngle * M), this._calculateImageDimensionsForward = () => this._createMat3FromValues([[2 / this.imageWidth, 0, -1], [0, -2 / this.imageHeight, -1], [0, 0, 1]]), this._calculateImageDimensionsReverse = () => this._createMat3FromValues([[this.imageWidth / 2, 0, this.imageWidth / 2], [0, -this.imageHeight / 2, -this.imageHeight / 2], [0, 0, 1]]), this._calculatePlatformPositionMatrix = () => {\n      const t = Math.sin(this.sensorLatitude * M),\n        e = Math.cos(this.sensorLatitude * M),\n        o = Math.sin(this.sensorLongitude * M),\n        s = Math.cos(this.sensorLongitude * M);\n      return this._createMat3FromValues([[-t * s, -o, -e * s], [-t * o, s, -e * o], [e, 0, -t]]);\n    }, this._calculatePlatformOrientation = () => this._getRotationMatrixZYX(this.platformHeadingAngle * M, this.platformPitchAngle * M, this.platformRollAngle * M), this._extractValues = t => {\n      this.imageWidth = t.get(A.EsriVideoWidth)?.value, this.imageHeight = t.get(A.EsriVideoHeight)?.value;\n      const e = t.get(A.SensorEllipsoidHeight)?.value;\n      this.sensorAltitude = e ?? t.get(A.SensorTrueAltitude)?.value, this.sensorLatitude = t.get(A.SensorLatitude)?.value, this.sensorLongitude = t.get(A.SensorLongitude)?.value, this.sensorHeadingAngle = t.get(A.SensorAzimuthAngle)?.value, this.sensorPitchAngle = t.get(A.SensorElevationAngle)?.value, this.sensorRollAngle = t.get(A.SensorRollAngle)?.value, this.sensorHorizontalFieldOfView = t.get(A.SensorHorizontalFOV)?.value, this.sensorVerticalFieldOfView = t.get(A.SensorVerticalFOV)?.value, this.platformHeadingAngle = t.get(A.PlatformHeadingAngle)?.value, this.platformPitchAngle = t.get(A.PlatformPitchAngle)?.value, this.platformRollAngle = t.get(A.PlatformRollAngle)?.value, this.averageElevation = t.get(A.FrameCenterElevation)?.value || 0;\n    }, this._getRotationMatrixZYX = (t, e, o) => {\n      const s = Math.cos(t),\n        i = Math.sin(t),\n        a = Math.cos(e),\n        r = Math.sin(e),\n        l = Math.cos(o),\n        n = Math.sin(o);\n      return this._createMat3FromValues([[s * a, s * r * n - l * i, i * n + s * l * r], [a * i, s * l + i * r * n, l * i * r - s * n], [-r, a * n, a * l]]);\n    }, this._initCameraSensor = () => {\n      const t = this._calculateCameraFovForward(),\n        e = this._calculateCameraFovReverse(),\n        o = this._calculateCameraLook(),\n        s = this._calculateImageDimensionsForward(),\n        i = this._calculateImageDimensionsReverse(),\n        a = this._calculatePlatformPositionMatrix(),\n        r = this._calculatePlatformOrientation(),\n        l = this._multiplyMat3(this._multiplyMat3(a, r), o);\n      this._imageToEarthTransform = this._multiplyMat3(this._multiplyMat3(l, t), s);\n      const n = this._multiplyMat3(i, e);\n      this._earthToImageTransform = this._multiplyMat3(n, this._transposeMat3(l)), this._platformPositionEcef = this._projectPointToECEF(this.sensorLongitude, this.sensorLatitude, this.sensorAltitude || this.averageElevation);\n    }, this._metadataSupportsTransforms = t => {\n      if (!t?.size) return !1;\n      const e = t.get(A.EsriVideoWidth)?.value ?? 0,\n        o = t.get(A.EsriVideoHeight)?.value ?? 0;\n      if (e <= 0 || o <= 0) return !1;\n      const s = t.get(A.SensorEllipsoidHeight)?.value,\n        i = t.get(A.SensorTrueAltitude)?.value,\n        a = t.get(A.SensorLatitude)?.value,\n        r = t.get(A.SensorLongitude)?.value;\n      if (null == s && null == i || null == a || null == r) return !1;\n      const l = t.get(A.PlatformHeadingAngle)?.value,\n        n = t.get(A.PlatformPitchAngle)?.value,\n        h = t.get(A.PlatformRollAngle)?.value;\n      if (null == l || null == n || null == h) return !1;\n      const m = t.get(A.SensorHorizontalFOV)?.value,\n        g = t.get(A.SensorVerticalFOV)?.value;\n      if (null == m || null == g) return !1;\n      const u = t.get(A.SensorAzimuthAngle)?.value,\n        c = t.get(A.SensorElevationAngle)?.value,\n        p = t.get(A.SensorRollAngle)?.value;\n      return null != u && null != c && null != p;\n    }, this._projectPointToECEF = (t, e, o) => {\n      const s = [];\n      return v([t, e, o], d.WGS84, 0, s, f, 0), new p({\n        x: s[0],\n        y: s[1],\n        z: s[2],\n        spatialReference: f\n      });\n    }, this._projectImageVectorToEllipsoid = (t, e) => {\n      const o = _.semiMajorAxis + e,\n        s = _.semiMinorAxis + e,\n        i = s / o,\n        a = o / s,\n        {\n          x: n,\n          y: h,\n          z: u\n        } = this._platformPositionEcef,\n        c = u ?? this.averageElevation,\n        p = r(n, h, a * c),\n        d = m(t, t),\n        f = m(t, p),\n        v = m(p, p) - o * o,\n        A = (-f - Math.sqrt(f * f - d * v)) / d;\n      if (A < 0) return [NaN, NaN, NaN];\n      const M = l();\n      return g(M, p, t, A), M[2] = M[2] * i, M;\n    };\n    const e = t?.videoMetadata;\n    this._set(\"metadataSupportsTransforms\", this._metadataSupportsTransforms(e)), this.metadataSupportsTransforms && (this._extractValues(e), this._initCameraSensor());\n  }\n  transformGeoToImage(t, e, o) {\n    const s = this._platformPositionEcef;\n    if (!s) return [0, 0];\n    const {\n        x: i,\n        y: a,\n        z: n\n      } = s,\n      h = r(i, a, n),\n      m = this._projectPointToECEF(t, e, o || this.averageElevation),\n      g = l(),\n      p = r(m.x, m.y, m.z);\n    u(g, p, h), c(g, g, this._earthToImageTransform);\n    const d = g[0],\n      f = g[1],\n      v = g[2];\n    let _ = r(NaN, NaN, NaN);\n    return isNaN(v) || (_ = r(d / v, f / v, v / v)), [_[0], _[1]];\n  }\n  transformImageToGeo(t, e) {\n    const o = r(t, e, 1),\n      s = l();\n    c(s, o, this._imageToEarthTransform);\n    const i = this._projectImageVectorToEllipsoid(s, this.averageElevation);\n    let a;\n    if (!isNaN(i[0])) {\n      const t = [];\n      v([i[0], i[1], i[2]], f, 0, t, d.WGS84, 0), a = new p({\n        x: t[0],\n        y: t[1],\n        z: t[2],\n        spatialReference: d.WGS84\n      });\n    }\n    return a;\n  }\n};\nt([o()], V.prototype, \"averageElevation\", void 0), t([o()], V.prototype, \"imageHeight\", void 0), t([o()], V.prototype, \"imageWidth\", void 0), t([o({\n  readOnly: !0\n})], V.prototype, \"metadataSupportsTransforms\", void 0), t([o()], V.prototype, \"platformHeadingAngle\", void 0), t([o()], V.prototype, \"platformPitchAngle\", void 0), t([o()], V.prototype, \"platformRollAngle\", void 0), t([o()], V.prototype, \"sensorHeadingAngle\", void 0), t([o()], V.prototype, \"sensorAltitude\", void 0), t([o()], V.prototype, \"sensorHorizontalFieldOfView\", void 0), t([o()], V.prototype, \"sensorLatitude\", void 0), t([o()], V.prototype, \"sensorLongitude\", void 0), t([o()], V.prototype, \"sensorPitchAngle\", void 0), t([o()], V.prototype, \"sensorRollAngle\", void 0), t([o()], V.prototype, \"sensorVerticalFieldOfView\", void 0), t([o()], V.prototype, \"vttMetadata\", void 0), V = t([s(\"esri.layers.video.VideoCameraSensorModel\")], V);\nconst y = V;\nexport { y as default };","map":{"version":3,"names":["_","t","e","property","o","subclass","s","fromValues","i","create","a","r","l","multiply","n","transpose","h","f","m","b","g","d","u","q","c","p","WGS84ECEFSpatialReference","projectBuffer","v","earth","videoMetadataEntryId","A","M","Math","PI","V","constructor","averageElevation","imageHeight","imageWidth","metadataSupportsTransforms","platformHeadingAngle","platformPitchAngle","platformRollAngle","sensorHeadingAngle","sensorAltitude","sensorHorizontalFieldOfView","sensorLatitude","sensorLongitude","sensorPitchAngle","sensorRollAngle","sensorVerticalFieldOfView","vttMetadata","Map","_createMat3FromValues","_multiplyMat3","_transposeMat3","_calculateCameraFovForward","tan","_calculateCameraFovReverse","_calculateCameraLook","_getRotationMatrixZYX","_calculateImageDimensionsForward","_calculateImageDimensionsReverse","_calculatePlatformPositionMatrix","sin","cos","_calculatePlatformOrientation","_extractValues","get","EsriVideoWidth","value","EsriVideoHeight","SensorEllipsoidHeight","SensorTrueAltitude","SensorLatitude","SensorLongitude","SensorAzimuthAngle","SensorElevationAngle","SensorRollAngle","SensorHorizontalFOV","SensorVerticalFOV","PlatformHeadingAngle","PlatformPitchAngle","PlatformRollAngle","FrameCenterElevation","_initCameraSensor","_imageToEarthTransform","_earthToImageTransform","_platformPositionEcef","_projectPointToECEF","_metadataSupportsTransforms","size","WGS84","x","y","z","spatialReference","_projectImageVectorToEllipsoid","semiMajorAxis","semiMinorAxis","sqrt","NaN","videoMetadata","_set","transformGeoToImage","isNaN","transformImageToGeo","prototype","readOnly","default"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/layers/video/VideoCameraSensorModel.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{_ as t}from\"../../chunks/tslib.es6.js\";import e from\"../../core/Accessor.js\";import{property as o}from\"../../core/accessorSupport/decorators/property.js\";import\"../../core/has.js\";import\"../../core/Logger.js\";import\"../../core/RandomLCG.js\";import{subclass as s}from\"../../core/accessorSupport/decorators/subclass.js\";import{fromValues as i,create as a}from\"../../core/libs/gl-matrix-2/factories/mat3f64.js\";import{fromValues as r,create as l}from\"../../core/libs/gl-matrix-2/factories/vec3f64.js\";import{multiply as n,transpose as h}from\"../../core/libs/gl-matrix-2/math/mat3.js\";import{f as m,b as g,d as u,q as c}from\"../../chunks/vec32.js\";import p from\"../../geometry/Point.js\";import d from\"../../geometry/SpatialReference.js\";import{WGS84ECEFSpatialReference as f}from\"../../geometry/spatialReferenceEllipsoidUtils.js\";import{projectBuffer as v}from\"../../geometry/projection/projectBuffer.js\";import{earth as _}from\"../../geometry/support/Ellipsoid.js\";import{videoMetadataEntryId as A}from\"./videoUtils.js\";const M=Math.PI/180;let V=class extends e{constructor(t){super(),this.averageElevation=0,this.imageHeight=0,this.imageWidth=0,this.metadataSupportsTransforms=!1,this.platformHeadingAngle=0,this.platformPitchAngle=0,this.platformRollAngle=0,this.sensorHeadingAngle=0,this.sensorAltitude=0,this.sensorHorizontalFieldOfView=0,this.sensorLatitude=0,this.sensorLongitude=0,this.sensorPitchAngle=0,this.sensorRollAngle=0,this.sensorVerticalFieldOfView=0,this.vttMetadata=new Map,this._createMat3FromValues=t=>{const e=t[0],o=t[1],s=t[2];return i(e[0],o[0],s[0],e[1],o[1],s[1],e[2],o[2],s[2])},this._multiplyMat3=(t,e)=>{const o=a();return n(o,t,e),o},this._transposeMat3=t=>{const e=a();return h(e,t),e},this._calculateCameraFovForward=()=>this._createMat3FromValues([[0,0,1],[Math.tan(.5*this.sensorHorizontalFieldOfView*M),0,0],[0,Math.tan(.5*this.sensorVerticalFieldOfView*M),0]]),this._calculateCameraFovReverse=()=>this._createMat3FromValues([[0,1/Math.tan(.5*this.sensorHorizontalFieldOfView*M),0],[0,0,1/Math.tan(.5*this.sensorVerticalFieldOfView*M)],[1,0,0]]),this._calculateCameraLook=()=>this._getRotationMatrixZYX(this.sensorHeadingAngle*M,this.sensorPitchAngle*M,this.sensorRollAngle*M),this._calculateImageDimensionsForward=()=>this._createMat3FromValues([[2/this.imageWidth,0,-1],[0,-2/this.imageHeight,-1],[0,0,1]]),this._calculateImageDimensionsReverse=()=>this._createMat3FromValues([[this.imageWidth/2,0,this.imageWidth/2],[0,-this.imageHeight/2,-this.imageHeight/2],[0,0,1]]),this._calculatePlatformPositionMatrix=()=>{const t=Math.sin(this.sensorLatitude*M),e=Math.cos(this.sensorLatitude*M),o=Math.sin(this.sensorLongitude*M),s=Math.cos(this.sensorLongitude*M);return this._createMat3FromValues([[-t*s,-o,-e*s],[-t*o,s,-e*o],[e,0,-t]])},this._calculatePlatformOrientation=()=>this._getRotationMatrixZYX(this.platformHeadingAngle*M,this.platformPitchAngle*M,this.platformRollAngle*M),this._extractValues=t=>{this.imageWidth=t.get(A.EsriVideoWidth)?.value,this.imageHeight=t.get(A.EsriVideoHeight)?.value;const e=t.get(A.SensorEllipsoidHeight)?.value;this.sensorAltitude=e??t.get(A.SensorTrueAltitude)?.value,this.sensorLatitude=t.get(A.SensorLatitude)?.value,this.sensorLongitude=t.get(A.SensorLongitude)?.value,this.sensorHeadingAngle=t.get(A.SensorAzimuthAngle)?.value,this.sensorPitchAngle=t.get(A.SensorElevationAngle)?.value,this.sensorRollAngle=t.get(A.SensorRollAngle)?.value,this.sensorHorizontalFieldOfView=t.get(A.SensorHorizontalFOV)?.value,this.sensorVerticalFieldOfView=t.get(A.SensorVerticalFOV)?.value,this.platformHeadingAngle=t.get(A.PlatformHeadingAngle)?.value,this.platformPitchAngle=t.get(A.PlatformPitchAngle)?.value,this.platformRollAngle=t.get(A.PlatformRollAngle)?.value,this.averageElevation=t.get(A.FrameCenterElevation)?.value||0},this._getRotationMatrixZYX=(t,e,o)=>{const s=Math.cos(t),i=Math.sin(t),a=Math.cos(e),r=Math.sin(e),l=Math.cos(o),n=Math.sin(o);return this._createMat3FromValues([[s*a,s*r*n-l*i,i*n+s*l*r],[a*i,s*l+i*r*n,l*i*r-s*n],[-r,a*n,a*l]])},this._initCameraSensor=()=>{const t=this._calculateCameraFovForward(),e=this._calculateCameraFovReverse(),o=this._calculateCameraLook(),s=this._calculateImageDimensionsForward(),i=this._calculateImageDimensionsReverse(),a=this._calculatePlatformPositionMatrix(),r=this._calculatePlatformOrientation(),l=this._multiplyMat3(this._multiplyMat3(a,r),o);this._imageToEarthTransform=this._multiplyMat3(this._multiplyMat3(l,t),s);const n=this._multiplyMat3(i,e);this._earthToImageTransform=this._multiplyMat3(n,this._transposeMat3(l)),this._platformPositionEcef=this._projectPointToECEF(this.sensorLongitude,this.sensorLatitude,this.sensorAltitude||this.averageElevation)},this._metadataSupportsTransforms=t=>{if(!t?.size)return!1;const e=t.get(A.EsriVideoWidth)?.value??0,o=t.get(A.EsriVideoHeight)?.value??0;if(e<=0||o<=0)return!1;const s=t.get(A.SensorEllipsoidHeight)?.value,i=t.get(A.SensorTrueAltitude)?.value,a=t.get(A.SensorLatitude)?.value,r=t.get(A.SensorLongitude)?.value;if(null==s&&null==i||null==a||null==r)return!1;const l=t.get(A.PlatformHeadingAngle)?.value,n=t.get(A.PlatformPitchAngle)?.value,h=t.get(A.PlatformRollAngle)?.value;if(null==l||null==n||null==h)return!1;const m=t.get(A.SensorHorizontalFOV)?.value,g=t.get(A.SensorVerticalFOV)?.value;if(null==m||null==g)return!1;const u=t.get(A.SensorAzimuthAngle)?.value,c=t.get(A.SensorElevationAngle)?.value,p=t.get(A.SensorRollAngle)?.value;return null!=u&&null!=c&&null!=p},this._projectPointToECEF=(t,e,o)=>{const s=[];return v([t,e,o],d.WGS84,0,s,f,0),new p({x:s[0],y:s[1],z:s[2],spatialReference:f})},this._projectImageVectorToEllipsoid=(t,e)=>{const o=_.semiMajorAxis+e,s=_.semiMinorAxis+e,i=s/o,a=o/s,{x:n,y:h,z:u}=this._platformPositionEcef,c=u??this.averageElevation,p=r(n,h,a*c),d=m(t,t),f=m(t,p),v=m(p,p)-o*o,A=(-f-Math.sqrt(f*f-d*v))/d;if(A<0)return[NaN,NaN,NaN];const M=l();return g(M,p,t,A),M[2]=M[2]*i,M};const e=t?.videoMetadata;this._set(\"metadataSupportsTransforms\",this._metadataSupportsTransforms(e)),this.metadataSupportsTransforms&&(this._extractValues(e),this._initCameraSensor())}transformGeoToImage(t,e,o){const s=this._platformPositionEcef;if(!s)return[0,0];const{x:i,y:a,z:n}=s,h=r(i,a,n),m=this._projectPointToECEF(t,e,o||this.averageElevation),g=l(),p=r(m.x,m.y,m.z);u(g,p,h),c(g,g,this._earthToImageTransform);const d=g[0],f=g[1],v=g[2];let _=r(NaN,NaN,NaN);return isNaN(v)||(_=r(d/v,f/v,v/v)),[_[0],_[1]]}transformImageToGeo(t,e){const o=r(t,e,1),s=l();c(s,o,this._imageToEarthTransform);const i=this._projectImageVectorToEllipsoid(s,this.averageElevation);let a;if(!isNaN(i[0])){const t=[];v([i[0],i[1],i[2]],f,0,t,d.WGS84,0),a=new p({x:t[0],y:t[1],z:t[2],spatialReference:d.WGS84})}return a}};t([o()],V.prototype,\"averageElevation\",void 0),t([o()],V.prototype,\"imageHeight\",void 0),t([o()],V.prototype,\"imageWidth\",void 0),t([o({readOnly:!0})],V.prototype,\"metadataSupportsTransforms\",void 0),t([o()],V.prototype,\"platformHeadingAngle\",void 0),t([o()],V.prototype,\"platformPitchAngle\",void 0),t([o()],V.prototype,\"platformRollAngle\",void 0),t([o()],V.prototype,\"sensorHeadingAngle\",void 0),t([o()],V.prototype,\"sensorAltitude\",void 0),t([o()],V.prototype,\"sensorHorizontalFieldOfView\",void 0),t([o()],V.prototype,\"sensorLatitude\",void 0),t([o()],V.prototype,\"sensorLongitude\",void 0),t([o()],V.prototype,\"sensorPitchAngle\",void 0),t([o()],V.prototype,\"sensorRollAngle\",void 0),t([o()],V.prototype,\"sensorVerticalFieldOfView\",void 0),t([o()],V.prototype,\"vttMetadata\",void 0),V=t([s(\"esri.layers.video.VideoCameraSensorModel\")],V);const y=V;export{y as default};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}