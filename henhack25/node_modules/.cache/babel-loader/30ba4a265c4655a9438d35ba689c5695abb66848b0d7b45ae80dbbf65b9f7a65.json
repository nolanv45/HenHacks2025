{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { _ as t } from \"../../../chunks/tslib.es6.js\";\nimport { property as r } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/has.js\";\nimport \"../../../core/Logger.js\";\nimport \"../../../core/RandomLCG.js\";\nimport { subclass as e } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport s from \"./BaseRasterFunction.js\";\nimport o from \"./CurvatureFunctionArguments.js\";\nimport { gcsFactor as i, curvature as n } from \"./surfaceUtils.js\";\nlet u = class extends s {\n  constructor() {\n    super(...arguments), this.functionName = \"Curvature\", this.functionArguments = null, this.rasterArgumentNames = [\"raster\"], this.isGCS = !1;\n  }\n  _bindSourceRasters() {\n    this.outputPixelType = this._getOutputPixelType(\"f32\");\n    const t = this.sourceRasterInfos[0].clone();\n    return t.pixelType = this.outputPixelType, t.bandCount = 1, this._removeStatsHistColormapVAT(t), this.rasterInfo = t, this.isGCS = t.spatialReference?.isGeographic ?? !1, {\n      success: !0,\n      supportsGPU: !0\n    };\n  }\n  _processPixels(t) {\n    const r = t.pixelBlocks?.[0];\n    if (null == r) return null;\n    const {\n        zFactor: e,\n        curvatureType: s\n      } = this.functionArguments,\n      {\n        extent: o,\n        primaryPixelSizes: u\n      } = t,\n      c = u?.[0],\n      a = c ?? (o ? {\n        x: o.width / r.width,\n        y: o.height / r.height\n      } : {\n        x: 1,\n        y: 1\n      }),\n      p = this.isGCS && e >= 1 ? e * i : e;\n    return n(r, {\n      zFactor: p,\n      curvatureType: s,\n      resolution: a\n    });\n  }\n  _getWebGLParameters() {\n    const {\n      zFactor: t,\n      curvatureType: r\n    } = this.functionArguments;\n    return {\n      curvatureType: r,\n      zFactor: this.isGCS && t >= 1 ? t * i : t\n    };\n  }\n};\nt([r({\n  json: {\n    write: !0,\n    name: \"rasterFunction\"\n  }\n})], u.prototype, \"functionName\", void 0), t([r({\n  type: o,\n  json: {\n    write: !0,\n    name: \"rasterFunctionArguments\"\n  }\n})], u.prototype, \"functionArguments\", void 0), t([r()], u.prototype, \"rasterArgumentNames\", void 0), t([r({\n  json: {\n    write: !0\n  }\n})], u.prototype, \"isGCS\", void 0), u = t([e(\"esri.layers.support.rasterFunctions.CurvatureFunction\")], u);\nconst c = u;\nexport { c as default };","map":{"version":3,"names":["_","t","property","r","subclass","e","s","o","gcsFactor","i","curvature","n","u","constructor","arguments","functionName","functionArguments","rasterArgumentNames","isGCS","_bindSourceRasters","outputPixelType","_getOutputPixelType","sourceRasterInfos","clone","pixelType","bandCount","_removeStatsHistColormapVAT","rasterInfo","spatialReference","isGeographic","success","supportsGPU","_processPixels","pixelBlocks","zFactor","curvatureType","extent","primaryPixelSizes","c","a","x","width","y","height","p","resolution","_getWebGLParameters","json","write","name","prototype","type","default"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/layers/support/rasterFunctions/CurvatureFunction.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{_ as t}from\"../../../chunks/tslib.es6.js\";import{property as r}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/has.js\";import\"../../../core/Logger.js\";import\"../../../core/RandomLCG.js\";import{subclass as e}from\"../../../core/accessorSupport/decorators/subclass.js\";import s from\"./BaseRasterFunction.js\";import o from\"./CurvatureFunctionArguments.js\";import{gcsFactor as i,curvature as n}from\"./surfaceUtils.js\";let u=class extends s{constructor(){super(...arguments),this.functionName=\"Curvature\",this.functionArguments=null,this.rasterArgumentNames=[\"raster\"],this.isGCS=!1}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType(\"f32\");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,t.bandCount=1,this._removeStatsHistColormapVAT(t),this.rasterInfo=t,this.isGCS=t.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const r=t.pixelBlocks?.[0];if(null==r)return null;const{zFactor:e,curvatureType:s}=this.functionArguments,{extent:o,primaryPixelSizes:u}=t,c=u?.[0],a=c??(o?{x:o.width/r.width,y:o.height/r.height}:{x:1,y:1}),p=this.isGCS&&e>=1?e*i:e;return n(r,{zFactor:p,curvatureType:s,resolution:a})}_getWebGLParameters(){const{zFactor:t,curvatureType:r}=this.functionArguments;return{curvatureType:r,zFactor:this.isGCS&&t>=1?t*i:t}}};t([r({json:{write:!0,name:\"rasterFunction\"}})],u.prototype,\"functionName\",void 0),t([r({type:o,json:{write:!0,name:\"rasterFunctionArguments\"}})],u.prototype,\"functionArguments\",void 0),t([r()],u.prototype,\"rasterArgumentNames\",void 0),t([r({json:{write:!0}})],u.prototype,\"isGCS\",void 0),u=t([e(\"esri.layers.support.rasterFunctions.CurvatureFunction\")],u);const c=u;export{c as default};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}