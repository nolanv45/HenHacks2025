{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport e from \"../../../Graphic.js\";\nimport { cloneGeometry as t } from \"../../kernel.js\";\nimport { FeatureSetError as r, FeatureSetErrorCodes as s } from \"../support/errorsupport.js\";\nimport a from \"../support/FeatureSet.js\";\nimport i from \"../support/IdSet.js\";\nimport { cloneField as l, FeatureServiceDatabaseType as n, isDate as o, isLuxonDate as u, isArcadeTime as h, isArcadeDate as c, isArcadeDateOnly as d, layerGeometryEsriConstants as p } from \"../support/shared.js\";\nimport { reformulateWithoutField as f, toWhereClause as g, translateFunctionToDatabaseSpecific as N, convertColumnReferenceToSql as _, makeToday as S, makeSqlFromDateTimeParameter as m, makeTimeString as w, arcadeDateToSqlString as v, arcadeDateOnlyToSqlString as C, convertIntervalToSql as T, combine as F, scanForField as W } from \"../support/sqlUtils.js\";\nimport { assertIsSome as y } from \"../../../core/maybe.js\";\nimport { SqlError as A, SqlErrorCodes as E } from \"../../../core/sql/errorSupport.js\";\nimport x from \"../../../core/sql/WhereClause.js\";\nimport D from \"../../../geometry/SpatialReference.js\";\nclass I {\n  constructor(e) {\n    this.field = e, this.sqlRewritable = !1;\n  }\n  postInitialization(e, t) {}\n}\nclass k extends I {\n  constructor(e) {\n    super(e), this.sqlRewritable = !0;\n  }\n  extractValue(e) {\n    return e.attributes[this.field.name];\n  }\n  rewriteSql(e) {\n    return {\n      rewritten: this.sqlRewritable,\n      where: e\n    };\n  }\n}\nclass b extends I {\n  constructor(e, t, r) {\n    super(l(e)), this.originalField = e, this.sqlRewritable = !0, this.field.name = t, this.field.alias = r;\n  }\n  rewriteSql(e, t) {\n    return {\n      rewritten: this.sqlRewritable,\n      where: f(e, this.field.name, this.originalField.name, t.getFieldsIndex())\n    };\n  }\n  extractValue(e) {\n    return e.attributes[this.originalField.name];\n  }\n}\nclass B extends I {\n  constructor(e, t, r) {\n    super(e), this.codefield = t, this.lkp = r, this.reverseLkp = {};\n    for (const s in r) this.reverseLkp[r[s]] = s;\n    this.sqlRewritable = !0;\n  }\n  rewriteSql(e, t) {\n    const r = this.evaluateNodeToWhereClause(e.parseTree, n.Standardised, this.field.name, this.codefield instanceof x ? g(this.codefield, n.Standardised) : this.codefield, e.parameters);\n    return r.includes(B.BADNESS) ? {\n      rewritten: !1,\n      where: e\n    } : {\n      rewritten: this.sqlRewritable,\n      where: x.create(r, {\n        fieldsIndex: t._parent.getFieldsIndex(),\n        timeZone: t.dateFieldsTimeZoneDefaultUTC\n      })\n    };\n  }\n  evaluateNodeToWhereClause(e, t) {\n    let r = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    let s = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n    let a = arguments.length > 4 ? arguments[4] : undefined;\n    let i, l, n, p;\n    switch (e.type) {\n      case \"interval\":\n        return T(this.evaluateNodeToWhereClause(e.value, t, r, s, a), e.qualifier, e.op);\n      case \"case-expression\":\n        {\n          let s = \" CASE \";\n          \"simple\" === e.format && (s += this.evaluateNodeToWhereClause(e.operand, t, r, B.BADNESS, a));\n          for (let i = 0; i < e.clauses.length; i++) s += \" WHEN \" + this.evaluateNodeToWhereClause(e.clauses[i].operand, t, r, B.BADNESS, a) + \" THEN \" + this.evaluateNodeToWhereClause(e.clauses[i].value, t, r, B.BADNESS, a);\n          return null !== e.else && (s += \" ELSE \" + this.evaluateNodeToWhereClause(e.else, t, r, B.BADNESS, a)), s += \" END \", s;\n        }\n      case \"parameter\":\n        {\n          const r = a[e.value.toLowerCase()];\n          if (\"string\" == typeof r) return \"'\" + r.toString().replaceAll(\"'\", \"''\") + \"'\";\n          if (o(r)) return m(r, t);\n          if (u(r)) return m(r, t);\n          if (h(r)) return w(r, t);\n          if (c(r)) return v(r, t);\n          if (d(r)) return C(r, t);\n          if (Array.isArray(r)) {\n            const e = [];\n            for (let s = 0; s < r.length; s++) \"string\" == typeof r[s] ? e.push(\"'\" + r[s].toString().replaceAll(\"'\", \"''\") + \"'\") : o(r[s]) || u(r[s]) ? e.push(m(r[s], t)) : h(r[s]) ? e.push(w(r[s], t)) : c(r[s]) ? e.push(v(r[s], t)) : d(r[s]) ? e.push(C(r[s], t)) : e.push(r[s].toString());\n            return e;\n          }\n          return r.toString();\n        }\n      case \"expression-list\":\n        l = [];\n        for (const i of e.value) l.push(this.evaluateNodeToWhereClause(i, t, r, s, a));\n        return l;\n      case \"unary-expression\":\n        return \" ( NOT \" + this.evaluateNodeToWhereClause(e.expr, t, r, B.BADNESS, a) + \" ) \";\n      case \"binary-expression\":\n        switch (e.operator) {\n          case \"AND\":\n            return \" (\" + this.evaluateNodeToWhereClause(e.left, t, r, s, a) + \" AND \" + this.evaluateNodeToWhereClause(e.right, t, r, s, a) + \") \";\n          case \"OR\":\n            return \" (\" + this.evaluateNodeToWhereClause(e.left, t, r, s, a) + \" OR \" + this.evaluateNodeToWhereClause(e.right, t, r, s, a) + \") \";\n          case \"IS\":\n            if (\"null\" !== e.right.type) throw new A(E.UnsupportedIsRhs);\n            return \" (\" + this.evaluateNodeToWhereClause(e.left, t, r, s, a) + \" IS NULL )\";\n          case \"ISNOT\":\n            if (\"null\" !== e.right.type) throw new A(E.UnsupportedIsRhs);\n            return \" (\" + this.evaluateNodeToWhereClause(e.left, t, r, s, a) + \" IS NOT NULL )\";\n          case \"IN\":\n            if (i = [], \"expression-list\" === e.right.type) {\n              if (\"column-reference\" === e.left.type && e.left.column.toUpperCase() === this.field.name.toUpperCase()) {\n                const i = [];\n                let l = !0;\n                for (const t of e.right.value) {\n                  if (\"string\" !== t.type) {\n                    l = !1;\n                    break;\n                  }\n                  if (void 0 === this.lkp[t.value]) {\n                    l = !1;\n                    break;\n                  }\n                  i.push(this.lkp[t.value].toString());\n                }\n                if (l) return \" (\" + this.evaluateNodeToWhereClause(e.left, t, r, s, a) + \" IN (\" + i.join(\",\") + \")) \";\n              }\n              return i = this.evaluateNodeToWhereClause(e.right, t, r, s, a), \" (\" + this.evaluateNodeToWhereClause(e.left, t, r, s, a) + \" IN (\" + i.join(\",\") + \")) \";\n            }\n            return p = this.evaluateNodeToWhereClause(e.right, t, r, s, a), Array.isArray(p) ? \" (\" + this.evaluateNodeToWhereClause(e.left, t, r, s, a) + \" IN (\" + p.join(\",\") + \")) \" : \" (\" + this.evaluateNodeToWhereClause(e.left, t, r, s, a) + \" IN (\" + p + \")) \";\n          case \"NOT IN\":\n            if (i = [], \"expression-list\" === e.right.type) {\n              if (\"column-reference\" === e.left.type && e.left.column.toUpperCase() === this.field.name.toUpperCase()) {\n                const i = [];\n                let l = !0;\n                for (const t of e.right.value) {\n                  if (\"string\" !== t.type) {\n                    l = !1;\n                    break;\n                  }\n                  if (void 0 === this.lkp[t.value]) {\n                    l = !1;\n                    break;\n                  }\n                  i.push(this.lkp[t.value].toString());\n                }\n                if (l) return \" (\" + this.evaluateNodeToWhereClause(e.left, t, r, s, a) + \" NOT IN (\" + i.join(\",\") + \")) \";\n              }\n              return i = this.evaluateNodeToWhereClause(e.right, t, r, s, a), \" (\" + this.evaluateNodeToWhereClause(e.left, t, r, s, a) + \" NOT IN (\" + i.join(\",\") + \")) \";\n            }\n            return p = this.evaluateNodeToWhereClause(e.right, t, r, s, a), Array.isArray(p) ? \" (\" + this.evaluateNodeToWhereClause(e.left, t, r, s, a) + \" NOT IN (\" + p.join(\",\") + \")) \" : \" (\" + this.evaluateNodeToWhereClause(e.left, t, r, s, a) + \" NOT IN (\" + p + \")) \";\n          case \"BETWEEN\":\n            return n = this.evaluateNodeToWhereClause(e.right, t, r, B.BADNESS, a), \" (\" + this.evaluateNodeToWhereClause(e.left, t, r, B.BADNESS, a) + \" BETWEEN \" + n[0] + \" AND \" + n[1] + \" ) \";\n          case \"NOTBETWEEN\":\n            return n = this.evaluateNodeToWhereClause(e.right, t, r, B.BADNESS, a), \" (\" + this.evaluateNodeToWhereClause(e.left, t, r, B.BADNESS, a) + \" NOT BETWEEN \" + n[0] + \" AND \" + n[1] + \" ) \";\n          case \"LIKE\":\n            return \"\" !== e.escape ? \" (\" + this.evaluateNodeToWhereClause(e.left, t, r, B.BADNESS, a) + \" LIKE \" + this.evaluateNodeToWhereClause(e.right, t, r, B.BADNESS, a) + \" ESCAPE '\" + e.escape + \"') \" : \" (\" + this.evaluateNodeToWhereClause(e.left, t, r, B.BADNESS, a) + \" LIKE \" + this.evaluateNodeToWhereClause(e.right, t, r, B.BADNESS, a) + \") \";\n          case \"NOT LIKE\":\n            return \"\" !== e.escape ? \" (\" + this.evaluateNodeToWhereClause(e.left, t, r, B.BADNESS, a) + \" NOT LIKE \" + this.evaluateNodeToWhereClause(e.right, t, r, B.BADNESS, a) + \" ESCAPE '\" + e.escape + \"') \" : \" (\" + this.evaluateNodeToWhereClause(e.left, t, r, B.BADNESS, a) + \" NOT LIKE \" + this.evaluateNodeToWhereClause(e.right, t, r, B.BADNESS, a) + \") \";\n          case \"<>\":\n          case \"=\":\n            if (\"column-reference\" === e.left.type && \"string\" === e.right.type) {\n              if (e.left.column.toUpperCase() === this.field.name.toUpperCase() && void 0 !== this.lkp[e.right.value.toString()]) return \" (\" + s + \" \" + e.operator + \" \" + this.lkp[e.right.value.toString()].toString() + \") \";\n            } else if (\"column-reference\" === e.right.type && \"string\" === e.left.type && e.right.column.toUpperCase() === this.field.name.toUpperCase()) return \" (\" + this.lkp[e.right.value.toString()].toString() + \" \" + e.operator + \" \" + s + \") \";\n            return \" (\" + this.evaluateNodeToWhereClause(e.left, t, r, B.BADNESS, a) + \" \" + e.operator + \" \" + this.evaluateNodeToWhereClause(e.right, t, r, B.BADNESS, a) + \") \";\n          case \"<\":\n          case \">\":\n          case \">=\":\n          case \"<=\":\n          case \"*\":\n          case \"-\":\n          case \"+\":\n          case \"/\":\n          case \"||\":\n            return \" (\" + this.evaluateNodeToWhereClause(e.left, t, r, B.BADNESS, a) + \" \" + e.operator + \" \" + this.evaluateNodeToWhereClause(e.right, t, r, B.BADNESS, a) + \") \";\n        }\n      case \"null\":\n        return \"null\";\n      case \"boolean\":\n        return !0 === e.value ? \"1\" : \"0\";\n      case \"string\":\n        return \"'\" + e.value.toString().replaceAll(\"'\", \"''\") + \"'\";\n      case \"timestamp\":\n        return `timestamp '${e.value}'`;\n      case \"date\":\n        return `date '${e.value}'`;\n      case \"time\":\n        return `time '${e.value}'`;\n      case \"number\":\n        return e.value.toString();\n      case \"current-time\":\n        return S(e.mode, t);\n      case \"current-user\":\n        return \"CURRENT_USER\";\n      case \"column-reference\":\n        return r && r.toLowerCase() === e.column.toLowerCase() ? \"(\" + s + \")\" : _(e.column);\n      case \"data-type\":\n        return e.value;\n      case \"function\":\n        {\n          const s = this.evaluateNodeToWhereClause(e.args, t, r, B.BADNESS, a);\n          return N(e.name, s, t);\n        }\n    }\n    throw new A(E.UnsupportedSyntax, {\n      node: e.type\n    });\n  }\n  extractValue(e) {\n    return this.codefield instanceof x ? this.reverseLkp[x.convertValueToStorageFormat(this.codefield.calculateValueCompiled(e))] : this.reverseLkp[e.attributes[this.codefield]];\n  }\n}\nB.BADNESS = \"_!!!_BAD_LKP_!!!!\";\nclass L extends I {\n  constructor(e, t) {\n    super(e), this._sql = t;\n  }\n  rewriteSql(e, t) {\n    return {\n      rewritten: !0,\n      where: f(e, this.field.name, g(this._sql, n.Standardised), t.getFieldsIndex())\n    };\n  }\n  extractValue(e) {\n    return x.convertValueToStorageFormat(this._sql.calculateValueCompiled(e), this.field.type);\n  }\n}\nclass R extends a {\n  static findField(e, t) {\n    for (const r of e) if (r.name.toLowerCase() === t.toString().toLowerCase()) return r;\n    return null;\n  }\n  constructor(e) {\n    super(e), this._calcFunc = null, this.declaredClass = \"esri.arcade.featureset.actions.Adapted\", this.adaptedFields = [], this._extraFilter = null, this._extraFilter = e.extraFilter, this._parent = e.parentfeatureset, this._maxProcessing = 30, this.adaptedFields = e.adaptedFields;\n  }\n  _initialiseFeatureSet() {\n    null !== this._parent ? (this.geometryType = this._parent.geometryType, this.objectIdField = this._parent.objectIdField, this.globalIdField = this._parent.globalIdField, this.spatialReference = this._parent.spatialReference, this.hasM = this._parent.hasM, this.hasZ = this._parent.hasZ, this.typeIdField = this._parent.typeIdField, this.types = this._parent.types) : (this.spatialReference = new D({\n      wkid: 4326\n    }), this.objectIdField = \"\", this.globalIdField = \"\", this.geometryType = p.point, this.typeIdField = \"\", this.types = null, this.subtypeField = null, this.subtypes = null), this.fields = [];\n    for (const e of this.adaptedFields) e.postInitialization(this, this._parent), this.fields.push(e.field);\n  }\n  async _getSet(e) {\n    if (null === this._wset) {\n      await this._ensureLoaded();\n      let t = null;\n      return t = this._extraFilter ? await this._getFilteredSet(\"\", null, null, null, e) : await this._parent?._getSet(e), this._checkCancelled(e), y(t), this._wset = new i(t._candidates.slice(), t._known.slice(), t._ordered, this._clonePageDefinition(t.pagesDefinition)), this._wset;\n    }\n    return this._wset;\n  }\n  _isInFeatureSet(e) {\n    return this._parent._isInFeatureSet(e);\n  }\n  async _getFeatures(r, s, a, l) {\n    const n = [];\n    -1 !== s && void 0 === this._featureCache[s] && n.push(s);\n    const o = this._maxQueryRate();\n    if (!0 === this._checkIfNeedToExpandKnownPage(r, o)) return await this._expandPagedSet(r, o, 0, 0, l), this._getFeatures(r, s, a, l);\n    let u = 0;\n    for (let e = r._lastFetchedIndex; e < r._known.length && (u++, u <= a && (r._lastFetchedIndex += 1), !(void 0 === this._featureCache[r._known[e]] && (r._known[e] !== s && n.push(r._known[e]), n.length >= o))); e++);\n    if (0 === n.length) return \"success\";\n    r = new i([], n, r._ordered, null);\n    const h = Math.min(n.length, a);\n    await this._parent?._getFeatures(r, -1, h, l), this._checkCancelled(l);\n    const c = [];\n    for (let e = 0; e < h; e++) {\n      const t = this._parent?._featureFromCache(n[e]);\n      void 0 !== t && c.push({\n        geometry: t.geometry,\n        attributes: t.attributes,\n        id: n[e]\n      });\n    }\n    for (const i of c) {\n      const r = [];\n      for (const e of this.adaptedFields) r[e.field.name] = e.extractValue(i);\n      this._featureCache[i.id] = new e({\n        attributes: r,\n        geometry: t(i.geometry)\n      });\n    }\n    return \"success\";\n  }\n  async _fetchAndRefineFeatures() {\n    throw new r(s.NeverReach);\n  }\n  async _getFilteredSet(e, t, r, s, a) {\n    let l = !1;\n    const n = this._reformulateWithoutAdaptions(r);\n    l = n.cannot, r = n.where;\n    let o = !1;\n    if (null !== s) {\n      o = !0;\n      const e = [];\n      for (const t of this.adaptedFields) if (!(t instanceof k) && !0 === s.scanForField(t.field.name)) {\n        if (!(t instanceof b)) {\n          s = null, o = !1;\n          break;\n        }\n        e.push({\n          field: t.field.name,\n          newfield: t.originalField.name\n        });\n      }\n      s && e.length > 0 && (s = s.replaceFields(e));\n    }\n    null !== r ? null !== this._extraFilter && (r = F(this._extraFilter, r)) : r = this._extraFilter, await this._ensureLoaded();\n    const u = await this._parent._getFilteredSet(e, t, r, s, a);\n    let h;\n    return this._checkCancelled(a), h = !0 === l ? new i(u._candidates.slice().concat(u._known.slice()), [], !0 === o && u._ordered, this._clonePageDefinition(u.pagesDefinition)) : new i(u._candidates.slice(), u._known.slice(), !0 === o && u._ordered, this._clonePageDefinition(u.pagesDefinition)), h;\n  }\n  _reformulateWithoutAdaptions(e) {\n    const t = {\n      cannot: !1,\n      where: e\n    };\n    if (null !== e) for (const r of this.adaptedFields) if (!0 === W(e, r.field.name)) {\n      const s = r.rewriteSql(e, this);\n      if (!0 !== s.rewritten) {\n        t.cannot = !0, t.where = null;\n        break;\n      }\n      t.where = s.where;\n    }\n    return t;\n  }\n  async _stat(e, t, r, s, a, i, l) {\n    let n = !1,\n      o = this._reformulateWithoutAdaptions(t);\n    if (n = o.cannot, t = o.where, o = this._reformulateWithoutAdaptions(a), n = n || o.cannot, null !== (a = o.where) ? null !== this._extraFilter && (a = F(this._extraFilter, a)) : a = this._extraFilter, !0 === n) return null === a && \"\" === r && null === s ? this._manualStat(e, t, i, l) : {\n      calculated: !1\n    };\n    const u = await this._parent._stat(e, t, r, s, a, i, l);\n    return !1 === u.calculated ? null === a && \"\" === r && null === s ? this._manualStat(e, t, i, l) : {\n      calculated: !1\n    } : u;\n  }\n  async _canDoAggregates(e, t, r, s, a) {\n    if (null === this._parent) return !1;\n    for (let n = 0; n < e.length; n++) for (const t of this.adaptedFields) if (e[n].toLowerCase() === t.field.name.toLowerCase() && !(t instanceof k)) return !1;\n    const i = [];\n    for (let n = 0; n < t.length; n++) {\n      const e = t[n];\n      if (null !== e.workingexpr) {\n        const t = this._reformulateWithoutAdaptions(e.workingexpr);\n        if (t.cannot) return !1;\n        const r = e.clone();\n        r.workingexpr = t.where, i.push(r);\n      } else i.push(e);\n    }\n    const l = this._reformulateWithoutAdaptions(a);\n    return !l.cannot && (null !== (a = l.where) ? null !== this._extraFilter && (a = F(this._extraFilter, a)) : a = this._extraFilter, this._parent._canDoAggregates(e, i, r, s, a));\n  }\n  async _getAggregatePagesDataSourceDefinition(e, t, a, i, l, n, o) {\n    if (null === this._parent) throw new r(s.NeverReach);\n    const u = [];\n    for (let c = 0; c < t.length; c++) {\n      const e = t[c];\n      if (null !== e.workingexpr) {\n        const t = this._reformulateWithoutAdaptions(e.workingexpr);\n        if (t.cannot) throw new r(s.NeverReach);\n        const a = e.clone();\n        a.workingexpr = t.where, u.push(a);\n      } else u.push(e);\n    }\n    const h = this._reformulateWithoutAdaptions(l);\n    if (h.cannot) throw new r(s.NeverReach);\n    return null !== (l = h.where) ? null !== this._extraFilter && (l = F(this._extraFilter, l)) : l = this._extraFilter, this._parent._getAggregatePagesDataSourceDefinition(e, u, a, i, l, n, o);\n  }\n}\nexport { R as AdaptedFeatureSet, I as AdaptedField, b as FieldRename, k as OriginalField, L as SqlExpressionAdapted, B as StringToCodeAdapted };","map":{"version":3,"names":["e","cloneGeometry","t","FeatureSetError","r","FeatureSetErrorCodes","s","a","i","cloneField","l","FeatureServiceDatabaseType","n","isDate","o","isLuxonDate","u","isArcadeTime","h","isArcadeDate","c","isArcadeDateOnly","d","layerGeometryEsriConstants","p","reformulateWithoutField","f","toWhereClause","g","translateFunctionToDatabaseSpecific","N","convertColumnReferenceToSql","_","makeToday","S","makeSqlFromDateTimeParameter","m","makeTimeString","w","arcadeDateToSqlString","v","arcadeDateOnlyToSqlString","C","convertIntervalToSql","T","combine","F","scanForField","W","assertIsSome","y","SqlError","A","SqlErrorCodes","E","x","D","I","constructor","field","sqlRewritable","postInitialization","k","extractValue","attributes","name","rewriteSql","rewritten","where","b","originalField","alias","getFieldsIndex","B","codefield","lkp","reverseLkp","evaluateNodeToWhereClause","parseTree","Standardised","parameters","includes","BADNESS","create","fieldsIndex","_parent","timeZone","dateFieldsTimeZoneDefaultUTC","arguments","length","undefined","type","value","qualifier","op","format","operand","clauses","else","toLowerCase","toString","replaceAll","Array","isArray","push","expr","operator","left","right","UnsupportedIsRhs","column","toUpperCase","join","escape","mode","args","UnsupportedSyntax","node","convertValueToStorageFormat","calculateValueCompiled","L","_sql","R","findField","_calcFunc","declaredClass","adaptedFields","_extraFilter","extraFilter","parentfeatureset","_maxProcessing","_initialiseFeatureSet","geometryType","objectIdField","globalIdField","spatialReference","hasM","hasZ","typeIdField","types","wkid","point","subtypeField","subtypes","fields","_getSet","_wset","_ensureLoaded","_getFilteredSet","_checkCancelled","_candidates","slice","_known","_ordered","_clonePageDefinition","pagesDefinition","_isInFeatureSet","_getFeatures","_featureCache","_maxQueryRate","_checkIfNeedToExpandKnownPage","_expandPagedSet","_lastFetchedIndex","Math","min","_featureFromCache","geometry","id","_fetchAndRefineFeatures","NeverReach","_reformulateWithoutAdaptions","cannot","newfield","replaceFields","concat","_stat","_manualStat","calculated","_canDoAggregates","workingexpr","clone","_getAggregatePagesDataSourceDefinition","AdaptedFeatureSet","AdaptedField","FieldRename","OriginalField","SqlExpressionAdapted","StringToCodeAdapted"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/arcade/featureset/actions/Adapted.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport e from\"../../../Graphic.js\";import{cloneGeometry as t}from\"../../kernel.js\";import{FeatureSetError as r,FeatureSetErrorCodes as s}from\"../support/errorsupport.js\";import a from\"../support/FeatureSet.js\";import i from\"../support/IdSet.js\";import{cloneField as l,FeatureServiceDatabaseType as n,isDate as o,isLuxonDate as u,isArcadeTime as h,isArcadeDate as c,isArcadeDateOnly as d,layerGeometryEsriConstants as p}from\"../support/shared.js\";import{reformulateWithoutField as f,toWhereClause as g,translateFunctionToDatabaseSpecific as N,convertColumnReferenceToSql as _,makeToday as S,makeSqlFromDateTimeParameter as m,makeTimeString as w,arcadeDateToSqlString as v,arcadeDateOnlyToSqlString as C,convertIntervalToSql as T,combine as F,scanForField as W}from\"../support/sqlUtils.js\";import{assertIsSome as y}from\"../../../core/maybe.js\";import{SqlError as A,SqlErrorCodes as E}from\"../../../core/sql/errorSupport.js\";import x from\"../../../core/sql/WhereClause.js\";import D from\"../../../geometry/SpatialReference.js\";class I{constructor(e){this.field=e,this.sqlRewritable=!1}postInitialization(e,t){}}class k extends I{constructor(e){super(e),this.sqlRewritable=!0}extractValue(e){return e.attributes[this.field.name]}rewriteSql(e){return{rewritten:this.sqlRewritable,where:e}}}class b extends I{constructor(e,t,r){super(l(e)),this.originalField=e,this.sqlRewritable=!0,this.field.name=t,this.field.alias=r}rewriteSql(e,t){return{rewritten:this.sqlRewritable,where:f(e,this.field.name,this.originalField.name,t.getFieldsIndex())}}extractValue(e){return e.attributes[this.originalField.name]}}class B extends I{constructor(e,t,r){super(e),this.codefield=t,this.lkp=r,this.reverseLkp={};for(const s in r)this.reverseLkp[r[s]]=s;this.sqlRewritable=!0}rewriteSql(e,t){const r=this.evaluateNodeToWhereClause(e.parseTree,n.Standardised,this.field.name,this.codefield instanceof x?g(this.codefield,n.Standardised):this.codefield,e.parameters);return r.includes(B.BADNESS)?{rewritten:!1,where:e}:{rewritten:this.sqlRewritable,where:x.create(r,{fieldsIndex:t._parent.getFieldsIndex(),timeZone:t.dateFieldsTimeZoneDefaultUTC})}}evaluateNodeToWhereClause(e,t,r=null,s=null,a){let i,l,n,p;switch(e.type){case\"interval\":return T(this.evaluateNodeToWhereClause(e.value,t,r,s,a),e.qualifier,e.op);case\"case-expression\":{let s=\" CASE \";\"simple\"===e.format&&(s+=this.evaluateNodeToWhereClause(e.operand,t,r,B.BADNESS,a));for(let i=0;i<e.clauses.length;i++)s+=\" WHEN \"+this.evaluateNodeToWhereClause(e.clauses[i].operand,t,r,B.BADNESS,a)+\" THEN \"+this.evaluateNodeToWhereClause(e.clauses[i].value,t,r,B.BADNESS,a);return null!==e.else&&(s+=\" ELSE \"+this.evaluateNodeToWhereClause(e.else,t,r,B.BADNESS,a)),s+=\" END \",s}case\"parameter\":{const r=a[e.value.toLowerCase()];if(\"string\"==typeof r)return\"'\"+r.toString().replaceAll(\"'\",\"''\")+\"'\";if(o(r))return m(r,t);if(u(r))return m(r,t);if(h(r))return w(r,t);if(c(r))return v(r,t);if(d(r))return C(r,t);if(Array.isArray(r)){const e=[];for(let s=0;s<r.length;s++)\"string\"==typeof r[s]?e.push(\"'\"+r[s].toString().replaceAll(\"'\",\"''\")+\"'\"):o(r[s])||u(r[s])?e.push(m(r[s],t)):h(r[s])?e.push(w(r[s],t)):c(r[s])?e.push(v(r[s],t)):d(r[s])?e.push(C(r[s],t)):e.push(r[s].toString());return e}return r.toString()}case\"expression-list\":l=[];for(const i of e.value)l.push(this.evaluateNodeToWhereClause(i,t,r,s,a));return l;case\"unary-expression\":return\" ( NOT \"+this.evaluateNodeToWhereClause(e.expr,t,r,B.BADNESS,a)+\" ) \";case\"binary-expression\":switch(e.operator){case\"AND\":return\" (\"+this.evaluateNodeToWhereClause(e.left,t,r,s,a)+\" AND \"+this.evaluateNodeToWhereClause(e.right,t,r,s,a)+\") \";case\"OR\":return\" (\"+this.evaluateNodeToWhereClause(e.left,t,r,s,a)+\" OR \"+this.evaluateNodeToWhereClause(e.right,t,r,s,a)+\") \";case\"IS\":if(\"null\"!==e.right.type)throw new A(E.UnsupportedIsRhs);return\" (\"+this.evaluateNodeToWhereClause(e.left,t,r,s,a)+\" IS NULL )\";case\"ISNOT\":if(\"null\"!==e.right.type)throw new A(E.UnsupportedIsRhs);return\" (\"+this.evaluateNodeToWhereClause(e.left,t,r,s,a)+\" IS NOT NULL )\";case\"IN\":if(i=[],\"expression-list\"===e.right.type){if(\"column-reference\"===e.left.type&&e.left.column.toUpperCase()===this.field.name.toUpperCase()){const i=[];let l=!0;for(const t of e.right.value){if(\"string\"!==t.type){l=!1;break}if(void 0===this.lkp[t.value]){l=!1;break}i.push(this.lkp[t.value].toString())}if(l)return\" (\"+this.evaluateNodeToWhereClause(e.left,t,r,s,a)+\" IN (\"+i.join(\",\")+\")) \"}return i=this.evaluateNodeToWhereClause(e.right,t,r,s,a),\" (\"+this.evaluateNodeToWhereClause(e.left,t,r,s,a)+\" IN (\"+i.join(\",\")+\")) \"}return p=this.evaluateNodeToWhereClause(e.right,t,r,s,a),Array.isArray(p)?\" (\"+this.evaluateNodeToWhereClause(e.left,t,r,s,a)+\" IN (\"+p.join(\",\")+\")) \":\" (\"+this.evaluateNodeToWhereClause(e.left,t,r,s,a)+\" IN (\"+p+\")) \";case\"NOT IN\":if(i=[],\"expression-list\"===e.right.type){if(\"column-reference\"===e.left.type&&e.left.column.toUpperCase()===this.field.name.toUpperCase()){const i=[];let l=!0;for(const t of e.right.value){if(\"string\"!==t.type){l=!1;break}if(void 0===this.lkp[t.value]){l=!1;break}i.push(this.lkp[t.value].toString())}if(l)return\" (\"+this.evaluateNodeToWhereClause(e.left,t,r,s,a)+\" NOT IN (\"+i.join(\",\")+\")) \"}return i=this.evaluateNodeToWhereClause(e.right,t,r,s,a),\" (\"+this.evaluateNodeToWhereClause(e.left,t,r,s,a)+\" NOT IN (\"+i.join(\",\")+\")) \"}return p=this.evaluateNodeToWhereClause(e.right,t,r,s,a),Array.isArray(p)?\" (\"+this.evaluateNodeToWhereClause(e.left,t,r,s,a)+\" NOT IN (\"+p.join(\",\")+\")) \":\" (\"+this.evaluateNodeToWhereClause(e.left,t,r,s,a)+\" NOT IN (\"+p+\")) \";case\"BETWEEN\":return n=this.evaluateNodeToWhereClause(e.right,t,r,B.BADNESS,a),\" (\"+this.evaluateNodeToWhereClause(e.left,t,r,B.BADNESS,a)+\" BETWEEN \"+n[0]+\" AND \"+n[1]+\" ) \";case\"NOTBETWEEN\":return n=this.evaluateNodeToWhereClause(e.right,t,r,B.BADNESS,a),\" (\"+this.evaluateNodeToWhereClause(e.left,t,r,B.BADNESS,a)+\" NOT BETWEEN \"+n[0]+\" AND \"+n[1]+\" ) \";case\"LIKE\":return\"\"!==e.escape?\" (\"+this.evaluateNodeToWhereClause(e.left,t,r,B.BADNESS,a)+\" LIKE \"+this.evaluateNodeToWhereClause(e.right,t,r,B.BADNESS,a)+\" ESCAPE '\"+e.escape+\"') \":\" (\"+this.evaluateNodeToWhereClause(e.left,t,r,B.BADNESS,a)+\" LIKE \"+this.evaluateNodeToWhereClause(e.right,t,r,B.BADNESS,a)+\") \";case\"NOT LIKE\":return\"\"!==e.escape?\" (\"+this.evaluateNodeToWhereClause(e.left,t,r,B.BADNESS,a)+\" NOT LIKE \"+this.evaluateNodeToWhereClause(e.right,t,r,B.BADNESS,a)+\" ESCAPE '\"+e.escape+\"') \":\" (\"+this.evaluateNodeToWhereClause(e.left,t,r,B.BADNESS,a)+\" NOT LIKE \"+this.evaluateNodeToWhereClause(e.right,t,r,B.BADNESS,a)+\") \";case\"<>\":case\"=\":if(\"column-reference\"===e.left.type&&\"string\"===e.right.type){if(e.left.column.toUpperCase()===this.field.name.toUpperCase()&&void 0!==this.lkp[e.right.value.toString()])return\" (\"+s+\" \"+e.operator+\" \"+this.lkp[e.right.value.toString()].toString()+\") \"}else if(\"column-reference\"===e.right.type&&\"string\"===e.left.type&&e.right.column.toUpperCase()===this.field.name.toUpperCase())return\" (\"+this.lkp[e.right.value.toString()].toString()+\" \"+e.operator+\" \"+s+\") \";return\" (\"+this.evaluateNodeToWhereClause(e.left,t,r,B.BADNESS,a)+\" \"+e.operator+\" \"+this.evaluateNodeToWhereClause(e.right,t,r,B.BADNESS,a)+\") \";case\"<\":case\">\":case\">=\":case\"<=\":case\"*\":case\"-\":case\"+\":case\"/\":case\"||\":return\" (\"+this.evaluateNodeToWhereClause(e.left,t,r,B.BADNESS,a)+\" \"+e.operator+\" \"+this.evaluateNodeToWhereClause(e.right,t,r,B.BADNESS,a)+\") \"}case\"null\":return\"null\";case\"boolean\":return!0===e.value?\"1\":\"0\";case\"string\":return\"'\"+e.value.toString().replaceAll(\"'\",\"''\")+\"'\";case\"timestamp\":return`timestamp '${e.value}'`;case\"date\":return`date '${e.value}'`;case\"time\":return`time '${e.value}'`;case\"number\":return e.value.toString();case\"current-time\":return S(e.mode,t);case\"current-user\":return\"CURRENT_USER\";case\"column-reference\":return r&&r.toLowerCase()===e.column.toLowerCase()?\"(\"+s+\")\":_(e.column);case\"data-type\":return e.value;case\"function\":{const s=this.evaluateNodeToWhereClause(e.args,t,r,B.BADNESS,a);return N(e.name,s,t)}}throw new A(E.UnsupportedSyntax,{node:e.type})}extractValue(e){return this.codefield instanceof x?this.reverseLkp[x.convertValueToStorageFormat(this.codefield.calculateValueCompiled(e))]:this.reverseLkp[e.attributes[this.codefield]]}}B.BADNESS=\"_!!!_BAD_LKP_!!!!\";class L extends I{constructor(e,t){super(e),this._sql=t}rewriteSql(e,t){return{rewritten:!0,where:f(e,this.field.name,g(this._sql,n.Standardised),t.getFieldsIndex())}}extractValue(e){return x.convertValueToStorageFormat(this._sql.calculateValueCompiled(e),this.field.type)}}class R extends a{static findField(e,t){for(const r of e)if(r.name.toLowerCase()===t.toString().toLowerCase())return r;return null}constructor(e){super(e),this._calcFunc=null,this.declaredClass=\"esri.arcade.featureset.actions.Adapted\",this.adaptedFields=[],this._extraFilter=null,this._extraFilter=e.extraFilter,this._parent=e.parentfeatureset,this._maxProcessing=30,this.adaptedFields=e.adaptedFields}_initialiseFeatureSet(){null!==this._parent?(this.geometryType=this._parent.geometryType,this.objectIdField=this._parent.objectIdField,this.globalIdField=this._parent.globalIdField,this.spatialReference=this._parent.spatialReference,this.hasM=this._parent.hasM,this.hasZ=this._parent.hasZ,this.typeIdField=this._parent.typeIdField,this.types=this._parent.types):(this.spatialReference=new D({wkid:4326}),this.objectIdField=\"\",this.globalIdField=\"\",this.geometryType=p.point,this.typeIdField=\"\",this.types=null,this.subtypeField=null,this.subtypes=null),this.fields=[];for(const e of this.adaptedFields)e.postInitialization(this,this._parent),this.fields.push(e.field)}async _getSet(e){if(null===this._wset){await this._ensureLoaded();let t=null;return t=this._extraFilter?await this._getFilteredSet(\"\",null,null,null,e):await(this._parent?._getSet(e)),this._checkCancelled(e),y(t),this._wset=new i(t._candidates.slice(),t._known.slice(),t._ordered,this._clonePageDefinition(t.pagesDefinition)),this._wset}return this._wset}_isInFeatureSet(e){return this._parent._isInFeatureSet(e)}async _getFeatures(r,s,a,l){const n=[];-1!==s&&void 0===this._featureCache[s]&&n.push(s);const o=this._maxQueryRate();if(!0===this._checkIfNeedToExpandKnownPage(r,o))return await this._expandPagedSet(r,o,0,0,l),this._getFeatures(r,s,a,l);let u=0;for(let e=r._lastFetchedIndex;e<r._known.length&&(u++,u<=a&&(r._lastFetchedIndex+=1),!(void 0===this._featureCache[r._known[e]]&&(r._known[e]!==s&&n.push(r._known[e]),n.length>=o)));e++);if(0===n.length)return\"success\";r=new i([],n,r._ordered,null);const h=Math.min(n.length,a);await(this._parent?._getFeatures(r,-1,h,l)),this._checkCancelled(l);const c=[];for(let e=0;e<h;e++){const t=this._parent?._featureFromCache(n[e]);void 0!==t&&c.push({geometry:t.geometry,attributes:t.attributes,id:n[e]})}for(const i of c){const r=[];for(const e of this.adaptedFields)r[e.field.name]=e.extractValue(i);this._featureCache[i.id]=new e({attributes:r,geometry:t(i.geometry)})}return\"success\"}async _fetchAndRefineFeatures(){throw new r(s.NeverReach)}async _getFilteredSet(e,t,r,s,a){let l=!1;const n=this._reformulateWithoutAdaptions(r);l=n.cannot,r=n.where;let o=!1;if(null!==s){o=!0;const e=[];for(const t of this.adaptedFields)if(!(t instanceof k)&&!0===s.scanForField(t.field.name)){if(!(t instanceof b)){s=null,o=!1;break}e.push({field:t.field.name,newfield:t.originalField.name})}s&&e.length>0&&(s=s.replaceFields(e))}null!==r?null!==this._extraFilter&&(r=F(this._extraFilter,r)):r=this._extraFilter,await this._ensureLoaded();const u=await this._parent._getFilteredSet(e,t,r,s,a);let h;return this._checkCancelled(a),h=!0===l?new i(u._candidates.slice().concat(u._known.slice()),[],!0===o&&u._ordered,this._clonePageDefinition(u.pagesDefinition)):new i(u._candidates.slice(),u._known.slice(),!0===o&&u._ordered,this._clonePageDefinition(u.pagesDefinition)),h}_reformulateWithoutAdaptions(e){const t={cannot:!1,where:e};if(null!==e)for(const r of this.adaptedFields)if(!0===W(e,r.field.name)){const s=r.rewriteSql(e,this);if(!0!==s.rewritten){t.cannot=!0,t.where=null;break}t.where=s.where}return t}async _stat(e,t,r,s,a,i,l){let n=!1,o=this._reformulateWithoutAdaptions(t);if(n=o.cannot,t=o.where,o=this._reformulateWithoutAdaptions(a),n=n||o.cannot,null!==(a=o.where)?null!==this._extraFilter&&(a=F(this._extraFilter,a)):a=this._extraFilter,!0===n)return null===a&&\"\"===r&&null===s?this._manualStat(e,t,i,l):{calculated:!1};const u=await this._parent._stat(e,t,r,s,a,i,l);return!1===u.calculated?null===a&&\"\"===r&&null===s?this._manualStat(e,t,i,l):{calculated:!1}:u}async _canDoAggregates(e,t,r,s,a){if(null===this._parent)return!1;for(let n=0;n<e.length;n++)for(const t of this.adaptedFields)if(e[n].toLowerCase()===t.field.name.toLowerCase()&&!(t instanceof k))return!1;const i=[];for(let n=0;n<t.length;n++){const e=t[n];if(null!==e.workingexpr){const t=this._reformulateWithoutAdaptions(e.workingexpr);if(t.cannot)return!1;const r=e.clone();r.workingexpr=t.where,i.push(r)}else i.push(e)}const l=this._reformulateWithoutAdaptions(a);return!l.cannot&&(null!==(a=l.where)?null!==this._extraFilter&&(a=F(this._extraFilter,a)):a=this._extraFilter,this._parent._canDoAggregates(e,i,r,s,a))}async _getAggregatePagesDataSourceDefinition(e,t,a,i,l,n,o){if(null===this._parent)throw new r(s.NeverReach);const u=[];for(let c=0;c<t.length;c++){const e=t[c];if(null!==e.workingexpr){const t=this._reformulateWithoutAdaptions(e.workingexpr);if(t.cannot)throw new r(s.NeverReach);const a=e.clone();a.workingexpr=t.where,u.push(a)}else u.push(e)}const h=this._reformulateWithoutAdaptions(l);if(h.cannot)throw new r(s.NeverReach);return null!==(l=h.where)?null!==this._extraFilter&&(l=F(this._extraFilter,l)):l=this._extraFilter,this._parent._getAggregatePagesDataSourceDefinition(e,u,a,i,l,n,o)}}export{R as AdaptedFeatureSet,I as AdaptedField,b as FieldRename,k as OriginalField,L as SqlExpressionAdapted,B as StringToCodeAdapted};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}