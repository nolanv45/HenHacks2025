{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { FeatureServiceDatabaseType as e } from \"./shared.js\";\nimport { toWhereClauseFromTree as t } from \"./sqlUtils.js\";\nimport { SqlError as r, SqlErrorCodes as n } from \"../../../core/sql/errorSupport.js\";\nimport i from \"../../../core/sql/WhereClause.js\";\nfunction s(s) {\n  if (\"function\" === s.parseTree.type) {\n    if (0 === s.parseTree.args.value.length) return {\n      name: s.parseTree.name,\n      expr: null\n    };\n    if (s.parseTree.args.value.length > 1) throw new r(n.MissingStatisticParameters);\n    const a = i.create(t(s.parseTree.args.value[0], e.Standardised, s.parameters), {\n      fieldsIndex: s.fieldsIndex,\n      timeZone: s.timeZone,\n      currentUser: s.currentUser\n    });\n    return {\n      name: s.parseTree.name,\n      expr: a\n    };\n  }\n  return null;\n}\nclass a {\n  constructor() {\n    this.field = \"\", this.tofieldname = \"\", this.typeofstat = \"MIN\", this.workingexpr = null;\n  }\n  clone() {\n    const e = new a();\n    return e.field = this.field, e.tofieldname = this.tofieldname, e.typeofstat = this.typeofstat, e.workingexpr = this.workingexpr, e;\n  }\n  static parseStatField(e, t, o, l) {\n    const f = new a();\n    f.field = e;\n    const u = i.create(t, {\n        fieldsIndex: o,\n        timeZone: l\n      }),\n      p = s(u);\n    if (null === p) throw new r(n.UnsupportedSqlFunction, {\n      function: \"\"\n    });\n    const c = p.name.toUpperCase().trim();\n    if (\"MIN\" === c) {\n      if (f.typeofstat = \"MIN\", f.workingexpr = p.expr, null === u) throw new r(n.InvalidFunctionParameters, {\n        function: \"min\"\n      });\n    } else if (\"MAX\" === c) {\n      if (f.typeofstat = \"MAX\", f.workingexpr = p.expr, null === u) throw new r(n.InvalidFunctionParameters, {\n        function: \"max\"\n      });\n    } else if (\"COUNT\" === c) f.typeofstat = \"COUNT\", f.workingexpr = p.expr;else if (\"STDEV\" === c) {\n      if (f.typeofstat = \"STDDEV\", f.workingexpr = p.expr, null === u) throw new r(n.InvalidFunctionParameters, {\n        function: \"stdev\"\n      });\n    } else if (\"SUM\" === c) {\n      if (f.typeofstat = \"SUM\", f.workingexpr = p.expr, null === u) throw new r(n.InvalidFunctionParameters, {\n        function: \"sum\"\n      });\n    } else if (\"MEAN\" === c) {\n      if (f.typeofstat = \"AVG\", f.workingexpr = p.expr, null === u) throw new r(n.InvalidFunctionParameters, {\n        function: c\n      });\n    } else if (\"AVG\" === c) {\n      if (f.typeofstat = \"AVG\", f.workingexpr = p.expr, null === u) throw new r(n.InvalidFunctionParameters, {\n        function: \"avg\"\n      });\n    } else {\n      if (\"VAR\" !== c) throw new r(n.UnsupportedSqlFunction, {\n        function: c\n      });\n      if (f.typeofstat = \"VAR\", f.workingexpr = p.expr, null === u) throw new r(n.InvalidFunctionParameters, {\n        function: \"var\"\n      });\n    }\n    return f;\n  }\n  toStatisticsName() {\n    switch (this.typeofstat.toUpperCase()) {\n      case \"MIN\":\n        return \"min\";\n      case \"MAX\":\n        return \"max\";\n      case \"SUM\":\n        return \"sum\";\n      case \"COUNT\":\n      default:\n        return \"count\";\n      case \"VAR\":\n        return \"var\";\n      case \"STDDEV\":\n        return \"stddev\";\n      case \"AVG\":\n        return \"avg\";\n    }\n  }\n}\nexport { a as default };","map":{"version":3,"names":["FeatureServiceDatabaseType","e","toWhereClauseFromTree","t","SqlError","r","SqlErrorCodes","n","i","s","parseTree","type","args","value","length","name","expr","MissingStatisticParameters","a","create","Standardised","parameters","fieldsIndex","timeZone","currentUser","constructor","field","tofieldname","typeofstat","workingexpr","clone","parseStatField","o","l","f","u","p","UnsupportedSqlFunction","function","c","toUpperCase","trim","InvalidFunctionParameters","toStatisticsName","default"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/arcade/featureset/support/StatsField.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{FeatureServiceDatabaseType as e}from\"./shared.js\";import{toWhereClauseFromTree as t}from\"./sqlUtils.js\";import{SqlError as r,SqlErrorCodes as n}from\"../../../core/sql/errorSupport.js\";import i from\"../../../core/sql/WhereClause.js\";function s(s){if(\"function\"===s.parseTree.type){if(0===s.parseTree.args.value.length)return{name:s.parseTree.name,expr:null};if(s.parseTree.args.value.length>1)throw new r(n.MissingStatisticParameters);const a=i.create(t(s.parseTree.args.value[0],e.Standardised,s.parameters),{fieldsIndex:s.fieldsIndex,timeZone:s.timeZone,currentUser:s.currentUser});return{name:s.parseTree.name,expr:a}}return null}class a{constructor(){this.field=\"\",this.tofieldname=\"\",this.typeofstat=\"MIN\",this.workingexpr=null}clone(){const e=new a;return e.field=this.field,e.tofieldname=this.tofieldname,e.typeofstat=this.typeofstat,e.workingexpr=this.workingexpr,e}static parseStatField(e,t,o,l){const f=new a;f.field=e;const u=i.create(t,{fieldsIndex:o,timeZone:l}),p=s(u);if(null===p)throw new r(n.UnsupportedSqlFunction,{function:\"\"});const c=p.name.toUpperCase().trim();if(\"MIN\"===c){if(f.typeofstat=\"MIN\",f.workingexpr=p.expr,null===u)throw new r(n.InvalidFunctionParameters,{function:\"min\"})}else if(\"MAX\"===c){if(f.typeofstat=\"MAX\",f.workingexpr=p.expr,null===u)throw new r(n.InvalidFunctionParameters,{function:\"max\"})}else if(\"COUNT\"===c)f.typeofstat=\"COUNT\",f.workingexpr=p.expr;else if(\"STDEV\"===c){if(f.typeofstat=\"STDDEV\",f.workingexpr=p.expr,null===u)throw new r(n.InvalidFunctionParameters,{function:\"stdev\"})}else if(\"SUM\"===c){if(f.typeofstat=\"SUM\",f.workingexpr=p.expr,null===u)throw new r(n.InvalidFunctionParameters,{function:\"sum\"})}else if(\"MEAN\"===c){if(f.typeofstat=\"AVG\",f.workingexpr=p.expr,null===u)throw new r(n.InvalidFunctionParameters,{function:c})}else if(\"AVG\"===c){if(f.typeofstat=\"AVG\",f.workingexpr=p.expr,null===u)throw new r(n.InvalidFunctionParameters,{function:\"avg\"})}else{if(\"VAR\"!==c)throw new r(n.UnsupportedSqlFunction,{function:c});if(f.typeofstat=\"VAR\",f.workingexpr=p.expr,null===u)throw new r(n.InvalidFunctionParameters,{function:\"var\"})}return f}toStatisticsName(){switch(this.typeofstat.toUpperCase()){case\"MIN\":return\"min\";case\"MAX\":return\"max\";case\"SUM\":return\"sum\";case\"COUNT\":default:return\"count\";case\"VAR\":return\"var\";case\"STDDEV\":return\"stddev\";case\"AVG\":return\"avg\"}}}export{a as default};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}