{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { equals as t } from \"../../core/arrayUtils.js\";\nimport { Axis as n } from \"./Axis.js\";\nimport { getInfo as r } from \"./spatialReferenceUtils.js\";\nfunction e(t) {\n  if (!t) return null;\n  if (Array.isArray(t)) return t;\n  const n = t.hasZ,\n    r = t.hasM;\n  if (\"point\" === t.type) return r && n ? [t.x, t.y, t.z, t.m] : n ? [t.x, t.y, t.z] : r ? [t.x, t.y, t.m] : [t.x, t.y];\n  if (\"polygon\" === t.type) return t.rings.slice();\n  if (\"polyline\" === t.type) return t.paths.slice();\n  if (\"multipoint\" === t.type) return t.points.slice();\n  if (\"extent\" === t.type) {\n    const n = t.clone().normalize();\n    if (!n) return null;\n    let r = !1,\n      e = !1;\n    return n.forEach(t => {\n      t.hasZ && (r = !0), t.hasM && (e = !0);\n    }), n.map(t => {\n      const n = [[t.xmin, t.ymin], [t.xmin, t.ymax], [t.xmax, t.ymax], [t.xmax, t.ymin], [t.xmin, t.ymin]];\n      if (r && t.hasZ) {\n        const r = .5 * (t.zmax - t.zmin);\n        for (let t = 0; t < n.length; t++) n[t].push(r);\n      }\n      if (e && t.hasM) {\n        const r = .5 * (t.mmax - t.mmin);\n        for (let t = 0; t < n.length; t++) n[t].push(r);\n      }\n      return n;\n    });\n  }\n  return null;\n}\nfunction i(t, n) {\n  const r = n[0] - t[0],\n    e = n[1] - t[1];\n  if (t.length > 2 && n.length > 2) {\n    const i = t[2] - n[2];\n    return Math.sqrt(r * r + e * e + i * i);\n  }\n  return Math.sqrt(r * r + e * e);\n}\nfunction o(t, n, r) {\n  const e = t[0] + r * (n[0] - t[0]),\n    i = t[1] + r * (n[1] - t[1]);\n  return t.length > 2 && n.length > 2 ? [e, i, t[2] + r * (n[2] - t[2])] : [e, i];\n}\nfunction s(t, n, r, e) {\n  return f(t, n, r[e], r[e + 1]);\n}\nfunction f(t, n, r, e) {\n  const [i, o] = n,\n    [s, f] = r,\n    [u, l] = e,\n    c = u - s,\n    h = l - f,\n    p = c * c + h * h,\n    a = (i - s) * c + (o - f) * h,\n    y = Math.min(1, Math.max(0, a / p));\n  return t[0] = s + c * y, t[1] = f + h * y, t;\n}\nfunction u(t, n, r) {\n  let e,\n    i,\n    o,\n    s,\n    f = !1,\n    u = 1 / 0;\n  for (r.reset(); r.nextPath();) if (r.nextPoint()) for (e = r.x, i = r.y; r.nextPoint();) o = r.x, s = r.y, i > n != s > n && t < (o - e) * (n - i) / (s - i) + e && (f = !f), u = Math.min(u, l(t, n, e, i, o, s)), e = o, i = s;\n  return 0 === u ? 0 : (f ? 1 : -1) * Math.sqrt(u);\n}\nfunction l(t, n, r, e, i, o) {\n  let s = r,\n    f = e,\n    u = i - s,\n    l = o - f;\n  if (0 !== u || 0 !== l) {\n    const r = ((t - s) * u + (n - f) * l) / (u * u + l * l);\n    r > 1 ? (s = i, f = o) : r > 0 && (s += u * r, f += l * r);\n  }\n  return u = t - s, l = n - f, u * u + l * l;\n}\nfunction c(t, n) {\n  return o(t, n, .5);\n}\nfunction h(t) {\n  const n = t.length;\n  let r = 0;\n  for (let e = 0; e < n - 1; ++e) r += i(t[e], t[e + 1]);\n  return r;\n}\nfunction p(t, n) {\n  if (n <= 0) return t[0];\n  const r = t.length;\n  let e = 0;\n  for (let s = 0; s < r - 1; ++s) {\n    const r = i(t[s], t[s + 1]);\n    if (n - e < r) {\n      const i = (n - e) / r;\n      return o(t[s], t[s + 1], i);\n    }\n    e += r;\n  }\n  return t[r - 1];\n}\nfunction a(t, r = n.X, e = n.Y) {\n  let i = 0;\n  const o = t.length;\n  let s = t[0];\n  for (let n = 1; n < o; n++) {\n    const o = t[n];\n    i += (o[r] - s[r]) * (o[e] + s[e]), s = o;\n  }\n  if (!y(t)) {\n    const n = t[0];\n    i += (n[r] - s[r]) * (n[e] + s[e]);\n  }\n  return i >= 0;\n}\nfunction y(n) {\n  const r = n.length;\n  return r < 3 || t(n[0], n[r - 1]);\n}\nfunction m(t) {\n  \"rings\" in t && (g(t), x(t));\n}\nfunction g(t) {\n  if (!(\"rings\" in t)) return !1;\n  let n = !1;\n  for (const r of t.rings) y(r) || (r.push(r[0].slice()), n = !0);\n  return n;\n}\nfunction x(t) {\n  if (!(\"rings\" in t)) return !1;\n  if (0 === t.rings.length || a(t.rings[0])) return !1;\n  for (const n of t.rings) n.reverse();\n  return !0;\n}\nfunction M(t) {\n  if (\"polygon\" !== t.type && \"polyline\" !== t.type) return t;\n  return z(\"polygon\" === t.type ? t.rings : t.paths, t.spatialReference), t;\n}\nfunction z(t, n) {\n  const e = r(n);\n  if (!e) return;\n  const i = e.valid[0],\n    o = e.valid[1],\n    s = o - i;\n  for (const r of t) {\n    let t = 1 / 0,\n      n = -1 / 0;\n    for (const s of r) {\n      const r = v(s[0], i, o);\n      t = Math.min(t, r), n = Math.max(n, r), s[0] = r;\n    }\n    const e = n - t;\n    s - e < e && r.forEach(t => {\n      t[0] < 0 && (t[0] += s);\n    });\n  }\n}\nfunction v(t, n, r) {\n  const e = r - n;\n  return t < n ? r - (n - t) % e : t > r ? n + (t - n) % e : t;\n}\nfunction j(t, n) {\n  if (t === n) return !0;\n  if (t.type !== n.type) return !1;\n  if (\"point\" === t.type || \"mesh\" === t.type || \"extent\" === t.type) return !0;\n  if (\"multipoint\" === t.type) return t.points.length === n.points.length;\n  const [r, e] = \"polyline\" === t.type ? [t.paths, n.paths] : [t.rings, n.rings];\n  return r.length === e.length && r.every((t, n) => t.length === e[n].length);\n}\nexport { g as closeRings, m as closeRingsAndFixWinding, u as distanceFromPointToPolygon, l as distanceToSegmentSquared, x as fixWinding, e as geometryToCoordinates, i as getLength, c as getMidpoint, h as getPathLength, p as getPointOnPath, j as hasCompatibleTopology, a as isClockwise, y as isClosed, s as projectPointOnLine, f as projectPointOnLineSeg, M as unnormalizeGeometryOnDatelineCrossing, z as unnormalizeVerticesOnDatelineCrossing, v as unnormalizedCoordinate };","map":{"version":3,"names":["equals","t","Axis","n","getInfo","r","e","Array","isArray","hasZ","hasM","type","x","y","z","m","rings","slice","paths","points","clone","normalize","forEach","map","xmin","ymin","ymax","xmax","zmax","zmin","length","push","mmax","mmin","i","Math","sqrt","o","s","f","u","l","c","h","p","a","min","max","reset","nextPath","nextPoint","X","Y","g","reverse","M","spatialReference","valid","v","j","every","closeRings","closeRingsAndFixWinding","distanceFromPointToPolygon","distanceToSegmentSquared","fixWinding","geometryToCoordinates","getLength","getMidpoint","getPathLength","getPointOnPath","hasCompatibleTopology","isClockwise","isClosed","projectPointOnLine","projectPointOnLineSeg","unnormalizeGeometryOnDatelineCrossing","unnormalizeVerticesOnDatelineCrossing","unnormalizedCoordinate"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/geometry/support/coordsUtils.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{equals as t}from\"../../core/arrayUtils.js\";import{Axis as n}from\"./Axis.js\";import{getInfo as r}from\"./spatialReferenceUtils.js\";function e(t){if(!t)return null;if(Array.isArray(t))return t;const n=t.hasZ,r=t.hasM;if(\"point\"===t.type)return r&&n?[t.x,t.y,t.z,t.m]:n?[t.x,t.y,t.z]:r?[t.x,t.y,t.m]:[t.x,t.y];if(\"polygon\"===t.type)return t.rings.slice();if(\"polyline\"===t.type)return t.paths.slice();if(\"multipoint\"===t.type)return t.points.slice();if(\"extent\"===t.type){const n=t.clone().normalize();if(!n)return null;let r=!1,e=!1;return n.forEach((t=>{t.hasZ&&(r=!0),t.hasM&&(e=!0)})),n.map((t=>{const n=[[t.xmin,t.ymin],[t.xmin,t.ymax],[t.xmax,t.ymax],[t.xmax,t.ymin],[t.xmin,t.ymin]];if(r&&t.hasZ){const r=.5*(t.zmax-t.zmin);for(let t=0;t<n.length;t++)n[t].push(r)}if(e&&t.hasM){const r=.5*(t.mmax-t.mmin);for(let t=0;t<n.length;t++)n[t].push(r)}return n}))}return null}function i(t,n){const r=n[0]-t[0],e=n[1]-t[1];if(t.length>2&&n.length>2){const i=t[2]-n[2];return Math.sqrt(r*r+e*e+i*i)}return Math.sqrt(r*r+e*e)}function o(t,n,r){const e=t[0]+r*(n[0]-t[0]),i=t[1]+r*(n[1]-t[1]);return t.length>2&&n.length>2?[e,i,t[2]+r*(n[2]-t[2])]:[e,i]}function s(t,n,r,e){return f(t,n,r[e],r[e+1])}function f(t,n,r,e){const[i,o]=n,[s,f]=r,[u,l]=e,c=u-s,h=l-f,p=c*c+h*h,a=(i-s)*c+(o-f)*h,y=Math.min(1,Math.max(0,a/p));return t[0]=s+c*y,t[1]=f+h*y,t}function u(t,n,r){let e,i,o,s,f=!1,u=1/0;for(r.reset();r.nextPath();)if(r.nextPoint())for(e=r.x,i=r.y;r.nextPoint();)o=r.x,s=r.y,i>n!=s>n&&t<(o-e)*(n-i)/(s-i)+e&&(f=!f),u=Math.min(u,l(t,n,e,i,o,s)),e=o,i=s;return 0===u?0:(f?1:-1)*Math.sqrt(u)}function l(t,n,r,e,i,o){let s=r,f=e,u=i-s,l=o-f;if(0!==u||0!==l){const r=((t-s)*u+(n-f)*l)/(u*u+l*l);r>1?(s=i,f=o):r>0&&(s+=u*r,f+=l*r)}return u=t-s,l=n-f,u*u+l*l}function c(t,n){return o(t,n,.5)}function h(t){const n=t.length;let r=0;for(let e=0;e<n-1;++e)r+=i(t[e],t[e+1]);return r}function p(t,n){if(n<=0)return t[0];const r=t.length;let e=0;for(let s=0;s<r-1;++s){const r=i(t[s],t[s+1]);if(n-e<r){const i=(n-e)/r;return o(t[s],t[s+1],i)}e+=r}return t[r-1]}function a(t,r=n.X,e=n.Y){let i=0;const o=t.length;let s=t[0];for(let n=1;n<o;n++){const o=t[n];i+=(o[r]-s[r])*(o[e]+s[e]),s=o}if(!y(t)){const n=t[0];i+=(n[r]-s[r])*(n[e]+s[e])}return i>=0}function y(n){const r=n.length;return r<3||t(n[0],n[r-1])}function m(t){\"rings\"in t&&(g(t),x(t))}function g(t){if(!(\"rings\"in t))return!1;let n=!1;for(const r of t.rings)y(r)||(r.push(r[0].slice()),n=!0);return n}function x(t){if(!(\"rings\"in t))return!1;if(0===t.rings.length||a(t.rings[0]))return!1;for(const n of t.rings)n.reverse();return!0}function M(t){if(\"polygon\"!==t.type&&\"polyline\"!==t.type)return t;return z(\"polygon\"===t.type?t.rings:t.paths,t.spatialReference),t}function z(t,n){const e=r(n);if(!e)return;const i=e.valid[0],o=e.valid[1],s=o-i;for(const r of t){let t=1/0,n=-1/0;for(const s of r){const r=v(s[0],i,o);t=Math.min(t,r),n=Math.max(n,r),s[0]=r}const e=n-t;s-e<e&&r.forEach((t=>{t[0]<0&&(t[0]+=s)}))}}function v(t,n,r){const e=r-n;return t<n?r-(n-t)%e:t>r?n+(t-n)%e:t}function j(t,n){if(t===n)return!0;if(t.type!==n.type)return!1;if(\"point\"===t.type||\"mesh\"===t.type||\"extent\"===t.type)return!0;if(\"multipoint\"===t.type)return t.points.length===n.points.length;const[r,e]=\"polyline\"===t.type?[t.paths,n.paths]:[t.rings,n.rings];return r.length===e.length&&r.every(((t,n)=>t.length===e[n].length))}export{g as closeRings,m as closeRingsAndFixWinding,u as distanceFromPointToPolygon,l as distanceToSegmentSquared,x as fixWinding,e as geometryToCoordinates,i as getLength,c as getMidpoint,h as getPathLength,p as getPointOnPath,j as hasCompatibleTopology,a as isClockwise,y as isClosed,s as projectPointOnLine,f as projectPointOnLineSeg,M as unnormalizeGeometryOnDatelineCrossing,z as unnormalizeVerticesOnDatelineCrossing,v as unnormalizedCoordinate};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}