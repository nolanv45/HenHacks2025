{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { throwIfAborted as e } from \"../../../../../../core/promiseUtils.js\";\nimport { difference as t, union as s } from \"../../../../../../core/SetUtils.js\";\nimport i from \"../../../../../../layers/support/FieldsIndex.js\";\nimport { ParquetFile as a } from \"../../../../../../libs/parquet/parquet.js\";\nimport { ALoadStrategy as r } from \"./ALoadStrategy.js\";\nimport { FeatureSnapshotSourceChunk as l } from \"./chunks/FeatureSnapshotSourceChunk.js\";\nimport { FeatureSetReaderJSON as o } from \"../../support/FeatureSetReaderJSON.js\";\nimport { FeatureSetReaderParquet as n } from \"../../support/FeatureSetReaderParquet.js\";\nclass m extends r {\n  constructor(e, t, s, i) {\n    super(i), this._service = e, this._metadata = t, this._schema = s, this._chunkId = 0, this._files = [], this._availableFields = new Set(s.mutable.availableFields);\n    const {\n      geometryInfo: a\n    } = this._service;\n    if (\"location\" === a.type) this._availableFields.add(a.latitudeFieldName), this._availableFields.add(a.longitudeFieldName);else if (null != a.multiscale && a.multiscale.levels.length >= 1) {\n      const e = a.multiscale.levels[0];\n      this._availableFields.add(e.column);\n    } else this._availableFields.add(a.primaryFieldName);\n  }\n  destroy() {\n    for (const e of this._files) e.destroy();\n  }\n  get about() {\n    return {\n      supportsDisplayFilter: !1,\n      willQueryAllFeatures: !0,\n      willQueryFullResolutionGeometry: !0\n    };\n  }\n  async updateFields(e) {\n    await this._promise;\n    const i = new Set(e),\n      a = t(i, this._availableFields);\n    this._availableFields = s(a, this._availableFields), a.size && (await Promise.all(this._files.map(e => {\n      const t = Array.from(a).map(t => e.metadata.getFieldIndex(t));\n      return e.inner.updateChunks(new Uint16Array(t));\n    })));\n  }\n  async load(e) {\n    return null == this._promise && (this._promise = this._download().then(() => {\n      this._loadHigherResGeometry();\n    })), this._promise;\n  }\n  unload(e) {}\n  async addParquetFile(e) {\n    this._insert(e);\n  }\n  async _loadHigherResGeometry() {\n    const {\n      geometryInfo: e\n    } = this._service;\n    if (\"geometry\" === e.type) {\n      if (!(null != e.multiscale && e.multiscale.levels.length >= 1)) return;\n      await this.updateFields([e.primaryFieldName]);\n    }\n    const t = Array.from(this._store.chunks());\n    this._store.clear();\n    for (const s of t) this._store.insert(s);\n    this._store.refresh();\n  }\n  async _insert(t) {\n    const s = await a.create(t, {\n        geometryInfo: this._service.geometryInfo,\n        outSpatialReference: this._service.outSpatialReference,\n        getCustomParameters: () => this._schema.mutable.dataFilter.customParameters\n      }),\n      {\n        geometryInfo: r\n      } = this._service;\n    e(this._options);\n    const {\n        fields: o,\n        timeZoneByFieldName: m\n      } = this._service.metadata.fieldsIndex,\n      d = o.map(e => ({\n        ...e,\n        index: s.metadata.getFieldIndex(e.name)\n      })),\n      h = i.fromJSON({\n        fields: d,\n        timeZoneByFieldName: m\n      }),\n      u = new Uint16Array(Array.from(this._availableFields.values()).map(e => h.get(e)?.index).filter(e => null != e));\n    await s.inner.readChunksWithCallback(u, e => {\n      const t = this._chunkId++,\n        s = new n(this._metadata, h, r, e, t),\n        i = new l(s, null, t, !1);\n      this._store.insert(i);\n    }), this._files.push(s);\n  }\n  async _download() {\n    try {\n      await Promise.all(this._service.source.urls.map(e => this._insert(e)));\n      const e = new l(o.empty(this._metadata), null, -1, !0);\n      this._store.insert(e);\n    } catch (e) {\n      throw console.error(e), e;\n    }\n  }\n}\nexport { m as ParquetLoadStrategy };","map":{"version":3,"names":["throwIfAborted","e","difference","t","union","s","i","ParquetFile","a","ALoadStrategy","r","FeatureSnapshotSourceChunk","l","FeatureSetReaderJSON","o","FeatureSetReaderParquet","n","m","constructor","_service","_metadata","_schema","_chunkId","_files","_availableFields","Set","mutable","availableFields","geometryInfo","type","add","latitudeFieldName","longitudeFieldName","multiscale","levels","length","column","primaryFieldName","destroy","about","supportsDisplayFilter","willQueryAllFeatures","willQueryFullResolutionGeometry","updateFields","_promise","size","Promise","all","map","Array","from","metadata","getFieldIndex","inner","updateChunks","Uint16Array","load","_download","then","_loadHigherResGeometry","unload","addParquetFile","_insert","_store","chunks","clear","insert","refresh","create","outSpatialReference","getCustomParameters","dataFilter","customParameters","_options","fields","timeZoneByFieldName","fieldsIndex","d","index","name","h","fromJSON","u","values","get","filter","readChunksWithCallback","push","source","urls","empty","console","error","ParquetLoadStrategy"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/2d/layers/features/sources/strategies/ParquetLoadStrategy.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{throwIfAborted as e}from\"../../../../../../core/promiseUtils.js\";import{difference as t,union as s}from\"../../../../../../core/SetUtils.js\";import i from\"../../../../../../layers/support/FieldsIndex.js\";import{ParquetFile as a}from\"../../../../../../libs/parquet/parquet.js\";import{ALoadStrategy as r}from\"./ALoadStrategy.js\";import{FeatureSnapshotSourceChunk as l}from\"./chunks/FeatureSnapshotSourceChunk.js\";import{FeatureSetReaderJSON as o}from\"../../support/FeatureSetReaderJSON.js\";import{FeatureSetReaderParquet as n}from\"../../support/FeatureSetReaderParquet.js\";class m extends r{constructor(e,t,s,i){super(i),this._service=e,this._metadata=t,this._schema=s,this._chunkId=0,this._files=[],this._availableFields=new Set(s.mutable.availableFields);const{geometryInfo:a}=this._service;if(\"location\"===a.type)this._availableFields.add(a.latitudeFieldName),this._availableFields.add(a.longitudeFieldName);else if(null!=a.multiscale&&a.multiscale.levels.length>=1){const e=a.multiscale.levels[0];this._availableFields.add(e.column)}else this._availableFields.add(a.primaryFieldName)}destroy(){for(const e of this._files)e.destroy()}get about(){return{supportsDisplayFilter:!1,willQueryAllFeatures:!0,willQueryFullResolutionGeometry:!0}}async updateFields(e){await this._promise;const i=new Set(e),a=t(i,this._availableFields);this._availableFields=s(a,this._availableFields),a.size&&await Promise.all(this._files.map((e=>{const t=Array.from(a).map((t=>e.metadata.getFieldIndex(t)));return e.inner.updateChunks(new Uint16Array(t))})))}async load(e){return null==this._promise&&(this._promise=this._download().then((()=>{this._loadHigherResGeometry()}))),this._promise}unload(e){}async addParquetFile(e){this._insert(e)}async _loadHigherResGeometry(){const{geometryInfo:e}=this._service;if(\"geometry\"===e.type){if(!(null!=e.multiscale&&e.multiscale.levels.length>=1))return;await this.updateFields([e.primaryFieldName])}const t=Array.from(this._store.chunks());this._store.clear();for(const s of t)this._store.insert(s);this._store.refresh()}async _insert(t){const s=await a.create(t,{geometryInfo:this._service.geometryInfo,outSpatialReference:this._service.outSpatialReference,getCustomParameters:()=>this._schema.mutable.dataFilter.customParameters}),{geometryInfo:r}=this._service;e(this._options);const{fields:o,timeZoneByFieldName:m}=this._service.metadata.fieldsIndex,d=o.map((e=>({...e,index:s.metadata.getFieldIndex(e.name)}))),h=i.fromJSON({fields:d,timeZoneByFieldName:m}),u=new Uint16Array(Array.from(this._availableFields.values()).map((e=>h.get(e)?.index)).filter((e=>null!=e)));await s.inner.readChunksWithCallback(u,(e=>{const t=this._chunkId++,s=new n(this._metadata,h,r,e,t),i=new l(s,null,t,!1);this._store.insert(i)})),this._files.push(s)}async _download(){try{await Promise.all(this._service.source.urls.map((e=>this._insert(e))));const e=new l(o.empty(this._metadata),null,-1,!0);this._store.insert(e)}catch(e){throw console.error(e),e}}}export{m as ParquetLoadStrategy};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}