{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport e from \"../../request.js\";\nimport { getInterceptor as t } from \"../urlUtils.js\";\nconst a = {\n  async request(a, s) {\n    const r = a.options,\n      n = r.responseType;\n    r.signal = s?.signal, r.responseType = \"native\" === n || \"native-request-init\" === n ? \"native-request-init\" : n && [\"blob\", \"json\", \"text\"].includes(n) && t(a.url)?.after ? n : \"array-buffer\";\n    const i = await e(a.url, r),\n      o = {\n        data: i.data,\n        httpStatus: i.httpStatus,\n        ssl: i.ssl\n      };\n    switch (i.requestOptions?.responseType) {\n      case \"native-request-init\":\n        return delete o.data.signal, o;\n      case \"blob\":\n        o.data = await o.data.arrayBuffer();\n        break;\n      case \"json\":\n        o.data = new TextEncoder().encode(JSON.stringify(o.data)).buffer;\n        break;\n      case \"text\":\n        o.data = new TextEncoder().encode(o.data).buffer;\n    }\n    return {\n      result: o,\n      transferList: [o.data]\n    };\n  }\n};\nexport { a as staticWorkerMessages };","map":{"version":3,"names":["e","getInterceptor","t","a","request","s","r","options","n","responseType","signal","includes","url","after","i","o","data","httpStatus","ssl","requestOptions","arrayBuffer","TextEncoder","encode","JSON","stringify","buffer","result","transferList","staticWorkerMessages"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/core/workers/staticWorkerMessages.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport e from\"../../request.js\";import{getInterceptor as t}from\"../urlUtils.js\";const a={async request(a,s){const r=a.options,n=r.responseType;r.signal=s?.signal,r.responseType=\"native\"===n||\"native-request-init\"===n?\"native-request-init\":n&&[\"blob\",\"json\",\"text\"].includes(n)&&t(a.url)?.after?n:\"array-buffer\";const i=await e(a.url,r),o={data:i.data,httpStatus:i.httpStatus,ssl:i.ssl};switch(i.requestOptions?.responseType){case\"native-request-init\":return delete o.data.signal,o;case\"blob\":o.data=await o.data.arrayBuffer();break;case\"json\":o.data=(new TextEncoder).encode(JSON.stringify(o.data)).buffer;break;case\"text\":o.data=(new TextEncoder).encode(o.data).buffer}return{result:o,transferList:[o.data]}}};export{a as staticWorkerMessages};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAOA,CAAC,MAAK,kBAAkB;AAAC,SAAOC,cAAc,IAAIC,CAAC,QAAK,gBAAgB;AAAC,MAAMC,CAAC,GAAC;EAAC,MAAMC,OAAOA,CAACD,CAAC,EAACE,CAAC,EAAC;IAAC,MAAMC,CAAC,GAACH,CAAC,CAACI,OAAO;MAACC,CAAC,GAACF,CAAC,CAACG,YAAY;IAACH,CAAC,CAACI,MAAM,GAACL,CAAC,EAAEK,MAAM,EAACJ,CAAC,CAACG,YAAY,GAAC,QAAQ,KAAGD,CAAC,IAAE,qBAAqB,KAAGA,CAAC,GAAC,qBAAqB,GAACA,CAAC,IAAE,CAAC,MAAM,EAAC,MAAM,EAAC,MAAM,CAAC,CAACG,QAAQ,CAACH,CAAC,CAAC,IAAEN,CAAC,CAACC,CAAC,CAACS,GAAG,CAAC,EAAEC,KAAK,GAACL,CAAC,GAAC,cAAc;IAAC,MAAMM,CAAC,GAAC,MAAMd,CAAC,CAACG,CAAC,CAACS,GAAG,EAACN,CAAC,CAAC;MAACS,CAAC,GAAC;QAACC,IAAI,EAACF,CAAC,CAACE,IAAI;QAACC,UAAU,EAACH,CAAC,CAACG,UAAU;QAACC,GAAG,EAACJ,CAAC,CAACI;MAAG,CAAC;IAAC,QAAOJ,CAAC,CAACK,cAAc,EAAEV,YAAY;MAAE,KAAI,qBAAqB;QAAC,OAAO,OAAOM,CAAC,CAACC,IAAI,CAACN,MAAM,EAACK,CAAC;MAAC,KAAI,MAAM;QAACA,CAAC,CAACC,IAAI,GAAC,MAAMD,CAAC,CAACC,IAAI,CAACI,WAAW,CAAC,CAAC;QAAC;MAAM,KAAI,MAAM;QAACL,CAAC,CAACC,IAAI,GAAE,IAAIK,WAAW,CAAD,CAAC,CAAEC,MAAM,CAACC,IAAI,CAACC,SAAS,CAACT,CAAC,CAACC,IAAI,CAAC,CAAC,CAACS,MAAM;QAAC;MAAM,KAAI,MAAM;QAACV,CAAC,CAACC,IAAI,GAAE,IAAIK,WAAW,CAAD,CAAC,CAAEC,MAAM,CAACP,CAAC,CAACC,IAAI,CAAC,CAACS,MAAM;IAAA;IAAC,OAAM;MAACC,MAAM,EAACX,CAAC;MAACY,YAAY,EAAC,CAACZ,CAAC,CAACC,IAAI;IAAC,CAAC;EAAA;AAAC,CAAC;AAAC,SAAOb,CAAC,IAAIyB,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}