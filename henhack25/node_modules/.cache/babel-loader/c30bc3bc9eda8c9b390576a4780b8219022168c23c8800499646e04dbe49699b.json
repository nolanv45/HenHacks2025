{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { s as e } from \"../../../../../../chunks/vec42.js\";\nimport { create as r } from \"../../../../../../core/libs/gl-matrix-2/factories/vec4f64.js\";\nimport { ScreenSizePerspective as l, addScreenSizePerspectiveAlignment as t } from \"../util/ScreenSizePerspective.glsl.js\";\nimport { addCameraPosition as o } from \"../util/View.glsl.js\";\nimport { Float4PassUniform as c } from \"../../shaderModules/Float4PassUniform.js\";\nimport { glsl as i } from \"../../shaderModules/glsl.js\";\nfunction s(e, r) {\n  const c = e.vertex;\n  r.hasVerticalOffset ? (f(c), r.hasScreenSizePerspective && (e.include(l), t(c), o(e.vertex, r)), c.code.add(i`\n      vec3 calculateVerticalOffset(vec3 worldPos, vec3 localOrigin) {\n        float viewDistance = length((view * vec4(worldPos, 1.0)).xyz);\n        ${r.spherical ? i`vec3 worldNormal = normalize(worldPos + localOrigin);` : i`vec3 worldNormal = vec3(0.0, 0.0, 1.0);`}\n        ${r.hasScreenSizePerspective ? i`\n            float cosAngle = dot(worldNormal, normalize(worldPos - cameraPosition));\n            float verticalOffsetScreenHeight = screenSizePerspectiveScaleFloat(verticalOffset.x, abs(cosAngle), viewDistance, screenSizePerspectiveAlignment);` : i`\n            float verticalOffsetScreenHeight = verticalOffset.x;`}\n        // Screen sized offset in world space, used for example for line callouts\n        float worldOffset = clamp(verticalOffsetScreenHeight * verticalOffset.y * viewDistance, verticalOffset.z, verticalOffset.w);\n        return worldNormal * worldOffset;\n      }\n\n      vec3 addVerticalOffset(vec3 worldPos, vec3 localOrigin) {\n        return worldPos + calculateVerticalOffset(worldPos, localOrigin);\n      }\n    `)) : c.code.add(i`vec3 addVerticalOffset(vec3 worldPos, vec3 localOrigin) { return worldPos; }`);\n}\nconst a = r();\nfunction f(r) {\n  r.uniforms.add(new c(\"verticalOffset\", (r, l) => {\n    const {\n        minWorldLength: t,\n        maxWorldLength: o,\n        screenLength: c\n      } = r.verticalOffset,\n      i = Math.tan(.5 * l.camera.fovY) / (.5 * l.camera.fullViewport[3]),\n      s = l.camera.pixelRatio || 1;\n    return e(a, c * s, i, t, o);\n  }));\n}\nexport { s as VerticalOffset, f as addVerticalOffset };","map":{"version":3,"names":["s","e","create","r","ScreenSizePerspective","l","addScreenSizePerspectiveAlignment","t","addCameraPosition","o","Float4PassUniform","c","glsl","i","vertex","hasVerticalOffset","f","hasScreenSizePerspective","include","code","add","spherical","a","uniforms","minWorldLength","maxWorldLength","screenLength","verticalOffset","Math","tan","camera","fovY","fullViewport","pixelRatio","VerticalOffset","addVerticalOffset"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/attributes/VerticalOffset.glsl.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{s as e}from\"../../../../../../chunks/vec42.js\";import{create as r}from\"../../../../../../core/libs/gl-matrix-2/factories/vec4f64.js\";import{ScreenSizePerspective as l,addScreenSizePerspectiveAlignment as t}from\"../util/ScreenSizePerspective.glsl.js\";import{addCameraPosition as o}from\"../util/View.glsl.js\";import{Float4PassUniform as c}from\"../../shaderModules/Float4PassUniform.js\";import{glsl as i}from\"../../shaderModules/glsl.js\";function s(e,r){const c=e.vertex;r.hasVerticalOffset?(f(c),r.hasScreenSizePerspective&&(e.include(l),t(c),o(e.vertex,r)),c.code.add(i`\n      vec3 calculateVerticalOffset(vec3 worldPos, vec3 localOrigin) {\n        float viewDistance = length((view * vec4(worldPos, 1.0)).xyz);\n        ${r.spherical?i`vec3 worldNormal = normalize(worldPos + localOrigin);`:i`vec3 worldNormal = vec3(0.0, 0.0, 1.0);`}\n        ${r.hasScreenSizePerspective?i`\n            float cosAngle = dot(worldNormal, normalize(worldPos - cameraPosition));\n            float verticalOffsetScreenHeight = screenSizePerspectiveScaleFloat(verticalOffset.x, abs(cosAngle), viewDistance, screenSizePerspectiveAlignment);`:i`\n            float verticalOffsetScreenHeight = verticalOffset.x;`}\n        // Screen sized offset in world space, used for example for line callouts\n        float worldOffset = clamp(verticalOffsetScreenHeight * verticalOffset.y * viewDistance, verticalOffset.z, verticalOffset.w);\n        return worldNormal * worldOffset;\n      }\n\n      vec3 addVerticalOffset(vec3 worldPos, vec3 localOrigin) {\n        return worldPos + calculateVerticalOffset(worldPos, localOrigin);\n      }\n    `)):c.code.add(i`vec3 addVerticalOffset(vec3 worldPos, vec3 localOrigin) { return worldPos; }`)}const a=r();function f(r){r.uniforms.add(new c(\"verticalOffset\",((r,l)=>{const{minWorldLength:t,maxWorldLength:o,screenLength:c}=r.verticalOffset,i=Math.tan(.5*l.camera.fovY)/(.5*l.camera.fullViewport[3]),s=l.camera.pixelRatio||1;return e(a,c*s,i,t,o)})))}export{s as VerticalOffset,f as addVerticalOffset};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,CAAC,IAAIC,CAAC,QAAK,mCAAmC;AAAC,SAAOC,MAAM,IAAIC,CAAC,QAAK,8DAA8D;AAAC,SAAOC,qBAAqB,IAAIC,CAAC,EAACC,iCAAiC,IAAIC,CAAC,QAAK,uCAAuC;AAAC,SAAOC,iBAAiB,IAAIC,CAAC,QAAK,sBAAsB;AAAC,SAAOC,iBAAiB,IAAIC,CAAC,QAAK,0CAA0C;AAAC,SAAOC,IAAI,IAAIC,CAAC,QAAK,6BAA6B;AAAC,SAASb,CAACA,CAACC,CAAC,EAACE,CAAC,EAAC;EAAC,MAAMQ,CAAC,GAACV,CAAC,CAACa,MAAM;EAACX,CAAC,CAACY,iBAAiB,IAAEC,CAAC,CAACL,CAAC,CAAC,EAACR,CAAC,CAACc,wBAAwB,KAAGhB,CAAC,CAACiB,OAAO,CAACb,CAAC,CAAC,EAACE,CAAC,CAACI,CAAC,CAAC,EAACF,CAAC,CAACR,CAAC,CAACa,MAAM,EAACX,CAAC,CAAC,CAAC,EAACQ,CAAC,CAACQ,IAAI,CAACC,GAAG,CAACP,CAAC;AAC/jB;AACA;AACA,UAAUV,CAAC,CAACkB,SAAS,GAACR,CAAC,uDAAuD,GAACA,CAAC,yCAAyC;AACzH,UAAUV,CAAC,CAACc,wBAAwB,GAACJ,CAAC;AACtC;AACA,+JAA+J,GAACA,CAAC;AACjK,iEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,CAAC,IAAEF,CAAC,CAACQ,IAAI,CAACC,GAAG,CAACP,CAAC,8EAA8E,CAAC;AAAA;AAAC,MAAMS,CAAC,GAACnB,CAAC,CAAC,CAAC;AAAC,SAASa,CAACA,CAACb,CAAC,EAAC;EAACA,CAAC,CAACoB,QAAQ,CAACH,GAAG,CAAC,IAAIT,CAAC,CAAC,gBAAgB,EAAE,CAACR,CAAC,EAACE,CAAC,KAAG;IAAC,MAAK;QAACmB,cAAc,EAACjB,CAAC;QAACkB,cAAc,EAAChB,CAAC;QAACiB,YAAY,EAACf;MAAC,CAAC,GAACR,CAAC,CAACwB,cAAc;MAACd,CAAC,GAACe,IAAI,CAACC,GAAG,CAAC,EAAE,GAACxB,CAAC,CAACyB,MAAM,CAACC,IAAI,CAAC,IAAE,EAAE,GAAC1B,CAAC,CAACyB,MAAM,CAACE,YAAY,CAAC,CAAC,CAAC,CAAC;MAAChC,CAAC,GAACK,CAAC,CAACyB,MAAM,CAACG,UAAU,IAAE,CAAC;IAAC,OAAOhC,CAAC,CAACqB,CAAC,EAACX,CAAC,GAACX,CAAC,EAACa,CAAC,EAACN,CAAC,EAACE,CAAC,CAAC;EAAA,CAAE,CAAC,CAAC;AAAA;AAAC,SAAOT,CAAC,IAAIkC,cAAc,EAAClB,CAAC,IAAImB,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}