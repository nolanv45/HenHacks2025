{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { estimateNumberArrayMemory as t } from \"../../../../core/memoryEstimations.js\";\nimport { fromValues as e, clone as s } from \"../../../../core/libs/gl-matrix-2/factories/vec2f64.js\";\nimport { pathNumCircleProfileSubdivisions as o } from \"../../layers/graphics/Graphics3DPathSymbolLayerConstants.js\";\nclass r {\n  constructor() {\n    this.vertices = new Array(), this.normals = new Array(), this.indices = new Array(), this.poles = new Array(), this.poleIndices = new Array();\n  }\n  addVertex(t, e) {\n    return this.vertices.push(s(t)), this.normals.push(s(e)), this.vertices.length - 1;\n  }\n  addPole(t, e = null) {\n    return this.poles.push({\n      position: s(t),\n      normal: e ? s(e) : null\n    }), this.poles.length - 1;\n  }\n  addSegment(t, e = null) {\n    this.indices.push(t.v0), this.indices.push(t.v1), e && (this.poleIndices.push(e.v0), this.poleIndices.push(e.v1));\n  }\n  get numSegments() {\n    return this.indices.length / 2;\n  }\n  translate(t, e) {\n    for (const s of this.vertices) s[0] += t, s[1] += e;\n    for (const s of this.poles) s.position[0] += t, s.position[1] += e;\n  }\n  get usedMemory() {\n    return this.vertices.length * t(this.vertices[0]) * 2 + t(this.indices);\n  }\n}\nconst n = {\n  top: [0, -.5],\n  bottom: [0, .5]\n};\nfunction i(t) {\n  const s = .5,\n    i = o,\n    d = new r(),\n    a = {\n      v0: 0,\n      v1: 0\n    };\n  d.addPole(e(0, 0));\n  for (let o = 0; o < i; ++o) {\n    const t = 2 * o * Math.PI / i,\n      r = Math.cos(t),\n      n = Math.sin(t),\n      a = e(r * s, n * s),\n      c = e(r, n);\n    d.addVertex(a, c);\n  }\n  for (let e = 0; e < i - 1; ++e) {\n    const t = {\n      v0: e,\n      v1: e + 1\n    };\n    d.addSegment(t, a);\n  }\n  const c = {\n    v0: i - 1,\n    v1: 0\n  };\n  if (d.addSegment(c, a), \"center\" !== t) {\n    const e = n[t];\n    d.translate(e[0], e[1]);\n  }\n  return d;\n}\nconst d = {\n    center: i(\"center\"),\n    top: i(\"top\"),\n    bottom: i(\"bottom\")\n  },\n  a = {\n    center: c(\"center\"),\n    top: c(\"top\"),\n    bottom: c(\"bottom\")\n  };\nfunction c(t) {\n  const s = 1,\n    o = 1,\n    i = new r(),\n    d = e(-.5, -.5),\n    a = e(.5 * s, -.5),\n    c = e(.5 * s, .5 * o),\n    h = e(-.5, .5 * o),\n    l = e(0, -1),\n    v = e(1, 0),\n    m = e(0, 1),\n    p = e(-1, 0);\n  if (i.addPole(e(0, .5 * o), m), i.addPole(e(0, .5 * o)), i.addPole(e(0, -.5)), i.addPole(e(0, -.5), l), i.addVertex(d, l), i.addVertex(a, l), i.addSegment({\n    v0: 0,\n    v1: 1\n  }, {\n    v0: 3,\n    v1: 3\n  }), i.addVertex(a, v), i.addVertex(c, v), i.addSegment({\n    v0: 2,\n    v1: 3\n  }, {\n    v0: 2,\n    v1: 1\n  }), i.addVertex(c, m), i.addVertex(h, m), i.addSegment({\n    v0: 4,\n    v1: 5\n  }, {\n    v0: 0,\n    v1: 0\n  }), i.addVertex(h, p), i.addVertex(d, p), i.addSegment({\n    v0: 6,\n    v1: 7\n  }, {\n    v0: 1,\n    v1: 2\n  }), \"center\" !== t) {\n    const e = n[t];\n    i.translate(e[0], e[1]);\n  }\n  return i;\n}\nexport { r as PathProfile, d as circleProfiles, a as quadProfiles };","map":{"version":3,"names":["estimateNumberArrayMemory","t","fromValues","e","clone","s","pathNumCircleProfileSubdivisions","o","r","constructor","vertices","Array","normals","indices","poles","poleIndices","addVertex","push","length","addPole","position","normal","addSegment","v0","v1","numSegments","translate","usedMemory","n","top","bottom","i","d","a","Math","PI","cos","sin","c","center","h","l","v","m","p","PathProfile","circleProfiles","quadProfiles"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/3d/webgl-engine/lib/PathProfile.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{estimateNumberArrayMemory as t}from\"../../../../core/memoryEstimations.js\";import{fromValues as e,clone as s}from\"../../../../core/libs/gl-matrix-2/factories/vec2f64.js\";import{pathNumCircleProfileSubdivisions as o}from\"../../layers/graphics/Graphics3DPathSymbolLayerConstants.js\";class r{constructor(){this.vertices=new Array,this.normals=new Array,this.indices=new Array,this.poles=new Array,this.poleIndices=new Array}addVertex(t,e){return this.vertices.push(s(t)),this.normals.push(s(e)),this.vertices.length-1}addPole(t,e=null){return this.poles.push({position:s(t),normal:e?s(e):null}),this.poles.length-1}addSegment(t,e=null){this.indices.push(t.v0),this.indices.push(t.v1),e&&(this.poleIndices.push(e.v0),this.poleIndices.push(e.v1))}get numSegments(){return this.indices.length/2}translate(t,e){for(const s of this.vertices)s[0]+=t,s[1]+=e;for(const s of this.poles)s.position[0]+=t,s.position[1]+=e}get usedMemory(){return this.vertices.length*t(this.vertices[0])*2+t(this.indices)}}const n={top:[0,-.5],bottom:[0,.5]};function i(t){const s=.5,i=o,d=new r,a={v0:0,v1:0};d.addPole(e(0,0));for(let o=0;o<i;++o){const t=2*o*Math.PI/i,r=Math.cos(t),n=Math.sin(t),a=e(r*s,n*s),c=e(r,n);d.addVertex(a,c)}for(let e=0;e<i-1;++e){const t={v0:e,v1:e+1};d.addSegment(t,a)}const c={v0:i-1,v1:0};if(d.addSegment(c,a),\"center\"!==t){const e=n[t];d.translate(e[0],e[1])}return d}const d={center:i(\"center\"),top:i(\"top\"),bottom:i(\"bottom\")},a={center:c(\"center\"),top:c(\"top\"),bottom:c(\"bottom\")};function c(t){const s=1,o=1,i=new r,d=e(-.5,-.5),a=e(.5*s,-.5),c=e(.5*s,.5*o),h=e(-.5,.5*o),l=e(0,-1),v=e(1,0),m=e(0,1),p=e(-1,0);if(i.addPole(e(0,.5*o),m),i.addPole(e(0,.5*o)),i.addPole(e(0,-.5)),i.addPole(e(0,-.5),l),i.addVertex(d,l),i.addVertex(a,l),i.addSegment({v0:0,v1:1},{v0:3,v1:3}),i.addVertex(a,v),i.addVertex(c,v),i.addSegment({v0:2,v1:3},{v0:2,v1:1}),i.addVertex(c,m),i.addVertex(h,m),i.addSegment({v0:4,v1:5},{v0:0,v1:0}),i.addVertex(h,p),i.addVertex(d,p),i.addSegment({v0:6,v1:7},{v0:1,v1:2}),\"center\"!==t){const e=n[t];i.translate(e[0],e[1])}return i}export{r as PathProfile,d as circleProfiles,a as quadProfiles};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}