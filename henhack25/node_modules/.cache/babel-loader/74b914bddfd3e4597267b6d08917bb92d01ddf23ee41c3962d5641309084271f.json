{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport e from \"../../Color.js\";\nimport { getMetersPerUnitForSR as t } from \"../../core/unitUtils.js\";\nimport n from \"../../layers/support/Field.js\";\nimport a from \"../ClassBreaksRenderer.js\";\nimport r from \"../FlowRenderer.js\";\nimport l from \"../RasterColormapRenderer.js\";\nimport s from \"../RasterShadedReliefRenderer.js\";\nimport i from \"../RasterStretchRenderer.js\";\nimport o from \"../UniqueValueRenderer.js\";\nimport u from \"../VectorFieldRenderer.js\";\nimport m from \"./AuthoringInfo.js\";\nimport c from \"./ClassBreakInfo.js\";\nimport { predefinedJsonColorRamps as f, convertColorRampToColormap as p } from \"./colorRampUtils.js\";\nimport { isVectorFieldRendererSupported as d, isColormapRendererSupported as b, isUVRendererSupported as h, isClassBreaksSupported as g, isShadedReliefRendererSupported as v, isFlowRendererSupported as y } from \"./rasterRendererChecks.js\";\nimport w from \"./UniqueValueInfo.js\";\nimport C from \"../visualVariables/ColorVariable.js\";\nimport x from \"../visualVariables/SizeVariable.js\";\nimport M from \"../visualVariables/support/ColorStop.js\";\nimport R from \"../../rest/support/ClassBreaksDefinition.js\";\nimport { createGenerateRendererClassBreaks as V } from \"../../rest/support/generateRendererUtils.js\";\nimport j from \"../../rest/support/MultipartColorRamp.js\";\nimport T from \"../../symbols/SimpleFillSymbol.js\";\nconst I = .25,\n  S = j.fromJSON({\n    type: \"multipart\",\n    colorRamps: [{\n      fromColor: [0, 0, 255],\n      toColor: [0, 255, 255]\n    }, {\n      fromColor: [0, 255, 255],\n      toColor: [255, 255, 0]\n    }, {\n      fromColor: [255, 255, 0],\n      toColor: [255, 0, 0]\n    }]\n  }),\n  k = j.fromJSON(f[0]),\n  F = new Set([\"scientific\", \"standard-time\", \"vector-uv\", \"vector-magdir\", \"vector-u\", \"vector-v\", \"vector-magnitude\", \"vector-direction\"]);\nfunction L(e) {\n  return e.presetRenderers?.find(({\n    method: t,\n    value: n\n  }) => \"raster-function-template\" === t ? n === e.rasterFunctionName : \"variable\" === t && n === e.variableName);\n}\nfunction q(e, t) {\n  const {\n    attributeTable: n,\n    colormap: a\n  } = e;\n  if (d(e)) {\n    const t = Z(e);\n    if (null != t) return t;\n  }\n  if (t?.rasterFunctionColorRamp) {\n    const n = N(e, t);\n    return n.colorRamp = t.rasterFunctionColorRamp, n;\n  }\n  if (null != a) {\n    const t = H(e);\n    if (null != t) return t;\n  }\n  if (null != n) {\n    const t = J(e);\n    if (null != t) return t;\n  }\n  return N(e, t);\n}\nfunction B(e, t = !1) {\n  const n = [\"raster-stretch\"];\n  return b(e, t) && n.push(\"raster-colormap\"), h(e) && n.push(\"unique-value\"), g(e, t) && n.push(\"class-breaks\"), v(e) && n.push(\"raster-shaded-relief\"), d(e) && n.push(\"vector-field\"), y(e) && n.push(\"flow\"), n;\n}\nfunction E(e) {\n  return \"Function\" === e.datasetFormat && \"Colormap\" === e.rasterFunction.functionName ? e.rasterFunction.colorRamp : void 0;\n}\nfunction z(e, t, n) {\n  const a = [\"nearest\", \"bilinear\", \"cubic\", \"majority\"],\n    r = n?.toLowerCase().replace(\"bicubic\", \"cubic\"),\n    l = a.find(e => e === r);\n  if (\"Map\" === t) return l ?? \"bilinear\";\n  if (\"standard-time\" === e.dataType) return l ?? \"nearest\";\n  return \"thematic\" === e.dataType || e.attributeTable || e.colormap ? \"nearest\" === l || \"majority\" === l ? l : \"nearest\" : l ?? \"bilinear\";\n}\nfunction N(e, t) {\n  e = W(e, t?.variableName);\n  const {\n    bandCount: n\n  } = e;\n  let {\n    bandIds: a,\n    stretchType: r\n  } = t || {};\n  a?.some(e => e >= n) && (a = null);\n  let l = e.statistics,\n    s = e.histograms;\n  n > 1 ? (a = a?.length ? a : U(e), l = null == l ? null : a?.map(e => l[e]), s = null == s ? null : a?.map(e => s[e])) : a = [0], null == r && (r = A(e)), t?.includeStatisticsInStretch && (\"percent-clip\" === r || \"histogram-equalization\" === r) && e.statistics?.length && (r = \"min-max\");\n  let o = !1;\n  switch (r) {\n    case \"none\":\n      o = !1;\n      break;\n    case \"percent-clip\":\n      o = !s?.length;\n      break;\n    default:\n      o = !l?.length;\n  }\n  const {\n      dataType: u\n    } = e,\n    m = 1 === a?.length && F.has(u) ? S : null,\n    c = new i({\n      stretchType: r,\n      dynamicRangeAdjustment: o,\n      colorRamp: m,\n      outputMin: 0,\n      outputMax: 255,\n      gamma: 1 === a?.length ? [1] : [1, 1, 1],\n      useGamma: !1\n    });\n  return \"percent-clip\" === r ? c.maxPercent = c.minPercent = I : \"standard-deviation\" === r && (c.numberOfStandardDeviations = 2), o || null == e.multidimensionalInfo && !t?.includeStatisticsInStretch || (\"percent-clip\" === r ? c.histograms = s : \"min-max\" !== r && \"standard-deviation\" !== r || (c.statistics = l)), c;\n}\nfunction W(e, t) {\n  const {\n    multidimensionalInfo: n\n  } = e;\n  if (!t || !n) return e;\n  const a = n.variables.find(e => e.name === t);\n  if (!a) return e;\n  if (e = e.clone(), a) {\n    const {\n      statistics: t,\n      histograms: n\n    } = a;\n    t?.length && (e.statistics = t.map(e => ({\n      min: e.min,\n      max: e.max,\n      avg: e.avg,\n      stddev: e.stddev\n    }))), n?.length && (e.histograms = n);\n  }\n  return e;\n}\nfunction U(e) {\n  const t = e.bandCount;\n  if (1 === t) return null;\n  if (2 === t) return [0];\n  const {\n    bandInfos: n\n  } = e;\n  let a;\n  if (n.length === t) {\n    const {\n      red: e,\n      green: t,\n      blue: r,\n      nir: l\n    } = O(n);\n    null != e && null != t && null != r ? a = [e, t, r] : null != l && null != e && null != t && (a = [l, e, t]);\n  }\n  return !a && t >= 3 && (a = [0, 1, 2]), a;\n}\nfunction D(e, t) {\n  const n = e.bandInfos.map(({\n    name: e\n  }) => e);\n  return t?.length ? t.map(e => n[e]) : n;\n}\nfunction O(e) {\n  const t = {};\n  for (let n = 0; n < e.length; n++) {\n    const a = e[n],\n      r = a.name.toLowerCase();\n    if (\"red\" === r) t.red = n;else if (\"green\" === r) t.green = n;else if (\"blue\" === r) t.blue = n;else if (\"nearinfrared\" === r || \"nearinfrared_1\" === r || \"nir\" === r) t.nir = n;else if (a.maxWavelength && a.minWavelength) {\n      const e = a.minWavelength,\n        r = a.maxWavelength;\n      null == t.blue && e >= 410 && e <= 480 && r >= 480 && r <= 540 ? t.blue = n : null == t.green && e >= 490 && e <= 560 && r >= 560 && r <= 610 ? t.green = n : null == t.red && e >= 595 && e <= 670 && r >= 660 && r <= 730 ? t.red = n : null == t.nir && e >= 700 && e <= 860 && r >= 800 && r <= 950 && (t.nir = n);\n    }\n  }\n  return t;\n}\nfunction A(e) {\n  let t = \"percent-clip\";\n  const {\n      pixelType: n,\n      dataType: a,\n      histograms: r,\n      statistics: l,\n      multidimensionalInfo: s\n    } = e,\n    i = F.has(a) || \"generic\" === a && null != s;\n  return \"u8\" !== n || \"processed\" !== a && null != r && null != l ? \"u8\" === n || \"elevation\" === a || i ? t = \"min-max\" : null != r ? t = \"percent-clip\" : null != l && (t = \"min-max\") : t = \"none\", t;\n}\nfunction J(t, n, a, r) {\n  if (!h(t, n)) return null;\n  const {\n      attributeTable: l,\n      statistics: s\n    } = t,\n    i = P(l, n),\n    u = _(l, \"red\"),\n    c = _(l, \"green\"),\n    f = _(l, \"blue\"),\n    d = new m(),\n    b = [],\n    g = new Set(),\n    v = !!(u && c && f);\n  if (null != l) l.features.forEach(t => {\n    const n = t.attributes[i.name];\n    if (!g.has(t.attributes[i.name]) && null != n) {\n      g.add(n);\n      const a = v && (\"single\" === u.type || \"double\" === u.type) && (\"single\" === c.type || \"double\" === c.type) && (\"single\" === f.type || \"double\" === f.type) && !l.features.some(e => e.attributes[u.name] > 1 || e.attributes[c.name] > 1 || e.attributes[f.name] > 1),\n        r = a ? 255 : 1;\n      b.push(new w({\n        value: t.attributes[i.name],\n        label: t.attributes[i.name] + \"\",\n        symbol: new T({\n          style: \"solid\",\n          outline: null,\n          color: new e(v ? [t.attributes[u.name] * r, t.attributes[c.name] * r, t.attributes[f.name] * r, 1] : [0, 0, 0, 0])\n        })\n      }));\n    }\n  });else if (s?.[0]) for (let o = s[0].min; o <= s[0].max; o++) b.push(new w({\n    value: o,\n    label: o.toString(),\n    symbol: new T({\n      style: \"solid\",\n      outline: null,\n      color: new e([0, 0, 0, 0])\n    })\n  }));\n  if (b.sort((e, t) => e.value && \"string\" == typeof e.value.valueOf() ? 0 : e.value > t.value ? 1 : -1), !v) {\n    const t = p(k, {\n      numColors: b.length\n    });\n    b.forEach((n, a) => n.symbol.color = new e(t[a].slice(1, 4))), d.colorRamp = k;\n  }\n  if (a || r) {\n    const t = a || p(r, {\n      numColors: b.length\n    }).map(e => e.slice(1));\n    b.forEach((n, a) => n.symbol.color = new e(t[a])), d.colorRamp = r;\n  }\n  return new o({\n    field: i.name,\n    uniqueValueInfos: b,\n    authoringInfo: d\n  });\n}\nfunction P(e, t, a) {\n  let r;\n  return null != e ? (r = t ? e.fields.find(e => t.toLowerCase() === e.name.toLowerCase()) : G(e.fields), r || (a || (r = e.fields.find(e => \"string\" === e.type)), r || (r = _(e, \"value\")))) : r = new n({\n    name: \"value\"\n  }), r;\n}\nfunction G(e) {\n  let t;\n  for (let n = 0; n < e.length; n++) {\n    const a = e[n].name.toLowerCase();\n    if (\"string\" === e[n].type) {\n      if (a.startsWith(\"class\")) {\n        t = e[n];\n        break;\n      }\n      null == t && (a.endsWith(\"name\") || a.endsWith(\"type\")) && (t = e[n]);\n    }\n  }\n  return t;\n}\nfunction _(e, t) {\n  return null == e ? null : e.fields.find(e => e.name.toLowerCase() === t);\n}\nfunction H(e) {\n  if (!b(e)) return null;\n  let t;\n  const {\n    attributeTable: n,\n    colormap: a\n  } = e;\n  if (null != n) {\n    const e = _(n, \"value\"),\n      a = P(n, null, !0);\n    \"string\" === a.type && (t = {}, n.features.forEach(n => {\n      const r = n.attributes;\n      t[r[e.name]] = a ? r[a.name] : r[e.name];\n    }));\n  }\n  return l.createFromColormap(a, t);\n}\nfunction K(e, n = \"traditional\") {\n  if (!v(e)) return null;\n  const {\n      extent: a\n    } = e,\n    r = a.width * t(a.spatialReference);\n  return new s({\n    hillshadeType: n,\n    scalingType: r > 5e6 ? \"adjusted\" : \"none\"\n  });\n}\nfunction Q(e, t) {\n  e = W(e, t?.variableName);\n  const {\n    attributeTable: n\n  } = e;\n  if (!g(e)) return null;\n  const r = null != e.histograms ? e.histograms[0] : null,\n    l = null != t?.numClasses && isFinite(t?.numClasses) ? t.numClasses : 5,\n    s = new m({\n      classificationMethod: t?.classificationMethod,\n      colorRamp: t?.colorRamp\n    });\n  let i = t?.field || \"value\";\n  const o = [],\n    u = [],\n    f = 1e3,\n    d = null != n,\n    b = d && n.fields.find(e => \"count\" === e.name.toLowerCase()),\n    h = d ? n.fields.find(e => e.name.toLowerCase() === i.toLowerCase()) : void 0;\n  if (h && d) {\n    i = h.name;\n    const e = n.features.length;\n    let t = 0;\n    n.features.forEach(n => t += (b ? n.attributes[b.name] : 50) / e), n.features.forEach(n => {\n      const a = n.attributes[h.name],\n        r = b ? n.attributes[b.name] : 50;\n      if (r > 0) {\n        u.push(r);\n        const n = Math.max(1, Math.round(r / e / t * f));\n        for (let e = 0; e < n; e++) o.push(a);\n      }\n    });\n  } else {\n    const {\n        pixelType: t\n      } = e,\n      a = (r.max - r.min) / r.size,\n      l = t.includes(\"s\") || t.includes(\"u\"),\n      s = l && 1 === a ? Math.floor(r.min + .5) : r.min,\n      i = l && 1 === a ? Math.floor(r.max - .5) : r.max,\n      m = r.size;\n    let c,\n      p = 0;\n    r.counts.forEach(e => p += e / m), r.counts.forEach((e, t) => {\n      if (e > 0) {\n        u.push(e);\n        const l = Math.max(1, Math.round(e / m / p * f));\n        c = d ? n.features[t].attributes[h.name] : 0 === t ? s : t === m - 1 ? i : r.min + a * (t + .5);\n        for (let e = 0; e < l; e++) o.push(c);\n      }\n    });\n  }\n  const v = t?.classificationMethod || \"natural-breaks\";\n  let y = t?.definedInterval;\n  \"defined-interval\" !== v || y || (y = X(e, h, l));\n  const w = V({\n    values: o,\n    valueFrequency: u,\n    normalizationTotal: null,\n    definition: new R({\n      classificationMethod: v,\n      breakCount: l,\n      definedInterval: y\n    })\n  });\n  let C = t?.colors;\n  if (!C) {\n    const e = t?.colorRamp || S;\n    s.colorRamp = e;\n    const n = p(e, {\n      numColors: w.classBreaks.length,\n      interpolateAlpha: !0\n    });\n    C = n.map(e => e.slice(1));\n  }\n  const x = w.classBreaks.map((e, t) => new c({\n    minValue: e.minValue,\n    maxValue: e.maxValue,\n    label: e.label,\n    symbol: new T({\n      color: C[t]\n    })\n  }));\n  return new a({\n    field: i,\n    classBreakInfos: x,\n    authoringInfo: s\n  });\n}\nfunction X(e, t, n) {\n  let a = 0,\n    r = 0;\n  if (null != e.attributeTable) {\n    const n = e.attributeTable;\n    a = r = n.features[0].attributes[t.name], n.features.forEach(e => {\n      const n = e.attributes[t.name];\n      n < a && (a = n), n > r && (r = n);\n    });\n  } else if (null != e.histograms) {\n    const t = e.histograms;\n    a = t[0].min, r = t[0].max;\n  }\n  return (r - a) / n;\n}\nconst Y = new Map([[\"m/s\", \"meter-per-second\"], [\"km/h\", \"kilometer-per-hour\"], [\"knots\", \"knots\"], [\"ft/s\", \"feet-per-second\"], [\"mph\", \"mile-per-hour\"]]);\nfunction Z(e) {\n  if (!d(e)) return null;\n  let t;\n  if (null != e.statistics && e.statistics.length && (\"vector-magdir\" === e.dataType || \"vector-uv\" === e.dataType)) {\n    const {\n      minMagnitude: n,\n      maxMagnitude: a\n    } = ne(e.dataType, e.statistics);\n    t = [new x({\n      field: \"Magnitude\",\n      minSize: 10,\n      maxSize: 40,\n      minDataValue: n,\n      maxDataValue: a\n    })];\n  }\n  const n = null != e.multidimensionalInfo ? Y.get(e.multidimensionalInfo.variables[0].unit) : void 0,\n    a = new u({\n      visualVariables: t,\n      inputUnit: n,\n      rotationType: \"geographic\"\n    });\n  return a.visualVariables = [...a.sizeVariables, ...a.rotationVariables], a;\n}\nfunction $(e) {\n  return {\n    color: e.symbolLayers[0].material?.color,\n    type: \"esriSFS\",\n    style: \"esriSFSSolid\"\n  };\n}\nfunction ee(e) {\n  if (\"uniqueValue\" === e.type) {\n    const t = e.uniqueValueInfos,\n      n = t?.[0].symbol;\n    return n?.symbolLayers?.length && (e.uniqueValueInfos = t?.map(e => ({\n      value: e.value,\n      label: e.label,\n      symbol: e.symbol ? $(e.symbol) : null\n    }))), e;\n  }\n  if (\"classBreaks\" === e.type) {\n    const t = e.classBreakInfos,\n      n = t[0].symbol;\n    return n?.symbolLayers?.length && (e.classBreakInfos = t.map(e => ({\n      classMinValue: e.classMinValue,\n      classMaxValue: e.classMaxValue,\n      label: e.label,\n      symbol: e.symbol ? $(e.symbol) : null\n    }))), e;\n  }\n  return e;\n}\nfunction te(t) {\n  if (!y(t)) return null;\n  let n;\n  if (null != t.statistics && t.statistics.length > 0 && (\"vector-magdir\" === t.dataType || \"vector-uv\" === t.dataType)) {\n    const {\n      minMagnitude: a,\n      maxMagnitude: r\n    } = ne(t.dataType, t.statistics);\n    n = [new C({\n      field: \"Magnitude\",\n      stops: [new M({\n        value: a,\n        color: new e(\"#1020c0\")\n      }), new M({\n        value: r,\n        color: new e(\"#c02010\")\n      })]\n    })];\n  }\n  return new r({\n    visualVariables: n\n  });\n}\nfunction ne(e, t) {\n  let n, a;\n  if (\"vector-magdir\" === e) n = t[0].min, a = t[0].max;else {\n    const e = t[0].min,\n      r = t[0].max,\n      l = t[1].min,\n      s = t[1].max;\n    n = 0, a = Math.max(Math.abs(e), Math.abs(l), Math.abs(r), Math.abs(s));\n  }\n  return {\n    minMagnitude: n,\n    maxMagnitude: a\n  };\n}\nexport { Q as createClassBreaksRenderer, H as createColormapRenderer, q as createDefaultRenderer, te as createFlowRenderer, K as createShadedReliefRenderer, N as createStretchRenderer, J as createUVRenderer, Z as createVectorFieldRenderer, ne as estimateMagnitudeRange, D as getBandNames, P as getClassField, U as getDefaultBandCombination, z as getDefaultInterpolation, X as getDefinedInterval, _ as getField, E as getFunctionColorRamp, B as getSupportedRendererTypes, W as getVariableRasterInfo, O as getWellKnownBandIndexes, L as matchPresetRenderer, ee as normalizeRendererJSON };","map":{"version":3,"names":["e","getMetersPerUnitForSR","t","n","a","r","l","s","i","o","u","m","c","predefinedJsonColorRamps","f","convertColorRampToColormap","p","isVectorFieldRendererSupported","d","isColormapRendererSupported","b","isUVRendererSupported","h","isClassBreaksSupported","g","isShadedReliefRendererSupported","v","isFlowRendererSupported","y","w","C","x","M","R","createGenerateRendererClassBreaks","V","j","T","I","S","fromJSON","type","colorRamps","fromColor","toColor","k","F","Set","L","presetRenderers","find","method","value","rasterFunctionName","variableName","q","attributeTable","colormap","Z","rasterFunctionColorRamp","N","colorRamp","H","J","B","push","E","datasetFormat","rasterFunction","functionName","z","toLowerCase","replace","dataType","W","bandCount","bandIds","stretchType","some","statistics","histograms","length","U","map","A","includeStatisticsInStretch","has","dynamicRangeAdjustment","outputMin","outputMax","gamma","useGamma","maxPercent","minPercent","numberOfStandardDeviations","multidimensionalInfo","variables","name","clone","min","max","avg","stddev","bandInfos","red","green","blue","nir","O","D","maxWavelength","minWavelength","pixelType","P","_","features","forEach","attributes","add","label","symbol","style","outline","color","toString","sort","valueOf","numColors","slice","field","uniqueValueInfos","authoringInfo","fields","G","startsWith","endsWith","createFromColormap","K","extent","width","spatialReference","hillshadeType","scalingType","Q","numClasses","isFinite","classificationMethod","Math","round","size","includes","floor","counts","definedInterval","X","values","valueFrequency","normalizationTotal","definition","breakCount","colors","classBreaks","interpolateAlpha","minValue","maxValue","classBreakInfos","Y","Map","minMagnitude","maxMagnitude","ne","minSize","maxSize","minDataValue","maxDataValue","get","unit","visualVariables","inputUnit","rotationType","sizeVariables","rotationVariables","$","symbolLayers","material","ee","classMinValue","classMaxValue","te","stops","abs","createClassBreaksRenderer","createColormapRenderer","createDefaultRenderer","createFlowRenderer","createShadedReliefRenderer","createStretchRenderer","createUVRenderer","createVectorFieldRenderer","estimateMagnitudeRange","getBandNames","getClassField","getDefaultBandCombination","getDefaultInterpolation","getDefinedInterval","getField","getFunctionColorRamp","getSupportedRendererTypes","getVariableRasterInfo","getWellKnownBandIndexes","matchPresetRenderer","normalizeRendererJSON"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/renderers/support/rasterRendererHelper.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport e from\"../../Color.js\";import{getMetersPerUnitForSR as t}from\"../../core/unitUtils.js\";import n from\"../../layers/support/Field.js\";import a from\"../ClassBreaksRenderer.js\";import r from\"../FlowRenderer.js\";import l from\"../RasterColormapRenderer.js\";import s from\"../RasterShadedReliefRenderer.js\";import i from\"../RasterStretchRenderer.js\";import o from\"../UniqueValueRenderer.js\";import u from\"../VectorFieldRenderer.js\";import m from\"./AuthoringInfo.js\";import c from\"./ClassBreakInfo.js\";import{predefinedJsonColorRamps as f,convertColorRampToColormap as p}from\"./colorRampUtils.js\";import{isVectorFieldRendererSupported as d,isColormapRendererSupported as b,isUVRendererSupported as h,isClassBreaksSupported as g,isShadedReliefRendererSupported as v,isFlowRendererSupported as y}from\"./rasterRendererChecks.js\";import w from\"./UniqueValueInfo.js\";import C from\"../visualVariables/ColorVariable.js\";import x from\"../visualVariables/SizeVariable.js\";import M from\"../visualVariables/support/ColorStop.js\";import R from\"../../rest/support/ClassBreaksDefinition.js\";import{createGenerateRendererClassBreaks as V}from\"../../rest/support/generateRendererUtils.js\";import j from\"../../rest/support/MultipartColorRamp.js\";import T from\"../../symbols/SimpleFillSymbol.js\";const I=.25,S=j.fromJSON({type:\"multipart\",colorRamps:[{fromColor:[0,0,255],toColor:[0,255,255]},{fromColor:[0,255,255],toColor:[255,255,0]},{fromColor:[255,255,0],toColor:[255,0,0]}]}),k=j.fromJSON(f[0]),F=new Set([\"scientific\",\"standard-time\",\"vector-uv\",\"vector-magdir\",\"vector-u\",\"vector-v\",\"vector-magnitude\",\"vector-direction\"]);function L(e){return e.presetRenderers?.find((({method:t,value:n})=>\"raster-function-template\"===t?n===e.rasterFunctionName:\"variable\"===t&&n===e.variableName))}function q(e,t){const{attributeTable:n,colormap:a}=e;if(d(e)){const t=Z(e);if(null!=t)return t}if(t?.rasterFunctionColorRamp){const n=N(e,t);return n.colorRamp=t.rasterFunctionColorRamp,n}if(null!=a){const t=H(e);if(null!=t)return t}if(null!=n){const t=J(e);if(null!=t)return t}return N(e,t)}function B(e,t=!1){const n=[\"raster-stretch\"];return b(e,t)&&n.push(\"raster-colormap\"),h(e)&&n.push(\"unique-value\"),g(e,t)&&n.push(\"class-breaks\"),v(e)&&n.push(\"raster-shaded-relief\"),d(e)&&n.push(\"vector-field\"),y(e)&&n.push(\"flow\"),n}function E(e){return\"Function\"===e.datasetFormat&&\"Colormap\"===e.rasterFunction.functionName?e.rasterFunction.colorRamp:void 0}function z(e,t,n){const a=[\"nearest\",\"bilinear\",\"cubic\",\"majority\"],r=n?.toLowerCase().replace(\"bicubic\",\"cubic\"),l=a.find((e=>e===r));if(\"Map\"===t)return l??\"bilinear\";if(\"standard-time\"===e.dataType)return l??\"nearest\";return\"thematic\"===e.dataType||e.attributeTable||e.colormap?\"nearest\"===l||\"majority\"===l?l:\"nearest\":l??\"bilinear\"}function N(e,t){e=W(e,t?.variableName);const{bandCount:n}=e;let{bandIds:a,stretchType:r}=t||{};a?.some((e=>e>=n))&&(a=null);let l=e.statistics,s=e.histograms;n>1?(a=a?.length?a:U(e),l=null==l?null:a?.map((e=>l[e])),s=null==s?null:a?.map((e=>s[e]))):a=[0],null==r&&(r=A(e)),t?.includeStatisticsInStretch&&(\"percent-clip\"===r||\"histogram-equalization\"===r)&&e.statistics?.length&&(r=\"min-max\");let o=!1;switch(r){case\"none\":o=!1;break;case\"percent-clip\":o=!s?.length;break;default:o=!l?.length}const{dataType:u}=e,m=1===a?.length&&F.has(u)?S:null,c=new i({stretchType:r,dynamicRangeAdjustment:o,colorRamp:m,outputMin:0,outputMax:255,gamma:1===a?.length?[1]:[1,1,1],useGamma:!1});return\"percent-clip\"===r?c.maxPercent=c.minPercent=I:\"standard-deviation\"===r&&(c.numberOfStandardDeviations=2),o||null==e.multidimensionalInfo&&!t?.includeStatisticsInStretch||(\"percent-clip\"===r?c.histograms=s:\"min-max\"!==r&&\"standard-deviation\"!==r||(c.statistics=l)),c}function W(e,t){const{multidimensionalInfo:n}=e;if(!t||!n)return e;const a=n.variables.find((e=>e.name===t));if(!a)return e;if(e=e.clone(),a){const{statistics:t,histograms:n}=a;t?.length&&(e.statistics=t.map((e=>({min:e.min,max:e.max,avg:e.avg,stddev:e.stddev})))),n?.length&&(e.histograms=n)}return e}function U(e){const t=e.bandCount;if(1===t)return null;if(2===t)return[0];const{bandInfos:n}=e;let a;if(n.length===t){const{red:e,green:t,blue:r,nir:l}=O(n);null!=e&&null!=t&&null!=r?a=[e,t,r]:null!=l&&null!=e&&null!=t&&(a=[l,e,t])}return!a&&t>=3&&(a=[0,1,2]),a}function D(e,t){const n=e.bandInfos.map((({name:e})=>e));return t?.length?t.map((e=>n[e])):n}function O(e){const t={};for(let n=0;n<e.length;n++){const a=e[n],r=a.name.toLowerCase();if(\"red\"===r)t.red=n;else if(\"green\"===r)t.green=n;else if(\"blue\"===r)t.blue=n;else if(\"nearinfrared\"===r||\"nearinfrared_1\"===r||\"nir\"===r)t.nir=n;else if(a.maxWavelength&&a.minWavelength){const e=a.minWavelength,r=a.maxWavelength;null==t.blue&&e>=410&&e<=480&&r>=480&&r<=540?t.blue=n:null==t.green&&e>=490&&e<=560&&r>=560&&r<=610?t.green=n:null==t.red&&e>=595&&e<=670&&r>=660&&r<=730?t.red=n:null==t.nir&&e>=700&&e<=860&&r>=800&&r<=950&&(t.nir=n)}}return t}function A(e){let t=\"percent-clip\";const{pixelType:n,dataType:a,histograms:r,statistics:l,multidimensionalInfo:s}=e,i=F.has(a)||\"generic\"===a&&null!=s;return\"u8\"!==n||\"processed\"!==a&&null!=r&&null!=l?\"u8\"===n||\"elevation\"===a||i?t=\"min-max\":null!=r?t=\"percent-clip\":null!=l&&(t=\"min-max\"):t=\"none\",t}function J(t,n,a,r){if(!h(t,n))return null;const{attributeTable:l,statistics:s}=t,i=P(l,n),u=_(l,\"red\"),c=_(l,\"green\"),f=_(l,\"blue\"),d=new m,b=[],g=new Set,v=!!(u&&c&&f);if(null!=l)l.features.forEach((t=>{const n=t.attributes[i.name];if(!g.has(t.attributes[i.name])&&null!=n){g.add(n);const a=v&&(\"single\"===u.type||\"double\"===u.type)&&(\"single\"===c.type||\"double\"===c.type)&&(\"single\"===f.type||\"double\"===f.type)&&!l.features.some((e=>e.attributes[u.name]>1||e.attributes[c.name]>1||e.attributes[f.name]>1)),r=a?255:1;b.push(new w({value:t.attributes[i.name],label:t.attributes[i.name]+\"\",symbol:new T({style:\"solid\",outline:null,color:new e(v?[t.attributes[u.name]*r,t.attributes[c.name]*r,t.attributes[f.name]*r,1]:[0,0,0,0])})}))}}));else if(s?.[0])for(let o=s[0].min;o<=s[0].max;o++)b.push(new w({value:o,label:o.toString(),symbol:new T({style:\"solid\",outline:null,color:new e([0,0,0,0])})}));if(b.sort(((e,t)=>e.value&&\"string\"==typeof e.value.valueOf()?0:e.value>t.value?1:-1)),!v){const t=p(k,{numColors:b.length});b.forEach(((n,a)=>n.symbol.color=new e(t[a].slice(1,4)))),d.colorRamp=k}if(a||r){const t=a||p(r,{numColors:b.length}).map((e=>e.slice(1)));b.forEach(((n,a)=>n.symbol.color=new e(t[a]))),d.colorRamp=r}return new o({field:i.name,uniqueValueInfos:b,authoringInfo:d})}function P(e,t,a){let r;return null!=e?(r=t?e.fields.find((e=>t.toLowerCase()===e.name.toLowerCase())):G(e.fields),r||(a||(r=e.fields.find((e=>\"string\"===e.type))),r||(r=_(e,\"value\")))):r=new n({name:\"value\"}),r}function G(e){let t;for(let n=0;n<e.length;n++){const a=e[n].name.toLowerCase();if(\"string\"===e[n].type){if(a.startsWith(\"class\")){t=e[n];break}null==t&&(a.endsWith(\"name\")||a.endsWith(\"type\"))&&(t=e[n])}}return t}function _(e,t){return null==e?null:e.fields.find((e=>e.name.toLowerCase()===t))}function H(e){if(!b(e))return null;let t;const{attributeTable:n,colormap:a}=e;if(null!=n){const e=_(n,\"value\"),a=P(n,null,!0);\"string\"===a.type&&(t={},n.features.forEach((n=>{const r=n.attributes;t[r[e.name]]=a?r[a.name]:r[e.name]})))}return l.createFromColormap(a,t)}function K(e,n=\"traditional\"){if(!v(e))return null;const{extent:a}=e,r=a.width*t(a.spatialReference);return new s({hillshadeType:n,scalingType:r>5e6?\"adjusted\":\"none\"})}function Q(e,t){e=W(e,t?.variableName);const{attributeTable:n}=e;if(!g(e))return null;const r=null!=e.histograms?e.histograms[0]:null,l=null!=t?.numClasses&&isFinite(t?.numClasses)?t.numClasses:5,s=new m({classificationMethod:t?.classificationMethod,colorRamp:t?.colorRamp});let i=t?.field||\"value\";const o=[],u=[],f=1e3,d=null!=n,b=d&&n.fields.find((e=>\"count\"===e.name.toLowerCase())),h=d?n.fields.find((e=>e.name.toLowerCase()===i.toLowerCase())):void 0;if(h&&d){i=h.name;const e=n.features.length;let t=0;n.features.forEach((n=>t+=(b?n.attributes[b.name]:50)/e)),n.features.forEach((n=>{const a=n.attributes[h.name],r=b?n.attributes[b.name]:50;if(r>0){u.push(r);const n=Math.max(1,Math.round(r/e/t*f));for(let e=0;e<n;e++)o.push(a)}}))}else{const{pixelType:t}=e,a=(r.max-r.min)/r.size,l=t.includes(\"s\")||t.includes(\"u\"),s=l&&1===a?Math.floor(r.min+.5):r.min,i=l&&1===a?Math.floor(r.max-.5):r.max,m=r.size;let c,p=0;r.counts.forEach((e=>p+=e/m)),r.counts.forEach(((e,t)=>{if(e>0){u.push(e);const l=Math.max(1,Math.round(e/m/p*f));c=d?n.features[t].attributes[h.name]:0===t?s:t===m-1?i:r.min+a*(t+.5);for(let e=0;e<l;e++)o.push(c)}}))}const v=t?.classificationMethod||\"natural-breaks\";let y=t?.definedInterval;\"defined-interval\"!==v||y||(y=X(e,h,l));const w=V({values:o,valueFrequency:u,normalizationTotal:null,definition:new R({classificationMethod:v,breakCount:l,definedInterval:y})});let C=t?.colors;if(!C){const e=t?.colorRamp||S;s.colorRamp=e;const n=p(e,{numColors:w.classBreaks.length,interpolateAlpha:!0});C=n.map((e=>e.slice(1)))}const x=w.classBreaks.map(((e,t)=>new c({minValue:e.minValue,maxValue:e.maxValue,label:e.label,symbol:new T({color:C[t]})})));return new a({field:i,classBreakInfos:x,authoringInfo:s})}function X(e,t,n){let a=0,r=0;if(null!=e.attributeTable){const n=e.attributeTable;a=r=n.features[0].attributes[t.name],n.features.forEach((e=>{const n=e.attributes[t.name];n<a&&(a=n),n>r&&(r=n)}))}else if(null!=e.histograms){const t=e.histograms;a=t[0].min,r=t[0].max}return(r-a)/n}const Y=new Map([[\"m/s\",\"meter-per-second\"],[\"km/h\",\"kilometer-per-hour\"],[\"knots\",\"knots\"],[\"ft/s\",\"feet-per-second\"],[\"mph\",\"mile-per-hour\"]]);function Z(e){if(!d(e))return null;let t;if(null!=e.statistics&&e.statistics.length&&(\"vector-magdir\"===e.dataType||\"vector-uv\"===e.dataType)){const{minMagnitude:n,maxMagnitude:a}=ne(e.dataType,e.statistics);t=[new x({field:\"Magnitude\",minSize:10,maxSize:40,minDataValue:n,maxDataValue:a})]}const n=null!=e.multidimensionalInfo?Y.get(e.multidimensionalInfo.variables[0].unit):void 0,a=new u({visualVariables:t,inputUnit:n,rotationType:\"geographic\"});return a.visualVariables=[...a.sizeVariables,...a.rotationVariables],a}function $(e){return{color:e.symbolLayers[0].material?.color,type:\"esriSFS\",style:\"esriSFSSolid\"}}function ee(e){if(\"uniqueValue\"===e.type){const t=e.uniqueValueInfos,n=t?.[0].symbol;return n?.symbolLayers?.length&&(e.uniqueValueInfos=t?.map((e=>({value:e.value,label:e.label,symbol:e.symbol?$(e.symbol):null})))),e}if(\"classBreaks\"===e.type){const t=e.classBreakInfos,n=t[0].symbol;return n?.symbolLayers?.length&&(e.classBreakInfos=t.map((e=>({classMinValue:e.classMinValue,classMaxValue:e.classMaxValue,label:e.label,symbol:e.symbol?$(e.symbol):null})))),e}return e}function te(t){if(!y(t))return null;let n;if(null!=t.statistics&&t.statistics.length>0&&(\"vector-magdir\"===t.dataType||\"vector-uv\"===t.dataType)){const{minMagnitude:a,maxMagnitude:r}=ne(t.dataType,t.statistics);n=[new C({field:\"Magnitude\",stops:[new M({value:a,color:new e(\"#1020c0\")}),new M({value:r,color:new e(\"#c02010\")})]})]}return new r({visualVariables:n})}function ne(e,t){let n,a;if(\"vector-magdir\"===e)n=t[0].min,a=t[0].max;else{const e=t[0].min,r=t[0].max,l=t[1].min,s=t[1].max;n=0,a=Math.max(Math.abs(e),Math.abs(l),Math.abs(r),Math.abs(s))}return{minMagnitude:n,maxMagnitude:a}}export{Q as createClassBreaksRenderer,H as createColormapRenderer,q as createDefaultRenderer,te as createFlowRenderer,K as createShadedReliefRenderer,N as createStretchRenderer,J as createUVRenderer,Z as createVectorFieldRenderer,ne as estimateMagnitudeRange,D as getBandNames,P as getClassField,U as getDefaultBandCombination,z as getDefaultInterpolation,X as getDefinedInterval,_ as getField,E as getFunctionColorRamp,B as getSupportedRendererTypes,W as getVariableRasterInfo,O as getWellKnownBandIndexes,L as matchPresetRenderer,ee as normalizeRendererJSON};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}