{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../chunks/tslib.es6.js\";\nimport { property as t } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/has.js\";\nimport \"../../../core/Logger.js\";\nimport \"../../../core/RandomLCG.js\";\nimport { subclass as s } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport { isIntegerPixelType as r } from \"../rasterFormats/pixelRangeUtils.js\";\nimport o from \"./BaseRasterFunction.js\";\nimport i from \"./SlopeFunctionArguments.js\";\nimport { slope as p, gcsFactor as n } from \"./surfaceUtils.js\";\nlet u = class extends o {\n  constructor() {\n    super(...arguments), this.functionName = \"Slope\", this.functionArguments = null, this.rasterArgumentNames = [\"raster\"], this.isGCS = !1;\n  }\n  _bindSourceRasters() {\n    this.outputPixelType = this._getOutputPixelType(\"f32\");\n    const e = this.sourceRasterInfos[0].clone();\n    return e.pixelType = this.outputPixelType, this._removeStatsHistColormapVAT(e), e.statistics = \"percent-rise\" !== this.functionArguments.slopeType ? [{\n      min: 0,\n      max: 90,\n      avg: 1,\n      stddev: 1\n    }] : null, e.bandCount = 1, this.rasterInfo = e, this.isGCS = e.spatialReference?.isGeographic ?? !1, {\n      success: !0,\n      supportsGPU: !0\n    };\n  }\n  _processPixels(e) {\n    const t = e.pixelBlocks?.[0];\n    if (null == t) return null;\n    const {\n        zFactor: s,\n        slopeType: r,\n        pixelSizePower: o,\n        pixelSizeFactor: i\n      } = this.functionArguments,\n      {\n        isGCS: n\n      } = this,\n      {\n        extent: u,\n        primaryPixelSizes: c\n      } = e,\n      a = c?.[0],\n      l = a ?? (u ? {\n        x: u.width / t.width,\n        y: u.height / t.height\n      } : {\n        x: 1,\n        y: 1\n      });\n    return p(t, {\n      zFactor: s,\n      slopeType: r,\n      pixelSizePower: o,\n      pixelSizeFactor: i,\n      isGCS: n,\n      resolution: l\n    });\n  }\n  _getWebGLParameters() {\n    const {\n      zFactor: e,\n      slopeType: t,\n      pixelSizeFactor: s,\n      pixelSizePower: o\n    } = this.functionArguments;\n    return {\n      zFactor: this.isGCS && e >= 1 ? e * n : e,\n      slopeType: t,\n      pixelSizeFactor: s ?? 0,\n      pixelSizePower: o ?? 0,\n      isOutputRounded: r(this.outputPixelType)\n    };\n  }\n};\ne([t({\n  json: {\n    write: !0,\n    name: \"rasterFunction\"\n  }\n})], u.prototype, \"functionName\", void 0), e([t({\n  type: i,\n  json: {\n    write: !0,\n    name: \"rasterFunctionArguments\"\n  }\n})], u.prototype, \"functionArguments\", void 0), e([t()], u.prototype, \"rasterArgumentNames\", void 0), e([t({\n  json: {\n    write: !0\n  }\n})], u.prototype, \"isGCS\", void 0), u = e([s(\"esri.layers.support.rasterFunctions.SlopeFunction\")], u);\nconst c = u;\nexport { c as default };","map":{"version":3,"names":["_","e","property","t","subclass","s","isIntegerPixelType","r","o","i","slope","p","gcsFactor","n","u","constructor","arguments","functionName","functionArguments","rasterArgumentNames","isGCS","_bindSourceRasters","outputPixelType","_getOutputPixelType","sourceRasterInfos","clone","pixelType","_removeStatsHistColormapVAT","statistics","slopeType","min","max","avg","stddev","bandCount","rasterInfo","spatialReference","isGeographic","success","supportsGPU","_processPixels","pixelBlocks","zFactor","pixelSizePower","pixelSizeFactor","extent","primaryPixelSizes","c","a","l","x","width","y","height","resolution","_getWebGLParameters","isOutputRounded","json","write","name","prototype","type","default"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/layers/support/rasterFunctions/SlopeFunction.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../chunks/tslib.es6.js\";import{property as t}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/has.js\";import\"../../../core/Logger.js\";import\"../../../core/RandomLCG.js\";import{subclass as s}from\"../../../core/accessorSupport/decorators/subclass.js\";import{isIntegerPixelType as r}from\"../rasterFormats/pixelRangeUtils.js\";import o from\"./BaseRasterFunction.js\";import i from\"./SlopeFunctionArguments.js\";import{slope as p,gcsFactor as n}from\"./surfaceUtils.js\";let u=class extends o{constructor(){super(...arguments),this.functionName=\"Slope\",this.functionArguments=null,this.rasterArgumentNames=[\"raster\"],this.isGCS=!1}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType(\"f32\");const e=this.sourceRasterInfos[0].clone();return e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),e.statistics=\"percent-rise\"!==this.functionArguments.slopeType?[{min:0,max:90,avg:1,stddev:1}]:null,e.bandCount=1,this.rasterInfo=e,this.isGCS=e.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(e){const t=e.pixelBlocks?.[0];if(null==t)return null;const{zFactor:s,slopeType:r,pixelSizePower:o,pixelSizeFactor:i}=this.functionArguments,{isGCS:n}=this,{extent:u,primaryPixelSizes:c}=e,a=c?.[0],l=a??(u?{x:u.width/t.width,y:u.height/t.height}:{x:1,y:1});return p(t,{zFactor:s,slopeType:r,pixelSizePower:o,pixelSizeFactor:i,isGCS:n,resolution:l})}_getWebGLParameters(){const{zFactor:e,slopeType:t,pixelSizeFactor:s,pixelSizePower:o}=this.functionArguments;return{zFactor:this.isGCS&&e>=1?e*n:e,slopeType:t,pixelSizeFactor:s??0,pixelSizePower:o??0,isOutputRounded:r(this.outputPixelType)}}};e([t({json:{write:!0,name:\"rasterFunction\"}})],u.prototype,\"functionName\",void 0),e([t({type:i,json:{write:!0,name:\"rasterFunctionArguments\"}})],u.prototype,\"functionArguments\",void 0),e([t()],u.prototype,\"rasterArgumentNames\",void 0),e([t({json:{write:!0}})],u.prototype,\"isGCS\",void 0),u=e([s(\"esri.layers.support.rasterFunctions.SlopeFunction\")],u);const c=u;export{c as default};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}