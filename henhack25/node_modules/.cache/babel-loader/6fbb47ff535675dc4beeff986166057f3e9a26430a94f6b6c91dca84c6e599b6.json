{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../chunks/tslib.es6.js\";\nimport t from \"../PopupTemplate.js\";\nimport r from \"../core/Clonable.js\";\nimport s from \"../core/Error.js\";\nimport i from \"../core/Logger.js\";\nimport { MultiOriginJSONMixin as o } from \"../core/MultiOriginJSONSupport.js\";\nimport { debounce as a, throwIfAbortError as n } from \"../core/promiseUtils.js\";\nimport { watch as p } from \"../core/reactiveUtils.js\";\nimport { property as l } from \"../core/accessorSupport/decorators/property.js\";\nimport { ensureClass as c } from \"../core/accessorSupport/ensureType.js\";\nimport \"../core/has.js\";\nimport \"../core/RandomLCG.js\";\nimport { subclass as m } from \"../core/accessorSupport/decorators/subclass.js\";\nimport u from \"./Layer.js\";\nimport { ArcGISService as h } from \"./mixins/ArcGISService.js\";\nimport { BlendLayer as d } from \"./mixins/BlendLayer.js\";\nimport { CustomParametersMixin as y } from \"./mixins/CustomParametersMixin.js\";\nimport { ImageryTileMixin as f } from \"./mixins/ImageryTileMixin.js\";\nimport { OperationalLayer as g } from \"./mixins/OperationalLayer.js\";\nimport { PortalLayer as v } from \"./mixins/PortalLayer.js\";\nimport { RasterPresetRendererMixin as R } from \"./mixins/RasterPresetRendererMixin.js\";\nimport { RefreshableLayer as w } from \"./mixins/RefreshableLayer.js\";\nimport { ScaleRangeLayer as S } from \"./mixins/ScaleRangeLayer.js\";\nimport { TemporalLayer as F } from \"./mixins/TemporalLayer.js\";\nimport { legendEnabled as j } from \"./support/commonProperties.js\";\nimport _ from \"./support/Field.js\";\nimport { getServicePixelValueField as O, getRawServicePixelValueField as P, getRasterAttributeTableFields as b, getMagnitudeField as I, getDirectionField as x, getMultidimensionalFields as T, commonRasterFieldNames as N, setDefaultRasterFieldFormats as L } from \"./support/rasterFieldUtils.js\";\nimport J from \"./support/RasterFunction.js\";\nimport C from \"./support/rasterDatasets/FunctionRaster.js\";\nimport M from \"./support/rasterDatasets/RasterFactory.js\";\nimport { getPrimaryRasterUrls as E, create as A } from \"./support/rasterFunctions/rasterFunctionHelper.js\";\nimport { createPopupTemplate as U } from \"../support/popupUtils.js\";\nimport { SaveOperationType as $ } from \"../webdoc/interfaces.js\";\nlet V = class extends d(S(g(v(R(y(f(F(h(w(o(r.ClonableMixin(u)))))))))))) {\n  constructor() {\n    super(...arguments), this._primaryRasters = [], this.legendEnabled = !0, this.isReference = null, this.listMode = \"show\", this.sourceJSON = null, this.version = null, this.type = \"imagery-tile\", this.operationalLayerType = \"ArcGISTiledImageServiceLayer\", this.popupEnabled = !0, this.popupTemplate = null, this.fields = null, this.source = void 0, this._debouncedSaveOperations = a(async (e, t, r) => {\n      const {\n        save: s,\n        saveAs: i\n      } = await import(\"./save/imageryUtils.js\");\n      switch (e) {\n        case $.SAVE:\n          return s(this, t);\n        case $.SAVE_AS:\n          return i(this, r, t);\n      }\n    });\n  }\n  normalizeCtorArgs(e, t) {\n    return \"string\" == typeof e ? {\n      url: e,\n      ...t\n    } : e;\n  }\n  load(e) {\n    const t = null != e ? e.signal : null;\n    return this.addResolvingPromise(this.loadFromPortal({\n      supportedTypes: [\"Image Service\"]\n    }, e).catch(n).then(() => this._openRaster(t))), Promise.resolve(this);\n  }\n  get defaultPopupTemplate() {\n    return this.createPopupTemplate();\n  }\n  get rasterFields() {\n    const e = [O(\"Pixel Value\"), P(\"Raw Pixel Value\")],\n      t = this.raster?.rasterInfo ?? this.serviceRasterInfo,\n      r = t?.attributeTable;\n    if (r) {\n      const t = b(r);\n      e.push(...t);\n    }\n    const s = t?.dataType,\n      i = t?.multidimensionalInfo;\n    if ((\"vector-magdir\" === s || \"vector-uv\" === s) && null != i) {\n      const t = i.variables[0].unit?.trim(),\n        r = I(t),\n        s = x();\n      e.push(r, s);\n    }\n    if (i) {\n      const t = T(i);\n      e.push(...t);\n    }\n    return e;\n  }\n  createPopupTemplate(e) {\n    const {\n        rasterFields: t\n      } = this,\n      r = e?.visibleFieldNames ?? new Set(t.map(_ref => {\n        let {\n          name: e\n        } = _ref;\n        return e;\n      }).filter(e => e !== N.rawServicePixelValue)),\n      s = U({\n        fields: t,\n        title: this.title\n      }, {\n        ...e,\n        visibleFieldNames: r\n      }),\n      {\n        rasterInfo: i\n      } = this.raster;\n    return s?.fieldInfos && i && L(s.fieldInfos, i), s;\n  }\n  async generateRasterInfo(e, t) {\n    if (e = c(J, e), await this.load(), !e || \"none\" === e.functionName?.toLowerCase()) return this.serviceRasterInfo;\n    try {\n      const {\n        rasterInfo: r\n      } = await this._openFunctionRaster(e, t);\n      return r;\n    } catch (r) {\n      if (r instanceof s) throw r;\n      throw new s(\"imagery-tile-layer\", \"the given raster function is not supported\");\n    }\n  }\n  async save(e) {\n    return this._debouncedSaveOperations($.SAVE, e);\n  }\n  async saveAs(e, t) {\n    return this._debouncedSaveOperations($.SAVE_AS, t, e);\n  }\n  write(e, t) {\n    const r = this._primaryRasters[0] ?? this.raster;\n    if (this.loaded ? \"RasterTileServer\" === r.datasetFormat && (\"Raster\" === r.tileType || \"Map\" === r.tileType) : this.url && /\\/ImageServer(\\/|\\/?$)/i.test(this.url)) return super.write(e, t);\n    if (t?.messages) {\n      const e = `${t.origin}/${t.layerContainerType || \"operational-layers\"}`;\n      t.messages.push(new s(\"layer:unsupported\", `Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`, {\n        layer: this\n      }));\n    }\n    return null;\n  }\n  async _openRaster(e) {\n    let t = !1;\n    if (this.raster) await this._openFromRaster(this.raster, e), t = \"Function\" === this.raster.datasetFormat, !t && this.rasterFunction && (this._primaryRasters = [this.raster], await this._initializeWithFunctionRaster(this.rasterFunction));else {\n      const {\n        url: t,\n        rasterFunction: r,\n        source: i\n      } = this;\n      if (!t && !i) throw new s(\"imagery-tile-layer:open\", \"missing url or source parameter\");\n      i ? await this._openFromSource(i, e) : r ? await this._openFromUrlWithRasterFunction(t, r, e) : await this._openFromUrl(t, e);\n    }\n    const r = this.raster.rasterInfo;\n    if (!r) throw new s(\"imagery-tile-layer:load\", \"cannot load resources on \" + this.url);\n    if (this._set(\"serviceRasterInfo\", t ? r : this._primaryRasters[0].rasterInfo), this._set(\"spatialReference\", r.spatialReference), this.sourceJSON = this.sourceJSON || this.raster.sourceJSON, null != this.sourceJSON) {\n      const e = \"Map\" === this.raster.tileType && null != this.sourceJSON.minLOD && null != this.sourceJSON.maxLOD ? this.sourceJSON : {\n        ...this.sourceJSON,\n        minScale: 0,\n        maxScale: 0\n      };\n      this.read(e, {\n        origin: \"service\"\n      });\n    } else this.read({\n      tileInfo: this.serviceRasterInfo?.storageInfo.tileInfo.toJSON()\n    }, {\n      origin: \"service\"\n    });\n    this.title || (this.title = this.raster.datasetName), \"Map\" === this.raster.tileType && (this.popupEnabled = !1), this._configDefaultSettings(), this.addHandles(p(() => this.customParameters, e => {\n      this.raster && (this.raster.ioConfig.customFetchParameters = e);\n    }));\n  }\n  async _openFromRaster(e, t) {\n    e.rasterInfo || (await e.open({\n      signal: t\n    })), this._primaryRasters = \"Function\" === e.datasetFormat ? e.primaryRasters.rasters : [e], this.url || (this.url = this._primaryRasters[0].url);\n  }\n  async _openFromUrlWithRasterFunction(e, t, r) {\n    const i = [e];\n    t && E(t.toJSON(), i);\n    const o = await Promise.all(i.map(e => M.open({\n        url: e,\n        sourceJSON: this.sourceJSON,\n        ioConfig: {\n          sampling: \"closest\",\n          ...this.ioConfig,\n          customFetchParameters: this.customParameters\n        },\n        signal: r\n      }))),\n      a = o.findIndex(e => null == e);\n    if (a > -1) throw new s(\"imagery-tile-layer:open\", `cannot open raster: ${i[a]}`);\n    return this._primaryRasters = o, this._initializeWithFunctionRaster(t);\n  }\n  async _openFromUrl(e, t) {\n    const r = await M.open({\n      url: e,\n      sourceJSON: this.sourceJSON,\n      ioConfig: {\n        sampling: \"closest\",\n        ...this.ioConfig,\n        customFetchParameters: this.customParameters\n      },\n      signal: t\n    });\n    if (null == r) throw new s(\"imagery-tile-layer:open\", `cannot open raster: ${e}`);\n    this._primaryRasters = [r], this.raster = r;\n  }\n  async _openFromSource(e, t) {\n    const r = \"the tiled imagery data source is not supported\",\n      i = \"coverage\" === e.type?.toLowerCase() ? \"CovJSON\" : e.extent && e.pixelBlock ? \"MEMORY\" : null;\n    if (!i) throw new s(\"imagery-tile-layer:open\", r);\n    \"MEMORY\" === i && (e = {\n      ...e,\n      pixelBlock: void 0,\n      pixelBlocks: [e.pixelBlock]\n    });\n    const o = await M.open({\n      url: \"\",\n      source: e,\n      datasetFormat: i,\n      ioConfig: {\n        sampling: \"closest\",\n        ...this.ioConfig,\n        customFetchParameters: this.customParameters\n      },\n      signal: t\n    });\n    if (null == o) throw new s(\"imagery-tile-layer:open\", r);\n    this._primaryRasters = [o], this.rasterFunction ? await this._initializeWithFunctionRaster(this.rasterFunction) : this.raster = o;\n  }\n  async _openFunctionRaster(e, t) {\n    const r = {\n      raster: this._primaryRasters[0]\n    };\n    this._primaryRasters.length > 1 && this._primaryRasters.forEach(e => r[e.url] = e);\n    const s = A(e.functionDefinition?.toJSON() ?? e.toJSON(), r),\n      i = new C({\n        rasterFunction: s\n      });\n    return await i.open(t), i;\n  }\n  async _initializeWithFunctionRaster(e, t) {\n    try {\n      this.raster = await this._openFunctionRaster(e, t);\n    } catch (r) {\n      r instanceof s && i.getLogger(this).error(\"imagery-tile-layer:open\", r.message), i.getLogger(this).warn(\"imagery-tile-layer:open\", \"the raster function cannot be applied and is removed\"), this._set(\"rasterFunction\", null), this.raster = this._primaryRasters[0];\n    }\n  }\n};\ne([l({\n  clonable: !1\n})], V.prototype, \"_primaryRasters\", void 0), e([l(j)], V.prototype, \"legendEnabled\", void 0), e([l({\n  type: Boolean,\n  json: {\n    read: !1,\n    write: {\n      enabled: !0,\n      overridePolicy: () => ({\n        enabled: !1\n      })\n    }\n  }\n})], V.prototype, \"isReference\", void 0), e([l({\n  type: [\"show\", \"hide\"]\n})], V.prototype, \"listMode\", void 0), e([l({\n  json: {\n    read: !0,\n    write: !0\n  }\n})], V.prototype, \"blendMode\", void 0), e([l({\n  type: J,\n  json: {\n    name: \"renderingRule\",\n    write: !0\n  }\n})], V.prototype, \"rasterFunction\", void 0), e([l()], V.prototype, \"sourceJSON\", void 0), e([l({\n  readOnly: !0,\n  json: {\n    origins: {\n      service: {\n        read: {\n          source: \"currentVersion\"\n        }\n      }\n    }\n  }\n})], V.prototype, \"version\", void 0), e([l({\n  readOnly: !0,\n  json: {\n    read: !1\n  }\n})], V.prototype, \"type\", void 0), e([l({\n  type: [\"ArcGISTiledImageServiceLayer\"]\n})], V.prototype, \"operationalLayerType\", void 0), e([l({\n  type: Boolean,\n  value: !0,\n  json: {\n    read: {\n      source: \"disablePopup\",\n      reader: (e, t) => !t.disablePopup\n    },\n    write: {\n      target: \"disablePopup\",\n      overridePolicy() {\n        return {\n          enabled: !this.loaded || \"Raster\" === this.raster.tileType\n        };\n      },\n      writer(e, t, r) {\n        t[r] = !e;\n      }\n    }\n  }\n})], V.prototype, \"popupEnabled\", void 0), e([l({\n  type: t,\n  json: {\n    read: {\n      source: \"popupInfo\"\n    },\n    write: {\n      target: \"popupInfo\",\n      overridePolicy() {\n        return {\n          enabled: !this.loaded || \"Raster\" === this.raster.tileType\n        };\n      }\n    }\n  }\n})], V.prototype, \"popupTemplate\", void 0), e([l({\n  readOnly: !0\n})], V.prototype, \"defaultPopupTemplate\", null), e([l({\n  readOnly: !0,\n  type: [_]\n})], V.prototype, \"fields\", void 0), e([l({\n  readOnly: !0,\n  type: [_]\n})], V.prototype, \"rasterFields\", null), e([l({\n  constructOnly: !0\n})], V.prototype, \"source\", void 0), V = e([m(\"esri.layers.ImageryTileLayer\")], V);\nconst B = V;\nexport { B as default };","map":{"version":3,"names":["_","e","t","r","s","i","MultiOriginJSONMixin","o","debounce","a","throwIfAbortError","n","watch","p","property","l","ensureClass","c","subclass","m","u","ArcGISService","h","BlendLayer","d","CustomParametersMixin","y","ImageryTileMixin","f","OperationalLayer","g","PortalLayer","v","RasterPresetRendererMixin","R","RefreshableLayer","w","ScaleRangeLayer","S","TemporalLayer","F","legendEnabled","j","getServicePixelValueField","O","getRawServicePixelValueField","P","getRasterAttributeTableFields","b","getMagnitudeField","I","getDirectionField","x","getMultidimensionalFields","T","commonRasterFieldNames","N","setDefaultRasterFieldFormats","L","J","C","M","getPrimaryRasterUrls","E","create","A","createPopupTemplate","U","SaveOperationType","$","V","ClonableMixin","constructor","arguments","_primaryRasters","isReference","listMode","sourceJSON","version","type","operationalLayerType","popupEnabled","popupTemplate","fields","source","_debouncedSaveOperations","save","saveAs","SAVE","SAVE_AS","normalizeCtorArgs","url","load","signal","addResolvingPromise","loadFromPortal","supportedTypes","catch","then","_openRaster","Promise","resolve","defaultPopupTemplate","rasterFields","raster","rasterInfo","serviceRasterInfo","attributeTable","push","dataType","multidimensionalInfo","variables","unit","trim","visibleFieldNames","Set","map","_ref","name","filter","rawServicePixelValue","title","fieldInfos","generateRasterInfo","functionName","toLowerCase","_openFunctionRaster","write","loaded","datasetFormat","tileType","test","messages","origin","layerContainerType","id","declaredClass","layer","_openFromRaster","rasterFunction","_initializeWithFunctionRaster","_openFromSource","_openFromUrlWithRasterFunction","_openFromUrl","_set","spatialReference","minLOD","maxLOD","minScale","maxScale","read","tileInfo","storageInfo","toJSON","datasetName","_configDefaultSettings","addHandles","customParameters","ioConfig","customFetchParameters","open","primaryRasters","rasters","all","sampling","findIndex","extent","pixelBlock","pixelBlocks","length","forEach","functionDefinition","getLogger","error","message","warn","clonable","prototype","Boolean","json","enabled","overridePolicy","readOnly","origins","service","value","reader","disablePopup","target","writer","constructOnly","B","default"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/layers/ImageryTileLayer.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../chunks/tslib.es6.js\";import t from\"../PopupTemplate.js\";import r from\"../core/Clonable.js\";import s from\"../core/Error.js\";import i from\"../core/Logger.js\";import{MultiOriginJSONMixin as o}from\"../core/MultiOriginJSONSupport.js\";import{debounce as a,throwIfAbortError as n}from\"../core/promiseUtils.js\";import{watch as p}from\"../core/reactiveUtils.js\";import{property as l}from\"../core/accessorSupport/decorators/property.js\";import{ensureClass as c}from\"../core/accessorSupport/ensureType.js\";import\"../core/has.js\";import\"../core/RandomLCG.js\";import{subclass as m}from\"../core/accessorSupport/decorators/subclass.js\";import u from\"./Layer.js\";import{ArcGISService as h}from\"./mixins/ArcGISService.js\";import{BlendLayer as d}from\"./mixins/BlendLayer.js\";import{CustomParametersMixin as y}from\"./mixins/CustomParametersMixin.js\";import{ImageryTileMixin as f}from\"./mixins/ImageryTileMixin.js\";import{OperationalLayer as g}from\"./mixins/OperationalLayer.js\";import{PortalLayer as v}from\"./mixins/PortalLayer.js\";import{RasterPresetRendererMixin as R}from\"./mixins/RasterPresetRendererMixin.js\";import{RefreshableLayer as w}from\"./mixins/RefreshableLayer.js\";import{ScaleRangeLayer as S}from\"./mixins/ScaleRangeLayer.js\";import{TemporalLayer as F}from\"./mixins/TemporalLayer.js\";import{legendEnabled as j}from\"./support/commonProperties.js\";import _ from\"./support/Field.js\";import{getServicePixelValueField as O,getRawServicePixelValueField as P,getRasterAttributeTableFields as b,getMagnitudeField as I,getDirectionField as x,getMultidimensionalFields as T,commonRasterFieldNames as N,setDefaultRasterFieldFormats as L}from\"./support/rasterFieldUtils.js\";import J from\"./support/RasterFunction.js\";import C from\"./support/rasterDatasets/FunctionRaster.js\";import M from\"./support/rasterDatasets/RasterFactory.js\";import{getPrimaryRasterUrls as E,create as A}from\"./support/rasterFunctions/rasterFunctionHelper.js\";import{createPopupTemplate as U}from\"../support/popupUtils.js\";import{SaveOperationType as $}from\"../webdoc/interfaces.js\";let V=class extends(d(S(g(v(R(y(f(F(h(w(o(r.ClonableMixin(u))))))))))))){constructor(...e){super(...e),this._primaryRasters=[],this.legendEnabled=!0,this.isReference=null,this.listMode=\"show\",this.sourceJSON=null,this.version=null,this.type=\"imagery-tile\",this.operationalLayerType=\"ArcGISTiledImageServiceLayer\",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null,this.source=void 0,this._debouncedSaveOperations=a((async(e,t,r)=>{const{save:s,saveAs:i}=await import(\"./save/imageryUtils.js\");switch(e){case $.SAVE:return s(this,t);case $.SAVE_AS:return i(this,r,t)}}))}normalizeCtorArgs(e,t){return\"string\"==typeof e?{url:e,...t}:e}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:[\"Image Service\"]},e).catch(n).then((()=>this._openRaster(t)))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){const e=[O(\"Pixel Value\"),P(\"Raw Pixel Value\")],t=this.raster?.rasterInfo??this.serviceRasterInfo,r=t?.attributeTable;if(r){const t=b(r);e.push(...t)}const s=t?.dataType,i=t?.multidimensionalInfo;if((\"vector-magdir\"===s||\"vector-uv\"===s)&&null!=i){const t=i.variables[0].unit?.trim(),r=I(t),s=x();e.push(r,s)}if(i){const t=T(i);e.push(...t)}return e}createPopupTemplate(e){const{rasterFields:t}=this,r=e?.visibleFieldNames??new Set(t.map((({name:e})=>e)).filter((e=>e!==N.rawServicePixelValue))),s=U({fields:t,title:this.title},{...e,visibleFieldNames:r}),{rasterInfo:i}=this.raster;return s?.fieldInfos&&i&&L(s.fieldInfos,i),s}async generateRasterInfo(e,t){if(e=c(J,e),await this.load(),!e||\"none\"===e.functionName?.toLowerCase())return this.serviceRasterInfo;try{const{rasterInfo:r}=await this._openFunctionRaster(e,t);return r}catch(r){if(r instanceof s)throw r;throw new s(\"imagery-tile-layer\",\"the given raster function is not supported\")}}async save(e){return this._debouncedSaveOperations($.SAVE,e)}async saveAs(e,t){return this._debouncedSaveOperations($.SAVE_AS,t,e)}write(e,t){const r=this._primaryRasters[0]??this.raster;if(this.loaded?\"RasterTileServer\"===r.datasetFormat&&(\"Raster\"===r.tileType||\"Map\"===r.tileType):this.url&&/\\/ImageServer(\\/|\\/?$)/i.test(this.url))return super.write(e,t);if(t?.messages){const e=`${t.origin}/${t.layerContainerType||\"operational-layers\"}`;t.messages.push(new s(\"layer:unsupported\",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null}async _openRaster(e){let t=!1;if(this.raster)await this._openFromRaster(this.raster,e),t=\"Function\"===this.raster.datasetFormat,!t&&this.rasterFunction&&(this._primaryRasters=[this.raster],await this._initializeWithFunctionRaster(this.rasterFunction));else{const{url:t,rasterFunction:r,source:i}=this;if(!t&&!i)throw new s(\"imagery-tile-layer:open\",\"missing url or source parameter\");i?await this._openFromSource(i,e):r?await this._openFromUrlWithRasterFunction(t,r,e):await this._openFromUrl(t,e)}const r=this.raster.rasterInfo;if(!r)throw new s(\"imagery-tile-layer:load\",\"cannot load resources on \"+this.url);if(this._set(\"serviceRasterInfo\",t?r:this._primaryRasters[0].rasterInfo),this._set(\"spatialReference\",r.spatialReference),this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON){const e=\"Map\"===this.raster.tileType&&null!=this.sourceJSON.minLOD&&null!=this.sourceJSON.maxLOD?this.sourceJSON:{...this.sourceJSON,minScale:0,maxScale:0};this.read(e,{origin:\"service\"})}else this.read({tileInfo:this.serviceRasterInfo?.storageInfo.tileInfo.toJSON()},{origin:\"service\"});this.title||(this.title=this.raster.datasetName),\"Map\"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings(),this.addHandles(p((()=>this.customParameters),(e=>{this.raster&&(this.raster.ioConfig.customFetchParameters=e)})))}async _openFromRaster(e,t){e.rasterInfo||await e.open({signal:t}),this._primaryRasters=\"Function\"===e.datasetFormat?e.primaryRasters.rasters:[e],this.url||(this.url=this._primaryRasters[0].url)}async _openFromUrlWithRasterFunction(e,t,r){const i=[e];t&&E(t.toJSON(),i);const o=await Promise.all(i.map((e=>M.open({url:e,sourceJSON:this.sourceJSON,ioConfig:{sampling:\"closest\",...this.ioConfig,customFetchParameters:this.customParameters},signal:r})))),a=o.findIndex((e=>null==e));if(a>-1)throw new s(\"imagery-tile-layer:open\",`cannot open raster: ${i[a]}`);return this._primaryRasters=o,this._initializeWithFunctionRaster(t)}async _openFromUrl(e,t){const r=await M.open({url:e,sourceJSON:this.sourceJSON,ioConfig:{sampling:\"closest\",...this.ioConfig,customFetchParameters:this.customParameters},signal:t});if(null==r)throw new s(\"imagery-tile-layer:open\",`cannot open raster: ${e}`);this._primaryRasters=[r],this.raster=r}async _openFromSource(e,t){const r=\"the tiled imagery data source is not supported\",i=\"coverage\"===e.type?.toLowerCase()?\"CovJSON\":e.extent&&e.pixelBlock?\"MEMORY\":null;if(!i)throw new s(\"imagery-tile-layer:open\",r);\"MEMORY\"===i&&(e={...e,pixelBlock:void 0,pixelBlocks:[e.pixelBlock]});const o=await M.open({url:\"\",source:e,datasetFormat:i,ioConfig:{sampling:\"closest\",...this.ioConfig,customFetchParameters:this.customParameters},signal:t});if(null==o)throw new s(\"imagery-tile-layer:open\",r);this._primaryRasters=[o],this.rasterFunction?await this._initializeWithFunctionRaster(this.rasterFunction):this.raster=o}async _openFunctionRaster(e,t){const r={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach((e=>r[e.url]=e));const s=A(e.functionDefinition?.toJSON()??e.toJSON(),r),i=new C({rasterFunction:s});return await i.open(t),i}async _initializeWithFunctionRaster(e,t){try{this.raster=await this._openFunctionRaster(e,t)}catch(r){r instanceof s&&i.getLogger(this).error(\"imagery-tile-layer:open\",r.message),i.getLogger(this).warn(\"imagery-tile-layer:open\",\"the raster function cannot be applied and is removed\"),this._set(\"rasterFunction\",null),this.raster=this._primaryRasters[0]}}};e([l({clonable:!1})],V.prototype,\"_primaryRasters\",void 0),e([l(j)],V.prototype,\"legendEnabled\",void 0),e([l({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],V.prototype,\"isReference\",void 0),e([l({type:[\"show\",\"hide\"]})],V.prototype,\"listMode\",void 0),e([l({json:{read:!0,write:!0}})],V.prototype,\"blendMode\",void 0),e([l({type:J,json:{name:\"renderingRule\",write:!0}})],V.prototype,\"rasterFunction\",void 0),e([l()],V.prototype,\"sourceJSON\",void 0),e([l({readOnly:!0,json:{origins:{service:{read:{source:\"currentVersion\"}}}}})],V.prototype,\"version\",void 0),e([l({readOnly:!0,json:{read:!1}})],V.prototype,\"type\",void 0),e([l({type:[\"ArcGISTiledImageServiceLayer\"]})],V.prototype,\"operationalLayerType\",void 0),e([l({type:Boolean,value:!0,json:{read:{source:\"disablePopup\",reader:(e,t)=>!t.disablePopup},write:{target:\"disablePopup\",overridePolicy(){return{enabled:!this.loaded||\"Raster\"===this.raster.tileType}},writer(e,t,r){t[r]=!e}}}})],V.prototype,\"popupEnabled\",void 0),e([l({type:t,json:{read:{source:\"popupInfo\"},write:{target:\"popupInfo\",overridePolicy(){return{enabled:!this.loaded||\"Raster\"===this.raster.tileType}}}}})],V.prototype,\"popupTemplate\",void 0),e([l({readOnly:!0})],V.prototype,\"defaultPopupTemplate\",null),e([l({readOnly:!0,type:[_]})],V.prototype,\"fields\",void 0),e([l({readOnly:!0,type:[_]})],V.prototype,\"rasterFields\",null),e([l({constructOnly:!0})],V.prototype,\"source\",void 0),V=e([m(\"esri.layers.ImageryTileLayer\")],V);const B=V;export{B as default};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}