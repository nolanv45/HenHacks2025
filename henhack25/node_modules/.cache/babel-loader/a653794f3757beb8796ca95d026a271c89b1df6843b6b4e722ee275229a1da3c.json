{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport has from \"../../../../core/has.js\";\nimport e from \"../../../../core/Logger.js\";\nimport { create as t } from \"../../../../core/libs/gl-matrix-2/factories/mat2df32.js\";\nimport { AFeatureTile as s } from \"./AFeatureTile.js\";\nimport { RESHUFFLING_EXEMPT_MEMORY_BYTES as i, RESHUFFLING_TARGET_MEMORY_EFFICIENCY as r, RESHUFFLING_EXEMPT_DRAW_CALLS as o, RESHUFFLING_TARGET_DRAW_EFFICIENCY as d, tileSize as n } from \"./definitions.js\";\nimport h from \"./DisplayEntity.js\";\nimport { FeatureBatchingStrategy as a } from \"./enums.js\";\nimport { DisplayList as l } from \"./FeatureDisplayList.js\";\nimport { ReshufflePlan as f } from \"./ReshufflePlan.js\";\nimport { LabelMetric as u } from \"./collisions/LabelMetric.js\";\nimport { MappedMesh as p } from \"./cpuMapped/MappedMesh.js\";\nimport { debugMeshDataInfo as _ } from \"./mesh/meshDebugUtils.js\";\nimport m from \"./util/Reader.js\";\nimport { deserializeList as c } from \"./util/serializationUtils.js\";\nconst y = () => e.getLogger(\"esri.views.2d.engine.webgl.FeatureTile\");\nlet g = 0;\nclass b extends s {\n  constructor(e, s, i, r) {\n    let o = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : !1;\n    super(e, s, i, r), this._meshes = new Map(), this._entities = [], this._invalidated = !1, this._nextUploadAllowed = !1, this.tileAge = g++, this._metrics = [], this._entityIds = new Set(), this._entityIdsFromBuffer = new Set(), this._attributeEpoch = 0, this._encounteredEnd = !1, this._objectIdMap = null, this.visible = !0, this.transforms.labelMat2d = t(), this.enableDeferredUploads = o;\n  }\n  destroy() {\n    super.destroy(), this.clear();\n  }\n  clear() {\n    for (const e of this._meshes.values()) e.destroy();\n    this._meshes.clear(), this._entities = [], this._metrics = [], this._displayList = null, this._invalidated = !0, this._entityIds.clear(), this._nextUploadAllowed = !0;\n  }\n  beforeRender(e) {\n    super.beforeRender(e), this._needsReshuffle && e.reshuffleManager.schedule(this);\n  }\n  tryReady(e) {\n    const t = this._invalidated && !this._uploadAllowed;\n    return !(this.isReady || t || !this._encounteredEnd || !(e >= this._attributeEpoch)) && (has(\"esri-2d-update-debug\") && console.debug(`Tile[${this.key.id}] FeatureTile.ready [epoch=${e}]`), this.ready(), this.requestRender(), !0);\n  }\n  get labelMetrics() {\n    return this._metrics;\n  }\n  get hasData() {\n    return !!this._meshes.size;\n  }\n  get hasAnimations() {\n    return !!this._objectIdMap;\n  }\n  get needsUpload() {\n    return this._invalidated;\n  }\n  get _uploadAllowed() {\n    return !this.enableDeferredUploads || this._nextUploadAllowed;\n  }\n  upload() {\n    this._nextUploadAllowed = !0;\n  }\n  getDisplayList(e, t) {\n    if (this._uploadAllowed && this._invalidated) {\n      this._entities.sort((e, t) => {\n        const s = t.sortKey,\n          i = e.sortKey;\n        return i === s ? e.id - t.id : i - s;\n      }), t === a.BATCHING && this.reshuffle(!0), this._displayList = l.fromDisplayEntities(this._entities, this, e, t);\n      for (const e of this._meshes.values()) e.upload();\n      this.debugInfo.display.length = this._displayList.length, this.debugInfo.display.minOrderedLength = this._displayList.minOrderedLength, this.debugInfo.display.minUnorderedLength = this._displayList.minUnorderedLength, this.requestRender(), this._invalidated = !1, this._nextUploadAllowed = !1;\n    }\n    return this._displayList;\n  }\n  getMesh(e) {\n    if (!this._meshes.has(e)) throw new Error(`InternalError: Unable to find VAO for instance: ${e}`);\n    return this._meshes.get(e);\n  }\n  getSortKeys(e) {\n    const t = new Map();\n    for (const {\n      id: s,\n      sortKey: i\n    } of this._entities) if (e.has(s) && t.set(s, i), t.size === e.size) break;\n    return t;\n  }\n  onMessage(e) {\n    if (e.objectIdMap) for (const t in e.objectIdMap) this._objectIdMap || (this._objectIdMap = {}), this._objectIdMap[t] = e.objectIdMap[t];\n    switch (e.type) {\n      case \"append\":\n        this._onAppendMessage(e);\n        break;\n      case \"update\":\n        this._onUpdateMessage(e);\n    }\n    if (this._aggregateMemoryStats(), this.requestRender(), e.end) {\n      if (has(\"esri-2d-update-debug\") && console.debug(`Tile[${this.key.id}] FeatureTile.end [epoch=${e.attributeEpoch}]`), !e.attributeEpoch) throw new Error(\"InternalError: Attribute epoch not defined.\");\n      this._attributeEpoch = e.attributeEpoch, this._encounteredEnd = !0;\n    }\n  }\n  _onAppendMessage(e) {\n    if (has(\"esri-2d-update-debug\") && console.debug(`Tile[${this.key.id}] FeatureTile.append`, {\n      append: _(e?.append)\n    }), e.clear && this.clear(), !e.append) return;\n    const t = c(new m(e.append.entities), h);\n    this._insert(t, e.append.data, !1);\n  }\n  _onUpdateMessage(e) {\n    has(\"esri-2d-update-debug\") && console.debug(`Tile[${this.key.id}] FeatureTile.update`, {\n      isPixelBuffer: e.isPixelBuffer,\n      modify: _(e.modify),\n      remove: e.remove\n    });\n    const t = c(new m(e.modify.entities), h),\n      s = t.map(e => e.id),\n      i = e.isPixelBuffer ?? !1,\n      r = [...e.remove, ...s];\n    i ? this._removeByIdsFromBuffer(r) : this._removeByIds(r), this._insert(t, e.modify.data, i);\n  }\n  reshuffle() {\n    let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !1;\n    if (this.destroyed) return;\n    const t = new Map();\n    for (const s of this._entities) for (const i of s.records) {\n      const s = this._meshes.get(i.instanceId);\n      let r = t.get(s);\n      r || (r = new f(e), t.set(s, r)), r.copyRecord(i);\n    }\n    for (const [s, i] of t) s.reshuffle(i);\n    this._invalidated = !0, this._aggregateMemoryStats(), has(\"esri-2d-update-debug\") && y().info(`Tile ${this.key.id} was reshuffled.`);\n  }\n  copyPixelBufferedEntitesFrom(e, t, s, i) {\n    const r = s * n,\n      o = i * n;\n    for (const d of e._entities) {\n      let s = null;\n      for (const i of d.records) if (i.overlaps & t) {\n        const t = e.getMesh(i.instanceId),\n          n = this._ensureMesh(i.instanceId, t.layout).copyRecordFrom(t, i, r, o);\n        s || (s = new h(d.id, d.sortKey), this._entityIdsFromBuffer.add(d.id), this._entities.push(s)), s.records.push(n);\n      }\n    }\n    this._invalidated = !0;\n  }\n  _ensureMesh(e, t) {\n    return this._meshes.has(e) || this._meshes.set(e, new p(this._stage.bufferPool, t)), this._meshes.get(e);\n  }\n  _insert(e, t, s) {\n    if (!e.length) return;\n    this._removeDuplicatedBufferedEntites(e);\n    const i = this._insertVertexData(t);\n    for (const r of e) {\n      for (const e of r.records) e.updateBaseOffsets(i.get(e.instanceId));\n      s ? this._tryInsertBufferedEntity(r) : this._insertEntity(r);\n    }\n    this._invalidated = !0;\n  }\n  _insertVertexData(e) {\n    const t = new Map();\n    for (const s of e) {\n      const {\n          instanceId: e,\n          layout: i\n        } = s,\n        r = this._ensureMesh(e, i).append(s);\n      if (s.metrics) {\n        const e = c(new m(s.metrics), u) ?? [];\n        this._metrics.push(...e);\n      }\n      t.set(e, r);\n    }\n    return t;\n  }\n  _insertEntity(e) {\n    has(\"esri-2d-update-debug\") && this._entityIds.has(e.id) && console.error(`Tile ${this.key.id} insertEnitty: Already have entityId ${e.id}`), this._entityIds.add(e.id), this._entities.push(e);\n  }\n  _tryInsertBufferedEntity(e) {\n    this._entityIds.has(e.id) ? this._removeRecordsFromMesh(e.records) : (this._entityIdsFromBuffer.add(e.id), this._entities.push(e));\n  }\n  _removeDuplicatedBufferedEntites(e) {\n    if (!this._entityIdsFromBuffer.size) return;\n    const t = [];\n    for (const s of e) this._entityIdsFromBuffer.has(s.id) && t.push(s.id);\n    this._removeByIds(t);\n  }\n  _removeByIdsFromBuffer(e) {\n    this._removeByIds(e.filter(e => this._entityIdsFromBuffer.has(e)));\n  }\n  _removeByIds(e) {\n    if (0 === e.length) return;\n    const t = new Set(e),\n      s = [];\n    for (const i of this._entities) t.has(i.id) ? this._remove(i) : s.push(i);\n    this._entities = s, this._invalidated = !0;\n  }\n  _remove(e) {\n    this._removeRecordsFromMesh(e.records), this._entityIds.delete(e.id), this._entityIdsFromBuffer.delete(e.id);\n    for (let t = this._metrics.length - 1; t >= 0; t--) this._metrics[t].entityTexel === e.id && this._metrics.splice(t, 1);\n  }\n  _removeRecordsFromMesh(e) {\n    for (const t of e) {\n      const {\n        instanceId: e,\n        indexStart: s,\n        indexCount: i,\n        vertexStart: r,\n        vertexCount: o\n      } = t;\n      this._meshes.get(e)?.remove(s, i, r, o);\n    }\n  }\n  _aggregateMemoryStats() {\n    this.debugInfo.memory.bytesUsed = 0, this.debugInfo.memory.bytesReserved = 0;\n    for (const e of this._meshes.values()) this.debugInfo.memory.bytesUsed += e.memoryStats.bytesUsed, this.debugInfo.memory.bytesReserved += e.memoryStats.bytesReserved;\n  }\n  get _needsReshuffle() {\n    if (this.destroyed) return !1;\n    const {\n        bytesUsed: e,\n        bytesReserved: t\n      } = this.debugInfo.memory,\n      s = e / t,\n      {\n        minOrderedLength: n,\n        length: h\n      } = this.debugInfo.display;\n    return t > i && s < r || h > o && n / h < d;\n  }\n  get entityIds() {\n    return this._objectIdMap ? this._entities.map(_ref => {\n      let {\n        id: e\n      } = _ref;\n      return {\n        objectId: this._objectIdMap[e],\n        displayId: e\n      };\n    }) : [];\n  }\n}\nexport { b as FeatureTile };","map":{"version":3,"names":["has","e","create","t","AFeatureTile","s","RESHUFFLING_EXEMPT_MEMORY_BYTES","i","RESHUFFLING_TARGET_MEMORY_EFFICIENCY","r","RESHUFFLING_EXEMPT_DRAW_CALLS","o","RESHUFFLING_TARGET_DRAW_EFFICIENCY","d","tileSize","n","h","FeatureBatchingStrategy","a","DisplayList","l","ReshufflePlan","f","LabelMetric","u","MappedMesh","p","debugMeshDataInfo","_","m","deserializeList","c","y","getLogger","g","b","constructor","arguments","length","undefined","_meshes","Map","_entities","_invalidated","_nextUploadAllowed","tileAge","_metrics","_entityIds","Set","_entityIdsFromBuffer","_attributeEpoch","_encounteredEnd","_objectIdMap","visible","transforms","labelMat2d","enableDeferredUploads","destroy","clear","values","_displayList","beforeRender","_needsReshuffle","reshuffleManager","schedule","tryReady","_uploadAllowed","isReady","console","debug","key","id","ready","requestRender","labelMetrics","hasData","size","hasAnimations","needsUpload","upload","getDisplayList","sort","sortKey","BATCHING","reshuffle","fromDisplayEntities","debugInfo","display","minOrderedLength","minUnorderedLength","getMesh","Error","get","getSortKeys","set","onMessage","objectIdMap","type","_onAppendMessage","_onUpdateMessage","_aggregateMemoryStats","end","attributeEpoch","append","entities","_insert","data","isPixelBuffer","modify","remove","map","_removeByIdsFromBuffer","_removeByIds","destroyed","records","instanceId","copyRecord","info","copyPixelBufferedEntitesFrom","overlaps","_ensureMesh","layout","copyRecordFrom","add","push","_stage","bufferPool","_removeDuplicatedBufferedEntites","_insertVertexData","updateBaseOffsets","_tryInsertBufferedEntity","_insertEntity","metrics","error","_removeRecordsFromMesh","filter","_remove","delete","entityTexel","splice","indexStart","indexCount","vertexStart","vertexCount","memory","bytesUsed","bytesReserved","memoryStats","entityIds","_ref","objectId","displayId","FeatureTile"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/2d/engine/webgl/FeatureTile.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport has from\"../../../../core/has.js\";import e from\"../../../../core/Logger.js\";import{create as t}from\"../../../../core/libs/gl-matrix-2/factories/mat2df32.js\";import{AFeatureTile as s}from\"./AFeatureTile.js\";import{RESHUFFLING_EXEMPT_MEMORY_BYTES as i,RESHUFFLING_TARGET_MEMORY_EFFICIENCY as r,RESHUFFLING_EXEMPT_DRAW_CALLS as o,RESHUFFLING_TARGET_DRAW_EFFICIENCY as d,tileSize as n}from\"./definitions.js\";import h from\"./DisplayEntity.js\";import{FeatureBatchingStrategy as a}from\"./enums.js\";import{DisplayList as l}from\"./FeatureDisplayList.js\";import{ReshufflePlan as f}from\"./ReshufflePlan.js\";import{LabelMetric as u}from\"./collisions/LabelMetric.js\";import{MappedMesh as p}from\"./cpuMapped/MappedMesh.js\";import{debugMeshDataInfo as _}from\"./mesh/meshDebugUtils.js\";import m from\"./util/Reader.js\";import{deserializeList as c}from\"./util/serializationUtils.js\";const y=()=>e.getLogger(\"esri.views.2d.engine.webgl.FeatureTile\");let g=0;class b extends s{constructor(e,s,i,r,o=!1){super(e,s,i,r),this._meshes=new Map,this._entities=[],this._invalidated=!1,this._nextUploadAllowed=!1,this.tileAge=g++,this._metrics=[],this._entityIds=new Set,this._entityIdsFromBuffer=new Set,this._attributeEpoch=0,this._encounteredEnd=!1,this._objectIdMap=null,this.visible=!0,this.transforms.labelMat2d=t(),this.enableDeferredUploads=o}destroy(){super.destroy(),this.clear()}clear(){for(const e of this._meshes.values())e.destroy();this._meshes.clear(),this._entities=[],this._metrics=[],this._displayList=null,this._invalidated=!0,this._entityIds.clear(),this._nextUploadAllowed=!0}beforeRender(e){super.beforeRender(e),this._needsReshuffle&&e.reshuffleManager.schedule(this)}tryReady(e){const t=this._invalidated&&!this._uploadAllowed;return!(this.isReady||t||!this._encounteredEnd||!(e>=this._attributeEpoch))&&(has(\"esri-2d-update-debug\")&&console.debug(`Tile[${this.key.id}] FeatureTile.ready [epoch=${e}]`),this.ready(),this.requestRender(),!0)}get labelMetrics(){return this._metrics}get hasData(){return!!this._meshes.size}get hasAnimations(){return!!this._objectIdMap}get needsUpload(){return this._invalidated}get _uploadAllowed(){return!this.enableDeferredUploads||this._nextUploadAllowed}upload(){this._nextUploadAllowed=!0}getDisplayList(e,t){if(this._uploadAllowed&&this._invalidated){this._entities.sort(((e,t)=>{const s=t.sortKey,i=e.sortKey;return i===s?e.id-t.id:i-s})),t===a.BATCHING&&this.reshuffle(!0),this._displayList=l.fromDisplayEntities(this._entities,this,e,t);for(const e of this._meshes.values())e.upload();this.debugInfo.display.length=this._displayList.length,this.debugInfo.display.minOrderedLength=this._displayList.minOrderedLength,this.debugInfo.display.minUnorderedLength=this._displayList.minUnorderedLength,this.requestRender(),this._invalidated=!1,this._nextUploadAllowed=!1}return this._displayList}getMesh(e){if(!this._meshes.has(e))throw new Error(`InternalError: Unable to find VAO for instance: ${e}`);return this._meshes.get(e)}getSortKeys(e){const t=new Map;for(const{id:s,sortKey:i}of this._entities)if(e.has(s)&&t.set(s,i),t.size===e.size)break;return t}onMessage(e){if(e.objectIdMap)for(const t in e.objectIdMap)this._objectIdMap||(this._objectIdMap={}),this._objectIdMap[t]=e.objectIdMap[t];switch(e.type){case\"append\":this._onAppendMessage(e);break;case\"update\":this._onUpdateMessage(e)}if(this._aggregateMemoryStats(),this.requestRender(),e.end){if(has(\"esri-2d-update-debug\")&&console.debug(`Tile[${this.key.id}] FeatureTile.end [epoch=${e.attributeEpoch}]`),!e.attributeEpoch)throw new Error(\"InternalError: Attribute epoch not defined.\");this._attributeEpoch=e.attributeEpoch,this._encounteredEnd=!0}}_onAppendMessage(e){if(has(\"esri-2d-update-debug\")&&console.debug(`Tile[${this.key.id}] FeatureTile.append`,{append:_(e?.append)}),e.clear&&this.clear(),!e.append)return;const t=c(new m(e.append.entities),h);this._insert(t,e.append.data,!1)}_onUpdateMessage(e){has(\"esri-2d-update-debug\")&&console.debug(`Tile[${this.key.id}] FeatureTile.update`,{isPixelBuffer:e.isPixelBuffer,modify:_(e.modify),remove:e.remove});const t=c(new m(e.modify.entities),h),s=t.map((e=>e.id)),i=e.isPixelBuffer??!1,r=[...e.remove,...s];i?this._removeByIdsFromBuffer(r):this._removeByIds(r),this._insert(t,e.modify.data,i)}reshuffle(e=!1){if(this.destroyed)return;const t=new Map;for(const s of this._entities)for(const i of s.records){const s=this._meshes.get(i.instanceId);let r=t.get(s);r||(r=new f(e),t.set(s,r)),r.copyRecord(i)}for(const[s,i]of t)s.reshuffle(i);this._invalidated=!0,this._aggregateMemoryStats(),has(\"esri-2d-update-debug\")&&y().info(`Tile ${this.key.id} was reshuffled.`)}copyPixelBufferedEntitesFrom(e,t,s,i){const r=s*n,o=i*n;for(const d of e._entities){let s=null;for(const i of d.records)if(i.overlaps&t){const t=e.getMesh(i.instanceId),n=this._ensureMesh(i.instanceId,t.layout).copyRecordFrom(t,i,r,o);s||(s=new h(d.id,d.sortKey),this._entityIdsFromBuffer.add(d.id),this._entities.push(s)),s.records.push(n)}}this._invalidated=!0}_ensureMesh(e,t){return this._meshes.has(e)||this._meshes.set(e,new p(this._stage.bufferPool,t)),this._meshes.get(e)}_insert(e,t,s){if(!e.length)return;this._removeDuplicatedBufferedEntites(e);const i=this._insertVertexData(t);for(const r of e){for(const e of r.records)e.updateBaseOffsets(i.get(e.instanceId));s?this._tryInsertBufferedEntity(r):this._insertEntity(r)}this._invalidated=!0}_insertVertexData(e){const t=new Map;for(const s of e){const{instanceId:e,layout:i}=s,r=this._ensureMesh(e,i).append(s);if(s.metrics){const e=c(new m(s.metrics),u)??[];this._metrics.push(...e)}t.set(e,r)}return t}_insertEntity(e){has(\"esri-2d-update-debug\")&&this._entityIds.has(e.id)&&console.error(`Tile ${this.key.id} insertEnitty: Already have entityId ${e.id}`),this._entityIds.add(e.id),this._entities.push(e)}_tryInsertBufferedEntity(e){this._entityIds.has(e.id)?this._removeRecordsFromMesh(e.records):(this._entityIdsFromBuffer.add(e.id),this._entities.push(e))}_removeDuplicatedBufferedEntites(e){if(!this._entityIdsFromBuffer.size)return;const t=[];for(const s of e)this._entityIdsFromBuffer.has(s.id)&&t.push(s.id);this._removeByIds(t)}_removeByIdsFromBuffer(e){this._removeByIds(e.filter((e=>this._entityIdsFromBuffer.has(e))))}_removeByIds(e){if(0===e.length)return;const t=new Set(e),s=[];for(const i of this._entities)t.has(i.id)?this._remove(i):s.push(i);this._entities=s,this._invalidated=!0}_remove(e){this._removeRecordsFromMesh(e.records),this._entityIds.delete(e.id),this._entityIdsFromBuffer.delete(e.id);for(let t=this._metrics.length-1;t>=0;t--)this._metrics[t].entityTexel===e.id&&this._metrics.splice(t,1)}_removeRecordsFromMesh(e){for(const t of e){const{instanceId:e,indexStart:s,indexCount:i,vertexStart:r,vertexCount:o}=t;this._meshes.get(e)?.remove(s,i,r,o)}}_aggregateMemoryStats(){this.debugInfo.memory.bytesUsed=0,this.debugInfo.memory.bytesReserved=0;for(const e of this._meshes.values())this.debugInfo.memory.bytesUsed+=e.memoryStats.bytesUsed,this.debugInfo.memory.bytesReserved+=e.memoryStats.bytesReserved}get _needsReshuffle(){if(this.destroyed)return!1;const{bytesUsed:e,bytesReserved:t}=this.debugInfo.memory,s=e/t,{minOrderedLength:n,length:h}=this.debugInfo.display;return t>i&&s<r||h>o&&n/h<d}get entityIds(){return this._objectIdMap?this._entities.map((({id:e})=>({objectId:this._objectIdMap[e],displayId:e}))):[]}}export{b as FeatureTile};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}