{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport { ringsCentroid as t, polygonCentroid as e } from \"../../../../../geometry/support/centroid.js\";\nimport { getJsonType as r } from \"../../../../../geometry/support/jsonUtils.js\";\nimport { convertFromGeometry as s, generalizeOptimizedGeometry as i, quantizeOptimizedGeometry as o } from \"../../../../../layers/graphics/featureConversionUtils.js\";\nimport n from \"../../../../../layers/graphics/OptimizedGeometry.js\";\nimport { tileSize as h } from \"../../../engine/webgl/definitions.js\";\nimport { FeatureSetReader as u } from \"./FeatureSetReader.js\";\nclass a extends u {\n  static from(t, e, r) {\n    return new a(t, e, r);\n  }\n  constructor(t, e, r) {\n    super(r), this._items = t, this._tile = e, this._index = -1, this._cachedGeometry = null;\n    const s = e.lod;\n    s.wrap && (this._wrappingInfo = {\n      worldSizeX: s.worldSize[0]\n    });\n  }\n  get _current() {\n    return this._items[this._index];\n  }\n  getItem() {\n    return this._current;\n  }\n  getZOrder() {\n    return this._current.zOrder;\n  }\n  getMeshWriters() {\n    return this._current.symbolResource?.symbolInfo.meshWriters ?? [];\n  }\n  hasField(t) {\n    return null != this._current.attributes[t];\n  }\n  field(t) {\n    return this.readAttribute(t);\n  }\n  get geometryType() {\n    const t = r(this._current.geometry);\n    return \"esriGeometryPoint\" === t ? \"esriGeometryMultipoint\" : t;\n  }\n  getCursor() {\n    return this.copy();\n  }\n  copy() {\n    const t = new a(this._items, this._tile, this.metadata);\n    return this.copyInto(t), t;\n  }\n  copyInto(t) {\n    super.copyInto(t), t._cachedGeometry = this._cachedGeometry, t._index = this._index;\n  }\n  get fields() {\n    throw new Error(\"Fields reading not supported to graphics.\");\n  }\n  get hasFeatures() {\n    return !!this._items.length;\n  }\n  get hasNext() {\n    return this._index + 1 < this._items.length;\n  }\n  get exceededTransferLimit() {\n    throw new Error(\"InternalError: exceededTransferLimit not implemented for graphics.\");\n  }\n  get hasZ() {\n    return !1;\n  }\n  get hasM() {\n    return !1;\n  }\n  get usedMemory() {\n    return this._current.usedMemory;\n  }\n  getInTransform() {\n    return this._tile.transform;\n  }\n  getSize() {\n    return this._items.length;\n  }\n  getAttributeHash() {\n    let t = \"\";\n    for (const e in this._current.attributes) t += this._current.attributes[e];\n    return t;\n  }\n  getObjectId() {\n    return this._items[this._index].objectId;\n  }\n  getDisplayId() {\n    return this._current.displayId;\n  }\n  setDisplayId(t) {\n    throw new Error(\"InternalError: Setting displayId not supported for graphics.\");\n  }\n  setIndex(t) {\n    this._index = t;\n  }\n  getIndex() {\n    return this._index;\n  }\n  next() {\n    for (this._cachedGeometry = null; ++this._index < this._items.length && !this._getExists(););\n    return this._index < this._items.length;\n  }\n  readGeometryArea() {\n    throw new Error(\"InternalError: readGeometryArea not supported for graphics.\");\n  }\n  _readGeometry() {\n    if (!this._cachedGeometry) {\n      let t = s(this._current.projectedGeometry, this.hasZ, this.hasM);\n      if (\"esriGeometryPolyline\" === this.geometryType && (t = i(new n(), t, this.hasZ, this.hasM, this.geometryType, this._tile.transform.scale[0])), this._cachedGeometry = o(new n(), t, this.hasZ, this.hasM, this.geometryType, this._tile.transform), !this._cachedGeometry) return null;\n      this._wrapGeometry(this._cachedGeometry);\n    }\n    return this._cachedGeometry;\n  }\n  _wrapGeometry(t) {\n    if (!this._wrappingInfo) return;\n    const {\n      worldSizeX: e\n    } = this._wrappingInfo;\n    if (t.isPoint) return 1 === e ? (t.coords.push(h, 0), t.coords.push(-1024, 0), void t.lengths.push(3)) : 2 === e ? (t.coords.push(2 * h, 0), t.coords.push(-2048, 0), void t.lengths.push(3)) : void this._wrapVertex(t.coords, 0, 2, e);\n    if (\"esriGeometryMultipoint\" !== this.geometryType) ;else {\n      if (1 === e) {\n        const e = t.coords.slice();\n        e[0] -= 512;\n        const r = t.coords.slice();\n        r[0] += 512, t.coords.push(...e, ...r);\n        const s = t.lengths[0];\n        return void t.lengths.push(s, s);\n      }\n      this._wrapVertex(t.coords, 0, 2, e);\n    }\n  }\n  _wrapVertex(t, e, r, s) {\n    const i = e * r,\n      o = t[i];\n    o < -h * (s - 2) ? t[i] = o + h * s : o > h * (s - 1) && (t[i] = o - h * s);\n  }\n  _readX() {\n    const t = this._readGeometry();\n    return null != t ? t.coords[0] : 0;\n  }\n  _readY() {\n    const t = this._readGeometry();\n    return null != t ? t.coords[1] : 0;\n  }\n  _readServerCentroid() {\n    switch (this.geometryType) {\n      case \"esriGeometryPolygon\":\n        {\n          const t = e(this._current.projectedGeometry),\n            r = new n([], t);\n          return o(new n(), r, this.hasZ, this.hasM, this.geometryType, this._tile.transform);\n        }\n      case \"esriGeometryPolyline\":\n        {\n          const e = this._current.projectedGeometry,\n            r = t(e.paths, this.hasZ),\n            s = new n([], r);\n          return o(new n(), s, this.hasZ, this.hasM, this.geometryType, this._tile.transform);\n        }\n    }\n    return null;\n  }\n  _readAttribute(t, e) {\n    const r = this._current.attributes[t];\n    if (void 0 !== r) return r;\n    const s = t.toLowerCase();\n    for (const i in this._current.attributes) if (i.toLowerCase() === s) return this._current.attributes[i];\n  }\n  _readAttributes() {\n    return this._current.attributes;\n  }\n}\nexport { a as GraphicsReader };","map":{"version":3,"names":["ringsCentroid","t","polygonCentroid","e","getJsonType","r","convertFromGeometry","s","generalizeOptimizedGeometry","i","quantizeOptimizedGeometry","o","n","tileSize","h","FeatureSetReader","u","a","from","constructor","_items","_tile","_index","_cachedGeometry","lod","wrap","_wrappingInfo","worldSizeX","worldSize","_current","getItem","getZOrder","zOrder","getMeshWriters","symbolResource","symbolInfo","meshWriters","hasField","attributes","field","readAttribute","geometryType","geometry","getCursor","copy","metadata","copyInto","fields","Error","hasFeatures","length","hasNext","exceededTransferLimit","hasZ","hasM","usedMemory","getInTransform","transform","getSize","getAttributeHash","getObjectId","objectId","getDisplayId","displayId","setDisplayId","setIndex","getIndex","next","_getExists","readGeometryArea","_readGeometry","projectedGeometry","scale","_wrapGeometry","isPoint","coords","push","lengths","_wrapVertex","slice","_readX","_readY","_readServerCentroid","paths","_readAttribute","toLowerCase","_readAttributes","GraphicsReader"],"sources":["C:/Users/nolan/tasks/HenHacks2025/henhack25/node_modules/@arcgis/core/views/2d/layers/features/support/GraphicsReader.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport{ringsCentroid as t,polygonCentroid as e}from\"../../../../../geometry/support/centroid.js\";import{getJsonType as r}from\"../../../../../geometry/support/jsonUtils.js\";import{convertFromGeometry as s,generalizeOptimizedGeometry as i,quantizeOptimizedGeometry as o}from\"../../../../../layers/graphics/featureConversionUtils.js\";import n from\"../../../../../layers/graphics/OptimizedGeometry.js\";import{tileSize as h}from\"../../../engine/webgl/definitions.js\";import{FeatureSetReader as u}from\"./FeatureSetReader.js\";class a extends u{static from(t,e,r){return new a(t,e,r)}constructor(t,e,r){super(r),this._items=t,this._tile=e,this._index=-1,this._cachedGeometry=null;const s=e.lod;s.wrap&&(this._wrappingInfo={worldSizeX:s.worldSize[0]})}get _current(){return this._items[this._index]}getItem(){return this._current}getZOrder(){return this._current.zOrder}getMeshWriters(){return this._current.symbolResource?.symbolInfo.meshWriters??[]}hasField(t){return null!=this._current.attributes[t]}field(t){return this.readAttribute(t)}get geometryType(){const t=r(this._current.geometry);return\"esriGeometryPoint\"===t?\"esriGeometryMultipoint\":t}getCursor(){return this.copy()}copy(){const t=new a(this._items,this._tile,this.metadata);return this.copyInto(t),t}copyInto(t){super.copyInto(t),t._cachedGeometry=this._cachedGeometry,t._index=this._index}get fields(){throw new Error(\"Fields reading not supported to graphics.\")}get hasFeatures(){return!!this._items.length}get hasNext(){return this._index+1<this._items.length}get exceededTransferLimit(){throw new Error(\"InternalError: exceededTransferLimit not implemented for graphics.\")}get hasZ(){return!1}get hasM(){return!1}get usedMemory(){return this._current.usedMemory}getInTransform(){return this._tile.transform}getSize(){return this._items.length}getAttributeHash(){let t=\"\";for(const e in this._current.attributes)t+=this._current.attributes[e];return t}getObjectId(){return this._items[this._index].objectId}getDisplayId(){return this._current.displayId}setDisplayId(t){throw new Error(\"InternalError: Setting displayId not supported for graphics.\")}setIndex(t){this._index=t}getIndex(){return this._index}next(){for(this._cachedGeometry=null;++this._index<this._items.length&&!this._getExists(););return this._index<this._items.length}readGeometryArea(){throw new Error(\"InternalError: readGeometryArea not supported for graphics.\")}_readGeometry(){if(!this._cachedGeometry){let t=s(this._current.projectedGeometry,this.hasZ,this.hasM);if(\"esriGeometryPolyline\"===this.geometryType&&(t=i(new n,t,this.hasZ,this.hasM,this.geometryType,this._tile.transform.scale[0])),this._cachedGeometry=o(new n,t,this.hasZ,this.hasM,this.geometryType,this._tile.transform),!this._cachedGeometry)return null;this._wrapGeometry(this._cachedGeometry)}return this._cachedGeometry}_wrapGeometry(t){if(!this._wrappingInfo)return;const{worldSizeX:e}=this._wrappingInfo;if(t.isPoint)return 1===e?(t.coords.push(h,0),t.coords.push(-1024,0),void t.lengths.push(3)):2===e?(t.coords.push(2*h,0),t.coords.push(-2048,0),void t.lengths.push(3)):void this._wrapVertex(t.coords,0,2,e);if(\"esriGeometryMultipoint\"!==this.geometryType);else{if(1===e){const e=t.coords.slice();e[0]-=512;const r=t.coords.slice();r[0]+=512,t.coords.push(...e,...r);const s=t.lengths[0];return void t.lengths.push(s,s)}this._wrapVertex(t.coords,0,2,e)}}_wrapVertex(t,e,r,s){const i=e*r,o=t[i];o<-h*(s-2)?t[i]=o+h*s:o>h*(s-1)&&(t[i]=o-h*s)}_readX(){const t=this._readGeometry();return null!=t?t.coords[0]:0}_readY(){const t=this._readGeometry();return null!=t?t.coords[1]:0}_readServerCentroid(){switch(this.geometryType){case\"esriGeometryPolygon\":{const t=e(this._current.projectedGeometry),r=new n([],t);return o(new n,r,this.hasZ,this.hasM,this.geometryType,this._tile.transform)}case\"esriGeometryPolyline\":{const e=this._current.projectedGeometry,r=t(e.paths,this.hasZ),s=new n([],r);return o(new n,s,this.hasZ,this.hasM,this.geometryType,this._tile.transform)}}return null}_readAttribute(t,e){const r=this._current.attributes[t];if(void 0!==r)return r;const s=t.toLowerCase();for(const i in this._current.attributes)if(i.toLowerCase()===s)return this._current.attributes[i]}_readAttributes(){return this._current.attributes}}export{a as GraphicsReader};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}